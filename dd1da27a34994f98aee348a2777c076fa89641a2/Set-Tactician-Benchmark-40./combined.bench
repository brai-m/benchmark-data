
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.3.3	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: reflexivity).	0.169268846512	33
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	6	search with cache (only 1: destr_bool).	0.0548441410065	7
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: auto).	0.0319530963898	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: auto).	0.0373139381409	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	3.0.1.14.18	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity; only 1: simpl; only 1: now try PeanoNat.Nat.order').	10.1316480637	12582
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.1.3.13	search with cache (only 1: intro n; only 1: induction n as [| k Hrec]; only 1: auto; only 1: auto).	0.740005016327	616
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.0.1.0.2.2.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	1.05558300018	442
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	23	search with cache (only 1: firstorder  (subst; auto)).	7.14344000816	3986
Coq.micromega.Tauto.eval_cnf_tt	40	0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: tauto).	0.0512261390686	2
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	62.6	search with cache (only 1: intros; only 1: firstorder).	22.3790090084	15239
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	3.1.5.1.5	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: unfold make_conj at 2; only 1: rewrite make_conj_cons; only 1: tauto).	9.22996687889	3892
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0917341709137	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40	2.20.19	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	24.084651947	12780
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.Refl.make_impl_true	40	0.1.0.1.15	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.967206001282	901
Coq.micromega.Refl.make_impl_map	40	4.2.3	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.708636045456	200
Coq.micromega.Refl.make_conj_cons	40	0.0.0.1.3.0.15	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: split; only 1: simpl; only 1: auto; only 1: auto).	10.7846190929	9291
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	1.0.1.2.17.1	search with cache (only 1: simpl; only 1: intros A B []; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	31.8397119045	14371
Coq.micromega.Refl.not_make_conj_app	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.9	search with cache (only 1: fix le_div2 1; only 1: auto).	0.899837970734	242
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.2.2	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.38181900978	193
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.120297193527	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.2.4.5	search with cache (only 1: induction l; only 1: now intros []; only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	2.49781489372	1176
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	6	search with cache (only 1: now intros []).	0.0933520793915	7
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	5	search with cache (only 1: now intros []).	0.0780389308929	6
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.10.7.14	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	4.41343307495	4613
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.21.37.1	search with cache (only 1: firstorder; only 1: case S; only 1: fix sqrtrem_spec 1; only 1: auto).	9.75003314018	19810
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40	12.1.1.0.1.1.0	search with cache (only 1: induction F; only 1: simpl; only 1: intros; only 1: auto; only 1: intros A H; only 1: simpl; only 1: firstorder).	5.80192494392	5526
Coq.rtauto.Rtauto.compose2	40	3.0.1.4.0.1.1.1	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: induction F; only 1: simpl; only 1: auto; only 1: firstorder).	6.66192603111	4181
Coq.rtauto.Rtauto.compose3	40
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.funind.Recdef.le_lt_SS	40	6	search with cache (only 1: auto with arith).	0.0200459957123	7
Coq.funind.Recdef.Splus_lt	40	9	search with cache (only 1: auto with arith).	0.0146980285645	10
Coq.funind.Recdef.SSplus_lt	40	2	search with cache (only 1: auto with arith).	0.0144040584564	3
Coq.funind.Recdef.max	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	4	search with cache (only 1: f_equiv).	0.502410888672	5
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	15	search with cache (only 1: now rewrite ?H, ?IHp).	0.489336967468	102
Coq.setoid_ring.Ring_theory.IDmorph	40	3	search with cache (only 1: now rewrite ?Pos.square_xO).	0.0556011199951	4
Coq.setoid_ring.Ring_theory.Eqsth	40	2.4.1.6	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.31750202179	218
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.8.0.8.25	search with cache (only 1: repeat split; only 1: induction 1; only 1: solve_proper; only 1: induction 1; only 1: solve_proper).	4.98309803009	2724
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.126232862473	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	10.6	search with cache (only 1: intros a b H; only 1: firstorder).	1.1793718338	243
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	8.15	search with cache (only 1: intros H; only 1: firstorder).	1.83283805847	622
Coq.setoid_ring.Ring_theory.SRopp_ext	40	0.2	search with cache (only 1: intros a b H; only 1: auto).	0.0486500263214	4
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	8	search with cache (only 1: firstorder).	0.25047492981	15
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	4	search with cache (only 1: now rewrite ?Pos.square_xO).	0.0442979335785	5
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.073016166687	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0417602062225	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	8	search with cache (only 1: now rewrite ?Pos.square_xO).	0.169796943665	17
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	5	search with cache (only 1: firstorder).	0.245102882385	16
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	16.12	search with cache (only 1: intros a b; only 1: firstorder).	4.54773688316	1815
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	5.4	search with cache (only 1: intros x y H; only 1: auto).	0.10858798027	30
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40	98	search with cache (only 1: firstorder).	29.4307079315	23571
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.056587934494	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	2	search with cache (only 1: mrewrite).	0.123706817627	3
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00785207748413	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.00968194007874	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.16	search with cache (only 1: destruct 1; only 1: auto).	0.574474811554	294
Coq.ssr.ssreflect.iffLR	40	1.1	search with cache (only 1: intros; only 1: tauto).	0.0334260463715	4
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00938892364502	1
Coq.ssr.ssreflect.iffLRn	40	1.3	search with cache (only 1: intro H; only 1: tauto).	0.0217320919037	6
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0106139183044	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.00891590118408	1
Coq.ssr.ssrbool.is_true_true	40	6	search with cache (only 1: by [  ]).	0.0268089771271	7
Coq.ssr.ssrbool.not_false_is_true	40	3	search with cache (only 1: by case).	0.00869798660278	13
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	0.0.2	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0269088745117	5
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00705909729004	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00653910636902	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0063910484314	1
Coq.ssr.ssrbool.negbK	40	0	search with cache (only 1: by case).	0.00520396232605	1
Coq.ssr.ssrbool.negbNE	40	2	search with cache (only 1: by case : {}b {}).	0.0269930362701	3
Coq.ssr.ssrbool.negb_inj	40	1.7	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0349910259247	10
Coq.ssr.ssrbool.negbLR	40	3	search with cache (only 1: Bool.destr_bool).	0.0127959251404	12
Coq.ssr.ssrbool.negbRL	40	7.1	search with cache (only 1: intros; only 1: Bool.destr_bool).	0.0123200416565	10
Coq.ssr.ssrbool.contra	40	1.20	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.400876045227	569
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.00997114181519	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0099880695343	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0104551315308	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00943398475647	2
Coq.ssr.ssrbool.contraFT	40	2.12	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.243541002274	94
Coq.ssr.ssrbool.contraFN	40	2.21	search with cache (only 1: Bool.destr_bool; only 1: intuition).	10.2142651081	370
Coq.ssr.ssrbool.contraTF	40	2.21	search with cache (only 1: Bool.destr_bool; only 1: intuition).	14.5460448265	298
Coq.ssr.ssrbool.contraNF	40	2.19	search with cache (only 1: Bool.destr_bool; only 1: intuition).	21.0713419914	262
Coq.ssr.ssrbool.contraFF	40	0.0.6.21	search with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: by [  ]; only 1: intuition).	13.2115578651	1484
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0470650196075	1
Coq.ssr.ssrbool.ifT	40	3	search with cache (only 1: by move {+}->).	0.00769591331482	4
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.00502514839172	1
Coq.ssr.ssrbool.ifN	40	9	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0118138790131	12
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.197778940201	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.28170800209	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.11154294014	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00520586967468	1
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: trivial).	0.175958156586	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0928630828857	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00844216346741	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0510489940643	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	1.3.11	search with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.03342795372	256
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.2.12	search with cache (only 1: intros; only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.373670101166	246
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	23	search with cache (only 1: by case Pb).	4.14956212044	310
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	1.5	search with cache (only 1: destruct 1; only 1: auto).	0.0929172039032	8
Coq.ssr.ssrbool.impliesPn	40	0.5.5	search with cache (only 1: destruct 1; only 1: intro H; only 1: tauto).	0.353935003281	93
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.00937104225159	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0107359886169	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0965530872345	1
Coq.ssr.ssrbool.pair_andP	40	9	search with cache (only 1: tauto).	0.491415023804	11
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00535106658936	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00574088096619	1
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.0087628364563	2
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00585317611694	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0101978778839	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0141880512238	1
Coq.ssr.ssrbool.implyP	40	2	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0118300914764	3
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by constructor; case).	0.00521206855774	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00537991523743	1
Coq.ssr.ssrbool.andbT	40	10	search with cache (only 1: by case).	0.0181748867035	30
Coq.ssr.ssrbool.andbF	40	2	search with cache (only 1: by case).	0.0072660446167	3
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.00569701194763	1
Coq.ssr.ssrbool.andbC	40	0.6	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0775978565216	8
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00627899169922	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0719320774078	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0111808776855	2
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0092248916626	1
Coq.ssr.ssrbool.orTb	40	1	search with cache (only 1: by [  ]).	0.006108045578	2
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00545501708984	1
Coq.ssr.ssrbool.orbT	40	3.1	search with cache (only 1: intros; only 1: by case : {}b {}).	0.0303890705109	6
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.00697016716003	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00573182106018	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00660490989685	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0480859279633	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00890111923218	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00875282287598	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0130858421326	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.070081949234	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00577187538147	1
Coq.ssr.ssrbool.orbN	40	1	search with cache (only 1: by case : {}b {}).	0.00634002685547	2
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00572085380554	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0120630264282	3
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00897598266602	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00909495353699	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00963997840881	1
Coq.ssr.ssrbool.andb_idl	40	0.0.2.8	search with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: by [  ]; only 1: tauto).	1.78031992912	91
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.244750976562	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.22	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	17.0617761612	1379
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.667238235474	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.180237054825	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.115906000137	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.333432912827	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.205788135529	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.113879203796	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00753116607666	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00740599632263	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00757694244385	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00744915008545	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00738215446472	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: by case : {}b {}).	0.0258460044861	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00610995292664	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00572896003723	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00590395927429	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00721907615662	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00760507583618	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00791311264038	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00752305984497	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00804114341736	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00746607780457	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.137838125229	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0102000236511	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0792419910431	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00554299354553	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00578188896179	1
Coq.ssr.ssrbool.addbb	40	2	search with cache (only 1: by case).	0.00788903236389	3
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00725293159485	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00888705253601	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00885009765625	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00906014442444	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0132479667664	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0091609954834	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00941109657288	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00722503662109	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00712490081787	1
Coq.ssr.ssrbool.addIb	40	22	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.787077188492	483
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0106720924377	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.00616693496704	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.00759100914001	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00749111175537	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00752186775208	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.26	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.485648155212	461
Coq.ssr.ssrbool.subrelUl	40	0.17.9.7	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	13.7167429924	1675
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	13	search with cache (only 1: by [  ]).	0.0591931343079	61
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0463638305664	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	1	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.143878936768	2
Coq.ssr.ssrbool.unfold_in	40	5	search with cache (only 1: by rewrite -mem_topred).	0.104645967484	6
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00557780265808	1
Coq.ssr.ssrbool.mem_simpl	40	3	search with cache (only 1: by [  ]).	0.0458471775055	4
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.00580716133118	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: by [  ]).	0.0448479652405	1
Coq.ssr.ssrbool.in1W	40	0.9	search with cache (only 1: intro H; only 1: by [  ]).	0.101804971695	21
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00821685791016	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00742197036743	1
Coq.ssr.ssrbool.in1T	40	4.4	search with cache (only 1: intro H; only 1: auto).	0.146728992462	10
Coq.ssr.ssrbool.in2T	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.0133140087128	3
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0159089565277	2
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.0307259559631	1
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.218961954117	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.584769964218	3
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.222008943558	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.125596046448	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00684309005737	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0619170665741	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0143518447876	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00763893127441	1
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.228421926498	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.39150094986	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  {}=>? ?; auto).	0.329563140869	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	15.4.3.6	search with cache (only 1: intro H; only 1: intuition; only 1: subst; only 1: intuition).	21.7370040417	1978
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.343868017197	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.00858592987061	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.0562689304352	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.00899600982666	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.106929063797	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.129493951797	1
Coq.ssr.ssrbool.sub_in_bij	40	0.5	search with cache (only 1: intro H; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.136605024338	7
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.204388856888	1
Coq.ssr.ssrbool.sub_in2	40	10.13.9	search with cache (only 1: intro H; only 1: case  {}=>// undecP; only 1: by move  {}=>? ?; auto).	8.37680697441	2097
Coq.ssr.ssrbool.sub_in3	40	7.11	search with cache (only 1: red; only 1: auto).	1.33563280106	431
Coq.ssr.ssrbool.sub_in12	40	6.14	search with cache (only 1: intros; only 1: by move  {}=>? ?; auto).	1.8788459301	229
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.052591085434	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.028265953064	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.374447107315	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	3	search with cache (only 1: by move  {}=>hf x y axy; rewrite hf).	0.0333330631256	4
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.593426942825	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	search with cache (only 1: auto).	0.0121209621429	2
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	3	search with cache (only 1: split).	0.0493919849396	4
Coq.ssr.ssrfun.fsym	40	1.8	search with cache (only 1: intros; only 1: by [  ]).	0.0307700634003	22
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.0458400249481	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0344769954681	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.102493047714	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0139470100403	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0128269195557	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	1.02950000763	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.138484954834	1
Coq.ssr.ssrfun.canLR	40	0.3.10	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.308360099792	101
Coq.ssr.ssrfun.canRL	40	6.9.8	search with cache (only 1: intros; only 1: subst; only 1: auto).	2.02531385422	590
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0.0.5	search with cache (only 1: intros H ?; only 1: destruct 1; only 1: reflexivity).	0.0212688446045	8
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40	0.5.19.2.6.14	search with cache (only 1: intros h1 h2; only 1: Bool.destr_bool; only 1: apply h1; only 1: Bool.destr_bool; only 1: destruct H; only 1: trivial).	32.2059471607	11957
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0	search with cache (only 1: auto).	0.00349092483521	1
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00414085388184	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: auto).	0.00429391860962	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00417995452881	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00420808792114	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.0.9.6	search with cache (only 1: intro H; only 1: intros m w le; only 1: intros <-; only 1: auto with arith).	1.04571890831	1013
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40	2.19	search with cache (only 1: fix even_spec 1; only 1: trivial).	2.08456206322	1247
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.085216999054	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.5.27	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	2.33425498009	1154
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0	search with cache (only 1: intros; only 1: now simpl).	0.0328769683838	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	0.31.5.0	search with cache (only 1: intro n; only 1: intros f Hf H0; only 1: fix even_spec 1; only 1: auto with arith).	25.7018620968	20612
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.142657995224	9
Coq.Vectors.VectorSpec.uncons_cons	40	0	search with cache (only 1: now simpl).	0.0663809776306	1
Coq.Vectors.VectorSpec.append_comm_cons	40	0	search with cache (only 1: reflexivity).	0.0624651908875	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	0.13.5	search with cache (only 1: fix even_spec 1; only 1: intro; only 1: easy).	6.30087518692	6142
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.10.2.0.3	search with cache (only 1: intros a n; only 1: pattern a; only 1: intro H; only 1: intros <-; only 1: trivial).	1.88563489914	2666
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.00680994987488	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.00792193412781	2
Coq.Setoids.Setoid.Seq_trans	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0119869709015	11
Coq.Setoids.Setoid.gen_st	40	1.0.3	search with cache (only 1: intros; only 1: red; only 1: CRelationClasses.simpl_crelation).	0.0164971351624	7
Coq.Bool.IfProp.Iftrue_inv	40	1.3.0.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.0150229930878	19
Coq.Bool.IfProp.Iffalse_inv	40	0.0.1.4.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.032201051712	68
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.00873708724976	3
Coq.Bool.IfProp.IfProp_or	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0707437992096	93
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.DecBool.ifdec_left	40	2.7.0.4.6.0	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: destruct h2; only 1: reflexivity; only 1: apply False_rec; only 1: auto).	0.56395316124	1900
Coq.Bool.DecBool.ifdec_right	40	0.12.5.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: apply False_rec; only 1: auto; only 1: auto).	1.98718690872	9800
Coq.Bool.Sumbool.sumbool_of_bool	40	1.1.6.5	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.160492897034	327
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.2	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.014200925827	5
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.012904882431	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.1.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.032897233963	23
Coq.Bool.Sumbool.sumbool_not	40	1.0.0.0.4	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: auto).	0.144919157028	127
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	search with cache (only 1: discriminate).	0.0045759677887	2
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.0045440196991	1
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40	1.3.1	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.00715017318726	8
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00635099411011	3
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.1	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0171208381653	37
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00816297531128	3
Coq.Bool.Bool.leb_implb	40	2.2.0.8	search with cache (only 1: intros n m; only 1: induction n; only 1: intuition; only 1: intuition).	0.188811063766	523
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.00676393508911	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00481390953064	1
Coq.Bool.Bool.eqb_prop	40	4.0	search with cache (only 1: intuition; only 1: destr_bool).	0.00916290283203	6
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0101699829102	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0849239826202	6
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00535297393799	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00599813461304	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00487208366394	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00467109680176	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00584101676941	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00555801391602	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00449991226196	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00461792945862	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00491786003113	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00752186775208	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00763082504272	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0132730007172	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.012894153595	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.010176897049	5
Coq.Bool.Bool.orb_prop	40	1.1.1.1.1	search with cache (only 1: destruct a, b; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.00808095932007	10
Coq.Bool.Bool.orb_true_intro	40	2.1.1.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0165748596191	38
Coq.Bool.Bool.orb_false_intro	40	1.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool).	0.00714492797852	6
Coq.Bool.Bool.orb_false_elim	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: assumption; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: simpl; only 1: auto).	0.019984960556	38
Coq.Bool.Bool.orb_diag	40	3	search with cache (only 1: destr_bool).	0.00639796257019	4
Coq.Bool.Bool.orb_true_r	40	7	search with cache (only 1: destr_bool).	0.00847101211548	12
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00482106208801	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.00499486923218	2
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00461912155151	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0045850276947	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00564408302307	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.00838780403137	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.012631893158	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.013993024826	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.00868201255798	9
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.0060510635376	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00615191459656	3
Coq.Bool.Bool.andb_false_r	40	0	search with cache (only 1: destr_bool).	0.00497198104858	1
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00468707084656	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00477695465088	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00481915473938	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00407409667969	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.1	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00695300102234	6
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00497984886169	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00512886047363	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00804901123047	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00764584541321	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00785493850708	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00777196884155	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00804495811462	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00588917732239	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00520014762878	1
Coq.Bool.Bool.xorb_false_r	40	1	search with cache (only 1: destr_bool).	0.0783681869507	2
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00382685661316	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00468111038208	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00359702110291	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00496006011963	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00525903701782	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00766706466675	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00638008117676	1
Coq.Bool.Bool.xorb_move_l_r_1	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.00973391532898	4
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00863790512085	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0086088180542	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00880908966064	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.00620698928833	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00753402709961	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00616097450256	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: repeat split; only 1: auto; only 1: auto).	0.0165801048279	7
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0.0.2.0	search with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intuition).	0.0853159427643	108
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00717115402222	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0068690776825	2
Coq.Bool.Bool.absurd_eq_bool	40	2.4	search with cache (only 1: intros; only 1: intuition).	0.0223331451416	75
Coq.Bool.Bool.absurd_eq_true	40	7.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0069260597229	9
Coq.Bool.Bool.trans_eq_bool	40	0.3.0	search with cache (only 1: intuition; only 1: subst; only 1: trivial).	0.00705409049988	6
Coq.Bool.Bool.Is_true_eq_true	40	3.2	search with cache (only 1: destr_bool; only 1: auto).	0.0066020488739	7
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00564408302307	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00529003143311	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00466203689575	1
Coq.Bool.Bool.eqb_eq	40	0.0.2	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00851893424988	5
Coq.Bool.Bool.orb_prop_elim	40	1.1.1.1.0.0	search with cache (only 1: destr_bool; only 1: right; only 1: auto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0135760307312	29
Coq.Bool.Bool.orb_prop_intro	40	3.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00759696960449	5
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00829601287842	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0091450214386	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.3	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00949597358704	6
Coq.Bool.Bool.eq_bool_prop_elim	40	1.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00852298736572	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00674104690552	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00795793533325	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00647282600403	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00657296180725	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00634217262268	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00521898269653	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00623202323914	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00455093383789	1
Coq.Bool.Bool.reflect_iff	40	9.0.10.0.8	search with cache (only 1: destruct 1; only 1: intuition; only 1: split; only 1: tauto; only 1: discriminate).	2.89649510384	13271
Coq.Bool.Bool.iff_reflect	40	3.3.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0167829990387	21
Coq.Bool.Bool.reflect_dec	40	0.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.00772500038147	3
Coq.Bool.Bool.eqb_spec	40	1.3.3.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.132639169693	258
Coq.Bool.BoolEq.beq_eq_true	40	1.3	search with cache (only 1: destruct 1; only 1: intuition).	0.0316209793091	22
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	3.0.2.0.4.3.0	search with cache (only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	20.7811629772	10037
Coq.Lists.ListSet.set_mem_correct1	40	0.0.0.0.1.4.3	search with cache (only 1: simple induction x; only 1: discriminate; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	0.98690199852	607
Coq.Lists.ListSet.set_mem_correct2	40	6.0.0.0.1.1.0	search with cache (only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: firstorder).	9.28184199333	3183
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	0.1.4	search with cache (only 1: inversion 1; only 1: auto with datatypes; only 1: auto).	0.109853029251	44
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: tauto).	4.50300002098	2043
Coq.Lists.ListSet.set_add_not_empty	40	5.2.1.0.0.2.4	search with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: easy).	2.98893499374	1602
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40	0.0.1.1.0.2.2.1.0.0.0.1.0	search with cache (only 1: induction l as [| x l IH]; only 1: tauto; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: simpl; only 1: auto; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: auto; only 1: simpl; only 1: auto).	31.0338978767	20955
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.3.0.1.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.445540904999	112
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.473026990891	43
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	1.91203999519	697
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0379071235657	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	7.2	search with cache (only 1: intros; only 1: eauto with datatypes).	0.864286899567	205
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	3.0.0.0.6.0.0.0.1	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: firstorder; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).	14.4143180847	7721
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	1.1.1.2.0.20	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	11.3866238594	933
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.11	search with cache (only 1: intros [? ?]; only 1: reflexivity).	0.0212998390198	52
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.5.4.0.3	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: reflexivity).	4.32117700577	658
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.0.1.3	search with cache (only 1: intros n; only 1: coinduction ltac:(Equiv2); only 1: auto; only 1: auto).	0.0587959289551	24
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0339260101318	5
Coq.Lists.Streams.Str_nth_map	40	0.6.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: intros s; only 1: apply IHn).	0.0450549125671	16
Coq.Lists.Streams.ForAll_map	40	0.3.2.1.7.0.7.3	search with cache (only 1: split; only 1: intro H; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: destruct H; only 1: exact H; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: auto).	1.91396999359	7040
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.1.0.0.3	search with cache (only 1: induction n; only 1: intros P S; only 1: trivial; only 1: intros P S; only 1: apply IHn).	0.0409250259399	27
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0206310749054	7
Coq.Lists.List.nil_cons	40	3.2	search with cache (only 1: intros a0; only 1: now Nat.nzsimpl).	0.420569896698	23
Coq.Lists.List.destruct_list	40	66.9.38.76	search with cache (only 1: intro p; only 1: destruct p; only 1: auto with *; only 1: eauto).	12.8494751453	45525
Coq.Lists.List.hd_error_tl_repr	40	6.6.7.3.3.1.1.0	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: now split; only 1: intros; only 1: intuition; only 1: RelationClasses.simpl_relation; only 1: RelationClasses.simpl_relation; only 1: RelationClasses.simpl_relation).	19.2586340904	16381
Coq.Lists.List.hd_error_some_nil	40	0.0.1.2	search with cache (only 1: destruct l as [| x xs]; only 1: intro H; only 1: discriminate; only 1: discriminate).	0.107016086578	16
Coq.Lists.List.length_zero_iff_nil	40	3.0.0.0.0.0.31	search with cache (only 1: destruct l; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: firstorder  discriminate).	8.05641007423	12649
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0182120800018	1
Coq.Lists.List.hd_error_cons	40	0	search with cache (only 1: reflexivity).	0.0315210819244	1
Coq.Lists.List.in_eq	40	0.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0476901531219	2
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0287938117981	2
Coq.Lists.List.not_in_cons	40	13.3.2.1.0	search with cache (only 1: simpl; only 1: split; only 1: intro H; only 1: auto; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	1.46514010429	1461
Coq.Lists.List.in_nil	40	2.1	search with cache (only 1: simpl; only 1: tauto).	0.0225300788879	5
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0186491012573	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	0.0.0.0.43	search with cache (only 1: induction x; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	15.1654639244	22920
Coq.Lists.List.app_nil_l	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0540289878845	4
Coq.Lists.List.app_nil_r	40	0.13.6.0.4	search with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	3.79913115501	3986
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0395319461823	7
Coq.Lists.List.app_assoc	40	1.0.5.0.1.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.59489107132	226
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0836799144745	7
Coq.Lists.List.app_comm_cons	40	0.0.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0619850158691	3
Coq.Lists.List.app_eq_nil	40	0.1.5.0	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: auto; only 1: firstorder  discriminate).	0.0665609836578	10
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	0.1.1.14	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	2.02215886116	1983
Coq.Lists.List.in_app_or	40	5.1.4.18	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	18.6653268337	20305
Coq.Lists.List.in_or_app	40	13.2.12.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intros a0 y H H0; only 1: firstorder).	36.412555933	36316
Coq.Lists.List.in_app_iff	40	0.4.0.7.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros y H0 H1; only 1: intuition).	3.43497896194	2129
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.0	search with cache (only 1: simpl; only 1: intros n l d; only 1: auto).	0.0531420707703	3
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40	5.2.0.0.3.0.1.7.0.0.4	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros a H; only 1: simpl; only 1: inversion_clear H; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: intro H; only 1: RelationClasses.simpl_relation).	35.2474241257	42562
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	1.0.0.0.0.7.1	search with cache (only 1: unfold lt; only 1: fix le_div2 1; only 1: induction n as [| n hn]; only 1: intros; only 1: auto; only 1: intros; only 1: auto with arith).	5.52988290787	4991
Coq.Lists.List.app_nth1	40	0.0.0.2.1.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	0.271095991135	28
Coq.Lists.List.app_nth2	40	0.0.3.4.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: trivial; only 1: intros l' d [| n]; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto with arith).	33.1226110458	15870
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40	2.1.8.4	search with cache (only 1: revert n; only 1: fix odd_spec 1; only 1: intro m; only 1: easy).	6.37006187439	3583
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.2.0.0.7	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.28398799896	379
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.0.0.3.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: auto; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	3.66909599304	1460
Coq.Lists.List.nth_error_nth	40	1.0.1.0.3.0.2.0.4.1.5	search with cache (only 1: induction l; only 1: destruct n; only 1: inversion 1; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: auto).	30.2116119862	21886
Coq.Lists.List.nth_error_nth'	40	0.1.0.0.0.1.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	0.428268909454	80
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4	search with cache (only 1: trivial).	0.0478639602661	5
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	4.1.15.1	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: now try Nat.order').	3.22017002106	1730
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0367000102997	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.1.0.2.1	search with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.101179122925	9
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0597331523895	2
Coq.Lists.List.concat_cons	40	1.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0889799594879	7
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	15	search with cache (only 1: decide equality).	0.941739082336	468
Coq.Lists.List.map_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.031975030899	3
Coq.Lists.List.in_map	40	0.0.1.3.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	1.3916349411	598
Coq.Lists.List.in_map_iff	40	2.3.3.2	search with cache (only 1: induction l; only 1: intros; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.943876028061	340
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.107185125351	6
Coq.Lists.List.map_nth	40	1.0.3.0.2.0.0.0.0.2.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: auto with arith).	26.8361999989	14470
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.5.0.1.0.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: f_equal; only 1: auto).	1.47054600716	751
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	3.1.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.133144140244	14
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0567941665649	9
Coq.Lists.List.map_map	40	0.8.0.0.0.10	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.91718006134	1708
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.1.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0525829792023	8
Coq.Lists.List.fold_left_app	40	0.0.1.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0457570552826	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.8.2.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	4.14435005188	3431
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	8.5.1.1.38.4	search with cache (only 1: firstorder; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: firstorder).	22.7331309319	26578
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.745687007904	291
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	2.0.2.0.6.0.1.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	13.0153508186	4690
Coq.Lists.List.find_none	40	0.2.0.4.2.0.2.0.1.1.4	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: case_eq (f a); only 1: intuition; only 1: congruence; only 1: congruence; only 1: intuition; only 1: subst; only 1: auto).	25.3709020615	13335
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0392980575562	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	1.2.2.2.0.1.1.4.0	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	17.737585783	7533
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.1.5.4.2.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	10.186619997	6977
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0429649353027	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.1.0.0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	11.4351038933	6349
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.1.10.3.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (split l); only 1: destruct a; only 1: simpl; only 1: auto).	6.00955104828	5083
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0840559005737	9
Coq.Lists.List.split_combine	40	0.5.1.8.5.0.1.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	37.8969669342	32767
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.2.3.0.0.0.0.2.2.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: intro H; only 1: intuition; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).	10.8408432007	4087
Coq.Lists.List.combine_length	40	0.0.0.0.0.0.0.0.9	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.69767403603	3586
Coq.Lists.List.combine_nth	40	0.0.4.0.1.0.1.0.0.0.4.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: intros [| ] ? Heq; only 1: trivial; only 1: trivial; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: induction n; only 1: trivial; only 1: auto).	33.1425490379	19071
Coq.Lists.List.in_prod_aux	40	0.2.1.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: destruct H; only 1: auto).	1.10479617119	377
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	0.31	search with cache (only 1: red; only 1: auto).	1.20088195801	1458
Coq.Lists.List.lel_trans	40	2.1.31.1	search with cache (only 1: unfold lel; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	10.1592152119	14252
Coq.Lists.List.lel_cons_cons	40	0.0.0.2	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.0674080848694	6
Coq.Lists.List.lel_cons	40	0.0.1	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0622339248657	4
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0405259132385	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0714030265808	1
Coq.Lists.List.incl_tl	40	4.8	search with cache (only 1: intros; only 1: intuition).	0.270885944366	99
Coq.Lists.List.incl_tran	40	1	search with cache (only 1: auto).	0.0804491043091	2
Coq.Lists.List.incl_appl	40	5	search with cache (only 1: auto with datatypes).	0.102993965149	11
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0409979820251	1
Coq.Lists.List.incl_cons	40	9.4.7.3	search with cache (only 1: intros l m a; only 1: red; only 1: intro H; only 1: firstorder  (subst; auto)).	4.27595591545	2183
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	0.0.0.0.10	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.147301912308	85
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0497949123383	2
Coq.Lists.List.firstn_all	40	5.0.0.0.13	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now rewrite IH).	0.849721908569	463
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0929868221283	1
Coq.Lists.List.firstn_le_length	40	0.2.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.123556137085	10
Coq.Lists.List.firstn_length_le	40	2.0.0.0.1.0.0.4.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: destruct n; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	7.65147995949	4908
Coq.Lists.List.firstn_app	40	1.2.0.1.5.2.4	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	27.7009599209	14605
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0340821743011	1
Coq.Lists.List.skipn_nil	40	0.0.0.4	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.125147104263	14
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.103718042374	1
Coq.Lists.List.skipn_none	40	0.0.0.0.4	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0994219779968	15
Coq.Lists.List.skipn_all2	40	1.0.0.0.0.2.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: auto with arith).	0.73435997963	114
Coq.Lists.List.firstn_skipn	40	1.1.0.0.0.2.0.2	search with cache (only 1: induction n; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.26226592064	540
Coq.Lists.List.firstn_length	40	0.0.0.0.4.0.6	search with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.39138007164	3218
Coq.Lists.List.skipn_length	40	0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.11315584183	4717
Coq.Lists.List.skipn_all	40	0.0.0.0.3	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.105942964554	8
Coq.Lists.List.skipn_app	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	2.01690983772	532
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0.6	search with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.142231941223	39
Coq.Lists.List.combine_firstn_l	40	0.2.0.0.0.10.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	21.3952670097	12052
Coq.Lists.List.combine_firstn_r	40
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.3.3	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder).	2.95140790939	690
Coq.Lists.List.Add_length	40	0.0.1.8	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.468002080917	60
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.10002207756	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0714960098267	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	1.0.1.2.16	search with cache (only 1: intro n; only 1: induction n; only 1: now intros []; only 1: simpl; only 1: auto).	4.69056296349	3120
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	1.5	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0749049186707	17
Coq.Lists.List.Exists_cons	40	13.0.0.8.8	search with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intuition).	5.6139330864	5181
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.0.3.0.1.0.0.0.2.2	search with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l as [| a l IH]; only 1: auto; only 1: simpl; only 1: auto).	10.0275919437	4790
Coq.Lists.List.Forall_inv	40	0.9	search with cache (only 1: inversion 1; only 1: auto).	0.21603512764	53
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.5.0.1.4.2.0.2.2.3	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: auto; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	16.4375650883	10033
Coq.Lists.List.Forall_inv_tail	40	0.2.2	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.116894960403	7
Coq.Lists.List.Exists_impl	40	1.4.0.1.12.2.7.4	search with cache (only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: inversion_clear 1; only 1: induction 1; only 1: constructor; only 1: auto; only 1: right; only 1: auto).	13.8323628902	11873
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.16389799118	10
Coq.Lists.List.Forall_Exists_dec	40	5.0.1.0.0.0.3.1.0.2.0.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	32.3812360764	9428
Coq.Lists.List.Forall_impl	40	0.0.0.0.3.10.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	2.22310304642	1062
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.121417999268	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.0.1.4.0.0.4.1.1	search with cache (only 1: induction l1; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: intros; only 1: inversion H; only 1: subst; only 1: simpl; only 1: auto).	7.27893877029	4632
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.0.0.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.16642999649	15
Coq.Lists.List.repeat_spec	40	0.0.2.4	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: intuition).	0.199036836624	20
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.0145828723907	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	3.2.0.1.8	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intro; only 1: intuition).	3.30704188347	1526
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0198881626129	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.0.2.5.0.1	search with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.526345014572	582
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0195260047913	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.0.0.7.0.0.0.8.0	search with cache (only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| a l [| ]]; only 1: constructor; only 1: auto; only 1: auto; only 1: auto).	22.6592199802	21650
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.1.2	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.199782133102	54
Coq.Lists.SetoidList.InA_nil	40	0.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0666961669922	2
Coq.Lists.SetoidList.InA_alt	40	0.0.1.1.0.2.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.4338080883	757
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	6.7	search with cache (only 1: intro H; only 1: inversion 1).	0.219820976257	219
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.4.1.0.4.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.28618788719	610
Coq.Lists.SetoidList.equivlist_equiv	40	9	search with cache (only 1: firstorder).	0.170346021652	99
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	3.18.1	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	1.88448381424	1485
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.7	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.942274093628	55
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.8.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	2.84608793259	295
Coq.Lists.SetoidList.InA_double_head	40	2.0.5	search with cache (only 1: do 2 rewrite InA_alt; only 1: simpl; only 1: firstorder).	0.403752803802	21
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.179682016373	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.10.4	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	0.404105186462	240
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.1.0.0.9	search with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	0.45055603981	116
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.4	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.237242937088	7
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.3	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	0.0709249973297	7
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40	17.1.1.1	search with cache (only 1: induction 1; only 1: reflexivity; only 1: simpl; only 1: firstorder).	8.93729901314	1866
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	2.0.0.0.0.3.0.0.0.3.7	search with cache (only 1: induction s1; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	19.330160141	2577
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.2.0.9.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).	5.94091200829	3694
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	5.4.2.0.16	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: inv; only 1: firstorder  (subst; auto)).	25.4584360123	3312
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.056144952774	8
Coq.Lists.SetoidList.InA_InfA	40	1.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.057363986969	9
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.1.3.0.0.1	search with cache (only 1: induction l1; only 1: simpl; only 1: auto; only 1: constructor; only 1: inv; only 1: auto).	0.773637056351	128
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.4	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0795450210571	25
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.1.0.0.3.10	search with cache (only 1: intros x l' H H0; only 1: induction H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.38651204109	665
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.0924768447876	4
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	1.25875902176	179
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	2.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0566298961639	4
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0281250476837	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0641901493073	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.106673955917	5
Coq.NArith.BinNat.N.bi_induction	40	1.0.1.10.1	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: firstorder).	10.124984026	1885
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0605230331421	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0402359962463	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0689630508423	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity || apply f_equal || exfalso).	0.0734920501709	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: auto).	0.0697011947632	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0721700191498	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.2.1.1.0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: trivial).	5.89256715775	2525
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.8.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	20.6621348858	11394
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.043340921402	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0.4.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: induction p; only 1: now destruct p; only 1: now destruct p; only 1: now f_equal).	0.125991821289	10
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0952520370483	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.109485864639	9
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.137899875641	9
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	1	search with cache (only 1: now destruct n).	0.0439178943634	2
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	0.0.0.3.5.4.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intros m; only 1: rewrite even_spec; only 1: split; only 1: auto; only 1: auto).	2.74267482758	1960
Coq.NArith.BinNat.N.leb_le	40	14.5.4	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct n as [| [p| p| ]]).	6.28295707703	4855
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0371661186218	3
Coq.NArith.BinNat.N.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0701699256897	1
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.652852058411	72
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0984468460083	2
Coq.NArith.BinNat.N.succ_double_spec	40	2	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.213761806488	3
Coq.NArith.BinNat.N.double_add	40	1.0.0.1.0.0.0.4	search with cache (only 1: destruct n, m; only 1: firstorder; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto).	5.23946213722	719
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0387148857117	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0833640098572	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.10555100441	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0786340236664	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).	0.107372045517	11
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: firstorder; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy).	0.201966047287	29
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.738678216934	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.109582901001	9
Coq.NArith.BinNat.N.compare_0_r	40	1.5	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0615758895874	25
Coq.NArith.BinNat.N.pow_0_r	40	4	search with cache (only 1: now f_equal).	0.0384318828583	5
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	3.10.0	search with cache (only 1: firstorder; only 1: symmetry; only 1: false_hyp H nlt_0_r).	1.4388999939	471
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	11	search with cache (only 1: now destruct n).	0.619035959244	205
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40	1.59.75	search with cache (only 1: revert a; only 1: fix sqrtrem_spec 1; only 1: auto).	33.6462709904	41241
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0500459671021	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0438730716705	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0711920261383	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.1.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).	0.242770910263	20
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.0858950614929	1
Coq.NArith.BinNat.N.testbit_even_0	40	0.0.83	search with cache (only 1: destruct a as [| a]; only 1: easy; only 1: easy).	9.48373484612	6622
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0831999778748	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.1.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.691451072693	167
Coq.NArith.BinNat.N.testbit_neg_r	40	2.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.225177049637	33
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0828700065613	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.6.1	search with cache (only 1: intro H; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, H).	0.28907585144	16
Coq.NArith.BinNat.N.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	0.0799009799957	11
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.2	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.275788068771	15
Coq.NArith.BinNat.N.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.569607019424	15
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.1.0.3	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: now f_equal).	0.234074115753	18
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	2.0.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.0298430919647	8
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.0.8.4.5.0.0.1.1	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	20.2171149254	13122
Coq.NArith.Nnat.N2Nat.inj_succ	40	10.0.1.0.1.0.14	search with cache (only 1: symmetry; only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	18.6575689316	27901
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.6.1.15	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.554743051529	500
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0285720825195	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0223488807678	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0197689533234	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.0200128555298	1
Coq.NArith.Nnat.Nat2N.inj_add	40	16.0.0.0	search with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: nat2N; only 1: nat2N).	2.08438205719	2137
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.021222114563	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0211670398712	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0201969146729	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0218210220337	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0223100185394	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40	1.1.2.1.1.1.1.1.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	4.26070904732	864
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	86.0	search with cache (only 1: destruct x; only 1: destr_bool).	30.6224088669	36223
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	6.10.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	6.66501379013	2427
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.108175039291	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.101116895676	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	1.4	search with cache (only 1: repeat red; only 1: inversion 1).	0.0162968635559	7
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	36	search with cache (only 1: constructor 1).	0.282688140869	658
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	0.22	search with cache (only 1: fix even_spec 1; only 1: auto).	8.13659310341	797
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	0.2.0.1.1.6.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: induction 1; only 1: intros a e; only 1: intro abs; only 1: inversion abs; only 1: intros p l inlist; only 1: intuition).	7.44946694374	5220
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.3.2.0.0.1.1.1.1.3	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	15.829365015	5603
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.1.0.0.0.0.0.5	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	3.80518388748	495
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	2	search with cache (only 1: auto).	0.0104701519012	3
Coq.FSets.FMapWeakList.Raw.elements_2	40	1	search with cache (only 1: auto).	0.00928997993469	2
Coq.FSets.FMapWeakList.Raw.elements_3w	40	1	search with cache (only 1: auto).	0.0102589130402	2
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	1.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: inversion_clear Hm; only 1: destruct a as (x', e'); only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	34.0118229389	20672
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.2.6.31.4.4	search with cache (only 1: intro H; only 1: intros; only 1: compute in H1; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).	25.227711916	46933
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	1.6	search with cache (only 1: repeat red; only 1: inversion 1).	0.0260190963745	16
Coq.FSets.FMapWeakList.Make.is_empty_1	40	0.22	search with cache (only 1: fix even_spec 1; only 1: auto).	0.336530923843	704
Coq.FSets.FMapWeakList.Make.is_empty_2	40	29.0.0	search with cache (only 1: intros m; only 1: case m; only 1: now induction m; intros [] []; simpl; rewrite ?firstn_nil).	2.61594009399	3577
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0107991695404	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0133290290833	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.17.11.5	search with cache (only 1: intro H; only 1: inversion_clear H; only 1: destruct H; only 1: auto).	0.758684158325	2160
Coq.FSets.FMapWeakList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.0112211704254	2
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	14.3.1	search with cache (only 1: simpl; only 1: intros; only 1: eauto).	1.57851409912	1186
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	44.0	search with cache (only 1: simpl; only 1: eauto with set).	2.9443359375	7684
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.3.8	search with cache (only 1: unfold equal; only 1: intros s x; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	3.7462618351	2034
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.6.7.1	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	7.58825397491	4059
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	1.3.0.3.3.2	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: easy; only 1: auto).	1.08796811104	616
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.5.13.0	search with cache (only 1: intros; only 1: generalize H; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	2.14504885674	2028
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	3.1.13.1	search with cache (only 1: intuition; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.794509887695	496
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0.1.1	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: intuition).	0.132444143295	13
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.3.4.12.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	10.5471990108	3780
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.2.6.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	28.2008578777	2756
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.2.7.0.6.9	search with cache (only 1: case M.empty; only 1: intros x y; only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	15.0517060757	13000
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.446002006531	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.1	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.210453987122	33
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	2.1.13.17.7.9	search with cache (only 1: intros s x; only 1: case (M.elements s); only 1: intros y H0 H1; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	28.3561401367	41037
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.1	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.120754003525	14
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.1.2.2	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0835919380188	27
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.109716176987	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0940821170807	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.6.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.106897115707	53
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.1.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.835736989975	26
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.3.7.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.796648979187	247
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	18	search with cache (only 1: decide equality).	3.21476387978	600
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.1.4	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	1.60490083694	216
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.483999967575	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.8.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: repeat red; only 1: intuition).	1.80575990677	708
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.3.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.151413917542	10
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FMapList.Raw.empty_1	40	3	search with cache (only 1: inversion 1).	0.0392110347748	4
Coq.FSets.FMapList.Raw.empty_sorted	40	5	search with cache (only 1: constructor).	0.0999219417572	6
Coq.FSets.FMapList.Raw.is_empty_1	40	1.15	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.92226481438	335
Coq.FSets.FMapList.Raw.is_empty_2	40	0.1.6.2.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: simpl; only 1: now try PeanoNat.Nat.order'; only 1: intros (k, e) l inlist; only 1: intuition).	3.22940802574	944
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	4.43407988548	1435
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0681049823761	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0338900089264	1
Coq.FSets.FMapList.Raw.elements_3	40	0	search with cache (only 1: auto).	0.0699489116669	1
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	0.1.3.1.0.0.11	search with cache (only 1: induction m; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: intuition; only 1: simpl; only 1: auto).	11.0874149799	5821
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	2.1.0.0.0.0.0.6	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: auto).	5.08989191055	2218
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.2.1.2.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	3.08525490761	1096
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0945971012115	11
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40	1.40	search with cache (only 1: fix odd_spec 1; only 1: auto).	6.70468592644	11106
Coq.FSets.FMapList.Make.empty_1	40	1.2.10.19	search with cache (only 1: intro H; only 1: intros; only 1: intro abs; only 1: inversion abs).	1.84429597855	1382
Coq.FSets.FMapList.Make.is_empty_1	40	0.36	search with cache (only 1: fix odd_spec 1; only 1: auto).	2.67430782318	3173
Coq.FSets.FMapList.Make.is_empty_2	40	0.12.18.0.0	search with cache (only 1: intros m; only 1: case m; only 1: intro H; only 1: fix odd_spec 1; only 1: auto).	3.82881808281	4972
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40	0.51	search with cache (only 1: fix odd_spec 1; only 1: auto).	23.7637338638	34506
Coq.FSets.FMapList.Make.find_2	40	1.0.48	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	17.8870639801	33597
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.111495018005	1
Coq.FSets.FMapList.Make.elements_2	40	0	search with cache (only 1: auto).	0.103739023209	1
Coq.FSets.FMapList.Make.elements_3	40	1.9	search with cache (only 1: induction m; only 1: auto).	0.174774885178	65
Coq.FSets.FMapList.Make.elements_3w	40	1.0.51	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	2.41956710815	7176
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0756340026855	1
Coq.FSets.FMapList.Make.fold_1	40	1.0.41	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	19.9659569263	8531
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40	1.43	search with cache (only 1: fix odd_spec 1; only 1: auto).	20.7696390152	17904
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.12	search with cache (only 1: fix even_spec 1; only 1: auto).	0.594226121902	228
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	1.0.40	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	5.21144914627	6241
Coq.FSets.FMapList.Make_ord.eq_sym	40	0.41	search with cache (only 1: fix odd_spec 1; only 1: auto with *).	3.28992390633	5283
Coq.FSets.FMapList.Make_ord.eq_trans	40	3.36	search with cache (only 1: fix odd_spec 1; only 1: auto).	13.088465929	14389
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	0.58	search with cache (only 1: fix odd_spec 1; only 1: auto).	29.3635840416	74087
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.0.10	search with cache (only 1: intros; only 1: split; only 1: auto with sets).	0.0614109039307	67
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40	2.10	search with cache (only 1: fix gcd_divide 1; only 1: auto with datatypes).	0.220219135284	173
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40	1.12	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.59185385704	503
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40	1.13	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.572168111801	691
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40	1.14	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.532976865768	477
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40	1.11	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.558073043823	406
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.11	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.184819936752	153
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.1.8	search with cache (only 1: intro H1; only 1: left; only 1: trivial).	0.0372340679169	36
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.2.1.15.0.1.3	search with cache (only 1: intro H1; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: intros; only 1: auto with sets).	1.31974101067	5850
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.0107550621033	3
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.1.0.0.0.0.0.1.6.2	search with cache (only 1: revert d'; only 1: induction d; only 1: discriminate; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	6.37763810158	12166
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.2.3.5	search with cache (only 1: unfold unorm, lnorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	5.05112218857	6753
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	1	search with cache (only 1: now induction d).	0.0148160457611	2
Coq.Numbers.DecimalFacts.norm_invol	40	2.2.20	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.315174102783	600
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.805602073669	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0156531333923	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.720185995102	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	2.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	2.18278717995	63
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.2.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.110841035843	8
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0878639221191	7
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.031867980957	28
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0328989028931	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0147919654846	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: apply le_refl; only 1: simpl; only 1: order'; only 1: trivial).	7.02725601196	3345
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	0.49	search with cache (only 1: intros n m p q; only 1: now f_equiv).	21.5705089569	7874
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	1.0.7.0.0.0.0.0.1.3.2	search with cache (only 1: intros; only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros Ha; only 1: intros; only 1: now rewrite Ha).	6.34670305252	6571
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0389440059662	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.177057981491	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.219284057617	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0149819850922	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0161490440369	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.242279052734	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	3.0.1.19.1.2	search with cache (only 1: intros n m; only 1: bitwise; only 1: nzinduct n m; only 1: trivial; only 1: intro n; only 1: intuition).	10.3134970665	9028
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	5.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.283002138138	41
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	5.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.255821943283	195
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	3.0.0.22.1.2	search with cache (only 1: intros n m; only 1: bitwise; only 1: nzinduct n m; only 1: trivial; only 1: intro n; only 1: intuition).	6.70124292374	8693
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	25.440112114	32177
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0166931152344	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0175399780273	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0216419696808	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0167980194092	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0230319499969	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.1	search with cache (only 1: intro; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.287285089493	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.2.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.605176925659	242
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	0.0.0.0.0.0.0.0.0.2.11.0	search with cache (only 1: intros n m; only 1: destruct_max n; only 1: intuition order; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_opp).	16.0032980442	19939
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.2.0.0.0.0	search with cache (only 1: intros n m; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.145076990128	28
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	4.31855201721	2026
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.436448812485	19
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.552039861679	35
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.3.1.0	search with cache (only 1: intros n m; only 1: apply le_0_sub; only 1: apply le_0_sub; only 1: apply abs_nonneg).	0.0158350467682	11
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0125260353088	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.3.0.6.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.365494966507	381
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0131998062134	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.0164430141449	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.4.0.0.1.4.3	search with cache (only 1: intros x y; only 1: intros a b; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	4.26673603058	4181
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.0.0.0.0.1.0.0.1.0.0.4.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_lcm_l).	24.1580018997	21143
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.3.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0272970199585	13
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.605081796646	333
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.0.4.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.183214902878	36
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.2.0.2.1.8.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	15.5359311104	15965
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0361499786377	5
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono).	3.83046603203	1658
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	4.41612696648	1467
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.3.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	4.19353508949	1260
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.4.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	4.03245401382	1508
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	5.79438495636	2613
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.2.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.78930401802	915
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.0.0.7	search with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.695331811905	341
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.4.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0395510196686	11
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0370719432831	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	8.0.5.2.1	search with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: auto).	6.64309096336	3237
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.3	search with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.174822092056	91
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.19.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	8.42554998398	9046
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.1.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0323832035065	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.6.2.1	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	7.88802099228	2150
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.0.0.3.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.205018997192	36
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	1.09149289131	41
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	1.3.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	1.11336898804	55
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.2.1	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0635612010956	28
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0260760784149	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.7.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.402525901794	208
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.0.5	search with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.0324170589447	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.1.6.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: now right).	2.41498994827	1660
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.7.0.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	2.31740689278	1153
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	2.1.6.4.6	search with cache (only 1: intro; only 1: intros n m; only 1: destruct_max n; only 1: auto; only 1: auto with relations).	2.20424294472	3257
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0317850112915	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.22	search with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	0.23073387146	340
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.2.5.3.0	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: apply opp_neg_pos, lt_0_1).	0.941276073456	613
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.2.0.0.3.0	search with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	2.06452798843	245
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0988690853119	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.07154107094	66
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	1.85424399376	1705
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0122289657593	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	13.5147731304	10952
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.1.4.0.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: intuition; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	2.78027486801	3073
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0122442245483	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.3.0.0.0.2.3.0.0	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	7.58344006538	7281
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0235438346863	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0229871273041	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	6.2.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: apply Private_NZDiv.div_small; only 1: now nzsimpl).	5.88444304466	9076
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.254990100861	240
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0122799873352	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0119640827179	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.1.0.0.4.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.67195415497	5104
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.1.1.0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: now try split).	1.60360312462	1148
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0696461200714	42
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.281138896942	56
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0580611228943	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: order).	0.0535390377045	18
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0348310470581	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0660390853882	19
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0167210102081	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.2.1.2.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.293864011765	53
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0234651565552	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	5.69422101974	5293
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	1.1.4.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.579751014709	321
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.1.2.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.963448047638	568
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.1.2.2	search with cache (only 1: intuition; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: order).	0.885462999344	176
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.2.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	5.69235706329	1757
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.303669929504	52
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.728224992752	152
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.356508970261	72
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.331238031387	77
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.0.0.2.1.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite (div_mod a n)  at 1 by order; only 1: symmetry; only 1: rewrite (div_mod a n)  at 1 by order; only 1: now rewrite mul_comm; only 1: order; only 1: order).	2.92467689514	1208
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.1.1.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.57213807106	257
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.02969789505	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	4.0.0.8	search with cache (only 1: intro H; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now nzsimpl).	12.99168396	2462
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.039920091629	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.1.13.1.0	search with cache (only 1: intros n m p; only 1: rewrite 2!(add_comm n); only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	35.0369198322	9713
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.2.2.2.0.0	search with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.958405971527	439
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0437970161438	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.1.2.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.274827957153	34
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite 2!(add_comm n); only 1: now rewrite opp_involutive).	1.39639520645	90
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.151548862457	21
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.6.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0682878494263	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0319411754608	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	3.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.230801105499	37
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	9.3.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	1.66975903511	584
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0442810058594	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0525379180908	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.203496932983	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.22128200531	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0863168239594	43
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0675599575043	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0247251987457	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0255010128021	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.0.0.3.2	search with cache (only 1: intros; only 1: apply div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).	0.780812978745	307
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.188019990921	56
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.167374849319	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: split; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	34.0433840752	22895
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	1.0.1.1.0.21	search with cache (only 1: unfold not; only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	5.79911208153	7350
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	1.0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: rewrite add_cancel_l; only 1: tauto).	0.10188293457	21
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0289669036865	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.2.2.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.0281789302826	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.040561914444	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	7.50945186615	5696
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.1.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0986399650574	23
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.1.2.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.45856285095	478
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.1.23.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	25.1283409595	16545
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	1.53910899162	341
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.20318198204	169
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.3.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	1.66148304939	250
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.3.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.784368991852	50
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.1.1.1.3.2.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	4.23775792122	1344
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0494029521942	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	26	search with cache (only 1: parity_binop).	19.1824300289	19408
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.14.2	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	3.62136316299	6175
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	0.4.2.2.0.6.4	search with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro n; only 1: intuition; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r; only 1: false_hyp H neq_succ_0).	7.72305297852	5584
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0180509090424	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.0.0.4.2	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.290689945221	111
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.0.0.0.0.0.0.3.0.4	search with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	2.76723313332	2643
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	5.5.3.12	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).	8.18618011475	12657
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.0.0	search with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0344169139862	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.1.1.0.0.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0648519992828	42
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.10.9.2.0.4.2.2	search with cache (only 1: induct ltac:(n); only 1: intro; only 1: rewrite pred_0; only 1: trivial; only 1: intros n IH m H; only 1: apply le_succ_l in H; only 1: rewrite pred_succ; only 1: order).	36.56183815	70299
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	1.1.5.0.0.1.0.10	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intro H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	18.1117448807	25344
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.1.0.3.1.1	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	1.05159020424	1023
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.3.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto).	0.150108098984	55
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.0230951309204	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0250351428986	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.1.3.3	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply le_0_l).	0.395220994949	237
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.5.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.250037908554	66
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.010274887085	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.01069688797	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.14.0.0.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: order'; only 1: nzsimpl; only 1: order').	2.52971506119	4679
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.8.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.431087017059	599
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00888299942017	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00932288169861	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.0469441413879	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.030054807663	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0866420269012	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.0314879417419	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.3.2.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.742544174194	489
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0732769966125	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	0.0.1.0.1.0.0.8.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.659776926041	1056
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	7.0.0.0.1.2.0.0.0.1.0.0.4	search with cache (only 1: destruct 1; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply div_pos; only 1: apply le_0_l; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply le_0_l).	12.3025097847	17870
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.1.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.281265974045	114
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	2.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.489238977432	198
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.1.1.1	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0677680969238	32
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.1.1.0.0.1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.56325292587	757
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.12380504608	436
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	7.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	1.28563714027	632
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.4.0.9	search with cache (only 1: intro H; only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.929287195206	1265
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0204749107361	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.3.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.107256889343	122
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.14.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.17932009697	958
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	3.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0204300880432	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.3.5.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.751885175705	560
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.0496609210968	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.13.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	5.21936583519	5796
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.0.1.0.0.0.3.0.0.5.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: intro H1; only 1: now apply H; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	6.46709895134	8457
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0438280105591	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.0.0.0.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.455877065659	44
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	4.2.19.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	8.79390311241	3057
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	1.62.7	search with cache (only 1: intro y; only 1: compute in *; only 1: now rewrite recursion_0).	22.5568561554	29393
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	1.0.2.1.3	search with cache (only 1: intros x y z; only 1: intro H; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: auto).	0.695853948593	379
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.1.2.0.0.0.2.1.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	1.56872701645	1697
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	3.2.0	search with cache (only 1: intros x x' EQ; only 1: symmetry; only 1: now f_equiv).	0.0468230247498	39
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.358638048172	175
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0155580043793	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.2.0.0.1.50	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').	6.24187493324	9665
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.2.5.11.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	14.2183289528	2201
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.1.1.1.0.1.13.2	search with cache (only 1: intros a; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: simpl; only 1: now rewrite ?Ha; only 1: order'; only 1: order_nz).	2.24760603905	2363
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.1	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.188817024231	109
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.00946998596191	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	21.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: now f_equiv).	12.9203028679	9050
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.8.4	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).	0.693448066711	380
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.10.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.727704048157	327
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.3.1.0.9	search with cache (only 1: intros a; only 1: pattern a; only 1: intro; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	1.7243719101	2340
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0381360054016	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.141772985458	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.044046163559	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0154929161072	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	5.1.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).	0.0906431674957	79
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0157029628754	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.0181069374084	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	7.0.2	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.876943826675	347
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	10.10.0	search with cache (only 1: intros; only 1: bitwise; only 1: split).	2.17988204956	2440
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	8.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.346813201904	74
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.238702058792	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.016086101532	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0158720016479	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	28.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	7.89236688614	7039
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.0.11	search with cache (only 1: compute; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	0.917840003967	455
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.1.0.0.0.0.0.0.2.2.1	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: now rewrite ?Ha; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	8.82119703293	6360
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.0.9	search with cache (only 1: compute; only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	1.30489301682	506
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.2.1.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0168170928955	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.57198905945	1048
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.100753068924	118
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.0.0.1.0.0.0.0	search with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply le_0_l; only 1: apply le_0_l; only 1: now nzsimpl).	0.0535788536072	9
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	0.0.0.0.0.0.0.0.0.0.4.11.2.3.1	search with cache (only 1: intros; only 1: destruct (lt_ge_cases a 0) as [Ha| Ha]; only 1: destruct (le_gt_cases a 0) as [H| H]; only 1: rewrite (sqrt_neg _ Ha); only 1: apply le_0_l; only 1: setoid_replace a with 0 by order; only 1: now rewrite Private_NZSqrt.sqrt_0; only 1: destruct (le_gt_cases a 0) as [H| H]; only 1: setoid_replace a with 0 by order; only 1: now rewrite Private_NZSqrt.sqrt_0; only 1: destruct (le_gt_cases a 1) as [H'| H']; only 1: rewrite <- le_succ_l, <- one_succ in H; only 1: setoid_replace a with 1 by order; only 1: now rewrite Private_NZSqrt.sqrt_1; only 1: now apply lt_le_incl, Private_NZSqrt.sqrt_lt_lin).	16.2315621376	10599
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.0.1.0.13	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	16.2106609344	17624
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	1.2.0.0.3.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	2.79535698891	690
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.2.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0279929637909	9
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.978997945786	307
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	6.1.0.5.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: order; only 1: apply le_0_l).	5.43265891075	3318
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.1.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: intuition; only 1: apply le_0_l).	0.933616161346	46
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0365071296692	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.0.21.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	3.67899489403	1409
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	6.96949291229	1164
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.13.3.2.0	search with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	2.12036395073	2904
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.2.0.10.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	2.60087680817	1167
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.0.0.4.3	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	1.98536109924	403
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.0.1.0.0.3.0.0.0.5.0.0.3.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order; only 1: order; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: apply neq_0_lt_0; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	20.7002160549	19971
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.3.0.0.4.1.2	search with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.867459058762	682
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.0.0.1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).	5.78451490402	3314
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.0.0.3.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.58631896973	1357
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.1.0.0.1.0.0.0.0.0.10.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	28.5911769867	11953
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.1.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	6.44981622696	1807
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.3.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	3.78321790695	1577
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: firstorder).	0.0446860790253	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	4.2.1	search with cache (only 1: intro n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.23392701149	29
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0422391891479	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.0527999401093	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0527667999268	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.0519800186157	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.4.0.1.1.13	search with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial).	3.61028409004	4081
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.1.5.12	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: now nzsimpl; only 1: now nzsimpl).	1.62071895599	808
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.2.0.0.3.14.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: rewrite <- le_succ_l, <- one_succ, <- sqrt_1; only 1: pose proof (lt_succ_pred 0 a Ha) as EQ; only 1: reflexivity; only 1: order).	16.7894730568	10793
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.18.0	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: now nzsimpl).	2.52464294434	1374
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.3366959095	303
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.1.0.0.0.0.0	search with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl').	0.0206820964813	8
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.329342126846	175
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order).	0.0112679004669	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0471971035004	74
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.7.0.0.3.1.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order'; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	22.5206861496	33845
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.2.0.0.16.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: order; only 1: apply mod_small; only 1: auto).	3.75670599937	5844
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.07856798172	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0784261226654	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0175731182098	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.2.0.2.3.2	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.643545866013	379
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0881209373474	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.3.5.0.1.4	search with cache (only 1: intros n1 n2 H; only 1: intro n; only 1: nzinduct n; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.55764389038	2563
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0858409404755	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0278260707855	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	6.2.2	search with cache (only 1: intro H; only 1: apply lt_eq_cases; only 1: firstorder).	0.0903429985046	170
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.5.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.13338303566	167
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: firstorder).	0.141543149948	20
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.25.12.0.28.29	search with cache (only 1: split; only 1: intro A; only 1: intros H; only 1: false_hyp H lt_irrefl; only 1: intros n m p; only 1: nzinduct p m; only 1: intros _ H; only 1: false_hyp H lt_irrefl; only 1: intro p; only 1: rewrite 2!lt_succ_r; only 1: split; only 1: intros H H1 H2; only 1: apply lt_le_incl; only 1: le_elim H2; only 1: now apply H; only 1: now rewrite H2 in H1; only 1: intros H H1 H2; only 1: assert (H3 : n <= p) by auto using lt_le_incl; only 1: le_elim H3; only 1: assumption; only 1: rewrite <- H3 in H2; only 1: elim (lt_asymm n m); only 1: auto; only 1: auto).	22.9697868824	35364
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.17.0.9.1	search with cache (only 1: split; only 1: intros x; only 1: apply le_refl; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	9.79983997345	16346
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0101840496063	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: tauto).	0.0120749473572	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0126171112061	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.014533996582	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	2.2.0	search with cache (only 1: intros x y z; only 1: intro H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0133879184723	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	4.2.0	search with cache (only 1: intros x y z; only 1: intro H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0152039527893	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	6.7.0.0.0.1	search with cache (only 1: intros n m p; only 1: nzinduct p m; only 1: intros _ H; only 1: false_hyp H lt_irrefl; only 1: simpl_relation; only 1: intuition order).	12.2729401588	7318
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	18	search with cache (only 1: order).	0.900677919388	2858
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.5.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).	0.229538917542	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.7.8.5	search with cache (only 1: intros n1 n2 H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	4.03007006645	5008
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.5.8.6	search with cache (only 1: intros n1 n2 H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	4.73234987259	5795
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	1.3.3.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: tauto).	0.393780946732	173
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.8.1.0	search with cache (only 1: intros n m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite <- le_succ_l; only 1: intuition).	1.08636689186	702
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.0.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0126719474792	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.28.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.364808082581	967
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.3.0.2	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.0149261951447	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.2.1	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.175612926483	85
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.2.1.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: rewrite lt_eq_cases; only 1: intuition).	1.94528698921	1344
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	6.3.8.1.1.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	27.2262780666	13426
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.13.0.1	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	4.65391087532	4287
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	2.2.16.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	8.93383598328	7601
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1	search with cache (only 1: intuition order).	0.215201854706	100
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.00868201255798	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0117299556732	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.5.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.175979137421	79
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0084240436554	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.013876914978	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	2.1.0.0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: left; only 1: apply lt_eq_cases; only 1: now left; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.658061981201	480
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.491313934326	194
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.3.2.0.0.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.73067903519	1628
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	24.1	search with cache (only 1: intros RS' n; only 1: order).	7.77582406998	2905
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	0.3	search with cache (only 1: intros L R n; only 1: firstorder).	0.0348138809204	49
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	1.1.2.1	search with cache (only 1: intro n; only 1: compute; only 1: intro y0; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.140779972076	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	1.1.3.3	search with cache (only 1: intro n; only 1: compute; only 1: intro y0; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.49938082695	166
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	7.36	search with cache (only 1: unfold not; only 1: firstorder).	5.86076998711	23250
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	5	search with cache (only 1: reflexivity || destruct H).	0.0098659992218	6
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	9	search with cache (only 1: solve_proper).	0.0156199932098	29
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	1.15.0.0.0.0.0	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: simpl; only 1: now rewrite PeanoNat.Nat.pred_succ).	12.9884698391	11663
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.21	search with cache (only 1: fix le_div2 1; only 1: now unfold ofnat).	0.455159187317	948
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.2.0.3	search with cache (only 1: induction n; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	0.509115934372	315
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	0.0.16.5.4.16.1	search with cache (only 1: intros n H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: nzsimpl; only 1: order; only 1: assumption).	39.6681308746	30208
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0314450263977	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0376389026642	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.1.1.6.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	1.52948784828	694
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0497009754181	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0271120071411	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.2.1.0.3.2.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: intuition; only 1: trivial using gcd_divide_r).	2.57732105255	1475
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.1.0.4.4	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.305619955063	132
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.232491016388	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: intuition).	3.67718315125	1015
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.12.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.534162044525	229
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	2.1.2.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	0.912106990814	238
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.1.1.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0525681972504	21
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.297888994217	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.219741106033	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0606849193573	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0812249183655	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.2	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.157739877701	16
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	4.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.107774972916	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.108192920685	5
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0623519420624	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.6.1.8.1.7	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: now nzsimpl'; only 1: apply pow_gt_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_succ_diag_r).	3.35025596619	1433
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	4.0.1.0.0.20.33	search with cache (only 1: rewrite two_succ; only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl').	14.2438409328	19088
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.1.9.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.07671618462	593
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.5.0.0.0.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.539551019669	238
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.0.0.0.0.5.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: intros H; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	6.35803198814	1193
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	2.8	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.117291927338	66
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0	search with cache (only 1: intros; only 1: firstorder).	0.0124218463898	2
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0140421390533	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.22.28	search with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	21.1579837799	97623
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.19.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	1.96979117393	2220
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.2.0.10.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: generalize (lt_trans n m p); only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	32.0577070713	11306
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.0.10.0.0	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	6.82492899895	3908
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0563600063324	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	3.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.402786970139	21
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.2.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: order; only 1: order).	0.0244040489197	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	17.0	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	1.35187101364	782
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.2.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0246069431305	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0	search with cache (only 1: reflexivity).	0.00976204872131	1
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	1	search with cache (only 1: now symmetry).	0.0258128643036	11
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0110280513763	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.2.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.0627310276031	49
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.7.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0363540649414	16
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).	0.0211548805237	4
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.2	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.0446639060974	6
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	28.4.5.2.6.5.16	search with cache (only 1: split; only 1: repeat red; only 1: intuition; only 1: repeat red; only 1: auto with *; only 1: repeat red; only 1: apply Logic.eq_trans).	36.3373990059	65658
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.0.0.0.2	search with cache (only 1: split; only 1: auto; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto).	0.254878997803	107
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.0380959510803	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0349380970001	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.050372838974	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0480298995972	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0607459545135	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	3	search with cache (only 1: order).	0.038008928299	4
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0427358150482	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0928180217743	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.034441947937	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0304889678955	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0391669273376	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0450220108032	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0435471534729	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0300939083099	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.30721211433	429
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.780478000641	298
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	0.0.3.0.0.3.0.12.0	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: right; only 1: intro H; only 1: order; only 1: right; only 1: intro H; only 1: order).	8.86425185204	7285
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.8.4	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.476287126541	336
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	2.0.0.0.0.0.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.0667998790741	10
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	0.0.6.1.2.0.5	search with cache (only 1: induction l as [| a tail]; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	4.767827034	2104
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	9.3.0.5	search with cache (only 1: induction l as [| a tail]; only 1: constructor; only 1: intros x y H; only 1: now rewrite H).	3.94808197021	2022
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.0.7	search with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.135277032852	67
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	2.0.6	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: firstorder).	0.0964469909668	28
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2	search with cache (only 1: induction 1; only 1: auto).	0.049595117569	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: auto).	0.0340349674225	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0635221004486	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	2.5	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0629241466522	9
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0509572029114	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	3.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with *).	0.0520820617676	5
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	1.2.0	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: intuition).	0.0734510421753	6
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	4.13.10.14.11	search with cache (only 1: intro; only 1: unfold eqk, eqke; only 1: intros (EQ, LE); only 1: intro y; only 1: order).	22.9658298492	41384
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0783278942108	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0746450424194	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	1.1.6.2.1	search with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intros; only 1: intuition; only 1: order).	1.43629908562	711
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	0.4.1.2.2	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: red; only 1: eauto with ordered_type).	0.222343921661	152
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.1.1	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0894339084625	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	3.8.8.4.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intro; only 1: intro; only 1: order).	22.7344329357	17791
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0625948905945	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0477380752563	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0612940788269	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.0.9.1.7	search with cache (only 1: induction 1; only 1: compute; only 1: destruct H; only 1: auto; only 1: auto).	2.60709214211	1392
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	1.2.4.0.4	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	1.18511104584	424
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.3.3.0.4	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	1.5355989933	441
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.2.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0714149475098	12
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.2.2.4	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.668435096741	165
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0613231658936	17
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.1.0.0.0.0.0.0.0.0.0.2.2.0.0.4.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: rewrite EQ; only 1: intro H; only 1: contradict ltac:(H); only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	38.9320049286	28638
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: easy).	21.7917771339	9150
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.1.0.0.0.0.0.1.2.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	6.31962585449	3315
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.2.1.0.0.0.1.3.1.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	9.70612001419	5136
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.1	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0886449813843	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	2.5.3.5.13	search with cache (only 1: repeat split; only 1: intro H; only 1: iorder; only 1: intro H; only 1: iorder).	0.618561983109	875
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	10.3.0	search with cache (only 1: red; only 1: intro H; only 1: iorder).	1.4144859314	2657
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.10	search with cache (only 1: compute; only 1: iorder).	0.478847026825	195
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0222680568695	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.0873699188232	7
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	4	search with cache (only 1: iorder).	0.17317199707	82
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	8.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.19731092453	53
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.2.0	search with cache (only 1: rewrite compare_lt_iff; only 1: rewrite le_not_gt_iff; only 1: intuition).	0.203986167908	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	11.0	search with cache (only 1: intro H; only 1: order).	0.160793066025	122
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0223231315613	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0209789276123	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	3	search with cache (only 1: order).	2.0334777832	11
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	5.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	2.78206300735	7
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	1	search with cache (only 1: order).	1.01385188103	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0179288387299	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0138080120087	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	8.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0397670269012	25
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0148079395294	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	4.1	search with cache (only 1: intro H; only 1: order).	0.0388901233673	26
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.0234551429749	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	1	search with cache (only 1: order).	0.0157201290131	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.4	search with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0821528434753	30
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.0229229927063	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0119869709015	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0113101005554	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.0109069347382	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.1	search with cache (only 1: unfold lt; only 1: auto with *).	0.0544588565826	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0312879085541	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.1	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0328028202057	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0372071266174	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.044713973999	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	1.1.6.0.7.6	search with cache (only 1: symmetry; only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	3.21658587456	1858
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	2.0.21.0.11	search with cache (only 1: case ltb_spec0; only 1: symmetry; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	32.7954339981	23153
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.0.21.9	search with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	1.93855714798	1335
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.2	search with cache (only 1: firstorder; only 1: subst; only 1: auto).	0.0839021205902	6
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.0.0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.708545207977	153
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.9.2.1.0.7	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity ltac:(y); only 1: auto; only 1: auto).	4.14396095276	3700
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.16.0.8	search with cache (only 1: destruct l; only 1: constructor; only 1: intros x y H; only 1: now rewrite H).	6.68775606155	5988
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: intuition).	0.122698068619	9
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	1.1.9	search with cache (only 1: simple induction l; only 1: firstorder; only 1: firstorder).	0.221414804459	83
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	16	search with cache (only 1: eauto with *).	1.853536129	542
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2	search with cache (only 1: firstorder).	0.065710067749	3
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.113490819931	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	1	search with cache (only 1: now intros <-).	0.133405923843	2
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40	1.1.0.0.0.3.2.3.7	search with cache (only 1: inversion 1; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: subst; only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	2.0812599659	1557
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.0286500453949	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0266308784485	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0264520645142	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0285739898682	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	2	search with cache (only 1: firstorder).	0.0297310352325	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: auto).	0.0264670848846	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: auto).	0.0259289741516	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	search with cache (only 1: auto).	0.0263869762421	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.7	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.0601599216461	18
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	1.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0463261604309	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.32.1.13	search with cache (only 1: intro H; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	7.97280311584	13197
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.6.2.1	search with cache (only 1: split; only 1: firstorder; only 1: inversion_clear H; only 1: inversion 1).	0.854838132858	366
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	21.3	search with cache (only 1: intros H; only 1: now rewrite H).	1.73444104195	1660
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0383331775665	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.17	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).	1.18202710152	559
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	59	search with cache (only 1: abstract now inversion 1).	33.4763650894	39695
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.4.4	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.274314165115	101
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.3	search with cache (only 1: induction 1; only 1: auto).	0.0582869052887	5
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1	search with cache (only 1: auto).	0.0279760360718	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0289781093597	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0317361354828	4
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0426249504089	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	3.13	search with cache (only 1: intros; only 1: eauto).	0.63147187233	337
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	2.1.1.7.5	search with cache (only 1: unfold eqk, eqke; only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	0.451229810715	366
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	2.1.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.138966798782	11
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.5.7.3	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: firstorder; only 1: auto).	0.994379997253	620
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.3.11.9.3.4	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: compute; only 1: induction H0; only 1: eauto; only 1: auto).	4.52574300766	4760
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.4.2	search with cache (only 1: inversion 1; only 1: tauto; only 1: auto).	0.0942380428314	13
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.3.1.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0595300197601	9
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	11	search with cache (only 1: intuition).	0.0990660190582	34
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	2.1	search with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0951550006866	5
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.2.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	7.9209651947	2635
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.1.0.0.3.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.224839925766	359
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	6.41290998459	2387
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0178239345551	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2	search with cache (only 1: solve_max).	0.0388448238373	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0590059757233	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.6.5.0.0.0.1.3.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	27.2635989189	7678
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0695731639862	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	7	search with cache (only 1: solve_max).	0.048712015152	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0236058235168	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	1	search with cache (only 1: solve_max).	0.0242841243744	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.5.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0914189815521	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0449290275574	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order; only 1: order; only 1: order || (right; order) || (left; order)).	0.082123041153	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0591881275177	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.11	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.329488039017	61
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.4	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	6.80529093742	5716
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.0407481193542	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	2	search with cache (only 1: solve_min).	0.083683013916	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.047975063324	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.0.0.1.0.0.2.0.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: destruct (lt_total n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	4.15477108955	1459
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.0.0.0.2.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	9.0558359623	3956
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.0.0.0.0.0.0.0.5	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	15.699999094	2221
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	7	search with cache (only 1: solve_min).	0.0244810581207	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0210268497467	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	2	search with cache (only 1: solve_min).	0.0400362014771	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.1.0.0.1.0.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: solve_min; only 1: solve_min).	0.065642118454	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.037290096283	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2	search with cache (only 1: solve_min).	0.300127983093	44
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0327868461609	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.4.0	search with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.0992481708527	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.10	search with cache (only 1: apply max_l; only 1: solve_min).	0.196760892868	57
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.2	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.042023897171	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.2.0.1.0.0.0.2.0.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.55498790741	1723
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.1.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.56227397919	1461
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	1.0.7.6	search with cache (only 1: Bool.destr_bool; only 1: apply max_mono; only 1: eauto with *; only 1: tauto).	0.270594120026	230
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.4.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.0411360263824	9
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0306010246277	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.3	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0212202072144	7
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0293807983398	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.4	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0456919670105	8
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.3.5.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	1.89793682098	104
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	3.0.2	search with cache (only 1: unfold eq, lt; only 1: intros; only 1: decide equality).	0.09339594841	8
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.14	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.150402069092	130
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: trivial).	0.0297191143036	8
Coq.ZArith.BinInt.Z.pos_sub_lt	40	1.23	search with cache (only 1: fix le_div2 1; only 1: auto).	19.6037881374	12897
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	5	search with cache (only 1: now destruct n).	0.274482965469	6
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	16	search with cache (only 1: now destruct n).	0.0793299674988	108
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2	search with cache (only 1: now destruct n).	0.183823108673	3
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.17	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.458092927933	256
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.0124230384827	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0124769210815	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0151369571686	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0	search with cache (only 1: now f_equal).	0.0123410224915	1
Coq.ZArith.BinInt.Z.opp_succ	40	0.1.0.0.3.0.0.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	2.04527902603	938
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0168509483337	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.014848947525	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0145089626312	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0134229660034	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0123121738434	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.3.1.0.0.4	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: intuition; only 1: trivial).	0.838586091995	281
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.3	search with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	0.360423088074	81
Coq.ZArith.BinInt.Z.peano_ind	40	3.32.4.3	search with cache (only 1: intro n; only 1: intros Base Step; only 1: fix le_div2 1; only 1: trivial).	13.4914889336	23893
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	4.4	search with cache (only 1: intro H; only 1: now destruct n).	0.0721790790558	30
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0351450443268	5
Coq.ZArith.BinInt.Z.sgn_null	40	6.0	search with cache (only 1: intro H; only 1: now destruct n).	0.0216639041901	8
Coq.ZArith.BinInt.Z.sgn_pos	40	0.1.0.0.1	search with cache (only 1: destruct n; only 1: now f_equal; only 1: trivial; only 1: intros H; only 1: destr_eq H).	0.0700490474701	16
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0182769298553	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now subst).	0.0136318206787	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.0.3.0.1.10	search with cache (only 1: destruct m as [| m| m]; only 1: now subst; only 1: intro H; only 1: now f_equiv; only 1: intro H; only 1: auto).	1.65067315102	415
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0135657787323	1
Coq.ZArith.BinInt.Z.square_spec	40	1.0.0.1.0.0.0.0	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.0559549331665	19
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	1.0.0.0.0.0.0.1.0.3.2.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: intro n; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: subst; only 1: now split; only 1: simpl; only 1: subst; only 1: now split; only 1: simpl; only 1: now f_equal).	12.5063359737	7965
Coq.ZArith.BinInt.Z.sqrt_spec	40	3.0.0.0.2.0.0.0.2.1.3	search with cache (only 1: simpl; only 1: destruct n; only 1: now f_equal; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: now f_equal).	29.495319128	12702
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0177230834961	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0190169811249	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.0135819911957	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	5	search with cache (only 1: now destruct n).	2.18872714043	258
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0158569812775	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	0.34	search with cache (only 1: fix le_div2 1; only 1: intuition).	30.3910679817	19803
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	1.0.1.0.0.0.1	search with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.453728914261	87
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0395300388336	7
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.1.0.0.1.2	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).	0.444234132767	101
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.0.1.0.0.0.0.0.0.0.0.4	search with cache (only 1: intro H; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit).	31.5208668709	19484
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0417408943176	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0152690410614	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	4	search with cache (only 1: now destruct n).	0.0165040493011	5
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0191311836243	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a).	0.0151870250702	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0136620998383	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.7.1.7	search with cache (only 1: destruct b as [| b| b]; only 1: easy; only 1: easy; only 1: auto).	2.01271104813	983
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: reflexivity).	0.0181510448456	12
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0221240520477	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.2	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0145981311798	4
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	2.7.8	search with cache (only 1: apply Fix_F_inv; only 1: split; only 1: trivial).	0.51598906517	636
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	4.5.19.22	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	2.0435898304	15848
Coq.Program.Equality.JMeq_eq_refl	40	2	search with cache (only 1: apply UIP_refl).	0.00883913040161	3
Coq.Program.Equality.UIP_refl_refl	40	2	search with cache (only 1: apply UIP).	0.00905203819275	3
Coq.Program.Equality.inj_pairT2_refl	40	5	search with cache (only 1: apply UIP_refl).	0.0101420879364	6
Coq.Program.Equality.solution_left	40	2.3.11	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.055655002594	249
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00941705703735	3
Coq.Program.Equality.deletion	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.00815796852112	2
Coq.Program.Equality.simplification_heq	40	7.6.6	search with cache (only 1: intros; only 1: subst; only 1: auto).	0.109594106674	421
Coq.Program.Equality.simplification_existT2	40	1.1.1.13.4	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.317888021469	1139
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	2.4.2	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0230319499969	72
Coq.Program.Combinators.compose_id_left	40	0.0	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00452589988708	2
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00508880615234	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00476694107056	2
Coq.Program.Combinators.flip_flip	40	2.0	search with cache (only 1: intros; only 1: reflexivity).	0.00603914260864	4
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00521922111511	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.1.1.0.0.1.9.2.0.1	search with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: firstorder  (subst; auto); only 1: constructor; only 1: simpl; only 1: firstorder; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	3.12234997749	5240
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40	1.0.0.0.7.3.0.10.4	search with cache (only 1: intros m n; only 1: induction n in m |- *; only 1: simpl; only 1: auto with arith; only 1: destruct m; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	20.0647420883	19949
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	2.2.4	search with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: now constructor).	0.0318720340729	33
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.1.5	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0188999176025	10
Coq.Sorting.Permutation.Permutation_cons	40	1.2.2	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.0174870491028	8
Coq.Sorting.Permutation.Permutation_in	40	0.3.0.0.0.2.1.0.0.4.1	search with cache (only 1: intros l l' Hperm; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto; only 1: simpl; only 1: firstorder; only 1: auto).	8.52259397507	7138
Coq.Sorting.Permutation.Permutation_in'	40	3.0.0.1.0.0.0.12.2.3	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: tauto).	19.107407093	17612
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0	search with cache (only 1: auto).	0.0156118869781	1
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.54648780823	360
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	1.2.0.2.0	search with cache (only 1: intro; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: apply Add_app).	0.0290341377258	10
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Sorted.HdRel_inv	40	0.6	search with cache (only 1: inversion 1; only 1: auto).	0.120697975159	33
Coq.Sorting.Sorted.Sorted_inv	40	0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.086109161377	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	1.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0427398681641	5
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0883250236511	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.3.0.0.3.6	search with cache (only 1: intro H; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	7.1361219883	3475
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Init.Wf.Acc_inv	40	0.11.5	search with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.0603799819946	385
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0288228988647	12
Coq.Init.Wf.well_founded_ind	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0282161235809	12
Coq.Init.Wf.Fix_F_eq	40	0.13	search with cache (only 1: intros f [x]; only 1: auto).	0.0346510410309	75
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	4.1.16.13.10.10.8.15	search with cache (only 1: intro; only 1: intro H; only 1: intro z; only 1: intros; only 1: reflexivity || destruct H; only 1: auto; only 1: apply False_rec; only 1: auto).	2.17383694649	39815
Coq.Init.Tactics.decide_right	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00604295730591	4
Coq.Init.Peano.pred_Sn	40	3	search with cache (only 1: reflexivity).	0.00724196434021	4
Coq.Init.Peano.not_eq_S	40	5.0	search with cache (only 1: intro H; only 1: auto).	0.0104460716248	7
Coq.Init.Peano.O_S	40	0	search with cache (only 1: discriminate).	0.00885105133057	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.5.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0214350223541	44
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0106551647186	6
Coq.Init.Peano.plus_n_Sm	40	2.0.1.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0129950046539	9
Coq.Init.Peano.plus_Sn_m	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0117437839508	7
Coq.Init.Peano.mult_n_O	40	1.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0100741386414	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.2.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00684905052185	8
Coq.Init.Peano.le_n_S	40	2.1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: auto).	0.00928902626038	12
Coq.Init.Peano.nat_case	40	2.1.2.2	search with cache (only 1: induction n; only 1: intros; only 1: assumption; only 1: trivial).	0.0190620422363	41
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.0.0.5.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.31114006042	10881
Coq.Init.Peano.min_l	40	0.0.1.0.2.0.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.41575193405	7071
Coq.Init.Peano.min_r	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.953117847443	2463
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	2.0.3.1.2.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.912706136703	2113
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0131409168243	4
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00884914398193	3
Coq.Init.Datatypes.surjective_pairing	40	1.4	search with cache (only 1: intros A B []; only 1: trivial).	0.00973987579346	7
Coq.Init.Datatypes.injective_projections	40	0.11.7.7.6.3	search with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	1.14757490158	5957
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0147790908813	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.2	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.010265827179	7
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	5.17682409286	29875
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0028121471405	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0172100067139	137
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0586919784546	607
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40
Coq.Init.Logic.not_iff_compat	40	6.5.1.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0450608730316	489
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.0.3.0.0.0.0.2.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: assumption; only 1: apply Hr; only 1: assumption).	25.3587870598	204732
Coq.Init.Logic.and_comm	40	1.0.0.0.0.1.0.0.1.1	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).	0.0430061817169	344
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40	0.1.0.0.0.0.0.1.0.0.1.0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: split; only 1: intros [Hl Hr]; only 1: split; only 1: intros; only 1: destruct Hl; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fl; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct Hr; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fr; only 1: assumption; only 1: assumption; only 1: intros [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	4.18877100945	50708
Coq.Init.Logic.or_comm	40	0.0.0.2.1.0.0.0.6.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.611027956009	4552
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.00470685958862	3
Coq.Init.Logic.iff_to_and	40	2.2.1.3	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.0173780918121	81
Coq.Init.Logic.inst	40	5	search with cache (only 1: trivial).	0.00528907775879	6
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00547003746033	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00690007209778	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00621795654297	2
Coq.Init.Logic.f_equal	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00645184516907	4
Coq.Init.Logic.not_eq_sym	40	0.8.3	search with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	0.0415439605713	217
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00648593902588	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0066089630127	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00664782524109	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40	0.6	search with cache (only 1: destruct H; only 1: auto).	0.0119259357452	13
Coq.Init.Logic.rew_opp_l	40	0.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00927400588989	5
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0110700130463	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.013386964798	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0151691436768	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00933384895325	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00957989692688	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00953912734985	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00998711585999	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00996899604797	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2.5	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0160269737244	16
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0114588737488	4
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0113379955292	2
Coq.Init.Logic.rew_swap	40	0.2.2.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0177080631256	21
Coq.Init.Logic.rew_compose	40	4.2.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.012167930603	9
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.00936508178711	3
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.0127029418945	12
Coq.Init.Logic.eq_trans_sym_distr	40	0.10.4	search with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.123440980911	365
Coq.Init.Logic.eq_trans_rew_distr	40	0.3	search with cache (only 1: destruct e'; only 1: reflexivity).	0.012442111969	11
Coq.Init.Logic.rew_const	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00985503196716	3
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.2.3.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: assumption).	0.0107221603394	10
Coq.Init.Logic.inhabited_covariant	40	1.0.7	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0141530036926	35
Coq.Init.Logic.eq_stepl	40	0.0.7	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0113301277161	10
Coq.Init.Logic.iff_stepl	40	13.12.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.840910196304	9110
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.1.3.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: destruct H; only 1: reflexivity).	0.0181660652161	9
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0172529220581	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0144009590149	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0142569541931	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0149140357971	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.1	search with cache (only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0224661827087	14
Coq.Init.Logic_Type.identity_ind_r	40	0.14.14	search with cache (only 1: intros P b H H0; only 1: destruct 1; only 1: auto).	0.337585926056	1387
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0206089019775	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0214149951935	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00741696357727	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00826597213745	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00872111320496	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.9.6.6	search with cache (only 1: intro H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto).	0.153525829315	831
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00988793373108	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00603890419006	4
Coq.Init.Specif.eq_existT_curried_map	40	0.6	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.023885011673	21
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00746893882751	2
Coq.Init.Specif.eq_exist_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00711107254028	5
Coq.Init.Specif.eq_sig_uncurried	40	0.1.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0132348537445	8
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	4.12.4.0.0.4.1.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: reflexivity || destruct H; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: exists x; only 1: assumption).	24.2619190216	88924
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00792789459229	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	3.1.0.5.0.0.1.0.1.1	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro H; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried; only 1: auto).	4.07786512375	4839
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0106370449066	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.00882792472839	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.1.2.1.2	search with cache (only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.199429035187	166
Coq.Init.Specif.eq_sig2_uncurried_iff	40	8.5.0.6.0.0.1.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried; only 1: auto).	7.20209813118	9652
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0105998516083	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00426602363586	3
Coq.Classes.CMorphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.00539803504944	1
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00508999824524	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00524115562439	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	5.1.14.10.6.2	search with cache (only 1: unfold relation_equivalence, iffT; only 1: split; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	3.59193205833	13624
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00414514541626	1
Coq.Classes.CMorphisms.subrelation_respectful	40	4	search with cache (only 1: firstorder).	0.00742101669312	5
Coq.Classes.CMorphisms.subrelation_refl	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.005291223526	2
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00525307655334	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	0	search with cache (only 1: simpl_crelation).	0.00795602798462	1
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00974106788635	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.1	search with cache (only 1: reduce; only 1: firstorder).	0.0088369846344	3
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2	search with cache (only 1: firstorder).	0.00706315040588	12
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00494790077209	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00551819801331	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00509095191956	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0148649215698	7
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.110938072205	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	8.98992800713	480
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	5.3.1	search with cache (only 1: transitivity x0; only 1: assumption; only 1: assumption).	9.68450808525	4406
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	3.3.0	search with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	3.85973381996	451
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.1.2.0	search with cache (only 1: transitivity x0; only 1: tauto; only 1: symmetry; only 1: tauto).	1.98526096344	1698
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0493550300598	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.0272970199585	35
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	1.28685712814	353
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00644087791443	3
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	0.6	search with cache (only 1: apply X; only 1: auto).	0.0107309818268	8
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	1	search with cache (only 1: simpl_crelation).	0.00937819480896	2
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	1	search with cache (only 1: firstorder).	0.0058650970459	2
Coq.Classes.CMorphisms.flip_respectful	40	4.0	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0249209403992	6
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.007159948349	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00760006904602	1
Coq.Classes.CMorphisms.eq_subrelation	40	3	search with cache (only 1: simpl_crelation).	0.0145001411438	12
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00560188293457	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00406980514526	1
Coq.Classes.CMorphisms.proper_proper	40	0.0	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0122120380402	2
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.0059380531311	1
Coq.Classes.CMorphisms.flip_atom	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00633192062378	3
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	2.3.2	search with cache (only 1: intros A x P H y H0; only 1: unfold flip; only 1: firstorder).	0.0853579044342	18
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.2.2.17.3	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold respectful, relation_equivalence in *; only 1: intros H ?; only 1: unfold flip; only 1: auto).	15.0878298283	5125
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	6.14	search with cache (only 1: simpl_crelation; only 1: firstorder).	8.69846081734	3282
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.00930404663086	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0122230052948	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	1.0.9	search with cache (only 1: compute; only 1: intros; only 1: firstorder).	0.511165142059	198
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	3	search with cache (only 1: simpl_crelation).	0.0291759967804	4
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.015820980072	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0299160480499	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.602020978928	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.0152859687805	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0293409824371	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.0272870063782	1
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	0	search with cache (only 1: firstorder).	0.0308210849762	1
Coq.Classes.CRelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.108836889267	3
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0388820171356	2
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0495669841766	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0632939338684	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0146799087524	1
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0166599750519	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.0257661342621	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0200698375702	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0188541412354	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	6	search with cache (only 1: firstorder).	0.0181059837341	23
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0167310237885	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0.0.1	search with cache (only 1: hnf; only 1: unfold relation_equivalence, iffT; only 1: firstorder).	0.0458810329437	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.2.1.3	search with cache (only 1: firstorder; only 1: simpl_relation; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.271042108536	152
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0311229228973	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0345928668976	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0476460456848	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.483979940414	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	0.33.11.97	search with cache (only 1: destruct y; only 1: red; only 1: destruct x; only 1: auto).	24.4436590672	29666
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: trivial).	0.0140750408173	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0204539299011	2
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0449299812317	5
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1.1	search with cache (only 1: hnf; only 1: auto).	0.0424201488495	40
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.138104915619	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.045706987381	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0646560192108	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0668089389801	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0150518417358	1
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0158619880676	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.20700097084	39
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0164170265198	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0344879627228	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0266120433807	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0638189315796	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	3.0	search with cache (only 1: hnf; only 1: firstorder).	0.222389936447	29
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0389111042023	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1	search with cache (only 1: reflexivity).	0.00634217262268	2
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00556087493896	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00520420074463	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.3.1.9.9	search with cache (only 1: red; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	0.522897005081	1404
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: trivial).	0.00466799736023	1
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00757193565369	1
Coq.Classes.Morphisms.subrelation_refl	40	2	search with cache (only 1: firstorder).	0.00477600097656	3
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00440812110901	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.0.5.1	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.0273649692535	10
Coq.Classes.Morphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.00473380088806	1
Coq.Classes.Morphisms.forall_subrelation	40	0.1	search with cache (only 1: intros; only 1: firstorder).	0.00813722610474	3
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00493478775024	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00440192222595	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00559687614441	2
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0841300487518	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	3.23283314705	140
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	1.27155208588	767
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	5.6.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: firstorder).	13.1982121468	12147
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	14	search with cache (only 1: firstorder).	17.7072620392	24986
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	3.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0355160236359	16
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.0301439762115	48
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	5.3	search with cache (only 1: symmetry; only 1: firstorder).	1.28810691833	346
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00543999671936	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.00653791427612	6
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.0.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00723505020142	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.0047779083252	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0069739818573	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00498509407043	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00525712966919	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0078718662262	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00467586517334	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00413703918457	1
Coq.Classes.Morphisms.proper_proper	40	0.1.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.117918014526	22
Coq.Classes.Morphisms.proper_normalizes_proper	40	1.2.1.1	search with cache (only 1: reduce in H; only 1: red; only 1: setoid_rewrite H; only 1: apply H0).	0.00832390785217	11
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00567483901978	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1.0	search with cache (only 1: intros; only 1: simpl_relation).	0.0457401275635	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.0.12.6	search with cache (only 1: reduce; only 1: apply H1; only 1: auto; only 1: auto).	6.95992708206	1914
Coq.Classes.Morphisms.proper_sym_impl_iff	40	1.3.1.0.4	search with cache (only 1: simpl_relation; only 1: red in H0; only 1: reduce in H; only 1: apply (symmetry (x:=_)); only 1: firstorder).	1.63526701927	670
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	2	search with cache (only 1: firstorder).	0.0156009197235	3
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0107939243317	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0321269035339	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00985598564148	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	4	search with cache (only 1: firstorder).	0.0134699344635	5
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0208230018616	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.356688976288	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	5	search with cache (only 1: firstorder).	0.0283830165863	14
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0121920108795	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0112221240997	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0111970901489	1
Coq.Classes.RelationPairs.pair_compat	40	0.0.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0182509422302	7
Coq.Classes.RelationPairs.fst_compat	40	1	search with cache (only 1: firstorder).	0.0111570358276	2
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0163519382477	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.5.10	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: auto).	1.62406110764	443
Coq.Classes.DecidableClass.Decidable_sound	40	0.12.5	search with cache (only 1: intros; only 1: apply H; only 1: assumption).	0.11104798317	400
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.SetoidClass.setoid_refl	40	13	search with cache (only 1: intuition).	0.050831079483	60
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0295600891113	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0296790599823	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	4.3.3.24	search with cache (only 1: destruct H; only 1: simpl; only 1: intros; only 1: firstorder).	14.6500279903	8626
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.0.2.20	search with cache (only 1: destruct H; only 1: simpl; only 1: intros; only 1: firstorder).	9.54158401489	6999
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.8	search with cache (only 1: intros a a' Ha n; only 1: firstorder).	0.374527931213	34
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.361886978149	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	4	search with cache (only 1: firstorder).	0.0216829776764	5
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0127282142639	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	6	search with cache (only 1: firstorder).	0.200444936752	23
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.3.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0220310688019	7
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.011234998703	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40	1.17.1	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	7.16751694679	5430
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	2.2.1.0	search with cache (only 1: unfold to_nat; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: trivial).	0.108059883118	9
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	0.0.26	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: trivial).	3.98100113869	4971
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: subst; only 1: trivial).	0.0943570137024	8
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	1.10.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	10.0365138054	3674
Coq.PArith.Pnat.Pos2Nat.inj_ge	40	1.12.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	16.5280799866	4034
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	2.3.5.4.2	search with cache (only 1: intros q; only 1: induction p using peano_ind; only 1: now Nat.nzsimpl'; only 1: rewrite inj_succ; only 1: now rewrite Nat.pred_succ).	3.2937669754	1840
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0497670173645	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	1.2.0.3.0.11	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	2.64576101303	1598
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	4.0.1.2	search with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intro H; only 1: now subst).	0.60679602623	135
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0607490539551	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	5.5.1	search with cache (only 1: intros; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.487572193146	249
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	0	search with cache (only 1: decide equality).	0.102388143539	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.0456488132477	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0769140720367	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0564367771149	10
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: now destruct p).	0.0241179466248	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0966410636902	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0406720638275	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	9.14257478714	1097
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	0.0.1.1.0.0.0.1	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	3.59543991089	1067
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.02254986763	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0509378910065	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.0.0.1.0	search with cache (only 1: revert q; only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	1.13134384155	105
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0323190689087	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: now f_equal).	0.0708811283112	5
Coq.PArith.BinPos.Pos.mul_1_r	40	0.1.0.3.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.09983921051	456
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.0.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.0457279682159	3
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.2944419384	112
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.3.0.0.0.0.0.0.0.0	search with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: destr_eq H; only 1: discriminate; only 1: auto).	5.92545604706	1925
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0553810596466	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: reflexivity).	0.0791609287262	9
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.114642858505	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.1.0.1.4.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	2.63141393661	455
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.168175935745	9
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	2.9.5.0	search with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	4.24382710457	2812
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.1.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.166659116745	8
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.1.5	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.35216498375	169
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.8.9	search with cache (only 1: unfold ge; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	5.82089495659	2008
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.964182853699	95
Coq.PArith.BinPos.Pos.compare_xO_xO	40	3.1	search with cache (only 1: revert q; only 1: trivial).	0.109661102295	34
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.07009100914	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.2.2.6	search with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	0.497848033905	269
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.2	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.048159122467	4
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.3	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy || now destruct 1; only 1: easy'; only 1: easy').	0.0760669708252	8
Coq.PArith.BinPos.Pos.gt_lt_iff	40	3.1	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.810305118561	87
Coq.PArith.BinPos.Pos.gt_lt	40
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0441060066223	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	9.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.912690877914	122
Coq.PArith.BinPos.Pos.ge_le	40	1.1	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0602149963379	4
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0322589874268	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.10.11.3.0	search with cache (only 1: apply lt_eq_cases; only 1: destruct p; only 1: firstorder; only 1: firstorder; only 1: now right).	4.34248495102	2797
Coq.PArith.BinPos.Pos.nlt_1_r	40	1	search with cache (only 1: now destruct p).	0.101389169693	2
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.143843889236	36
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0425770282745	2
Coq.PArith.BinPos.Pos.lt_nle	40	1.3	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.28210091591	144
Coq.PArith.BinPos.Pos.lt_le_incl	40	6.3	search with cache (only 1: revert q; only 1: congruence).	0.219873905182	58
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	2.11.3	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	1.73015594482	238
Coq.PArith.BinPos.Pos.lt_compat	40	11.1	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: now f_equiv).	0.736306905746	165
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.177978038788	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.3.0.1.1.0.0.0.1.0	search with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: apply le_lteq; only 1: now left; only 1: now subst).	11.2052621841	3803
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	10.3.4	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	1.00870609283	315
Coq.PArith.BinPos.Pos.le_partorder	40	1.0.9.2.5	search with cache (only 1: intros H; only 1: simpl; only 1: fix odd_spec 1; only 1: intros n; only 1: auto).	5.09008002281	1508
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	2.8.10	search with cache (only 1: revert p q r; only 1: fix gcd_divide 1; only 1: trivial).	10.998046875	4698
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.1.8	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.882299900055	209
Coq.PArith.BinPos.Pos.add_le_mono_r	40
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.8.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.595364093781	42
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.110368013382	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.0.1.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	1.83353710175	156
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.085342168808	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.3.3.3	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: now exists r).	1.23213505745	603
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.11177110672	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.117158174515	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.2	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.415509939194	96
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.131619930267	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.0.2.0.3.11.0	search with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	18.2267310619	12257
Coq.PArith.BinPos.Pos.max_1_l	40	80	search with cache (only 1: now destruct n).	6.89614605904	14564
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0663280487061	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.096086025238	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0707979202271	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	4.2.3.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros H; only 1: now apply add_le_mono_l).	4.33106994629	507
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.115620136261	5
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0680780410767	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	3.1.0.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros H; only 1: now apply mul_le_mono_l).	0.0648081302643	8
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.6	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.143977880478	10
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.1	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.131016016006	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.118089199066	5
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.0.3.0.0.1	search with cache (only 1: induction p; only 1: firstorder; only 1: simpl; only 1: congruence; only 1: firstorder; only 1: trivial).	0.081157207489	10
Coq.PArith.BinPos.Pos.of_nat_succ	40	14.11.2.0.57	search with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: now f_equal).	6.79905319214	11620
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.1.0.3.1.3.1.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: now elim H; only 1: simpl; only 1: f_equal; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite IHn).	6.53595113754	4178
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	3.5.0.12	search with cache (only 1: simpl; only 1: revert p; only 1: fix gcd_divide 1; only 1: trivial).	17.7496819496	5881
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40	2.5.0.15	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	5.2359919548	3519
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	2.10	search with cache (only 1: fix gcd_divide 1; only 1: now f_equal).	0.778508901596	286
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	0.6.6.9	search with cache (only 1: intros H; only 1: intro n; only 1: fix gcd_divide 1; only 1: auto).	6.16130781174	5070
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	0.40.3	search with cache (only 1: intros H; only 1: fix gcd_divide 1; only 1: auto).	4.38376808167	6477
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40	1.0.3	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: auto).	0.522248983383	51
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.0571930408478	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.49	search with cache (only 1: fix odd_spec 1; only 1: auto).	10.324865818	4089
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: Nat.order_nz).	0.0182590484619	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	16.3	search with cache (only 1: fix even_spec 1; only 1: tauto).	1.55426812172	1951
Coq.Arith.Even.odd_equiv	40	6.7.0	search with cache (only 1: fix even_equiv 1; only 1: intros a; only 1: now Nat.nzsimpl).	1.02156996727	1359
Coq.Arith.Even.even_or_odd	40	7.2.10.0.23	search with cache (only 1: Nat.induct n; only 1: left; only 1: intuition; only 1: intros a Ha; only 1: intuition).	1.38488388062	2636
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0184140205383	5
Coq.Arith.Even.not_even_and_odd	40	4.0.0.2.2.4.9.0	search with cache (only 1: induction n; only 1: intros; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: auto with arith).	2.69719600677	3806
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.0747051239014	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0392961502075	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.125007152557	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0403158664703	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.395254850388	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.245611906052	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0457689762115	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0398399829865	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0400061607361	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0392098426819	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0400891304016	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.142032146454	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0399281978607	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.53382396698	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.0864229202271	1
Coq.Arith.Even.even_mult_l	40	5	search with cache (only 1: parity_binop).	0.0276610851288	6
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.123321056366	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0413229465485	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.283598899841	1
Coq.Arith.Even.odd_mult	40	1	search with cache (only 1: parity_binop).	0.0525619983673	13
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.154921770096	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0275158882141	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0682401657104	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0852570533752	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.2.12	search with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: trivial).	0.67148900032	653
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	6.1.2.0.14	search with cache (only 1: revert m; only 1: Nat.induct ltac:(p); only 1: intros; only 1: reflexivity; only 1: now Nat.nzsimpl).	4.22877311707	2828
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.0.0.0.0.0.6	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: simpl; only 1: trivial).	0.3458340168	250
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	11.1.0.24.1	search with cache (only 1: intros a; only 1: intro m; only 1: intros EQ; only 1: rewrite <- EQ; only 1: intuition).	31.7609159946	69150
Coq.Arith.Between.between_le	40	3.0.24	search with cache (only 1: induction 1; only 1: trivial; only 1: auto).	2.62154102325	4377
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.5	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.244099855423	44
Coq.Arith.Between.exists_le_S	40	0.1.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.015604019165	4
Coq.Arith.Between.exists_S_le	40	1.11.20	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	9.91097688675	22527
Coq.Arith.Between.in_int_intro	40	10.0	search with cache (only 1: intros x y z; only 1: firstorder).	0.0777699947357	118
Coq.Arith.Between.in_int_lt	40	3.6.9	search with cache (only 1: intros a b H; only 1: firstorder; only 1: PeanoNat.Nat.order).	0.704440832138	967
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	4.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0124061107635	6
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0119190216064	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0242729187012	7
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	5.3.0.1	search with cache (only 1: induction 1; only 1: auto with arith; only 1: apply le_S_n; only 1: eauto with arith).	0.936595916748	467
Coq.Arith.Between.event_O	40	2.7.67.5.9	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: subst; only 1: auto with arith).	7.23379206657	45323
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	4.0.0.0.1.13.2.2	search with cache (only 1: destruct n; only 1: auto; only 1: destruct m as [| m]; only 1: intro H; only 1: right; only 1: Nat.order_nz; only 1: intro H; only 1: now right).	17.1286950111	18523
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	4.3.2	search with cache (only 1: intros a a' Ha n; only 1: fix even_equiv 1; only 1: auto).	0.0713999271393	111
Coq.Arith.Div2.lt_div2	40	2.0.10.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix odd_equiv 1; only 1: trivial).	2.38147592545	3377
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	38	search with cache (only 1: intuition).	3.93717002869	2837
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	3.23	search with cache (only 1: fix even_equiv 1; only 1: trivial).	2.52822184563	4603
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0118589401245	3
Coq.Arith.Div2.div2_double	40	2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.228697776794	15
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40	7.0.0.0.4.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: intros EQ; only 1: now Morphisms.f_equiv; only 1: intros EQ; only 1: auto with *).	17.7686109543	4490
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0611751079559	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0613059997559	1
Coq.Arith.Plus.plus_lt_compat_r	40	8.2.21.12	search with cache (only 1: induction 1; only 1: hnf; only 1: now Nat.nzsimpl'; only 1: now right).	27.4469521046	23268
Coq.Arith.Plus.plus_le_compat	40	2.13.24.0.18	search with cache (only 1: induction 1; only 1: apply Nat.add_le_mono_l; only 1: intro H1; only 1: simpl; only 1: auto).	26.2049138546	51968
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	4	search with cache (only 1: apply Nat.add_le_mono).	0.0311350822449	5
Coq.Arith.Plus.plus_lt_compat	40	2.1.7	search with cache (only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.0720970630646	58
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	0.21.34	search with cache (only 1: revert m; only 1: fix le_div2 1; only 1: trivial).	9.67492985725	6102
Coq.Arith.Plus.le_plus_trans	40	3.0.1.1	search with cache (only 1: intros LE; only 1: transitivity m; only 1: trivial; only 1: apply Nat.le_add_r).	0.0846421718597	9
Coq.Arith.Plus.lt_plus_trans	40	5.16.1	search with cache (only 1: intros; only 1: hnf; only 1: now rewrite <- Nat.le_add_r).	3.69787788391	591
Coq.Arith.Plus.plus_is_O	40	5.0.0.1.1.3	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros n IH; only 1: intro H; only 1: now try Nat.order').	4.30689716339	1492
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2.0	search with cache (only 1: intro H; only 1: firstorder).	0.00911903381348	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.00851702690125	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0126328468323	4
Coq.Arith.Lt.le_not_lt	40	0.4	search with cache (only 1: intro H; only 1: Nat.order).	0.023824930191	19
Coq.Arith.Lt.lt_not_le	40	0.5	search with cache (only 1: intro H; only 1: Nat.order).	0.0587010383606	44
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0134620666504	2
Coq.Arith.Lt.lt_0_neq	40	1.0.0.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0122590065002	5
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply le_n_S).	0.00951409339905	2
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00856614112854	1
Coq.Arith.Lt.S_pred	40	0.0.1.10	search with cache (only 1: induction 1; only 1: Nat.bitwise; only 1: trivial; only 1: trivial).	0.300387859344	149
Coq.Arith.Lt.S_pred_pos	40	0.2.0.0.6	search with cache (only 1: induction n; only 1: intros; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: trivial).	0.354341983795	336
Coq.Arith.Lt.lt_pred	40	1.5.10.43	search with cache (only 1: destruct 1; only 1: auto; only 1: apply Nat.succ_lt_mono; only 1: firstorder).	5.95088911057	15496
Coq.Arith.Lt.lt_pred_n_n	40	7.5.0.1.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: destruct n; only 1: firstorder; only 1: intro H; only 1: left).	5.87821412086	7190
Coq.Arith.Lt.le_lt_or_eq	40	0.0.34.0	search with cache (only 1: intros; only 1: Nat.le_elim H; only 1: auto; only 1: auto).	3.42273521423	4269
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	8.19812607765	6376
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.678750991821	182
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0493359565735	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0520570278168	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0519361495972	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0588579177856	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.076385974884	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	1.0.0.0	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0573909282684	5
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.2.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: intuition; only 1: auto with arith).	0.935143947601	104
Coq.Arith.Compare_dec.le_lt_dec	40	0.30.12	search with cache (only 1: revert m; only 1: fix le_div2 1; only 1: trivial).	9.3621339798	8999
Coq.Arith.Compare_dec.le_le_S_dec	40	8.0.0.0.0.0.0.0.2.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: intuition).	6.82849192619	2987
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.727892160416	295
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0731301307678	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.14	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.449953079224	157
Coq.Arith.Compare_dec.lt_dec	40	0.0.1.4.16	search with cache (only 1: destruct m; only 1: auto with arith; only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	6.9958729744	3354
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0234088897705	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0228691101074	2
Coq.Arith.Compare_dec.dec_le	40	0.0.0.0.22	search with cache (only 1: red; only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	1.09838318825	1401
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.023512840271	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0561561584473	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0618350505829	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0576000213623	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0502920150757	1
Coq.Arith.Compare_dec.not_gt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0548100471497	2
Coq.Arith.Compare_dec.not_ge	40	0	search with cache (only 1: apply Nat.nle_gt).	0.0528159141541	1
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0260059833527	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	4.13.1.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	26.1856880188	17261
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40	3.15.3.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	28.664208889	25720
Coq.Arith.Compare_dec.nat_compare_eq	40	0.0.1.0.0.1.1.0.1.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto with arith; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	2.42638206482	1370
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	3	search with cache (only 1: apply Nat.compare_lt_iff).	0.0467090606689	11
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.0282828807831	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	2.3.14.2	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: intros a; only 1: trivial).	32.1220610142	22259
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0264050960541	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.2	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0830872058868	4
Coq.Arith.Compare_dec.leb_complete_conv	40	1	search with cache (only 1: apply leb_iff_conv).	0.0748608112335	2
Coq.Arith.Compare_dec.leb_compare	40	6.10.4.1	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	15.811601162	11073
Coq.Arith.EqNat.eq_nat_refl	40	1.4.0.24	search with cache (only 1: red; only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	0.321288108826	566
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0260210037231	6
Coq.Arith.EqNat.eq_nat_eq	40	1	search with cache (only 1: apply eq_nat_is_eq).	0.115514039993	99
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.1.3.2.0.1.1.3	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: simpl; only 1: destruct m; only 1: auto; only 1: trivial).	2.74862194061	2821
Coq.Arith.EqNat.beq_nat_refl	40	5.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial).	0.0573840141296	65
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.0.1.0.5	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	3.09719586372	2032
Coq.Arith.EqNat.beq_nat_false	40	3.0.0.1.0.0.1.1.0.3.0.8	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	11.2987101078	13772
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	6.0.2	search with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	0.435147047043	41
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	2	search with cache (only 1: destr_bool).	0.0106661319733	3
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.5.1.1	search with cache (only 1: intros; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.218204975128	183
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1.1	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00681781768799	5
Coq.Arith.PeanoNat.Nat.pred_0	40	2	search with cache (only 1: reflexivity).	0.00509595870972	3
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00519394874573	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00520491600037	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00577211380005	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00426578521729	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.00695395469666	7
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00453805923462	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.00851202011108	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.0.0.1.0.0.2.2.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	18.4779651165	23714
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	0.013897895813	10
Coq.Arith.PeanoNat.Nat.compare_succ	40	3.2.0.0.0	search with cache (only 1: simpl; only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: trivial).	0.111189126968	73
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.1.2.0.0.0.0.0.1.5	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.35775709152	6268
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.0.0.0.1.0.0.9	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.679230928421	1307
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.0.1.0.1.5	search with cache (only 1: induction n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.671994924545	1009
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	7	search with cache (only 1: now nzsimpl).	0.0246529579163	36
Coq.Arith.PeanoNat.Nat.pow_0_r	40	4	search with cache (only 1: now nzsimpl').	0.0119709968567	5
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.1	search with cache (only 1: intro; only 1: auto).	0.0471801757812	17
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: reflexivity).	0.00875496864319	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0177209377289	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	1.0.0.0.1.0.0.0.5.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	2.6115090847	2318
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.118265867233	38
Coq.Arith.PeanoNat.Nat.divmod_spec	40	0.16.0	search with cache (only 1: intros n m H; only 1: fix even_spec 1; only 1: intuition order).	3.47597193718	1519
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.00977301597595	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0307109355927	65
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	2.0.1	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.0958371162415	51
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0097930431366	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	0.0.7.4	search with cache (only 1: intro n; only 1: fix gcd_divide 1; only 1: inversion 1; only 1: auto).	1.04682207108	631
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.0106310844421	3
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0165588855743	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	3.0.6.12	search with cache (only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	4.19143486023	5479
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.14	search with cache (only 1: fix le_div2 1; only 1: auto).	0.0507190227509	203
Coq.Arith.PeanoNat.Nat.double_twice	40	2.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0922389030457	71
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.4.4	search with cache (only 1: induct ltac:(n); only 1: simpl; only 1: now constructor; only 1: intros n IH; only 1: easy).	0.253059864044	274
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.0.5.5	search with cache (only 1: unfold testbit; only 1: fix gcd_greatest 1; only 1: fold testbit; only 1: destr_bool).	9.61694908142	850
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	0.0.2.2	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y H; only 1: intros m; only 1: auto).	1.10370922089	110
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	1.0.8	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto).	4.4590959549	499
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	0.1.9.0	search with cache (only 1: intro; only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto).	0.927556991577	1082
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	1.4.2.11	search with cache (only 1: intro n; only 1: fix gcd_greatest 1; only 1: simpl; only 1: auto).	20.6208012104	7811
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	0.0.3.9.0	search with cache (only 1: intros op Hop; only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intros m H; only 1: auto).	33.6082241535	12181
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0119881629944	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00980114936829	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	4	search with cache (only 1: inversion H).	0.0264790058136	24
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.0341999530792	23
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0581109523773	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0248529911041	1
Coq.Arith.Gt.gt_S	40	12.3.4	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	1.65907597542	782
Coq.Arith.Gt.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0642189979553	1
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.058445930481	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0253739356995	1
Coq.Arith.Gt.le_S_gt	40	1	search with cache (only 1: apply Nat.le_succ_l).	0.0468311309814	2
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0259120464325	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0258741378784	1
Coq.Arith.Gt.le_gt_S	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.0362479686737	3
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	13.0.32.0	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: firstorder).	20.5266470909	12661
Coq.Arith.Gt.gt_0_eq	40	6.8.23	search with cache (only 1: induction n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).	8.69613695145	6216
Coq.Arith.Gt.plus_gt_reg_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0593059062958	2
Coq.Arith.Gt.plus_gt_compat_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0357038974762	2
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.3.1	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: auto).	0.009840965271	7
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00871396064758	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00506901741028	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00517797470093	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00898599624634	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0090479850769	4
Coq.Logic.JMeq.JMeq_congr	40	0.3.1	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0103259086609	7
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00537705421448	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00479602813721	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: intros * []; only 1: auto).	0.00555896759033	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.5.2.5.0	search with cache (only 1: destruct 1; only 1: intro; only 1: apply eq_sigT_eq_dep; only 1: rewrite H; only 1: reflexivity).	0.137840986252	515
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.10.9.7	search with cache (only 1: intro H; only 1: intro H1; only 1: elim H1; only 1: auto).	0.281853914261	1406
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0133819580078	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	6.4	search with cache (only 1: intros A; only 1: tauto).	0.320772886276	219
Coq.Logic.Classical_Prop.not_imply_elim	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.029139995575	36
Coq.Logic.Classical_Prop.not_imply_elim2	40	2.0.0	search with cache (only 1: unfold not; only 1: intros Ext A a; only 1: auto).	0.0216269493103	18
Coq.Logic.Classical_Prop.imply_to_or	40	2.0.0.0.3.4	search with cache (only 1: intros Ext A a; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	1.37267494202	763
Coq.Logic.Classical_Prop.imply_to_and	40	0.4.3	search with cache (only 1: intros A; only 1: intro; only 1: tauto).	0.0749759674072	50
Coq.Logic.Classical_Prop.or_to_imply	40	3.0	search with cache (only 1: intros; only 1: tauto).	0.0431959629059	31
Coq.Logic.Classical_Prop.not_and_or	40	0.0.1.1	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.020977973938	6
Coq.Logic.Classical_Prop.or_not_and	40	5.0	search with cache (only 1: intros; only 1: tauto).	0.0380709171295	25
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0123250484467	1
Coq.Logic.Classical_Prop.and_not_or	40	3.0.0	search with cache (only 1: simple induction 1; only 1: red; only 1: tauto).	0.0278949737549	16
Coq.Logic.Classical_Prop.imply_and_or	40	2.0.1.0.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.23051905632	113
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0126099586487	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	1.12	search with cache (only 1: intros [? ?]; only 1: auto).	0.0224540233612	86
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	1.1.0.1.1.1.0.2.3.0.0	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: auto; only 1: auto; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	0.761942148209	3178
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.2.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.043977022171	76
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	2.0.0.0.2.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: auto).	0.124718904495	83
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0846040248871	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.1.1	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.442492961884	18
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	5	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.764322042465	21
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	16.0	search with cache (only 1: intros Ext EM A; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.786018133163	338
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	1.5.11.0.28.4	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: intros P; only 1: left; only 1: easy).	23.0481829643	139747
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.2.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0163419246674	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	5.0.4	search with cache (only 1: intros EM A B; only 1: apply NNPP; only 1: firstorder).	0.917411088943	593
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	7.1	search with cache (only 1: intros P notall; only 1: firstorder).	0.0245220661163	20
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	3.0	search with cache (only 1: unfold not; only 1: firstorder).	0.0142140388489	12
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.1.1.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0185499191284	16
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	7.0.11.3	search with cache (only 1: intros (l, F); only 1: destruct l as [| x xs]; only 1: auto; only 1: firstorder).	1.46592187881	2106
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.7	search with cache (only 1: destruct 1; only 1: split).	0.0148630142212	24
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0111348628998	5
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0108399391174	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.010931968689	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.15.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.13929104805	435
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: auto).	0.0082061290741	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: trivial).	0.00809693336487	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	1.3.2	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: eauto using @functional_extensionality_dep).	0.0194981098175	25
Coq.Logic.HLevels.false_hprop	40	3.2	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0102710723877	7
Coq.Logic.HLevels.true_hprop	40	3.5.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.113389968872	36
Coq.Logic.HLevels.not_hprop	40	3.2.1.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: contradiction).	0.0294930934906	14
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.8	search with cache (only 1: induction 1; only 1: auto).	0.0332689285278	14
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.0215728282928	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	1.7	search with cache (only 1: destruct 1; only 1: auto).	0.0310978889465	20
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.5.1.0.3.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.28288602829	598
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0218012332916	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0193228721619	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.3.0.0.7.0	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.321180105209	436
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.1.2.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.0336170196533	20
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.7.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0412540435791	49
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	2.10.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.036581993103	158
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	3.2	search with cache (only 1: red; only 1: auto).	0.0347349643707	17
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	5.5	search with cache (only 1: intros UIP_refl y; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.219850063324	332
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0153570175171	7
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	search with cache (only 1: intros * []; only 1: trivial).	0.0143151283264	4
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: intros * []; only 1: reflexivity).	0.0108840465546	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	1.0.4	search with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0146360397339	16
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	1	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.575429916382	2
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.1.0.0.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H1; only 1: elim H1).	0.0111479759216	7
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	16.6.11.3	search with cache (only 1: intro H; only 1: intros; only 1: destruct H; only 1: auto).	0.462355852127	3570
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	0.1.6.3.3	search with cache (only 1: destruct 1; only 1: auto; only 1: intro H1; only 1: elim H1; only 1: auto).	0.164649963379	815
Coq.Logic.Decidable.dec_True	40	2.0	search with cache (only 1: unfold decidable; only 1: auto).	0.0044059753418	4
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00430202484131	2
Coq.Logic.Decidable.dec_or	40	7.3.3	search with cache (only 1: unfold decidable, not; only 1: intros; only 1: tauto).	0.150840997696	413
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0834889411926	2
Coq.Logic.Decidable.dec_not	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00725293159485	3
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0107898712158	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0160820484161	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00591993331909	2
Coq.Logic.Decidable.not_or	40	1	search with cache (only 1: tauto).	0.00676894187927	2
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.011528968811	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111920833588	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00799703598022	2
Coq.Logic.Decidable.not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0277020931244	3
Coq.Logic.Decidable.not_true_iff	40	0.0.4	search with cache (only 1: split; only 1: tauto; only 1: auto).	0.00510191917419	7
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00437498092651	1
Coq.Logic.Decidable.not_not_iff	40	1.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0175399780273	24
Coq.Logic.Decidable.contrapositive	40	2.3	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.013298034668	7
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0116801261902	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0117590427399	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0110201835632	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111539363861	2
Coq.Logic.Decidable.imp_not_l	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0182590484619	3
Coq.Logic.Decidable.not_or_iff	40	6.2	search with cache (only 1: intros; only 1: tauto).	0.0214519500732	55
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.00688695907593	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0497739315033	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0149059295654	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	9	search with cache (only 1: auto_tc).	0.0185730457306	16
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0516910552979	6
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.1.0.0.15.0.4	search with cache (only 1: destruct s; only 1: auto; only 1: destruct H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	7.42195916176	2819
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	2.0.0.2	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.030445098877	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.636567831039	573
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	2	search with cache (only 1: exact (rrmatch _ _ _)).	0.0140180587769	3
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	3.1	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.0207159519196	6
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0302000045776	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	6	search with cache (only 1: ok).	0.0442719459534	17
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	28	search with cache (only 1: exact (rmatch _ _ _)).	0.631277799606	795
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.0192968845367	11
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.0.0.1	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.0931081771851	6
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.0.11	search with cache (only 1: intros A eq_dec; only 1: simpl; only 1: auto).	0.041032075882	61
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.3.13.42	search with cache (only 1: intros n; only 1: induction n as [| n IH]; only 1: inversion 1; only 1: simpl; only 1: auto).	2.25120782852	4116
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0190830230713	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.2	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0202479362488	4
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.1.5	search with cache (only 1: destruct 1; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.153514862061	88
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.3.0.2	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.78593182564	115
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.2.8	search with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.152217149734	171
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0366351604462	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	0.75.2.0	search with cache (only 1: unfold singleton; only 1: red; only 1: exists 1%positive; only 1: auto).	12.0961289406	34901
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.3.0.0.0.2.0.8	search with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	2.41163277626	2647
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.4.1.0.6	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: descolor; only 1: auto; only 1: auto).	0.734880208969	635
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.0	search with cache (only 1: invrb; only 1: auto).	0.0225760936737	2
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.3	search with cache (only 1: red; only 1: auto).	0.0167889595032	5
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.0.2.4	search with cache (only 1: intros [| x acc]; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0959939956665	69
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	2.2.1.3	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.114274978638	75
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	2.0.0.2	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0305202007294	8
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.2.0.2.34	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	3.35222196579	5649
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.1.0.2.2	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.263545036316	195
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	6.6.11.2.2.2.3	search with cache (only 1: intros A eq_dec; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: firstorder; only 1: auto_tc; only 1: auto_tc).	12.9179558754	14316
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.2.1.2.2	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.49307012558	378
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	4.2.2.3.11	search with cache (only 1: intros n m; only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	11.5087690353	7952
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	1.2.14	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition_in).	6.31202816963	4814
Coq.MSets.MSetGenTree.Props.isok_iff	40	3.2	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	0.215224027634	89
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	4	search with cache (only 1: intuition_in).	0.494589090347	21
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	3.3.3	search with cache (only 1: split; only 1: easy; only 1: easy).	0.297873973846	120
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.10.3	search with cache (only 1: intuition; only 1: unfold lt_tree; only 1: intuition_in).	0.504482030869	346
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0392820835114	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.2.10	search with cache (only 1: red; only 1: intuition_in; only 1: order).	1.8263130188	326
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.4.6.3	search with cache (only 1: intuition_in; only 1: compute in *; only 1: intuition_in; only 1: order).	1.63478684425	299
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.4	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.104550123215	21
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.5.0	search with cache (only 1: intros x y; only 1: intros; only 1: eauto).	0.128764152527	20
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0480449199677	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0650389194489	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.433614015579	22
Coq.MSets.MSetGenTree.Props.empty_spec	40	3.1.3	search with cache (only 1: repeat red; only 1: intros a H; only 1: inversion_clear H).	0.421261072159	10
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.0378470420837	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	3.2	search with cache (only 1: fix even_spec 1; only 1: auto).	0.135585069656	60
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	4	search with cache (only 1: firstorder).	0.127963066101	5
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	14	search with cache (only 1: firstorder).	0.0587959289551	76
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	4.7.1.7.0.7.15	search with cache (only 1: split; only 1: repeat red; only 1: auto; only 1: intro H; only 1: firstorder; only 1: intro H; only 1: firstorder).	9.36904788017	14292
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	7.9	search with cache (only 1: intro n; only 1: firstorder).	0.641214847565	533
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	7.6	search with cache (only 1: simpl_relation; only 1: now rewrite H).	5.99035310745	864
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	1.5	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.577759981155	31
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	6.2	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.233026981354	46
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.0.0.0.1.0.0.0.1.4	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	6.67733883858	2316
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	2	search with cache (only 1: firstorder).	0.0212740898132	3
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.2	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0211000442505	4
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.6.0	search with cache (only 1: unfold empty; only 1: intro n; only 1: intro; only 1: inv).	1.70593714714	35
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	3.2	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0173618793488	7
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	2.2.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0406248569489	16
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	1	search with cache (only 1: auto).	0.0141878128052	2
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	1.0	search with cache (only 1: unfold elements; only 1: auto).	0.0182590484619	3
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	2.0.0.0.2.6	search with cache (only 1: repeat red; only 1: destruct s; only 1: simpl; only 1: intros; only 1: inv; only 1: easy).	1.31736803055	890
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.0152390003204	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40	0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	36.3797209263	11913
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	2.3.4	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition).	2.70463895798	385
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: auto).	0.065721988678	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.8	search with cache (only 1: fix even_spec 1; only 1: auto).	1.13202214241	129
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40	0.0.0.0.5.2.0.1.11.2.2	search with cache (only 1: intuition; only 1: inv; only 1: elim H; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	23.6652619839	4754
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	0	search with cache (only 1: auto).	0.072240114212	1
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40	1.0.3.11.1	search with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	19.2509279251	3629
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.1.1	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.480085134506	5
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40	2.12.1	search with cache (only 1: intros x Hs; only 1: fix even_spec 1; only 1: auto).	16.431828022	5107
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.36435008049	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	14.20	search with cache (only 1: intro H; only 1: inversion 1).	0.905892133713	1313
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	8.1	search with cache (only 1: fix even_spec 1; only 1: auto).	0.054808139801	33
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	1.2	search with cache (only 1: intros x y; only 1: intuition).	0.0464270114899	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.11.2	search with cache (only 1: intuition; only 1: inv; only 1: auto).	0.82893204689	304
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.1.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.103938102722	4
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	5.0.3.0.7	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	6.5644299984	1553
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	0.0.0.11.0.0.0.3	search with cache (only 1: induction s; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: auto).	26.104612112	7835
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0541861057281	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: reflexivity).	0.0692830085754	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.11.8	search with cache (only 1: simpl_relation; only 1: rewrite <- H; only 1: intuition).	4.35035395622	1883
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00626087188721	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.2.8.7.1.7	search with cache (only 1: repeat split; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	6.00478005409	10909
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0510721206665	138
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto with sets).	0.00867915153503	7
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	0.0.15.5.4	search with cache (only 1: intro H; only 1: intro; only 1: right with y; only 1: assumption; only 1: left).	0.294953107834	1409
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00878310203552	15
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.00786995887756	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.0.2.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.00846886634827	8
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	2.3.0.0.3.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: constructor 1; only 1: assumption; only 1: constructor 3; only 1: auto with sets).	1.61549305916	6216
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	0.1.21.1.0.1.8.4	search with cache (only 1: induction 1; only 1: constructor 1; only 1: red; only 1: auto; only 1: red; only 1: eauto; only 1: red; only 1: auto).	6.38670992851	29756
Coq.Relations.Relations.inverse_image_of_eq	40	0.1.0.0.2.1.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.0730409622192	101
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.0125858783722	1
Coq.Sets.Uniset.incl_left	40	1.9.13.10.1.10	search with cache (only 1: intros f [x]; only 1: red; only 1: intro H1; only 1: intuition; only 1: elim H1; only 1: trivial).	27.5900578499	80452
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0121259689331	5
Coq.Sets.Uniset.seq_refl	40	1.1	search with cache (only 1: destr_bool; only 1: auto).	0.0114920139313	4
Coq.Sets.Uniset.seq_trans	40	0.1.2.5.8.5	search with cache (only 1: destruct x; only 1: red; only 1: intro H1; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	3.45378708839	5716
Coq.Sets.Uniset.seq_sym	40	1.2.1.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destr_bool; only 1: auto).	0.0274028778076	11
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.015074968338	3
Coq.Sets.Uniset.union_empty_right	40	4.4.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.332481861115	460
Coq.Sets.Uniset.union_comm	40	1.9.5.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	1.1694009304	2186
Coq.Sets.Uniset.union_ass	40	2.1.0.0.2	search with cache (only 1: unfold union; only 1: unfold seq; only 1: unfold charac; only 1: destr_bool; only 1: auto with bool).	0.255678892136	173
Coq.Sets.Uniset.seq_left	40	1.0.2.0.0.1.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	0.452383995056	431
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.027135848999	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.0307631492615	10
Coq.Sets.Multiset.meq_refl	40	6	search with cache (only 1: firstorder).	0.0988509654999	22
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	1.1.2.1.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: intros; only 1: auto).	0.0451250076294	11
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0525479316711	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0824730396271	4
Coq.Sets.Multiset.munion_comm	40	8.4.6.1.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: intros; only 1: PeanoNat.Nat.bitwise; only 1: intuition).	15.0239200592	9134
Coq.Sets.Multiset.munion_ass	40	4.1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with arith).	2.81354093552	1147
Coq.Sets.Multiset.meq_left	40	0.6.0.4	search with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).	5.51234817505	1417
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.138691902161	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.0.1.0.3.0.1	search with cache (only 1: unfold munion; only 1: unfold meq; only 1: unfold multiplicity; only 1: destruct x; only 1: intros; only 1: elim H; only 1: auto with arith).	1.15217804909	692
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	1.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	2.63437700272	743
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.0110111236572	1
Coq.Sets.Integers.le_antisym	40	4.0.0	search with cache (only 1: red; only 1: intros x y; only 1: auto with sets arith).	0.0313398838043	12
Coq.Sets.Integers.le_trans	40	2.3.0	search with cache (only 1: red; only 1: intros a b c Ha Hb; only 1: PeanoNat.Nat.order').	0.0302679538727	31
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40	7.1	search with cache (only 1: intros; only 1: split).	0.0246520042419	13
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.4.0.0.2	search with cache (only 1: red; only 1: intros H ?; only 1: red; only 1: intros; only 1: auto).	0.0436501502991	95
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	3.2.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros x y h; only 1: auto  10 with sets).	0.164430141449	81
Coq.Sets.Relations_1_facts.contains_is_preorder	40	4	search with cache (only 1: auto  10 with sets).	0.0460181236267	81
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	5.0.7	search with cache (only 1: red; only 1: destruct 1; only 1: auto).	0.245724201202	484
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.013338804245	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0133271217346	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	4.0.0	search with cache (only 1: intros; only 1: red; only 1: auto  10 with sets).	0.0233709812164	12
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	2	search with cache (only 1: auto  10 with sets).	0.019180059433	3
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.1.0.1.0.2.0.16	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	2.22508597374	9167
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.2.1.2.0.0.0.0.0.2.0.1	search with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: intros; only 1: red; only 1: red in T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	5.45095705986	13451
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	1.1.3.3.0.0.0	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.916100978851	1375
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: auto).	0.0139420032501	8
Coq.Sets.Permut.comm_left	40	1.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: trivial).	0.0325510501862	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	2.0.0.4.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: trivial).	0.0379500389099	54
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.3.0.7.0.3.0.1.3	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros; only 1: contradict H; only 1: auto with sets).	4.33048295975	3203
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	4.4.9.4.2.4.0	search with cache (only 1: intros X f x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: intro H; only 1: elim H'; only 1: intros u H'2; only 1: firstorder).	12.567743063	17218
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	4.1.0.1.0	search with cache (only 1: intuition; only 1: red; only 1: red; only 1: intuition; only 1: destruct H).	0.054435968399	65
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	3.3.3.8	search with cache (only 1: repeat split; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.04597496986	1114
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0147030353546	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto with sets).	0.0111348628998	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	0.8.2.5.0.0.1.5.2.0	search with cache (only 1: intro A; only 1: intro X; only 1: intros x H'; only 1: intro H; only 1: elim H'; only 1: red; only 1: elim H'; only 1: intuition; only 1: subst; only 1: auto with sets).	36.8771419525	47616
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	5.0.1.6	search with cache (only 1: repeat split; only 1: auto with sets; only 1: intros x H'; only 1: destruct 1).	0.498652935028	594
Coq.Sets.Powerset.Union_minimal	40	3.3.0.0.0.6	search with cache (only 1: intros; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto; only 1: auto).	8.22218990326	7339
Coq.Sets.Powerset.Intersection_maximal	40	3.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0150990486145	12
Coq.Sets.Powerset.Union_increases_l	40	2.2.1	search with cache (only 1: intro X; only 1: red; only 1: auto with sets).	0.0125868320465	11
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00905299186707	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.1.0.0.5	search with cache (only 1: intros; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.122682094574	104
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0119998455048	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	2.0.1.0.0.3	search with cache (only 1: intros X Y I NI; only 1: intro not_eq_b1_b2; only 1: red; only 1: red; only 1: red; only 1: auto with sets).	1.90470600128	248
Coq.Sets.Classical_sets.Subtract_inv	40	2.5.5	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto  7 using Inhabited_Setminus with sets).	2.07937812805	337
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	0.113681077957	7
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.1.0.3.1	search with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.22122502327	104
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.3.1.1.1	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.31400704384	237
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.0.0.0.0.1.3.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: apply Setminus_intro; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	12.4809160233	5851
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.2.2.0.3.2.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	8.09727096558	6461
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0142428874969	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	1.18	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.202604055405	187
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0123980045319	1
Coq.Sets.Powerset_facts.Union_commutative	40	1	search with cache (only 1: auto with sets).	0.014416217804	2
Coq.Sets.Powerset_facts.Union_associative	40	23.2	search with cache (only 1: intros B C H'; only 1: auto  10 with sets).	1.0870449543	1177
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0141520500183	1
Coq.Sets.Powerset_facts.Union_absorbs	40	1	search with cache (only 1: auto  9 with sets).	0.0227649211884	2
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.655508995056	1204
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	17.877081871	25830
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.1.0.0.2.1.0.2.2.19	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	2.45196390152	5386
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	3.79335618019	5722
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.25.6	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	30.3760340214	49292
Coq.Sets.Powerset_facts.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.6.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.0271170139313	15
Coq.Sets.Powerset_facts.incl_add	40	0.2	search with cache (only 1: unfold Add; only 1: auto with sets).	0.103967905045	35
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	1.3	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.103000879288	35
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	0.0.0.3.0.1.1.0.0.1.2.1.0.8.1	search with cache (only 1: unfold Add; only 1: intro H; only 1: intros A x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: auto with sets).	39.369592905	51359
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.00963306427002	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: auto with sets).	0.0253121852875	33
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0140101909637	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.15.2.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros f [x]; only 1: red; only 1: auto with sets; only 1: auto with sets).	2.25533485413	5871
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0188429355621	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.5.0.3.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.705494880676	907
Coq.Sets.Constructive_sets.Extension	40	1.3.1.3.5.6.4	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	1.20005917549	5599
Coq.Sets.Constructive_sets.Noone_in_empty	40	6.14.2	search with cache (only 1: unfold not; only 1: intros; only 1: destruct H).	0.423353910446	1761
Coq.Sets.Constructive_sets.Included_Empty	40	0	search with cache (only 1: destruct 1).	0.0262310504913	1
Coq.Sets.Constructive_sets.Add_intro1	40	1.1.12.1.0	search with cache (only 1: intro; only 1: intro; only 1: left; only 1: red; only 1: trivial).	0.852432966232	4203
Coq.Sets.Constructive_sets.Add_intro2	40	2.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0235769748688	15
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	1.8.5.12.1.8.3	search with cache (only 1: red; only 1: intro H; only 1: destruct 1; only 1: intros; only 1: elim (Noone_in_empty x); only 1: elim H1; only 1: auto with sets).	6.99471688271	54920
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	1.0.0	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0114059448242	4
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.010449886322	4
Coq.Sets.Constructive_sets.Union_inv	40	2.2.1.1	search with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: auto using Noone_in_empty with sets).	0.0509219169617	37
Coq.Sets.Constructive_sets.Add_inv	40	2.1.1.0.0.1.5	search with cache (only 1: intro H; only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	1.02411198616	1403
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0224781036377	3
Coq.Sets.Constructive_sets.Couple_inv	40	2.5.0.1	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0978090763092	146
Coq.Sets.Constructive_sets.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0301558971405	3
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.0271759033203	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	2.5.4.3.4	search with cache (only 1: red; only 1: intros x H; only 1: apply H; only 1: destruct H; only 1: auto with sets).	0.383457899094	1511
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40	0.0.23.0	search with cache (only 1: intros X x H'; only 1: fix le_div2 1; only 1: intros n' Hn'; only 1: auto with sets).	9.04431700706	11007
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40	0.9.12	search with cache (only 1: intro X; only 1: fix gcd_divide 1; only 1: auto with sets).	23.5951859951	17389
Coq.Sets.Finite_sets_facts.incl_card_le	40	1.8.8.7.0	search with cache (only 1: intros X c1 H'; only 1: intros; only 1: generalize H'; only 1: fix le_div2 1; only 1: auto).	18.2164421082	12275
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.0.1.1	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_intro with (x := x); only 1: auto using Add_intro2 with sets).	0.138553142548	33