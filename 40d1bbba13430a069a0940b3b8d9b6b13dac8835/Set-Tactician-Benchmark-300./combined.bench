coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_persistent	300	1.783874	508	5
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.nnrc_to_nnrcmr_chain_ns_aux_func_obligation_1	300	2.864663	363	33	1.5.2	synth with cache (only 1: simpl in *; only 1: apply le_lt_n_Sm; only 1: apply le_plus_l).
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.trans_let.fresh_bindings_nil	300	0.377898	180	7	0.0.85	synth with cache (only 1: unfold fresh_bindings; only 1: simpl; only 1: intuition).
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.SplitLAp	300	300.280834	102737	2641
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.local_mon'_imp_mon'_lt	300	300.253516	97155	4123
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_disjointness.nnrs_stmt_cross_shadow_free_under_free_mcenv_mdenv	300	302.136736	24470	4390
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec	300	0.989006	5	3
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_clone	300	300.600961	10657	601
coq-corn.8.16.0	CoRN.metric2.Classified.uc_functions.Setoid_instance_1	300	300.139157	53597	4148
coq-qcert.2.2.0	Qcert.Translation.Typing.TNNRStoNNRSimp.TNNRStoNNRSimp.core.tnnrs_core_to_nnrs_imp_core_top_correct_f	300	4.685689	119	77	0.13.0	synth with cache (only 1: intros ?; only 1: eapply @tnnrs_to_nnrs_imp_top_correct_f; only 1: eauto).
coq-tlc.20200328	TLC.LibFix.Fix_prop_to_gc	300	0.249600	0	1
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.map_keys_singles	300	13.006950	458	147	39.1.0	synth with cache (only 1: intros; only 1: gen f; only 1: induction skip_axiom).
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.heap.tac_wp_cmpxchg	300
coq-tlc.20200328	TLC.LibEnv.BindsProperties.binds_single_eq_inv	300
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.appenv_over_env_merge_l	300	300.301127	11214	6273
coq-qcert.2.2.0	Qcert.NRA.Optim.NRARewrite.NRARewrite.dot_from_duplicate_l	300	300.728994	10935	6382
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_faa_offset	300
coq-tlc.20200328	TLC.LibGraph.is_path_in_nodes_r	300	300.076071	6708	5332
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.wf_t_atom	300	95.367962	49423	2814	76.0.10.2.136.0	synth with cache (only 1: unfold wf; only 1: apply check_atom_correct; only 1: unfold Atom.check_atom; only 1: destruct t_atom; only 1: destruct p; only 1: auto).
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.empty_incl_inv_of_incl_in_eq_and_in_empty_eq	300	4.635406	3801	81	15.146.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: false * H; only 1: apply skip_axiom).
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCFor	300	300.427243	8665	1880
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_expr_subst'	300
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_val_subst'	300	0.140617	1	2	0	synth with cache (only 1: eauto using erase_expr_subst).
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.wp_allocN_seq	300	0.464777	0	1
coq-qcert.2.2.0	Qcert.TypeSystem.RSubtypeProp.RSubtypeProp.subtype_pre	300	241.539976	35205	6519	0.0.4.0.0.2.0.1.0.1.5.0.0.0.0.0.0.0.5	synth with cache (only 1: split; only 1: red; only 1: intros ?; only 1: econstructor; only 1: red; only 1: intros ?; only 1: intros ?; only 1: revert x; only 1: intros ?; only 1: revert y; only 1: intros ?; only 1: revert y; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: transitivity y; only 1: trivial; only 1: trivial).
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.rho_interp	300	300.103574	9269	8342
coq-corn.8.16.0	CoRN.metric2.Complete.lift_eq_complete_2	300	300.294887	21684	7389
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Rle_R1_pow	300	300.427929	32011	8117
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func	300	0.798396	607	7
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.pure_step_tp_safe	300	300.240943	9441	4329
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.drec_sort_perm_eq	300	300.348650	16926	6418
coq-smtcoq.2.0+8.11	SMTCoq.euf.Euf.certif.Proof.interp_binop_eqb_sym	300	300.095373	24883	8110
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.merid_mu	300	300.367094	29968	7162
coq-hott.8.11	HoTT.Homotopy.ClassifyingSpace.EncodeDecode.codes_transport	300
coq-topology.10.0.1	Topology.RFuncContinuity.continuous_iff_continuity	300	300.838422	153238	6530
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func_bound	300	300.272864	85000	7616
coq-corn.8.16.0	CoRN.model.Zmod.ZMod.zmodeq.Zmodeq_modeq	300	300.139699	17409	5372
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.valid_check_bbExtract	300	300.322864	103360	6791
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm22	300	1.277647	21	23	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: polr H; only 1: pols; only 1: auto; only 1: pols; only 1: trivial).
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm27	300	0.590833	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: polr H; only 1: pols; only 1: auto; only 1: pols; only 1: auto).
coq-poltac.0.8.11	PolTac.Rex.pols_test1	300	31.943814	1	2	0	synth with cache (only 1: auto with real).
coq-poltac.0.8.11	PolTac.Natex.polr_test1	300	0.228282	3	4	0.0.0	synth with cache (only 1: intros; only 1: pols; only 1: auto).
coq-topology.10.0.1	Topology.ProductTopology.continuous_composition_at_2arg	300
coq-tlc.20200328	TLC.LibRelation.Sym.sym_inv_eq	300	0.264727	6	5	1	synth with cache (only 1: extens *).
coq-tlc.20200328	TLC.LibRelation.Eq.refl_eq	300	0.175963	5	4	0.2	synth with cache (only 1: intros_all; only 1: easy).
coq-tlc.20200328	TLC.LibRelation.Tclosure.Ind.tclosure_ind_r	300	0.121327	0	1
coq-hott.8.11	HoTT.Classes.orders.rings.from_strict_ring_order.from_strict_ring_order	300	300.205788	117304	7807
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_list_assoc	300	0.431331	13	11	0.2.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold add_list; only 1: apply add_list_carry_assoc; only 1: reflexivity).
coq-bbv.1.3	bbv.Word.eq_rect_word_match	300	0.313130	5	7	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Lookup_equiv_on.lookup_equiv_on_incl_prop	300	3.735910	163	101	0.0.27.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: eapply @lookup_equiv_on_dom_incl; only 1: eauto; only 1: trivial).
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Atom.Typing_Interp.Typ_Aux.check_args_dec	300	301.348304	299888	3662
coq-ceres.0.4.0	Ceres.CeresRoundtrip.DeBindField.sound_bind_field	300	300.098790	35693	7570
coq-bbv.1.3	bbv.Word.wordToN_WS_0	300	0.360465	4	5	0.0.1	synth with cache (only 1: cbn; only 1: intros; only 1: reflexivity).
coq-hott.8.11	HoTT.Categories.Comma.Core.CommaCategory.comma_category_parts.path_morphism	300
coq-topology.10.0.1	Topology.QuotientTopology.quotient_connected	300	300.172294	90525	6449
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.list_sexp_tokens_singleton	300	300.164170	58909	9673
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.is_atom_singleton	300	29.365711	1481	752	0.0.0.0.0.33.1	synth with cache (only 1: destruct c; only 1: intros ?; only 1: constructor; only 1: easy; only 1: cbn; only 1: rewrite H; only 1: reflexivity).
coq-topology.10.0.1	Topology.SubspaceTopology.Subspace.subspace_closed_char	300	0.121808	4	2	3	synth with cache (only 1: apply weak_topology1_topology_closed).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.to_of_val	300	0.164582	2	3	0.0	synth with cache (only 1: simpl; only 1: naive_solver).
coq-hott.8.11	HoTT.Fibrations.equiv_fibration_replacement	300	2.038423	439	6
coq-topology.10.0.1	Topology.OrderTopology.OrderTopology.if_total_order.upper_closed_interval_closed	300	301.998918	132776	6595
coq-ceres.0.4.0	Ceres.CeresRoundtrip.SoundClass_sum	300	300.334707	27040	5815
coq-hott.8.11	HoTT.WildCat.Equiv.cate_issect	300	0.307456	542	5
coq-ceres.0.4.0	Ceres.CeresRoundtrip.CompleteClass_list	300	7.090363	1944	192	0.24.0.0.0.0.2.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct a; only 1: cbn; only 1: reflexivity; only 1: cbn; only 1: rewrite H1; only 1: apply @complete_class_list; only 1: exact H1).
coq-hott.8.11	HoTT.Extensions.extension_functor_sigma	300	300.309836	90213	7742
coq-hott.8.11	HoTT.Categories.Functor.Prod.Universal.universal.universal.unique.unique_helper2	300	300.122455	37667	7839
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.YonedaLaws.Yoneda_MonadLaws_obligation_3	300	0.178860	1	2
coq-bbv.1.3	bbv.Word.wmult_wmultZ	300	300.240069	111186	5225
coq-bbv.1.3	bbv.Word.wordToNat_lt1	300	0.343989	7	7	0.3.0	synth with cache (only 1: intros; only 1: apply wlt_lt; only 1: assumption).
coq-hott.8.11	HoTT.Basics.PathGroupoids.ap011D	300	0.514321	102	14	58.1.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).
coq-haskell.1.0.0	Hask.Control.Category.Morphisms.id_involutive	300	0.080014	1	2	0	synth with cache (only 1: auto).
coq-haskell.1.0.0	Hask.Control.Category.Groupoid_obligation_1	300	0.302982	411	5
coq-smtcoq.2.0+8.11	SMTCoq.Misc.not_ltb_refl	300	0.276166	45	6	28.13.0	synth with cache (only 1: intros ?; only 1: rewrite ltb_spec; only 1: omega).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.str_token_string_newline	300	300.184107	118082	6807
coq-tlc.20200328	TLC.LibBool.PropertiesIf.if_then_false_else_true	300	0.110172	1	2	0	synth with cache (only 1: tautob).
coq-hott.8.11	HoTT.Limits.Limit.unicone_limit	300	300.156222	23871	5282
coq-haskell.1.0.0	Hask.Control.Monad.State.StateLaws.State_Monad_obligation_3	300	0.123364	0	1
coq-haskell.1.0.0	Hask.Data.List.olast_last	300	17.288110	2673	481	2.0.0.5.1.0.2.1	synth with cache (only 1: intros; only 1: induction us; only 1: reflexivity; only 1: simpl; only 1: induction us; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-haskell.1.0.0	Hask.Data.Maybe.Equivalence_Maybe_obligation_1	300	11.811575	8	10	0.0.0.0.0	synth with cache (only 1: compute; only 1: intros; only 1: destruct x; only 1: apply H; only 1: easy).
coq-poltac.0.8.11	PolTac.PolAux.plus_neg_compat_l	300	1.796803	159	39	0.22.0.2.10.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: destruct H; only 1: rewrite <- Nat.add_0_r; only 1: replace b with c; only 1: ring; only 1: rewrite <- Nat.add_cancel_l; only 1: eauto with arith).
coq-tlc.20200328	TLC.LibEqual.PropExt.Extensionality_pred_6	300	5.974991	2327	178	227	synth with cache (only 1: apply Extensionality_fun_1).
coq-bbv.1.3	bbv.Word.word_le_ge_eq	300	300.199783	134191	5737
coq-bbv.1.3	bbv.Word.wzero_wplus	300	0.691929	51	13	0.19.0	synth with cache (only 1: intros; only 1: rewrite wplus_wzero_2; only 1: reflexivity).
coq-haskell.1.0.0	Hask.Control.Category.Monic_Retraction_Iso_obligation_2	300	300.179958	94750	7275
coq-haskell.1.0.0	Hask.Control.Category.unop	300	0.091508	1	2	0	synth with cache (only 1: auto).
coq-printf.2.0.0	Printf.FormatParser.Test.roundtrip_test	300	0.419815	8	3	3	synth with cache (only 1: easy).
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.Sort_NoDupA	300
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.new_sexp_List_sound	300	300.488620	11056	5360
coq-smtcoq.2.0+8.11	SMTCoq.Misc.afold_left_andb_false_inv	300	300.438512	13384	8021
coq-poltac.0.8.11	PolTac.NatSignTac.Test.hyp_test	300	14.316680	34	34	1.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case d; only 1: Nat.order; only 1: auto with arith).
coq-haskell.1.0.0	Hask.Data.Maybe.bind_endo_just	300	300.135472	21139	8473
coq-haskell.1.0.0	Hask.Control.Monad.MonadLaws.join_fmap_join_x	300	300.243046	56099	5063
coq-bbv.1.3	bbv.NatLib.pow2_N	300	300.213767	77111	6764
coq-bbv.1.3	bbv.NatLib.Npow2_pos	300	3.220315	220	97	0.0.19.0.0.0.0.3	synth with cache (only 1: intros ?; only 1: induction a; only 1: simpl; only 1: lia; only 1: simpl; only 1: destruct Npow2; only 1: easy; only 1: lia).
coq-topology.10.0.1	Topology.InteriorsClosures.interior_closure.closure_closed	300	0.309233	12	7	0.0.0.0.4	synth with cache (only 1: apply @closed_family_intersection; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: trivial).
coq-printf.2.0.0	Printf.Justify.take_spec	300	0.247660	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).
coq-printf.2.0.0	Printf.Justify.left_justify_padding'	300	4.227543	244	122	7.0.0.2.0	synth with cache (only 1: intros; only 1: induction s; only 1: reflexivity; only 1: simpl; only 1: apply drop_spec).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.string_reverse_cons'	300	155.866575	14315	4350	0.107.2.2	synth with cache (only 1: inversion 1; only 1: induction c; only 1: rewrite string_reverse_cons; only 1: reflexivity).
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.IntOrderedType.lt_not_eq	300	300.200058	125164	7604
coq-poltac.0.8.11	PolTac.NGroundTac.Eq_diff_Gt	300	12.653158	1	2	0	synth with cache (only 1: discriminate).
coq-poltac.0.8.11	PolTac.RAux.Rlt_sign_pos_pos	300	0.246667	4	5	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).
coq-poltac.0.8.11	PolTac.RAux.Rge_sign_pos_neg	300	0.964635	39	28	0.0.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rge_le; only 1: apply Rle_ge; only 1: apply Rle_sign_pos_neg; only 1: auto with real; only 1: auto with real).
coq-poltac.0.8.11	PolTac.NatAux.gt_mult_rev_0_r	300	0.429719	13	12	1.0.2.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case b; only 1: rewrite Nat.mul_0_r; only 1: auto with arith; only 1: auto with arith).
coq-ceres.0.4.0	Ceres.CeresUtils.app_cons_assoc	300	0.125179	3	3	0.1	synth with cache (only 1: rewrite app_assoc_reverse; only 1: split).
coq-bbv.1.3	bbv.ZLib.pow2_nonneg	300	0.530004	22	14	0.2.0	synth with cache (only 1: intros; only 1: apply Z.pow_nonneg; only 1: easy).
coq-printf.2.0.0	Printf.Justify.distribute_length	300	0.258265	6	7	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.left_padding	300	1.353635	145	34	0.3.0.0.3.0	synth with cache (only 1: intros; only 1: induction s; only 1: reflexivity; only 1: simpl; only 1: rewrite take_spec; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.drop_replicate	300	0.360277	8	10	0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply IHn).
coq-printf.2.0.0	Printf.Justify.right_justify_padding	300	0.253798	17	6	10.3.0	synth with cache (only 1: intros; only 1: rewrite right_justify_padding'; only 1: apply replicate_uniform).
coq-printf.2.0.0	Printf.Justify.right_padding	300	0.617736	29	17	0.9.2.0.2.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: unfold right_justify_string; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold right_justify_string; only 1: simpl; only 1: unfold append; only 1: rewrite drop_replicate; only 1: reflexivity).
coq-topology.10.0.1	Topology.OpenBases.OpenBasis.coverable_by_open_basis_impl_open	300	300.112452	101558	7974
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_refl	300	83.422505	5462	2471	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.6.2	synth with cache (only 1: intros ?; only 1: induction x; only 1: intuition; only 1: intuition; only 1: intuition; only 1: red; only 1: reflexivity; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: split; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: split; only 1: split; only 1: intuition; only 1: intuition; only 1: intuition; only 1: red; only 1: reflexivity; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-printf.2.0.0	Printf.Justify.left_justify_padding	300	300.168268	20092	8546
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_app	300	300.108490	11771	7380
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_sym	300
coq-bytestring.0.9.0	bedrock.bytestring.byte_cmp_refl	300	0.444166	90	13	0.0.8	synth with cache (only 1: unfold byte_cmp; only 1: intros; only 1: apply N.compare_refl).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_refl	300	0.358071	9	8	0.0.3.0.0	synth with cache (only 1: intros; only 1: apply @reflexivity; only 1: unfold Reflexive; only 1: intros; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_sym	300	0.465355	20	12	0.7.1	synth with cache (only 1: intros; only 1: eapply eq_sym in H; only 1: eauto).
coq-bbv.1.3	bbv.ZLib.pow2_times2	300	300.114075	46010	7574
coq-bytestring.0.9.0	bedrock.bytestring.Bytestring.print_parse_inv	300	300.174395	152361	8540
coq-printf.2.0.0	Printf.Justify.left_justify_length	300	300.192381	27723	8390
coq-bytestring.0.9.0	bedrock.bytestring.to_N_inj	300
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_trans	300
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.lt_trans	300	300.200473	31080	6247
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lt_not_eq	300	300.581131	32385	9603
