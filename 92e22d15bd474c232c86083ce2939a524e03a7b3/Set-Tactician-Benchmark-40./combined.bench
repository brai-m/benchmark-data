
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	2.21	synth with cache (only 1: intros P Q H l; only 1: firstorder).	0.737990856171	328
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	2.53	synth with cache (only 1: intros P Q H l; only 1: firstorder).	5.67074894905	3725
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	37	synth with cache (only 1: firstorder).	2.67211985588	1867
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	46	synth with cache (only 1: firstorder).	3.64454984665	3128
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	179.2	synth with cache (only 1: intro; only 1: firstorder).	30.4986999035	88012
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.319994211197	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.2	synth with cache (only 1: intro; only 1: ring).	0.0810639858246	4
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	8.9.3	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.679733037949	430
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0742061138153	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0749509334564	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.0.2	synth with cache (only 1: intros; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0741360187531	5
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.2.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm n p); only 1: rewrite (Rplus_comm m p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	6.67708992958	706
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.137949943542	3
Coq.micromega.Ztac.elim_concl_eq	40	3.6.3	synth with cache (only 1: intros x y z; only 1: intuition; only 1: Z.order).	1.50170397758	283
Coq.micromega.Ztac.elim_concl_le	40	2.0	synth with cache (only 1: intros; only 1: Z.order).	0.0719549655914	4
Coq.micromega.Ztac.elim_concl_lt	40	6.6	synth with cache (only 1: intros a b; only 1: apply Z.nle_gt).	0.701153993607	264
Coq.micromega.Ztac.Zlt_le_add_1	40	0.2	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.487593889236	37
Coq.micromega.Ztac.add_le	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0715470314026	6
Coq.micromega.Ztac.mul_le	40	0.0.9.0	synth with cache (only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.833566188812	178
Coq.micromega.ZifyInst.PropAnd	40	15	synth with cache (only 1: firstorder).	0.62450504303	127
Coq.micromega.ZifyInst.PropOr	40	0.2	synth with cache (only 1: constructor; only 1: tauto).	0.0997769832611	4
Coq.micromega.ZifyInst.PropArrow	40	0.6	synth with cache (only 1: constructor; only 1: tauto).	0.0909988880157	8
Coq.micromega.ZifyInst.PropIff	40	3	synth with cache (only 1: firstorder).	0.0576660633087	4
Coq.micromega.ZifyInst.PropNot	40	0.0.2	synth with cache (only 1: constructor; only 1: intros a b H; only 1: intuition).	0.0846288204193	5
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	17.6	synth with cache (only 1: intro n; only 1: firstorder).	6.70512986183	1446
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.05641913414	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	2	synth with cache (only 1: exact (SORtimes_wd sor)).	0.165651082993	11
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.051952123642	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0535700321198	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	1	synth with cache (only 1: exact (SORlt_wd sor)).	0.054869890213	2
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	1.0.0.0.1	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.146100997925	7
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	0.0.0.2	synth with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.109205007553	6
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.5.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.191349983215	10
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.0.1.1.0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: pattern 1 at 1; only 1: rewrite <- a; only 1: clear a b; only 1: auto with real).	29.9677028656	1914
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.240346908569	16
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	5.3.1.0	synth with cache (only 1: intros x y H H0; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	6.90823507309	530
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.7.1.1.5	synth with cache (only 1: intros a; only 1: intuition; only 1: Z.order; only 1: setoid_replace a with 0 by Z.order; only 1: trivial).	16.8660039902	3662
Coq.micromega.ZMicromega.lt_le_iff	40	6.1.4	synth with cache (only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).	3.75165987015	642
Coq.micromega.ZMicromega.le_0_iff	40	0.0.10.0	synth with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.778153896332	214
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0804529190063	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.5.2.2	synth with cache (only 1: intro n; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: reflexivity).	0.972477912903	163
Coq.micromega.ZMicromega.isZ0_n0	40	10.0.0.2	synth with cache (only 1: intro n; only 1: <Coq.Strings.String.t_eqb>; only 1: discriminate; only 1: now destruct n).	6.45301795006	1491
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40	0.0.9.1	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	2.13938498497	387
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.136626958847	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	10.0	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.547510147095	139
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	0.0.4.0	synth with cache (only 1: unfold tail; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0875301361084	8
Coq.micromega.Env.S.nth_pred_double	40	2.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0924379825592	11
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).	0.0938670635223	16
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	10	synth with cache (only 1: destr_bool).	0.0728399753571	24
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0	synth with cache (only 1: trivial).	0.0317878723145	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0422339439392	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.9.0.8.24	synth with cache (only 1: intros l H; only 1: destruct l; only 1: auto; only 1: simpl in *; only 1: discriminate).	12.0100181103	9069
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.1.35	synth with cache (only 1: destruct f; only 1: auto; only 1: auto).	5.0257370472	3718
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	2.2.5.0.3.0.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: auto).	5.95243597031	2030
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	13.1.0	synth with cache (only 1: unfold eval_cnf; only 1: simpl; only 1: firstorder).	2.57905387878	860
Coq.micromega.Tauto.S.eval_cnf_tt	40	4.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0615589618683	7
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	34.7	synth with cache (only 1: intuition; only 1: eauto).	5.9715950489	3057
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	2.9.10.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: unfold eval_clause in *; only 1: tauto).	20.6469080448	6060
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.11147403717	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	15	synth with cache (only 1: exact (Radd_ext Reqe)).	0.700886964798	153
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	6	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0537350177765	7
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	15	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.974159002304	243
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	33	synth with cache (only 1: firstorder).	1.73331618309	925
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	31	synth with cache (only 1: firstorder).	1.60780405998	943
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	1.2.25.0.1	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	21.8566789627	7146
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	36.7409651279	2846
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.249206066132	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.4	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.131997108459	9
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	11	synth with cache (only 1: exact (SORplus_wd sor)).	0.149956941605	34
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	19	synth with cache (only 1: exact (SORtimes_wd sor)).	0.69002699852	228
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	10	synth with cache (only 1: exact (SORopp_wd sor)).	0.16722202301	31
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	7	synth with cache (only 1: exact (SORle_wd sor)).	0.0957911014557	13
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	12	synth with cache (only 1: exact (SORlt_wd sor)).	0.234986066818	72
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	0.34	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	3.10058307648	1516
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	2.5.0.2.1.8.5.25	synth with cache (only 1: intros l; only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: intro y; only 1: simpl; only 1: f_equal; only 1: auto).	21.5377750397	8282
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	8.39.0	synth with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	7.65431189537	3272
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	8.57.0	synth with cache (only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	17.6266720295	9599
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	9.41.7	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto with arith).	24.0082080364	11069
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.1.0.2.15	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.02224707603	395
Coq.micromega.Refl.make_impl_map	40	2.2.2	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.110029935837	19
Coq.micromega.Refl.make_conj_cons	40	3.3.4.14	synth with cache (only 1: intros n Hn; only 1: induction l; only 1: firstorder; only 1: firstorder).	26.0905358791	14710
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40	0.1.2.0.1.0.5.0.2	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: subst; only 1: auto; only 1: firstorder; only 1: subst; only 1: auto).	16.2331249714	5455
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.212218999863	6
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	2	synth with cache (only 1: exact RTheory).	1.427546978	88
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	14.0	synth with cache (only 1: intros; only 1: field).	7.7897028923	889
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.9.12	synth with cache (only 1: unfold IZR; only 1: vm_compute; only 1: auto with real).	18.4016230106	2610
Coq.micromega.RMicromega.Q2R_1	40	4.16	synth with cache (only 1: vm_compute; only 1: auto with real).	3.80967402458	419
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	2.12	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.7460501194	207
Coq.micromega.RMicromega.is_neg_false	40	0.4.0.0.2.3.4.2.1.2	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: discriminate; only 1: intros; only 1: easy; only 1: discriminate; only 1: simpl; only 1: intros; only 1: now induction n).	12.846487999	2820
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40	0.0.0.0.0.0.0.0.0.0.0.0.2.1.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: compute; only 1: intuition subst; try ring; auto with real; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	27.9775240421	2812
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.152063846588	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	2.1.6	synth with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: tauto).	1.52513408661	217
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.1.0.6.0.1.0.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).	7.04525518417	1746
Coq.rtauto.Bintree.map_app	40	0.1.2.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.69440102577	346
Coq.rtauto.Bintree.length_map	40	0.0.0.0.3.2	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.219769954681	44
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	1.1.9.0.6.5.6	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros l' n; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	35.5990149975	13019
Coq.rtauto.Bintree.Store.Tget_Tempty	40	3	synth with cache (only 1: now intros []).	0.0480170249939	11
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	6	synth with cache (only 1: now intros []).	0.0623099803925	12
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.2.3.22.0	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intuition; only 1: destr_eq H; only 1: auto).	24.1372981071	11060
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40	1.25.9.1	synth with cache (only 1: firstorder  (subst; auto); only 1: case S; only 1: fix sqrtrem_spec 1; only 1: auto).	32.7769219875	18198
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40	0.3.0.1.18	synth with cache (only 1: induction F; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	2.61495995522	1106
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40	3.11.4	synth with cache (only 1: intros A H; only 1: fix sqrtrem_spec 1; only 1: auto).	11.3025839329	3729
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	0.3.22.5	synth with cache (only 1: intros x y z; only 1: fix even_spec 1; only 1: intros; only 1: auto).	5.31403207779	2938
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	6.4.1	synth with cache (only 1: intros; only 1: setoid_rewrite H; only 1: cring).	4.31349611282	314
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.136752843857	3
Coq.nsatz.Nsatz.nsatz1.Rext	40	0.0.0.4	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.179953098297	8
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.2	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.15734910965	16
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: congruence).	0.333331823349	12
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.125353097916	1
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.119243860245	1
Coq.nsatz.Nsatz.Qcri	40	1.0.0.3.10.0.16	synth with cache (only 1: intro q; only 1: intros; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.1447160244	1345
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	synth with cache (only 1: discriminate).	0.112450838089	1
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.147927999496	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl').	0.124619960785	1
Coq.omega.OmegaLemmas.Zred_factor1	40	4.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	1.360216856	57
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	7	synth with cache (only 1: now Z.nzsimpl).	2.21587586403	76
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	synth with cache (only 1: now Z.nzsimpl).	0.124625921249	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.0593738555908	1
Coq.omega.OmegaLemmas.new_var	40	0.4	synth with cache (only 1: intro n; only 1: now exists n).	0.0751130580902	6
Coq.omega.OmegaLemmas.OMEGA1	40	2.0	synth with cache (only 1: intros EQ; only 1: now rewrite EQ).	0.0876648426056	4
Coq.omega.OmegaLemmas.OMEGA2	40	4.10	synth with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.626574993134	122
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	7.16.21	synth with cache (only 1: intro H; only 1: intros ->; only 1: now subst).	8.80241894722	3965
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	3.4.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.361314058304	17
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0935139656067	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	1.63709211349	19
Coq.omega.OmegaLemmas.OMEGA15	40	1.0.2.2	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.251712083817	33
Coq.omega.OmegaLemmas.OMEGA16	40	5.5	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).	0.162075042725	42
Coq.omega.OmegaLemmas.OMEGA17	40	1.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.130959033966	3
Coq.omega.OmegaLemmas.OMEGA18	40	0.18.4.6.5	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: intuition; only 1: subst; only 1: now elim (Z.lt_irrefl 0)).	11.365019083	4022
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.160880088806	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.1.3.3.0	synth with cache (only 1: intros; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	1.58941483498	221
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.2.2.0	synth with cache (only 1: intros; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.176223993301	14
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.1	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0817739963531	4
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0795569419861	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.10457611084	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0825788974762	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.4.2	synth with cache (only 1: symmetry; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).	1.07632112503	188
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	4.0.5.19.12	synth with cache (only 1: destruct p; only 1: destruct b; only 1: now constructor; only 1: intuition; only 1: now split).	28.8516349792	15016
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.2.0.0.0.2	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	1.97586894035	285
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.43.2	synth with cache (only 1: intros a n H; only 1: inversion H; only 1: simpl; only 1: trivial).	16.4061670303	8019
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0	synth with cache (only 1: reflexivity).	0.063266992569	1
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	1.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0554099082947	4
Coq.funind.Recdef.Splus_lt	40	26	synth with cache (only 1: auto with arith).	0.407639980316	343
Coq.funind.Recdef.SSplus_lt	40	30.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: auto with arith).	19.7784380913	9038
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0805809497833	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0688381195068	2
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0	synth with cache (only 1: auto).	0.0468189716339	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0462100505829	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	35	synth with cache (only 1: firstorder  (subst; auto)).	7.32363390923	3218
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	30	synth with cache (only 1: firstorder).	4.80550503731	2087
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	0.3.1.1	synth with cache (only 1: unfold PaddX; only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	1.75741696358	115
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	12.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: Esimpl).	3.03785991669	547
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	8.0	synth with cache (only 1: intros; only 1: apply norm_aux_spec).	1.69514393806	52
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	2.71163392067	339
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0476629734039	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0523798465729	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0544879436493	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0491940975189	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	4	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0562601089478	5
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	1	synth with cache (only 1: trivial).	0.0508561134338	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	6.2	synth with cache (only 1: unfold NPEequiv; only 1: now intros l l' <- P Q H).	14.706040144	139
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	3	synth with cache (only 1: eauto).	0.0890181064606	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	6.2	synth with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	1.10966181755	10
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	14	synth with cache (only 1: eauto).	0.965684890747	159
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	8.3.0.3.7	synth with cache (only 1: symmetry; only 1: rewrite rdiv_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: rewrite rdiv_def; only 1: ring).	5.84528613091	1460
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	2.2.1.0.1.7	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	10.5544948578	347
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	0.0.2.0.2.7.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	18.5364439487	1853
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	0.4.1.4.1.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	5.72754883766	635
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	7	synth with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.212636947632	16
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	0.0.0.3.0.0.2.0.4.3.3	synth with cache (only 1: intros; only 1: induction p; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: trivial).	34.366699934	6408
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	2.40927505493	48
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	2.39594912529	48
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	3.0.1.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	0.134510040283	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	3.0.0	synth with cache (only 1: red; only 1: simpl; only 1: eauto).	0.295837879181	13
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	4.1.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.142289876938	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	0.20	synth with cache (only 1: Bool.destr_bool; only 1: auto).	12.3427510262	896
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.2.0.4.6.0	synth with cache (only 1: simpl; only 1: destruct l1; only 1: intros; only 1: trivial; only 1: destruct 1; only 1: trivial).	24.4823520184	1688
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	4.2	synth with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.296411991119	22
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.2.1	synth with cache (only 1: simpl; only 1: intros H H0; only 1: auto).	0.192826032639	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0722870826721	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0714869499207	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0679450035095	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.0.0.0.3	synth with cache (only 1: constructor; only 1: congruence; only 1: red; only 1: auto with *; only 1: congruence).	0.142647981644	8
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	0.0.0.14	synth with cache (only 1: destruct x; only 1: constructor; only 1: auto; only 1: auto).	0.781723022461	295
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	1.2.1	synth with cache (only 1: intros x y H7; only 1: subst; only 1: norm).	0.0750720500946	7
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros x y z; only 1: intros; only 1: subst; only 1: reflexivity).	0.291162967682	9
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	6.4.3.4.2	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: intuition).	23.6915988922	3658
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.106841087341	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	2	synth with cache (only 1: reflexivity).	0.0335400104523	3
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	6	synth with cache (only 1: now rewrite ?H, ?IHp).	0.0731410980225	14
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	16	synth with cache (only 1: firstorder).	0.256659984589	108
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.0.0.10	synth with cache (only 1: constructor 1; only 1: congruence; only 1: congruence; only 1: congruence).	0.254553079605	64
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.5.5.0.5.5.11	synth with cache (only 1: constructor 1; only 1: induction 1; only 1: destruct 1; only 1: auto; only 1: induction 1; only 1: destruct 1; only 1: auto).	5.46799397469	2922
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.122858047485	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	21	synth with cache (only 1: firstorder).	0.517582178116	257
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	25	synth with cache (only 1: firstorder).	0.86230802536	470
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	4	synth with cache (only 1: auto).	0.0364229679108	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.0.0.7	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.28387093544	24
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	2	synth with cache (only 1: solve_proper).	0.0334780216217	3
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0329840183258	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0327770709991	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	18	synth with cache (only 1: firstorder).	1.45902395248	504
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	5	synth with cache (only 1: firstorder).	0.112668991089	19
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	38	synth with cache (only 1: firstorder).	4.38840103149	2415
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	34	synth with cache (only 1: firstorder).	3.14737892151	1560
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	24	synth with cache (only 1: firstorder).	1.55892515182	633
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	3	synth with cache (only 1: firstorder).	0.271296024323	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	4	synth with cache (only 1: firstorder).	0.0670340061188	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	4	synth with cache (only 1: firstorder).	0.0555250644684	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	2	synth with cache (only 1: auto).	0.0412130355835	3
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	55	synth with cache (only 1: firstorder).	5.11559796333	4837
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	47	synth with cache (only 1: firstorder).	5.37590718269	2829
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	1	synth with cache (only 1: mrewrite).	0.0591471195221	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	1	synth with cache (only 1: mrewrite).	0.0600662231445	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0374870300293	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0364229679108	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0336430072784	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.16	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	2.32921504974	320
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	4	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0377311706543	5
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.7.2	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: norm).	0.516752004623	122
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	1	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.0428671836853	2
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	1	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.0415880680084	2
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0363690853119	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0378408432007	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.033488035202	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0374999046326	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.2.1.1.0.0.2.2	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: intros; only 1: destruct n; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	29.7079567909	2217
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	0.0.5	synth with cache (only 1: induction x; only 1: norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.101301908493	16
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	4	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0417239665985	5
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	6	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0434019565582	7
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	3	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0379238128662	4
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	6	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0421440601349	7
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40	0.0.0.3	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.266839027405	7
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.36	synth with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	4.47054386139	736
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	0.20.2	synth with cache (only 1: intros x y; only 1: apply Ncring_initial.Zsth; only 1: intuition).	2.84698390961	511
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	3	synth with cache (only 1: firstorder).	0.078577041626	4
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	4	synth with cache (only 1: firstorder).	0.0801441669464	5
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	4.4	synth with cache (only 1: intros; only 1: firstorder).	0.0854671001434	10
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	11.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	5.10391592979	1031
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.5	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	10.4147191048	1904
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	41.4	synth with cache (only 1: simpl; only 1: firstorder).	3.81001901627	1970
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	51.0	synth with cache (only 1: simpl; only 1: firstorder).	5.52743291855	2986
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	1.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	7.5284781456	783
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	4.0.30	synth with cache (only 1: fix even_spec 1; only 1: simpl; only 1: auto).	22.0859549046	8970
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	14.2.43	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	17.7265219688	10850
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	2.0.2	synth with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0745480060577	7
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	28	synth with cache (only 1: firstorder).	6.11866092682	2110
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.108577013016	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	1.2.16.2	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	20.4024541378	3808
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	2.0.1.9.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	4.38835191727	661
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.8.3	synth with cache (only 1: destr_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: auto).	1.5547311306	134
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	3.15	synth with cache (only 1: red; only 1: exact Qmult_comm).	4.5011780262	436
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0788660049438	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0122709274292	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.17	synth with cache (only 1: unlock; only 1: discriminate).	0.399958133698	325
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.014771938324	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.6	synth with cache (only 1: destruct 1; only 1: intuition).	0.828946113586	31
Coq.ssr.ssreflect.ApplyIff.iffLR	40	6.0	synth with cache (only 1: intros; only 1: tauto).	0.329279184341	15
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.194633960724	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	4.3	synth with cache (only 1: intro H; only 1: tauto).	0.525723934174	12
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.176229953766	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.361371040344	1
Coq.ssr.ssrbool.is_true_true	40	2	synth with cache (only 1: by [  ]).	0.977980136871	3
Coq.ssr.ssrbool.not_false_is_true	40	2	synth with cache (only 1: by [  ]).	0.964761972427	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.6	synth with cache (only 1: unlock; only 1: by [  ]).	1.3760778904	8
Coq.ssr.ssrbool.negbT	40	1	synth with cache (only 1: by move ->).	0.219004154205	2
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.259836912155	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.199930906296	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.179751157761	1
Coq.ssr.ssrbool.negbK	40	3	synth with cache (only 1: by case).	0.750337839127	4
Coq.ssr.ssrbool.negbNE	40	3	synth with cache (only 1: Bool.destr_bool).	0.917019844055	4
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	9	synth with cache (only 1: Bool.destr_bool).	1.37764692307	30
Coq.ssr.ssrbool.negbRL	40	9	synth with cache (only 1: Bool.destr_bool).	1.10600304604	23
Coq.ssr.ssrbool.contra	40	1.10	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	4.73125219345	47
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.67525100708	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.758041143417	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.98535490036	1
Coq.ssr.ssrbool.contraT	40	1.20	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	17.0027959347	287
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.797518014908	1
Coq.ssr.ssrbool.contraFT	40	1.9.0.7	synth with cache (only 1: intros; only 1: subst; only 1: Bool.destr_bool; only 1: auto with bool).	16.7815761566	330
Coq.ssr.ssrbool.contraFN	40
Coq.ssr.ssrbool.contraTF	40	2.3	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	3.69434309006	7
Coq.ssr.ssrbool.contraNF	40	3.4	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	7.98522019386	9
Coq.ssr.ssrbool.contraFF	40	0.1.6.1	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: by [  ]; only 1: assumption).	15.1771161556	54
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	2	synth with cache (only 1: by case  def_b: b ; constructor).	1.12780094147	3
Coq.ssr.ssrbool.BoolIf.ifT	40	5	synth with cache (only 1: by move ->).	1.76748013496	15
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by move ->).	2.19859790802	11
Coq.ssr.ssrbool.BoolIf.ifN	40	6	synth with cache (only 1: by case : b ).	1.73674082756	15
Coq.ssr.ssrbool.BoolIf.if_same	40	1	synth with cache (only 1: by case  def_b: b ; constructor).	1.59866499901	2
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case b).	1.78406000137	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	1.1060769558	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	1.28475499153	1
Coq.ssr.ssrbool.BoolIf.ifE	40	6	synth with cache (only 1: trivial).	1.00048995018	7
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	1.52436709404	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	1	synth with cache (only 1: by case c; case Hb).	2.38100385666	2
Coq.ssr.ssrbool.ReflectCore.elimTF	40	1	synth with cache (only 1: by case c; case Hb).	1.09987711906	2
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.9	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	3.6136841774	21
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	6	synth with cache (only 1: by case : Pb ; constructor; auto).	1.21410489082	7
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40
Coq.ssr.ssrbool.AllAnd.all_and3	40	2	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	3.9489607811	3
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	4.22284793854	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	4.27989912033	1
Coq.ssr.ssrbool.pair_andP	40	0	synth with cache (only 1: intuition).	3.94441509247	1
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	1.89071297646	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	1.56479310989	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.825845956802	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	1.11271309853	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	1	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	1.192070961	2
Coq.ssr.ssrbool.ReflectConnectives.norP	40	1	synth with cache (only 1: by case b1; case b2; constructor => //; case).	0.644248008728	2
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	1.17509102821	1
Coq.ssr.ssrbool.andTb	40	0	synth with cache (only 1: by [  ]).	1.19512796402	1
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	1.90318894386	1
Coq.ssr.ssrbool.andbT	40	34	synth with cache (only 1: by case).	31.598498106	585
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	1.60902118683	2
Coq.ssr.ssrbool.andbb	40	2	synth with cache (only 1: by case).	0.938383102417	3
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	1	synth with cache (only 1: by case).	0.97589802742	2
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.930262804031	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	0.914222002029	1
Coq.ssr.ssrbool.andbACA	40	2	synth with cache (only 1: by do 3!case).	1.02519202232	3
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.29986000061	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	1.57808303833	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.262824058533	3
Coq.ssr.ssrbool.orbF	40	1	synth with cache (only 1: by case).	1.51171302795	2
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.694942951202	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.606997966766	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.765461921692	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.698739051819	1
Coq.ssr.ssrbool.orbAC	40	1	synth with cache (only 1: by do 3!case).	0.506595849991	2
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.880123853683	1
Coq.ssr.ssrbool.andbN	40	1	synth with cache (only 1: by case : b ).	1.51937818527	2
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	1.43172693253	1
Coq.ssr.ssrbool.orbN	40	1	synth with cache (only 1: Bool.destr_bool).	0.493906021118	2
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.558302879333	1
Coq.ssr.ssrbool.andb_orl	40	2	synth with cache (only 1: by do 3!case).	0.529990911484	3
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by do 3!case).	0.591566085815	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.614343881607	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.567848205566	1
Coq.ssr.ssrbool.andb_idl	40	3.0	synth with cache (only 1: Bool.destr_bool; only 1: auto).	3.81142997742	5
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.28622412682	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.6	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	23.7799940109	81
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	3.20710897446	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.78887820244	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.42711806297	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	3.27050995827	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	2.86244893074	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	1.75691390038	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	1.49910783768	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	2.5796790123	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	2.4224050045	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	2.05633497238	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	1.71802306175	1
Coq.ssr.ssrbool.implybT	40	4	synth with cache (only 1: by case : b  => // ->).	0.492655038834	5
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	1.2178311348	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.595830917358	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.578058004379	1
Coq.ssr.ssrbool.implybb	40	1	synth with cache (only 1: by case : b ).	0.644515037537	2
Coq.ssr.ssrbool.negb_imply	40	1	synth with cache (only 1: by case : a ; case : b ).	1.45525383949	2
Coq.ssr.ssrbool.implybE	40	1	synth with cache (only 1: by case : a ; case : b ).	2.53362894058	2
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	1.9055120945	1
Coq.ssr.ssrbool.implybN	40	1	synth with cache (only 1: by case : a ; case : b ).	1.41319298744	2
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	1.05452299118	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.77774310112	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	2.16866207123	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	2.05213618279	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	1.05782699585	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.838809013367	1
Coq.ssr.ssrbool.addbb	40	0	synth with cache (only 1: by case).	1.03773713112	1
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.243793010712	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.524846792221	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.247431993484	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.201862812042	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.443484067917	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.506456851959	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.309740066528	1
Coq.ssr.ssrbool.addKb	40	7	synth with cache (only 1: by do 2!case).	0.401216030121	8
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.391698122025	1
Coq.ssr.ssrbool.addIb	40	3	synth with cache (only 1: by do 3!case).	0.620553970337	4
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.65464091301	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.513430118561	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.49388718605	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.924551963806	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.730067968369	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	2	synth with cache (only 1: by case : pT pp ).	0.92609000206	3
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.581552028656	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	2	synth with cache (only 1: by rewrite -mem_topred).	0.501186132431	3
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0	synth with cache (only 1: by [  ]).	1.01713991165	1
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	1	synth with cache (only 1: by [  ]).	1.24496197701	2
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	synth with cache (only 1: by [  ]).	0.254755020142	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	0	synth with cache (only 1: by [  ]).	1.32631707191	1
Coq.ssr.ssrbool.LocalGlobal.in1W	40	1.8	synth with cache (only 1: Bool.destr_bool; only 1: by [  ]).	2.04305887222	22
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.615077018738	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.475605964661	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.433528900146	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.474902868271	2
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.542963027954	2
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	1.39302301407	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	2.97444391251	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	5.25543498993	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	5.1721470356	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	4.7865998745	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	4.54196715355	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0	synth with cache (only 1: by move  =>? ?; auto).	4.48403501511	1
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	4.00079512596	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	0	synth with cache (only 1: by move  =>? ?; auto).	4.25385308266	1
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	1	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	5.62353682518	2
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	6.48016500473	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	6.23815512657	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	3.93261003494	1
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	3.39071106911	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	5.43069410324	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	5.77284693718	2
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	5.60674405098	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	6.85543894768	1
Coq.ssr.ssrbool.sub_in2	40	3.10	synth with cache (only 1: Bool.destr_bool; only 1: by move  =>? ?; auto).	32.8882768154	81
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	4.34320402145	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	1	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	1.939193964	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	4.29862904549	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	4.93180513382	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0137588977814	2
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: constructor).	0.172877073288	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.2	synth with cache (only 1: intros H; only 1: by [  ]).	0.297631025314	4
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: constructor).	0.211033821106	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	1.2.1.3.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: auto).	4.94973087311	99
Coq.ssr.ssrfun.all_tag2	40	2	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.257474899292	3
Coq.ssr.ssrfun.Sig.svalP	40	27	synth with cache (only 1: apply proj2_sig).	17.1564879417	361
Coq.ssr.ssrfun.Sig.s2valP	40	0	synth with cache (only 1: by case : u ).	1.05826997757	1
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	1.03705787659	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	1.36164593697	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	3.43895506859	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	6	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	2.30175089836	16
Coq.ssr.ssrfun.Injections.canLR	40
Coq.ssr.ssrfun.Injections.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	4	synth with cache (only 1: by [  ]).	2.34949302673	5
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	0.15	synth with cache (only 1: subst; only 1: reflexivity).	11.4603500366	108
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0	synth with cache (only 1: by [  ]).	0.945252180099	1
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1	synth with cache (only 1: auto).	0.0140671730042	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: exact eq_refl).	0.0136570930481	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	synth with cache (only 1: auto).	0.0142598152161	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	1	synth with cache (only 1: now trivial).	0.0138819217682	2
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	1	synth with cache (only 1: now unfold Over_rel).	0.0138208866119	2
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	0.6.0	synth with cache (only 1: intros x y z; only 1: simple destruct 1; only 1: trivial).	0.0949559211731	29
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40	0.0.4.20.22.7	synth with cache (only 1: generalize dependent n; only 1: intro UIP_refl; only 1: intro n; only 1: induction n; only 1: auto with arith; only 1: trivial).	17.3458759785	19390
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	1.0.0.6	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: intro n; only 1: auto with arith; only 1: now simpl).	0.633337020874	106
Coq.Vectors.VectorSpec.const_nth	40	0.2.0.22.5	synth with cache (only 1: generalize dependent n; only 1: intros n v; only 1: induction v; only 1: trivial; only 1: now simpl).	5.53976392746	3596
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0.1	synth with cache (only 1: intros m n; only 1: intro H; only 1: trivial).	0.0522389411926	4
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.1.0.1.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.840354204178	148
Coq.Vectors.VectorSpec.uncons_cons	40	6	synth with cache (only 1: reflexivity).	0.0301690101624	7
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.0	synth with cache (only 1: intros n v le le'; only 1: intros h; only 1: auto with arith).	0.0513169765472	4
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	5.3.9	synth with cache (only 1: intros a n; only 1: fix even_spec 1; only 1: easy).	9.37141895294	3077
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.1.0	synth with cache (only 1: intros x y z; only 1: intros <-; only 1: trivial).	0.0485858917236	4
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0145289897919	1
Coq.Setoids.Setoid.Seq_sym	40	0	synth with cache (only 1: firstorder).	0.0151920318604	1
Coq.Setoids.Setoid.Seq_trans	40	0	synth with cache (only 1: firstorder).	0.0646970272064	1
Coq.Setoids.Setoid.gen_st	40	5	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0169851779938	6
Coq.Bool.IfProp.Iftrue_inv	40	0.0.0.4	synth with cache (only 1: intros; only 1: subst; only 1: inversion_clear H; only 1: assumption).	0.0588660240173	25
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.2.0.2	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0388000011444	10
Coq.Bool.IfProp.IfProp_true	40	0.1.3	synth with cache (only 1: intuition; only 1: inversion_clear H; only 1: assumption).	0.0265309810638	7
Coq.Bool.IfProp.IfProp_false	40	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0232989788055	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.144765138626	44
Coq.Bool.IfProp.IfProp_sum	40	0.0.7.0.0.9.3	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	3.89003801346	2725
Coq.Bool.Zerob.zerob_true_intro	40	0.4.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).	0.0849900245667	10
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.0927491188049	8
Coq.Bool.Zerob.zerob_false_intro	40	1.0.3.4	synth with cache (only 1: destruct n; only 1: easy; only 1: intro H; only 1: trivial).	0.796165943146	188
Coq.Bool.Zerob.zerob_false_elim	40	2.0.0.0.1.1	synth with cache (only 1: destruct n; only 1: intro H; only 1: intro; only 1: discriminate; only 1: intro H; only 1: auto).	0.254993200302	34
Coq.Bool.DecBool.ifdec_left	40	12.0.28.8	synth with cache (only 1: unfold not; only 1: destruct H; only 1: auto; only 1: contradiction).	16.1031479836	39753
Coq.Bool.DecBool.ifdec_right	40	0.5.6.5.1.2.1.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: absurd B; only 1: auto; only 1: apply False_rec; only 1: auto; only 1: auto).	16.8991239071	15942
Coq.Bool.Sumbool.sumbool_of_bool	40	1.1.23.5	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.956032991409	2108
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.2	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.021831035614	7
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.1	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0193030834198	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.3.1.1	synth with cache (only 1: case H2; only 1: auto; only 1: case H1; only 1: auto; only 1: auto).	0.345869064331	111
Coq.Bool.Sumbool.connectives.sumbool_not	40	1.1.3	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.114264011383	26
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	synth with cache (only 1: discriminate).	0.0145149230957	2
Coq.Bool.Bool.diff_false_true	40	1	synth with cache (only 1: discriminate).	0.0142521858215	2
Coq.Bool.Bool.eq_true_false_abs	40	6.47	synth with cache (only 1: inversion 1; only 1: discriminate).	5.41209793091	13619
Coq.Bool.Bool.not_true_is_false	40	0.2.3	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.026407957077	8
Coq.Bool.Bool.not_false_is_true	40	0.2.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0261378288269	5
Coq.Bool.Bool.not_true_iff_false	40	1.1.0.3.2.2.0.2.2	synth with cache (only 1: destr_bool; only 1: split; only 1: intro H; only 1: intuition; only 1: discriminate; only 1: split; only 1: intro H; only 1: exact eq_refl; only 1: auto).	2.10569906235	1705
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0287330150604	3
Coq.Bool.Bool.leb_implb	40	11.6.1	synth with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool).	0.994381904602	772
Coq.Bool.Bool.eqb_subst	40	11	synth with cache (only 1: destr_bool).	0.0738558769226	63
Coq.Bool.Bool.eqb_reflx	40	6.2	synth with cache (only 1: intuition; only 1: destr_bool).	0.0246770381927	10
Coq.Bool.Bool.eqb_prop	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0274260044098	10
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0845999717712	31
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0654971599579	17
Coq.Bool.Bool.negb_orb	40	4.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.027214050293	7
Coq.Bool.Bool.negb_andb	40	1	synth with cache (only 1: destr_bool).	0.0179278850555	2
Coq.Bool.Bool.negb_involutive	40	6	synth with cache (only 1: destr_bool).	0.0162501335144	7
Coq.Bool.Bool.negb_involutive_reverse	40	1	synth with cache (only 1: destr_bool).	0.0155501365662	2
Coq.Bool.Bool.negb_sym	40	2	synth with cache (only 1: destr_bool).	0.0281620025635	11
Coq.Bool.Bool.no_fixpoint_negb	40	3	synth with cache (only 1: destr_bool).	0.016664981842	4
Coq.Bool.Bool.eqb_negb1	40	1	synth with cache (only 1: destr_bool).	0.0163481235504	2
Coq.Bool.Bool.eqb_negb2	40	1	synth with cache (only 1: destr_bool).	0.0155220031738	2
Coq.Bool.Bool.if_negb	40	4	synth with cache (only 1: destr_bool).	0.0365869998932	20
Coq.Bool.Bool.negb_true_iff	40	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.045490026474	16
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0263590812683	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.130431890488	25
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0675530433655	18
Coq.Bool.Bool.orb_true_elim	40	0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.106763124466	18
Coq.Bool.Bool.orb_prop	40	0.0.0.4.1	synth with cache (only 1: intuition; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0527019500732	10
Coq.Bool.Bool.orb_true_intro	40	2.4.1	synth with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0625019073486	27
Coq.Bool.Bool.orb_false_intro	40	1.0.0.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0342350006104	7
Coq.Bool.Bool.orb_false_elim	40	0.0.6.0	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).	0.262309074402	72
Coq.Bool.Bool.orb_diag	40	1	synth with cache (only 1: destr_bool).	0.0160510540009	2
Coq.Bool.Bool.orb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0160720348358	2
Coq.Bool.Bool.orb_true_l	40	1	synth with cache (only 1: destr_bool).	0.0161650180817	2
Coq.Bool.Bool.orb_false_r	40	2	synth with cache (only 1: destr_bool).	0.0159778594971	3
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0154790878296	1
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.0159680843353	2
Coq.Bool.Bool.orb_comm	40	1	synth with cache (only 1: destr_bool).	0.0181930065155	2
Coq.Bool.Bool.orb_assoc	40	1	synth with cache (only 1: destr_bool).	0.103199958801	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0725150108337	17
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0965859889984	18
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0509738922119	9
Coq.Bool.Bool.andb_false_intro1	40	0.3.0	synth with cache (only 1: intuition; only 1: subst; only 1: exact eq_refl).	0.0295708179474	6
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.0287330150604	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0161509513855	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0158140659332	1
Coq.Bool.Bool.andb_diag	40	1	synth with cache (only 1: destr_bool).	0.0156090259552	2
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0156140327454	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0153880119324	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0352931022644	5
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0159389972687	1
Coq.Bool.Bool.andb_comm	40	1	synth with cache (only 1: destr_bool).	0.0184359550476	2
Coq.Bool.Bool.andb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0219511985779	2
Coq.Bool.Bool.andb_orb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0221610069275	2
Coq.Bool.Bool.andb_orb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0231411457062	2
Coq.Bool.Bool.orb_andb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0226099491119	2
Coq.Bool.Bool.orb_andb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0222470760345	2
Coq.Bool.Bool.absorption_andb	40	1	synth with cache (only 1: destr_bool).	0.0179698467255	2
Coq.Bool.Bool.absorption_orb	40	1	synth with cache (only 1: destr_bool).	0.0179109573364	2
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0158848762512	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0155651569366	1
Coq.Bool.Bool.xorb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0161838531494	2
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0143821239471	1
Coq.Bool.Bool.xorb_nilpotent	40	1	synth with cache (only 1: destr_bool).	0.015928030014	2
Coq.Bool.Bool.xorb_comm	40	1	synth with cache (only 1: destr_bool).	0.0181999206543	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	synth with cache (only 1: destr_bool).	0.0221891403198	2
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0192530155182	1
Coq.Bool.Bool.xorb_move_l_r_1	40	6.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0371930599213	9
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0514369010925	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0232970714569	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0229289531708	1
Coq.Bool.Bool.negb_xorb_l	40	1	synth with cache (only 1: destr_bool).	0.0188188552856	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0379738807678	6
Coq.Bool.Bool.xorb_negb_negb	40	1	synth with cache (only 1: destr_bool).	0.0186450481415	2
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0538449287415	6
Coq.Bool.Bool.eq_true_iff_eq	40	4.1.0.3	synth with cache (only 1: destruct b1; only 1: intuition; only 1: destr_bool; only 1: intuition).	0.637005090714	263
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.023197889328	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0231029987335	2
Coq.Bool.Bool.absurd_eq_bool	40	3	synth with cache (only 1: intuition).	0.0315070152283	12
Coq.Bool.Bool.absurd_eq_true	40	5.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0234260559082	9
Coq.Bool.Bool.trans_eq_bool	40	6.0	synth with cache (only 1: intuition; only 1: destr_bool).	0.0360519886017	8
Coq.Bool.Bool.Is_true_eq_true	40	3.3	synth with cache (only 1: destr_bool; only 1: auto).	0.0232720375061	8
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0167939662933	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0259771347046	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0162200927734	1
Coq.Bool.Bool.eqb_eq	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0300600528717	4
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.1.0.0.6	synth with cache (only 1: destr_bool; only 1: constructor; only 1: intuition; only 1: intuition; only 1: constructor; only 1: intuition; only 1: constructor; only 1: intuition).	1.53280997276	577
Coq.Bool.Bool.orb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0250270366669	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0376532077789	5
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0405700206757	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0335719585419	4
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0317449569702	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0304181575775	5
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0229980945587	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0228950977325	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0277869701385	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.0201179981232	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.017315864563	1
Coq.Bool.Bool.andb_lazy_alt	40	1	synth with cache (only 1: destr_bool).	0.0194339752197	2
Coq.Bool.Bool.orb_lazy_alt	40	1	synth with cache (only 1: reflexivity).	0.0157918930054	2
Coq.Bool.Bool.reflect_iff	40	2.1.0.7	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: inversion_clear H).	1.10509395599	583
Coq.Bool.Bool.iff_reflect	40	3.1.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0577080249786	27
Coq.Bool.Bool.reflect_dec	40	0.0.4	synth with cache (only 1: induction 1; only 1: auto; only 1: tauto).	0.0761620998383	20
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.11	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.254177093506	154
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.10	synth with cache (only 1: destruct 1; only 1: intuition).	0.310294151306	190
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	3.0.3.0.2.0.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	6.46638083458	1838
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	3.4.3.0.1.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: intuition).	24.4376001358	6465
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	6	synth with cache (only 1: intuition).	0.16223692894	39
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	4.1.0.1.1.0.0.0.3.1.3	synth with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: simpl; only 1: tauto).	34.8300681114	9840
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	2.3.5.3.2.0.0.1.5	synth with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intros; only 1: discriminate).	20.1874499321	8786
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40	0.0.3.0.0.2.0.1.38	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto).	9.32053804398	5116
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	8.0.3.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intuition).	2.61573386192	716
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.4	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.471174955368	59
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.6.1.0.0.9	synth with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H2]; only 1: auto; only 1: auto).	22.9016740322	4572
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0	synth with cache (only 1: intros a x H; only 1: auto || contradiction).	0.0522639751434	2
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	1.1.3.2.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: generalize (set_mem_correct1 a0 y); only 1: intros; only 1: eauto with datatypes).	9.87277793884	1401
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	2.0.2.39	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intuition).	15.2346699238	2237
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.47	synth with cache (only 1: intros [? ?]; only 1: exact eq_refl).	1.43730902672	4004
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.1.0.1.13	synth with cache (only 1: induction n; only 1: intro x; only 1: exact eq_refl; only 1: simpl; only 1: auto).	1.37773108482	936
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.2.6	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	0.21307015419	193
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.0.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.0269567966461	5
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.1.0.2	synth with cache (only 1: simple induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.0332820415497	7
Coq.Lists.Streams.Map.Str_nth_map	40	2.1.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: intros s; only 1: apply IHn).	0.0310750007629	8
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	1.0.1.4	synth with cache (only 1: simple induction n; only 1: constructor; only 1: simpl; only 1: auto).	0.0453729629517	18
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0429501533508	9
Coq.Lists.List.Facts.nil_cons	40	0	synth with cache (only 1: congruence).	0.0363731384277	1
Coq.Lists.List.Facts.destruct_list	40	11.2.41.21	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: eauto).	28.4023008347	31092
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.2	synth with cache (only 1: destruct l as [| x xs]; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.247101068497	18
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.0.0.0.0.9	synth with cache (only 1: destruct l as [| x xs]; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.91344499588	268
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: reflexivity).	0.0361120700836	1
Coq.Lists.List.Facts.hd_error_cons	40	0	synth with cache (only 1: reflexivity).	0.0314149856567	1
Coq.Lists.List.Facts.in_eq	40	1.0	synth with cache (only 1: intro n; only 1: firstorder  discriminate).	0.0419509410858	3
Coq.Lists.List.Facts.in_cons	40	0.0.1	synth with cache (only 1: simpl; only 1: intros x y z; only 1: auto).	0.0514590740204	4
Coq.Lists.List.Facts.not_in_cons	40	1.1.0.2.7	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: induction 1; only 1: firstorder).	1.12643504143	328
Coq.Lists.List.Facts.in_nil	40	0.1	synth with cache (only 1: simpl; only 1: tauto).	0.0403771400452	3
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0307359695435	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0387470722198	2
Coq.Lists.List.Facts.app_nil_r	40	0.6.2.0.21.0.6	synth with cache (only 1: induction l; only 1: reflexivity; only 1: induction l; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	24.7149059772	20791
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.071033000946	7
Coq.Lists.List.Facts.app_assoc	40	2.0.0.3.0.3	synth with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	2.11979913712	339
Coq.Lists.List.Facts.app_assoc_reverse	40	1.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0890271663666	8
Coq.Lists.List.Facts.app_comm_cons	40	0.0.0	synth with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0483870506287	3
Coq.Lists.List.Facts.app_eq_nil	40	0.0.0.3	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.125957965851	25
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	2.3.6.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intros a0 y H H0; only 1: firstorder).	3.495043993	1244
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40	0.11.5	synth with cache (only 1: intro H; only 1: fix gcd_divide 1; only 1: auto).	1.34282898903	681
Coq.Lists.List.Elts.nth_S_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0430808067322	2
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	1.1.0.9.1.2	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	9.12003993988	2248
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40	0.11.8	synth with cache (only 1: revert n; only 1: fix even_spec 1; only 1: auto).	22.0440330505	4763
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	1.1.2.1.0.3.0.2.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: easy; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	23.4457399845	5492
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	1.2.0.2.5.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: apply IHl; only 1: auto with arith).	12.7849788666	2772
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	1	synth with cache (only 1: auto).	0.0288610458374	2
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	2.1.5.1	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: now intros ->).	0.936821937561	157
Coq.Lists.List.Elts.count_occ_cons_neq	40	2.1.1.1	synth with cache (only 1: simpl; only 1: destruct (eq_dec y x) as [yeqx| yneqx]; only 1: now destruct (eq_dec x y); only 1: now destruct (eq_dec x y)).	0.0722990036011	9
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.11.2.0.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	22.0156610012	7480
Coq.Lists.List.ListOps.rev_involutive	40	0.33	synth with cache (only 1: fix le_div2 1; only 1: auto).	23.7377281189	17036
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	0.1.4.11	synth with cache (only 1: intros a H; only 1: induction l; only 1: auto; only 1: auto).	2.58599305153	1212
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: auto).	0.0309309959412	1
Coq.Lists.List.ListOps.concat_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0416738986969	2
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	3	synth with cache (only 1: decide equality).	0.0730249881744	14
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: auto).	0.0303559303284	1
Coq.Lists.List.Map.in_map	40	0.5.2.3.0.2.0.12	synth with cache (only 1: induction l; only 1: red; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder; only 1: subst; only 1: auto).	34.7414340973	18846
Coq.Lists.List.Map.in_map_iff	40	2.1.7.0	synth with cache (only 1: red; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.15933299065	368
Coq.Lists.List.Map.map_length	40	0.0.0.1.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0652849674225	10
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	2.6.0.2.1.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	7.69612884521	3106
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	9.0.7.2	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l; only 1: auto; only 1: discriminate).	3.20289206505	1320
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.4.1.0.0.2.4	synth with cache (only 1: intros x y z; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.95406317711	678
Coq.Lists.List.concat_map	40	0.4.4.1.0.0.4.2	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: auto).	16.9262700081	5452
Coq.Lists.List.map_id	40	0.2.0.0.0.11	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.95340299606	570
Coq.Lists.List.map_map	40	0.2.1.0.0.5	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.10250806808	239
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.4.3.1.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).	1.21952390671	458
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.1.0.6	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.279824972153	50
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.0.0.1.2.0.1.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros l2; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	7.2178940773	1679
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	0.0.2.1.9.0.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	4.20248198509	2004
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	2.1	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0471339225769	5
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.0.4.2.2.0.1.3	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	21.2747299671	5671
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_ext	40	2.3.3.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.558423995972	118
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	16.0161449909	3575
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.10182094574	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40	0.1.1.2.3.1.0.0.3	synth with cache (only 1: induction l, l'; only 1: intros; only 1: auto; only 1: auto; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: simpl; only 1: injection H; only 1: auto).	37.7066698074	9859
Coq.Lists.List.ListPairs.in_combine_r	40	0.0.0.2.1.2.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: destruct l'; only 1: auto; only 1: firstorder; only 1: simpl; only 1: injection H; only 1: auto).	8.20987701416	2162
Coq.Lists.List.ListPairs.combine_length	40	0.0.0.0.7.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.22399306297	2544
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.0.2.1.1.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros [?| ?]; only 1: subst; only 1: auto; only 1: auto).	3.21953415871	825
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	24.0.11.19	synth with cache (only 1: induction l; only 1: red; only 1: auto; only 1: constructor 1).	6.60491704941	5727
Coq.Lists.List.length_order.lel_trans	40	2.0.33.2	synth with cache (only 1: unfold lel; only 1: induction 1; only 1: auto; only 1: auto with arith).	21.0827720165	11163
Coq.Lists.List.length_order.lel_cons_cons	40	4.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.079106092453	12
Coq.Lists.List.length_order.lel_cons	40	0.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto).	0.0562920570374	6
Coq.Lists.List.length_order.lel_tail	40	1.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0559978485107	5
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: auto).	0.0360178947449	2
Coq.Lists.List.SetIncl.incl_tl	40	5	synth with cache (only 1: intuition).	0.0830080509186	18
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0368268489838	2
Coq.Lists.List.SetIncl.incl_appl	40	2	synth with cache (only 1: auto with datatypes).	0.0420999526978	3
Coq.Lists.List.SetIncl.incl_appr	40	1	synth with cache (only 1: auto with datatypes).	0.0386991500854	2
Coq.Lists.List.SetIncl.incl_cons	40	0.3.2.1.8.7	synth with cache (only 1: intros a b c Ha Hb; only 1: intro H; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	4.45237493515	2360
Coq.Lists.List.SetIncl.incl_app	40	1.15	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	2.69066810608	742
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0829179286957	8
Coq.Lists.List.Cutting.firstn_cons	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.047131061554	3
Coq.Lists.List.Cutting.firstn_all	40	0.2.0.0.0.9	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.832995891571	202
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0500409603119	2
Coq.Lists.List.Cutting.firstn_le_length	40	1.2.6.2	synth with cache (only 1: intro H; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	0.907031059265	220
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.045175075531	2
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: now simpl).	0.0750861167908	9
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0480880737305	2
Coq.Lists.List.Cutting.skipn_none	40	1.0.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0823359489441	8
Coq.Lists.List.Cutting.skipn_all2	40	2.0.2.0.6.1	synth with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: simpl; only 1: destruct l as [| x xs]; only 1: now reflexivity; only 1: auto with arith).	7.86980009079	2299
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	0.0.0.0.10.0.6	synth with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	28.6560339928	9283
Coq.Lists.List.Cutting.skipn_length	40
Coq.Lists.List.Cutting.skipn_all	40	1.0.0.0.3	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0848660469055	9
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: simpl; only 1: f_equal; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	3.29353094101	659
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	2	synth with cache (only 1: now intros []).	0.0406370162964	3
Coq.Lists.List.Combining.combine_firstn_l	40	0.3.0.7.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: auto; only 1: f_equal; only 1: auto).	18.1882321835	5291
Coq.Lists.List.Combining.combine_firstn_r	40
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40	1.37.0.40.146	synth with cache (only 1: induction l1 as [| x1 l1]; only 1: left; only 1: simpl; only 1: right; only 1: auto).	19.5836520195	61347
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	4.3.0.10	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: firstorder).	11.6667149067	4012
Coq.Lists.List.Add.Add_length	40	0.0.0.0.9	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.563283205032	124
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	2.2	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0537540912628	6
Coq.Lists.List.ReDun.NoDup_cons_iff	40	1.0.1.1	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.151211977005	7
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	1.0.0.13.4	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	4.26489400864	2582
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	2.3	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.104892015457	16
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	5.0.0.3.2	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: firstorder).	1.19343686104	292
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	0.0.1.2.0.3.2.1.0.2.2	synth with cache (only 1: split; only 1: induction 1; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	37.8732509613	13401
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.2	synth with cache (only 1: inversion 1; only 1: auto).	0.0569288730621	4
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3	synth with cache (only 1: inversion 1; only 1: auto).	0.060683965683	5
Coq.Lists.List.Exists_Forall.Exists_impl	40	5.0.10.4.7	synth with cache (only 1: intros P x0 xs H; only 1: induction 1; only 1: left; only 1: auto; only 1: now constructor).	5.86383891106	4566
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	1.1.1.2.0.0.0.0.0.5	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	33.2385931015	2738
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.1.0.1.3.11.1	synth with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	5.67722702026	3096
Coq.Lists.List.Forall2.Forall2_refl	40	0	synth with cache (only 1: auto).	0.0440809726715	1
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.0.0.0.20	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.2934379578	5303
Coq.Lists.List.Repeat.repeat_spec	40	5.1.5.1.8	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.47439694405	1233
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0	synth with cache (only 1: firstorder).	0.0322320461273	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	3.1.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	1.22798705101	202
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.0.2.1.4.4	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	22.5776598454	3468
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	3.13.1.3	synth with cache (only 1: intro; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	16.1825120449	2354
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	1	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0352189540863	2
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0749530792236	6
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0483779907227	3
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	2.0.1.5.2.0.1.5.0	synth with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).	29.8648979664	10785
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	4.0.0.3.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	1.024132967	168
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	1.6	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.124543905258	32
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.1.1.1.6.1.2.2.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	11.3624680042	4848
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	9	synth with cache (only 1: inversion 1).	0.0556571483612	17
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.5.0.0.5.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	10.1485631466	2136
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	13	synth with cache (only 1: firstorder using StronglySorted_inv).	9.66663503647	1733
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.10.2	synth with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	1.36506891251	438
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.1.1.0.7	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.17774415016	153
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.12.7	synth with cache (only 1: intuition; only 1: inv; only 1: auto).	15.3303871155	1830
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	2.9	synth with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	1.2040810585	250
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	4.4	synth with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.299392938614	44
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.5.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	0.0666580200195	10
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.10	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.489906072617	76
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	1.1.1.1.4	synth with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	0.865182876587	97
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.3	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.0625360012054	6
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.0.0.0	synth with cache (only 1: destruct l; only 1: constructor; only 1: simpl; only 1: auto).	0.0656359195709	4
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.128690958023	7
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.3.0.0.11.7	synth with cache (only 1: intro; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	9.36044692993	2558
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	0.0.0.0.2	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0812442302704	7
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.1.3.6.12	synth with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	9.16811203957	1446
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	1.0.0.0.1.0.0	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: eauto).	0.0990281105042	9
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.6.2.1.3	synth with cache (only 1: induction 1; only 1: reflexivity; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	4.94733595848	867
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	8.0	synth with cache (only 1: decide equality; only 1: decide equality).	0.254174947739	18
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	synth with cache (only 1: trivial).	0.0332329273224	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0318930149078	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0864498615265	6
Coq.NArith.BinNat.N.bi_induction	40	3.1.0.21.1	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: auto; only 1: intros; only 1: now apply -> AS).	33.5195939541	20317
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: trivial).	0.0293009281158	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0338881015778	1
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0487680435181	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0336220264435	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.107421875	8
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.083732843399	8
Coq.NArith.BinNat.N.pos_pred_succ	40
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	37.516094923	5454
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: exact eq_refl; only 1: apply Pos.pred_N_succ).	0.0586290359497	3
Coq.NArith.BinNat.N.pred_sub	40	2.2.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	0.170367002487	15
Coq.NArith.BinNat.N.succ_0_discr	40	6	synth with cache (only 1: now destruct n).	0.0976707935333	25
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0591449737549	3
Coq.NArith.BinNat.N.add_succ_l	40	2.17.65	synth with cache (only 1: revert m; only 1: fix sqrtrem_spec 1; only 1: auto).	11.1699318886	14609
Coq.NArith.BinNat.N.sub_0_r	40	1.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0589020252228	5
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.0333280563354	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	2.8.0.7	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	22.7786810398	6072
Coq.NArith.BinNat.N.leb_le	40	11.0.7	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	10.3636460304	2742
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.032506942749	1
Coq.NArith.BinNat.N.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0316679477692	1
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0704579353333	6
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	synth with cache (only 1: reflexivity).	0.0937230587006	3
Coq.NArith.BinNat.N.succ_double_spec	40	4.3	synth with cache (only 1: simpl; only 1: now destruct n as [| [p| p| ]]).	0.609413862228	9
Coq.NArith.BinNat.N.double_add	40	0.1.1.0.1.0.1.2	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	14.5039401054	1684
Coq.NArith.BinNat.N.succ_double_add	40	1	synth with cache (only 1: now destruct n, m).	1.75511002541	94
Coq.NArith.BinNat.N.double_mul	40	9	synth with cache (only 1: now destruct n, m).	2.69232296944	198
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.1.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0798420906067	7
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0399270057678	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: auto).	0.209249019623	27
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).	3.00065493584	369
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: auto).	0.205321073532	27
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	2.54851007462	281
Coq.NArith.BinNat.N.compare_0_r	40	3.1	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0828149318695	12
Coq.NArith.BinNat.N.pow_0_r	40	1.2	synth with cache (only 1: simpl; only 1: trivial).	0.0550200939178	5
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	4.2.2.0.1.4.0	synth with cache (only 1: intro; only 1: destruct n, p; only 1: now nzsimpl; only 1: easy; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now rewrite ?Pos.square_xO).	14.1992180347	2497
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40	1.0.5.10.1.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	37.5506181717	8721
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.0.0.8	synth with cache (only 1: destruct n; only 1: intro; only 1: reflexivity; only 1: intro H; only 1: easy).	1.60351586342	331
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.2.5.0	synth with cache (only 1: intro H; only 1: intuition; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.384411096573	76
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0587179660797	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	7.4.3.0.2.4.23	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	29.4384942055	7528
Coq.NArith.BinNat.N.gcd_divide_r	40	0.5.3.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	7.98351383209	1189
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	3.3	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: apply le_0_l).	0.408320903778	51
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	5	synth with cache (only 1: now destruct a).	0.0503768920898	6
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	1.2.0.1.1	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: simpl; only 1: f_equal; only 1: now destruct a).	2.0028488636	177
Coq.NArith.BinNat.N.testbit_neg_r	40	8	synth with cache (only 1: now induction n).	0.658701896667	60
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	1	synth with cache (only 1: now nzsimpl').	0.0757410526276	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	9	synth with cache (only 1: apply Pos.gt_lt_iff).	0.202472925186	39
Coq.NArith.BinNat.N.lt_gt	40	2	synth with cache (only 1: apply gt_lt_iff).	0.081582069397	12
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	4.10	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	8.01265501976	1382
Coq.NArith.BinNat.N.le_ge	40	3	synth with cache (only 1: apply ge_le_iff).	0.0858340263367	13
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.4.1.0.5	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: trivial).	3.58686494827	451
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.050176858902	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.35	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	5.05418491364	2582
Coq.NArith.Ndec.Pcompare_Peqb	40	3	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0633769035339	4
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	4	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0629620552063	5
Coq.NArith.Ndec.Neqb_complete	40	10	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.100008010864	21
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.0.0.1.5.2.7.0.5	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: eqb2eq; only 1: intro; only 1: subst; only 1: now apply H; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	28.0584790707	9208
Coq.NArith.Ndec.Ndiv2_eq	40	2.1.6.7	synth with cache (only 1: intros H; only 1: apply N.eqb_eq in H; only 1: subst; only 1: apply N.eqb_refl).	2.14386487007	484
Coq.NArith.Ndec.Ndiv2_neq	40	1.4.0.1	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	1.23873710632	14
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.4.1.8	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	6.87110996246	1438
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.7.1.1.1.2	synth with cache (only 1: unfold Nleb; only 1: intros H; only 1: eqb2eq; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	8.82591986656	2356
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.6.14.1.4.1	synth with cache (only 1: intros H; only 1: elim (sumbool_of_bool (Nleb a b)); only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le; only 1: trivial).	35.8778531551	16208
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	0.31	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	1.13739895821	753
Coq.NArith.Ndec.Nmin_le_2	40	0.1	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0858929157257	3
Coq.NArith.Ndec.Nmin_le_3	40	0.27	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	34.8764948845	6370
Coq.NArith.Ndec.Nmin_le_4	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0960130691528	2
Coq.NArith.Ndec.Nmin_le_5	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.108793973923	2
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.122344970703	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.1.0.2	synth with cache (only 1: induction a as [| p]; only 1: congruence; only 1: simpl; only 1: congruence).	0.107627868652	7
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.21	synth with cache (only 1: destruct d; only 1: reflexivity; only 1: simpl; only 1: exact eq_refl).	8.14398407936	3425
Coq.NArith.Ndist.ni_min_O_r	40	0.0.5.3.0.0	synth with cache (only 1: simple induction d; only 1: reflexivity; only 1: simpl; only 1: simple induction n; only 1: trivial; only 1: trivial).	3.64331316948	600
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0715229511261	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.8	synth with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.220475912094	47
Coq.NArith.Ndist.ni_le_refl	40	0.4.17.0.8.7	synth with cache (only 1: vm_compute; only 1: destruct x; only 1: reflexivity; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.le_refl).	23.4662129879	12395
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.3.2.1.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	1.99885606766	114
Coq.NArith.Ndist.ni_min_case	40	0.41	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	19.1350970268	8817
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.2.0.1	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.921543836594	170
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0369620323181	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0357038974762	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0714068412781	5
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0371940135956	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.1.1.3.1.3.0.1.2	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	26.2628650665	4974
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.1.0.0.0.0.0.5.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	1.89065504074	341
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	14.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.land_spec).	2.72013306618	419
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	11.2	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec, andb_comm).	0.410168170929	142
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40
Coq.NArith.Ndigits.Ndouble_bit0	40	2	synth with cache (only 1: now destruct n).	0.0527560710907	12
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0781140327454	14
Coq.NArith.Ndigits.Ndiv2_double	40	0.3.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: tauto; only 1: discriminate).	7.92828011513	1053
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	0.0.0.0.2.1.9.0	synth with cache (only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).	24.1229739189	3003
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.3.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0823650360107	9
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: destruct a'; only 1: simpl; only 1: reflexivity; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	13.3526470661	1379
Coq.NArith.Ndigits.Nless_def_3	40	1.2.16	synth with cache (only 1: fix even_spec 1; only 1: intros m H; only 1: trivial).	4.07560992241	1520
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.3.5.5.27	synth with cache (only 1: intro n; only 1: destruct n; only 1: now try N.order'; only 1: intro H; only 1: exists p; only 1: auto).	15.4215681553	10923
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.176146030426	24
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.1.0.0.1.0	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.108221054077	8
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.3.0.6	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	1.14143610001	263
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	1.0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros; only 1: now subst).	0.0931038856506	7
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: nat2N).	0.228207826614	14
Coq.NArith.Nnat.Nat2N.inj_succ	40	0.0.0.2	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.180359125137	6
Coq.NArith.Nnat.Nat2N.inj_pred	40	2.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.138125896454	12
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0575230121613	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0572371482849	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0535531044006	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	2.3.0.0.0	synth with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: symmetry; only 1: nat2N; only 1: nat2N).	0.275600910187	34
Coq.NArith.Nnat.Nat2N.inj_max	40	1.2.1.0.0	synth with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: symmetry; only 1: nat2N; only 1: nat2N).	0.175510168076	16
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0375080108643	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.0672669410706	3
Coq.Strings.Ascii.ascii_N_embedding	40	1.18	synth with cache (only 1: fix le_div2 1; only 1: destr_bool).	2.20134401321	950
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40	0.40	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	9.6096830368	5830
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	11.5.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	31.795153141	1180
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	3.51933097839	686
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0492680072784	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0871090888977	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40	0.16	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	5.03440213203	1028
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40	0.31	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	18.7029159069	8357
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	14.0.0.58	synth with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: congruence).	21.6866259575	9522
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.065869808197	1
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.058235168457	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.0525488853455	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	33	synth with cache (only 1: constructor).	0.512093067169	550
Coq.Reals.Rtrigo_alt.pre_sin_bound	40	1.0.15.7	synth with cache (only 1: intro; only 1: fix even_equiv 1; only 1: simpl; only 1: trivial).	27.2740738392	6895
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.204922199249	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.156580924988	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	0.0.1.0.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).	0.304251909256	10
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	12.0	synth with cache (only 1: intros; only 1: lra).	1.41303896904	234
Coq.Reals.Ratan.pos_opp_lt	40
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40	0.0.9.0.0.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto).	12.9928920269	1657
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.0.23.1	synth with cache (only 1: intros; only 1: inversion H; only 1: simpl; only 1: trivial; only 1: trivial).	25.8274710178	6938
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40	0.20.6	synth with cache (only 1: vm_compute; only 1: fix even_odd_double 1; only 1: auto).	20.0244450569	6944
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	0.12	synth with cache (only 1: fix even_equiv 1; only 1: trivial).	3.93670797348	375
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.0.0.10	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	2.77590584755	415
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.1.0.0.0.1	synth with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.162345170975	9
Coq.Reals.RList.RList_P19	40	18.0.4.4	synth with cache (only 1: induction l; only 1: destruct 1; only 1: auto; only 1: eauto).	24.1201658249	8608
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.126564025879	7
Coq.Reals.RList.RList_P22	40	0.0.11	synth with cache (only 1: intros [| ] ? Heq; only 1: easy; only 1: auto with real).	1.7067899704	326
Coq.Reals.RList.RList_P23	40	1.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.150421857834	7
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.2.0.0.0.1.0.1.1.0.1	synth with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: intros; only 1: induction i as [| i Hreci]; only 1: auto; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	37.1317050457	5335
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.0.0	synth with cache (only 1: intros a Ha; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.155799150467	5
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.1	synth with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).	2.41440200806	119
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	3.0.5.0.0.31.1	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: trivial; only 1: now rewrite Nat.add_0_r).	38.3893659115	18783
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	3.1.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: intuition).	1.16345500946	123
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	2.1.0.0.0	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: now destruct 1; only 1: now destruct 1).	0.281147003174	25
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: red; only 1: auto with real; only 1: intro H1; only 1: red; only 1: auto with real).	0.207222938538	9
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.116816997528	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.151756048203	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.1.0.0.0.1.5.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	8.80012202263	905
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.0.0.1.4.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: auto).	11.8879928589	870
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.3.1.6	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: eauto using Rle_trans, Rle_refl; only 1: assumption).	5.62075901031	635
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.178084135056	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.146918058395	7
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	0.282660961151	22
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.200901985168	9
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.119174957275	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.1586561203	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.178086996078	9
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.169267177582	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.0.4.0	synth with cache (only 1: intros x y; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	5.2275929451	373
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.3.0.1.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	4.10238718987	278
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.5.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.60156702995	109
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40	0.0.1.12.14.4	synth with cache (only 1: compute; only 1: intros; only 1: destruct (total_order_T x y); only 1: intuition; only 1: constructor; only 1: exact r).	21.2686860561	8763
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.0.1.0.0.0.1.0.0	synth with cache (only 1: split; only 1: red; only 1: vm_compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with rorders; only 1: red; only 1: eauto using Rlt_trans with rorders).	8.83342194557	1037
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.3.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: tauto).	0.287000894547	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	5.0	synth with cache (only 1: intros n m; only 1: intuition).	0.213160991669	7
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.3.1.1	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real).	0.484272956848	97
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	3.75948905945	259
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.7.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	2.4703848362	407
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0	synth with cache (only 1: reflexivity).	0.129205942154	1
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40	0.4.5.7.6.32.10	synth with cache (only 1: left; only 1: apply lt_wf_ind; only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: fix ind_0_1_SS 1; only 1: auto with arith).	35.8481280804	19334
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.0.0.12.5	synth with cache (only 1: intros a b c d; only 1: inversion 1; only 1: split; only 1: auto; only 1: auto).	14.7798030376	2286
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	4.3.0	synth with cache (only 1: induction 1; only 1: fix odd_equiv 1; only 1: auto).	0.135191917419	11
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	4.0	synth with cache (only 1: intros x y z; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0958399772644	6
Coq.Reals.Runcountable.increase_seq_transit	40	0.20.0	synth with cache (only 1: intros x y z; only 1: fix ind_0_1_SS 1; only 1: auto).	8.54844880104	2314
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0885338783264	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0818219184875	2
Coq.Reals.Rfunctions.pow_1	40	5.0	synth with cache (only 1: intro n; only 1: ring).	0.0833520889282	7
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.161993980408	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40	9.0.0.8	synth with cache (only 1: induction n; only 1: ring_Rsqr; only 1: simpl; only 1: ring [ IHn ]).	14.6214370728	3390
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	0.3.0.0.0.3	synth with cache (only 1: intros; only 1: case n; only 1: simpl; only 1: auto with real; only 1: fix le_div2 1; only 1: auto with arith real).	1.09093594551	144
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0804891586304	2
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40	0.22.5	synth with cache (only 1: intros a b; only 1: fix le_div2 1; only 1: trivial).	22.4258890152	5776
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.3.1.0.2.2	synth with cache (only 1: intro n; only 1: induction n as [| n H]; only 1: intro H; only 1: now elim H; only 1: intros _; only 1: simpl; only 1: auto with real).	10.4389259815	1765
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	3.80752015114	219
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	3.4.1.2.2.0	synth with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Hrecn; only 1: ring).	21.2072970867	2573
Coq.Reals.Rfunctions.pow_Rabs	40	2.2.2	synth with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: auto).	0.180790185928	22
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	3.0	synth with cache (only 1: intro n; only 1: ring_Rsqr).	0.242279052734	22
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	0.6.3.1.5.2	synth with cache (only 1: intros; only 1: case n; only 1: simpl; only 1: Z.order'; only 1: fix le_div2 1; only 1: trivial).	39.1518859863	9028
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0689990520477	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.0.3	synth with cache (only 1: simpl; only 1: intro; only 1: ring).	0.306761026382	45
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.232925891876	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	3.3.0.0.1.3	synth with cache (only 1: elim n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite SuccNat2Pos.id_succ; only 1: trivial).	21.9143819809	3409
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.133375883102	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).	0.488081216812	51
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).	0.661604166031	95
Coq.Reals.Exp_prop.div2_not_R0	40	5.17	synth with cache (only 1: fix le_div2 1; only 1: auto).	7.61630320549	2663
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto).	0.177701950073	7
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.156283140182	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	2.4	synth with cache (only 1: unfold D_in; only 1: firstorder).	0.911857128143	47
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.0.1.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.15248799324	12
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.0958070755005	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	2.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.16174697876	17
Coq.Reals.RIneq.Rlt_not_eq	40	1.0.0.6.5.4	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	13.3806910515	1987
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	4.0.11.3	synth with cache (only 1: intros x y; only 1: destruct (total_order_T x y); only 1: intuition; only 1: auto).	14.0020840168	3235
Coq.Reals.RIneq.Rdichotomy	40	0.2.0.0.1.0.0.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: left; only 1: trivial; only 1: contradiction; only 1: right; only 1: trivial).	2.08532309532	207
Coq.Reals.RIneq.Rlt_le	40	1.1.0	synth with cache (only 1: intros; only 1: left; only 1: auto with real).	0.105057001114	5
Coq.Reals.RIneq.Rgt_ge	40	0.2.0	synth with cache (only 1: intros; only 1: red; only 1: auto).	0.101048946381	5
Coq.Reals.RIneq.Rle_ge	40	1.0.0.1.4	synth with cache (only 1: induction 1; only 1: red; only 1: tauto; only 1: right; only 1: auto).	0.848712921143	159
Coq.Reals.RIneq.Rge_le	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).	0.234068870544	32
Coq.Reals.RIneq.Rlt_gt	40	2.1.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0931379795074	6
Coq.Reals.RIneq.Rgt_lt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0774269104004	2
Coq.Reals.RIneq.Rnot_le_lt	40	0.0.2.1.5.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct H; only 1: red; only 1: intuition; only 1: auto).	3.89870786667	518
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros x y H; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.112291097641	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros x y H; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0920810699463	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.337875843048	39
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.228765010834	24
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.2.0.3	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: auto with real).	1.53793382645	59
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0	synth with cache (only 1: intros x y H; only 1: eauto using Rnot_lt_le with rorders).	0.0724930763245	3
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	5.0	synth with cache (only 1: intros n m; only 1: auto with real).	0.0846130847931	7
Coq.Reals.RIneq.Rlt_not_ge	40	10.1.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros x y z; only 1: firstorder  (subst; auto)).	8.11744594574	1021
Coq.Reals.RIneq.Rgt_not_ge	40	5.0	synth with cache (only 1: intros n m; only 1: auto with real).	0.0823729038239	7
Coq.Reals.RIneq.Rle_not_lt	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto).	0.131374120712	6
Coq.Reals.RIneq.Rge_not_lt	40	3.0.1.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.131865978241	9
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.462398052216	16
Coq.Reals.RIneq.Rge_not_gt	40	0.1.4	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	2.57142806053	65
Coq.Reals.RIneq.Req_le	40	0.0.6	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.113992929459	9
Coq.Reals.RIneq.Req_ge	40	0.0.7	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.116347074509	10
Coq.Reals.RIneq.Req_le_sym	40	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	0.0804841518402	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0783128738403	3
Coq.Reals.RIneq.Rgt_asym	40	2.1.2	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: auto).	0.131978988647	17
Coq.Reals.RIneq.Rle_antisym	40	0.0.0.1.9.2.5	synth with cache (only 1: intros; only 1: destruct H; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto; only 1: auto).	33.8358941078	5625
Coq.Reals.RIneq.Rge_antisym	40	3.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.192399024963	22
Coq.Reals.RIneq.Rle_le_eq	40	7.2	synth with cache (only 1: intros; only 1: intuition).	2.62015104294	151
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	2.03421187401	61
Coq.Reals.RIneq.Rlt_eq_compat	40	2.3.1.8	synth with cache (only 1: intros A B f g <- H; only 1: intro eq; only 1: subst; only 1: auto with real).	3.9905731678	749
Coq.Reals.RIneq.Rgt_eq_compat	40	1.2.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.129189014435	8
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	13.2	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).	4.50654292107	592
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.146165132523	14
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.2711789608	37
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.16806101799	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.144268989563	3
Coq.Reals.RIneq.Rge_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.167631864548	3
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0.0.7.1	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.74180102348	187
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.146134853363	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.17430305481	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.2.0.2.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	3.09149980545	113
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.429531097412	48
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.1.2.0	synth with cache (only 1: intros n m; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: elim (Rle_lt_dec m n); only 1: auto with real; only 1: auto with real).	0.842580795288	78
Coq.Reals.RIneq.Rle_or_lt	40	0.0.0.0.2.1.0	synth with cache (only 1: intros n m; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: elim (Rle_lt_dec m n); only 1: auto with real; only 1: auto with real).	1.00548195839	89
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.392698049545	35
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	2.6.3	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	12.6295509338	1540
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.9654071331	31
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.2.2.0	synth with cache (only 1: intro; only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	2.28162193298	23
Coq.Reals.RIneq.Rplus_opp_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.7174808979	6
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	7.1	synth with cache (only 1: intros n m p H; only 1: now subst).	0.154607057571	28
Coq.Reals.RIneq.Rplus_eq_compat_r	40	7.1.0	synth with cache (only 1: intros r r1 r2; only 1: intro H; only 1: now subst).	0.271895885468	75
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	1.1.0.1.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.159209012985	8
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	3.07792496681	36
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	2.72335505486	36
Coq.Reals.RIneq.Rmult_0_r	40	0.2	synth with cache (only 1: intros; only 1: ring).	0.0922830104828	4
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0910139083862	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	1.97442483902	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0856199264526	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0750060081482	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.4.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: trivial).	0.540801048279	78
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.10267496109	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0622398853302	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: intuition).	0.2054438591	21
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.1.3	synth with cache (only 1: intros; only 1: intro H1; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.81408596039	63
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	synth with cache (only 1: auto with *).	0.0632441043854	1
Coq.Reals.RIneq.Ropp_0	40	4	synth with cache (only 1: ring).	0.968137025833	5
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.8	synth with cache (only 1: firstorder  (subst; auto); only 1: ring).	0.212438106537	25
Coq.Reals.RIneq.Ropp_involutive	40	0.0	synth with cache (only 1: intros z; only 1: ring).	0.0850069522858	2
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	15.1	synth with cache (only 1: intros; only 1: ring).	25.6946132183	918
Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.1	synth with cache (only 1: intros n m; only 1: ring).	0.689896821976	20
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0934700965881	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.0	synth with cache (only 1: intros n m; only 1: ring).	1.71163392067	24
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0923969745636	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0919320583344	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0862009525299	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro n; only 1: ring).	0.0907018184662	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0932400226593	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0926568508148	2
Coq.Reals.RIneq.Rminus_diag_eq	40	1.9.5	synth with cache (only 1: intros x y H; only 1: subst; only 1: ring).	8.69447016716	1009
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0	synth with cache (only 1: intros a n; only 1: ring).	0.273756027222	3
Coq.Reals.RIneq.Rminus_eq_contra	40	0.0.1.2	synth with cache (only 1: red; only 1: intros; only 1: apply H; only 1: auto with real).	0.275439023972	25
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.1	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.169821977615	23
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.122966051102	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	1.08935499191	36
Coq.Reals.RIneq.Rinv_1	40	34	synth with cache (only 1: field).	2.53749299049	1043
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.2	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.104834079742	5
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.107094049454	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.5.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.272861003876	12
Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.7.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	1.00157403946	103
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.1.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	3.42611289024	370
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6.1.7	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  3; only 1: intuition).	4.02908492088	571
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	0.325969934464	54
Coq.Reals.RIneq.Rplus_le_compat_l	40	3.0.5	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	1.30893707275	88
Coq.Reals.RIneq.Rplus_ge_compat_l	40	7.5.4.9	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros x x' y y'; only 1: firstorder  (subst; auto); only 1: intuition).	27.4633471966	3730
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.0.0.0.2.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: intuition; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	7.11601185799	532
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.2.1.3	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	1.50362205505	152
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.122821092606	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.4.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.840653896332	34
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.3.0	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	1.62121105194	70
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	0.200404167175	5
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.4.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: split; only 1: auto with real; only 1: auto with real).	0.239339828491	15
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	4.5	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.871788024902	89
Coq.Reals.RIneq.Ropp_lt_contravar	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.225461006165	11
Coq.Reals.RIneq.Ropp_gt_contravar	40	5.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	2.19337487221	56
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.6.2	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	4.26933097839	266
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	1.0	synth with cache (only 1: unfold Rge; only 1: intuition).	0.108315944672	3
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).	0.467777013779	3
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.1	synth with cache (only 1: unfold Rge; only 1: intros; only 1: intuition).	0.147516012192	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.15710401535	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.14644408226	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.138982057571	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.136491060257	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.135087013245	4
Coq.Reals.RIneq.Ropp_lt_cancel	40	5.0.3.1.4.0	synth with cache (only 1: intros a b H; only 1: apply Rnot_le_lt; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).	36.4989659786	3504
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.5.0.0	synth with cache (only 1: intros x y H'; only 1: destruct (total_order_T x y); only 1: intuition; only 1: exact r).	0.395853042603	43
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.1.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	2.32155394554	118
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.597571134567	4
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	6	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.311917066574	57
Coq.Reals.RIneq.Rmult_gt_compat_l	40	19.1	synth with cache (only 1: intros; only 1: auto with *).	4.91552805901	1078
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	22.0	synth with cache (only 1: intros; only 1: auto with *).	17.5268769264	3581
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	2.8	synth with cache (only 1: intros n m p q; only 1: intuition).	1.58213496208	231
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.1.1.1	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.414294958115	47
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.1.8.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	2.60042214394	363
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	6.0.1.1	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	7.55247998238	597
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.153104066849	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.3	synth with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).	2.89837598801	65
Coq.Reals.RIneq.Rge_minus	40	0.1.0.0.0.4.4.1	synth with cache (only 1: destruct 1; only 1: red; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: red; only 1: auto with real).	11.3181869984	1099
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: eauto with real; only 1: ring).	0.219254970551	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: intros H Hb; only 1: apply not_eq_sym; only 1: apply not_eq_sym; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	0.364666938782	23
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.127335071564	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.296232938766	26
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	9.42457604408	600
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	15.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).	7.61128902435	886
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	0.0.1.2.3.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: field; only 1: simpl; only 1: auto).	3.01058101654	464
Coq.Reals.RIneq.S_O_plus_INR	40	2.0.0.0.2.2	synth with cache (only 1: intro n; only 1: case n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	2.20699310303	258
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	0.1.2.6	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: now right; only 1: intuition).	1.68295788765	312
Coq.Reals.RIneq.INR_not_0	40	0.1.4.0.0	synth with cache (only 1: red; only 1: intros r H H0; only 1: apply H; only 1: subst; only 1: exact eq_refl).	0.156116008759	16
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	2.0.0.17	synth with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	3.37905216217	1006
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.9.3.1.2.2.1	synth with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	16.7583510876	3921
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.1.1.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.962561130524	93
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.106501817703	2
Coq.Reals.RIneq.double_var	40	18.2	synth with cache (only 1: intros; only 1: field).	5.207914114	1191
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.420202970505	35
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.2.8.3	synth with cache (only 1: intros x n; only 1: unfold Rdiv; only 1: intro; only 1: ring).	19.356979847	718
Coq.Reals.RIneq.Req_EM_T	40	0.0.1.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.147410869598	7
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	2.3.16.0.1	synth with cache (only 1: intro; only 1: simpl; only 1: revert n; only 1: fix even_odd_double 1; only 1: trivial).	27.8869709969	8189
Coq.Reals.ArithProp.le_double	40	7.2	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.920464038849	161
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	4.2.0	synth with cache (only 1: intro n; only 1: simpl; only 1: auto with arith).	0.296194076538	32
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.0.1.2.0	synth with cache (only 1: intro n; only 1: apply Rinv_0_lt_compat; only 1: case n; only 1: auto with real; only 1: auto with arith real).	0.180432081223	8
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0	synth with cache (only 1: reflexivity).	0.0914409160614	1
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.115936994553	3
Coq.Reals.Ranalysis2.quadruple_var	40	2.2	synth with cache (only 1: intro; only 1: field).	0.138286113739	6
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0.1	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: auto).	0.163544893265	14
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	5.0.2	synth with cache (only 1: intros; only 1: unfold included; only 1: auto).	0.355120897293	55
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	10.3.2	synth with cache (only 1: unfold included; only 1: intros x y z; only 1: firstorder).	17.8373370171	2360
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.0	synth with cache (only 1: intros P H; only 1: elim H).	0.109379053116	2
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	0.11.0	synth with cache (only 1: intros x y z; only 1: intros (x1, x2) (y1, y2); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	7.02043604851	989
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40	1.2.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: repeat rewrite Rrepr_plus; only 1: repeat rewrite Rrepr_mult; only 1: repeat rewrite Rrepr_plus; only 1: rewrite CReal_mult_plus_distr_l; only 1: reflexivity).	15.5320169926	252
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40	0.0.0.0.0.0.0.0.0.0.0.18.7.63	synth with cache (only 1: cut (forall a b : R, Rabs b <= Rabs a -> Rabs (Rabs a - Rabs b) <= Rabs (a - b)); only 1: vm_compute; only 1: intuition eauto  3; only 1: intros; only 1: replace (Rabs (Rabs a - Rabs b)) with (Rabs a - Rabs b); only 1: apply Rabs_triang_inv; only 1: rewrite (Rabs_right (Rabs a - Rabs b)); only 1: reflexivity; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with (Rabs b); only 1: rewrite Rplus_0_r; only 1: replace (Rabs b + (Rabs a - Rabs b)) with (Rabs a); only 1: assumption; only 1: ring).	30.6292970181	15764
Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.10.1	synth with cache (only 1: unfold EUn; only 1: intros; only 1: now exists n).	0.898689031601	266
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.2.0.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.286741018295	25
Coq.Reals.Rseries.Un_growing_shift	40	2.0.7	synth with cache (only 1: red; only 1: simpl; only 1: auto).	2.28723597527	150
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	0.2.1.2.0.2	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros; only 1: intro; only 1: intros; only 1: generalize (H x y H0); only 1: auto with real).	1.28869700432	176
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.1.0.1.0.2.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	2.57760620117	126
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	synth with cache (only 1: reflexivity).	0.0702571868896	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	5.2.19.1	synth with cache (only 1: intros; only 1: intro; only 1: apply limit_Ropp; only 1: apply H).	8.44852185249	1959
Coq.Reals.Ranalysis1.continuity_minus	40	3.2.1.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	5.83927106857	765
Coq.Reals.Ranalysis1.continuity_mult	40	4.3.0.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	8.01904702187	1100
Coq.Reals.Ranalysis1.continuity_const	40	0.2.0.0.0.0.0.0.0.1.1.1.2.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: rewrite R_dist_eq; only 1: assumption).	19.9231860638	3401
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	2.12.3.4	synth with cache (only 1: intros n m p Hp; only 1: apply continuity_pt_inv; only 1: auto; only 1: trivial).	16.3061900139	3603
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	2.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	1.74010109901	116
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.19486117363	6
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.6.1	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.674540996552	95
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.12	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	1.11593103409	348
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.147125005722	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.24.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	20.7560920715	5816
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	1.0.0.0.7	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	1.99461102486	274
Coq.Reals.Ranalysis1.derive_pt_pow	40	1.23.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	23.7749290466	7143
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40	4.6.9.6	synth with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: unfold EUn; only 1: auto).	27.6804590225	6646
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.2.0.0.0.0.3.0.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	8.86549592018	1301
Coq.Reals.SeqProp.Wn_decreasing	40	3.1.5.2.0	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	5.92066597939	966
Coq.Reals.SeqProp.Vn_growing	40	4.5.2.0	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: auto).	5.10096693039	726
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	1.0	synth with cache (only 1: intros x y H; only 1: eauto using Rnot_lt_le with rorders).	0.080442905426	3
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40	10.4.1	synth with cache (only 1: intros; only 1: apply Rge_le; only 1: now apply growing_prop).	6.18737602234	1265
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.195317983627	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.131057977676	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	2.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: prove_sup).	2.15744018555	13
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.1.5	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup; only 1: apply PI_RGT_0).	1.03339910507	76
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	5.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.721395015717	154
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.8	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.226619005203	17
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	2.25374317169	243
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.242008924484	18
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.183081150055	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.2.1.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.239484071732	17
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.18.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	9.08932614326	1466
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	5.29094290733	117
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	4.23723101616	117
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.201670885086	8
Coq.Reals.DiscrR.IZR_eq	40	3.0	synth with cache (only 1: intros; only 1: now Morphisms.f_equiv).	0.119884967804	5
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	1.2.1.1.2.1.7.4.1	synth with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: split; only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	11.9921071529	3592
Coq.Reals.ConstructiveReals.CReq_sym	40	2.2.17.2	synth with cache (only 1: intros n m Hm (q, Hq); only 1: split; only 1: assumption; only 1: assumption).	32.119768858	7616
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	4.1.0.4.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: assumption).	5.66105985641	725
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	0.1.1.0.0.1.3.0.0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: assumption; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: assumption).	28.7515239716	4129
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	1.4.0.1.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with *).	1.78633499146	117
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	12	synth with cache (only 1: auto).	1.55715918541	256
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0	synth with cache (only 1: apply CReal_isRingExt).	0.775454044342	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.130249977112	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	5.1.0	synth with cache (only 1: intros; only 1: ring_simplify; only 1: easy || now destruct 1).	0.751111984253	9
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.085107088089	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	6.2	synth with cache (only 1: intro r; only 1: ring).	1.80158615112	163
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0925419330597	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	15	synth with cache (only 1: trivial).	0.533762931824	231
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	1.316644907	89
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	3.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.123986005783	6
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.233981132507	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0995709896088	6
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0924119949341	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	7.0	synth with cache (only 1: intros; only 1: auto with real).	0.204802036285	24
Coq.Reals.R_sqr.Rsqr_div	40	1.13.18.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: auto with real).	29.1825020313	7438
Coq.Reals.R_sqr.Rsqr_eq_0	40	0.0.16.2	synth with cache (only 1: intros; only 1: apply Rsqr_0_uniq; only 1: rewrite H; only 1: exact eq_refl).	28.4289050102	4173
Coq.Reals.R_sqr.Rsqr_minus_plus	40	3.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.125763177872	5
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.108650922775	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.1.3.8.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	24.1905050278	3438
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.14.1	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	7.39460110664	1274
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.4.4.1.0	synth with cache (only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: unfold is_subdivision; only 1: apply existT with x; only 1: apply H).	3.24864721298	260
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.0.0.0.0.0.3.3	synth with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (S (S (2 * n))); only 1: replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	10.5580348969	1523
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	7.0	synth with cache (only 1: intros; only 1: apply derivable_id).	0.268249034882	16
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	11.2	synth with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	37.7963619232	3190
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	13.1.1	synth with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: lra).	24.848184824	3144
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40	1.17.1	synth with cache (only 1: intro; only 1: fix le_div2 1; only 1: auto).	36.1596951485	8787
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40	5.1.8.18.3	synth with cache (only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	21.6466159821	5757
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40	3.4.2	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto).	0.789026975632	100
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.125387907028	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.11908197403	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.118005990982	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	1.23683810234	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a b c; only 1: symmetry; only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.687225103378	39
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.393121004105	28
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.1.0.4.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.290775060654	19
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.133023023605	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.132416963577	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.28339099884	13
Coq.Reals.Rlimit.eps4	40	19.1.3	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: field).	26.0037920475	4057
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros a Ha; only 1: lra).	0.0943381786346	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0987601280212	4
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	0.1.0.0.1.12.0	synth with cache (only 1: intros; only 1: subst; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	15.8241109848	2119
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.206404924393	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.148362874985	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.3.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.719681024551	77
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.224988937378	7
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.197885990143	8
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	4.1.4.0	synth with cache (only 1: intros x y H H0; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	5.99696493149	555
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	23.9	synth with cache (only 1: intro abs; only 1: eauto).	9.38554883003	2504
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: auto).	0.3607609272	31
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.190957784653	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.170717000961	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40	8.3.0.0.3.1	synth with cache (only 1: intro x; only 1: rewrite <- (sin2_cos2 x); only 1: rewrite double; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring_Rsqr).	27.6809470654	3641
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.2.0.1.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	8.50498604774	669
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.239362001419	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.188789844513	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.6.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.470338106155	50
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.20726108551	10
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.5.4.0.1.0	synth with cache (only 1: destruct pi2_int; only 1: destruct pi2_int; only 1: destruct pi2_int; only 1: unfold Rdiv; only 1: unfold PI; only 1: lra).	18.9891400337	1434
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.9.3	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).	6.84704494476	656
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	1.1.0	synth with cache (only 1: unfold Rdiv; only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.155151128769	5
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.1	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.351027011871	9
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.1.1.0.1.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	34.8715839386	2022
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	synth with cache (only 1: reflexivity).	0.0716679096222	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	4.0.0.0	synth with cache (only 1: intros Un pr; only 1: unfold Un_cv; only 1: intros; only 1: assumption).	0.158046007156	8
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	6.4.0.0.6.3	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	14.0892729759	3234
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.198096990585	6
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.3.0.2.3.8.0.1.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: simpl; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: trivial).	30.4891648293	9374
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	4.85832500458	520
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.3.0.0.4.0.3.8	synth with cache (only 1: intros a b; only 1: destruct a; only 1: reflexivity; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	34.0583529472	6972
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	8.37113595009	1506
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.7	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.132890939713	33
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.2.0.2.8	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.63357114792	457
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.2.0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: tauto; only 1: apply H).	0.166315793991	24
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	0.0.10.0.11	synth with cache (only 1: induction 1; only 1: intro abs; only 1: apply (CReal_lt_le_trans _ x); only 1: trivial; only 1: trivial).	24.2533171177	2787
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	9	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.333609104156	69
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	8	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.265143871307	52
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.1.0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	8.13186907768	1007
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	6	synth with cache (only 1: trivial).	0.192881822586	7
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	2	synth with cache (only 1: auto with *).	0.0575108528137	3
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	4.1.0.6	synth with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	5.71530604362	1058
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	0.2.1.5.9	synth with cache (only 1: intros p q H H0; only 1: intro abs; only 1: apply H0; only 1: apply CReal_plus_lt_compat_l; only 1: trivial).	10.9068760872	3310
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.2.1.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	0.400763988495	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	39.7880749702	3539
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0661401748657	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.184273958206	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.283658027649	19
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.21.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	13.9775979519	2581
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	2.0.0.1	synth with cache (only 1: intros; only 1: unfold sin; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.496248960495	33
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.0	synth with cache (only 1: split; only 1: eauto with real; only 1: eauto with real).	0.169106960297	3
Coq.Reals.Rgeom.isometric_translation	40	3.13.0.2	synth with cache (only 1: intros x0 y0 x1 y1; only 1: intros; only 1: vm_compute; only 1: ring).	13.8342690468	1965
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.14.0	synth with cache (only 1: intro; only 1: apply pow_nonzero; only 1: now apply not_0_IZR).	18.5166358948	3783
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	4.1.7.30	synth with cache (only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	14.3942110538	7415
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.1.1.0.1.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	3.16010284424	451
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0	synth with cache (only 1: auto).	0.0721299648285	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.0	synth with cache (only 1: unfold empty, Empty; only 1: auto).	0.0825970172882	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3	synth with cache (only 1: unfold create; only 1: auto).	0.173946142197	21
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0714528560638	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.0.5	synth with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0981719493866	8
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.2	synth with cache (only 1: destruct m; only 1: reflexivity; only 1: auto).	0.102344989777	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	7.13.1.9	synth with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	14.862760067	5151
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	8.4.1.7.3	synth with cache (only 1: intros m x y e; only 1: red; only 1: simpl; only 1: intuition; only 1: eauto using add_2, add_3).	23.6548860073	7702
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	4.3.11	synth with cache (only 1: vm_compute; only 1: intros m x e; only 1: auto using Proofs.find_1, find_2).	3.47402596474	1042
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	0.3.2.6	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	1.58032011986	447
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	19.2.0.1.4.7.8.2	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion H).	38.2588870525	18369
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	1.11.10.0	synth with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	2.57556915283	1137
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	2	synth with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0821270942688	3
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.0.0.9.3.3.1	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	10.1318287849	2854
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.131283998489	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.129971981049	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.0.0.26.2	synth with cache (only 1: intuition; only 1: induction H; only 1: auto; only 1: auto; only 1: auto).	37.9911339283	8241
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.8.11.7	synth with cache (only 1: intros m x y e; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	11.5025951862	4296
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	4.1.0	synth with cache (only 1: compute; only 1: intuition; only 1: intuition_in).	0.178122997284	8
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	5.8.3	synth with cache (only 1: intuition; only 1: intro; only 1: intuition_in).	2.7091012001	467
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.1.10.4	synth with cache (only 1: intuition; only 1: intro; only 1: intuition; only 1: intuition_in).	2.01483798027	413
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	4.9.9	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	11.0329630375	1334
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	1.0.9	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	6.48942017555	114
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0	synth with cache (only 1: eauto with ordered_type).	0.0712261199951	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0652780532837	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0644359588623	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.063325881958	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	2	synth with cache (only 1: eauto with ordered_type).	0.160092830658	18
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.140939950943	13
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.281748056412	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: auto).	0.0692598819733	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	32.1	synth with cache (only 1: unfold empty; only 1: inversion 1).	3.4133541584	1672
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	1.2.0.1.4.3.1.3	synth with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: discriminate).	14.3404269218	3607
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	2.1.2.0.5.3	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: easy; only 1: auto; only 1: auto; only 1: auto).	7.29621696472	1238
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.0.0.0.16.3.4	synth with cache (only 1: unfold gt_tree; only 1: unfold lt_tree in *; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	18.5627939701	6351
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	5.1.1	synth with cache (only 1: compute; only 1: intuition; only 1: intuition_in).	0.428629875183	19
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.2.2.0.1.0	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: simpl; only 1: auto).	2.25051307678	184
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	3.14.2	synth with cache (only 1: simpl; only 1: inversion_clear 1; only 1: split).	20.9006888866	2727
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	2.0.3.8	synth with cache (only 1: intros a n Hn; only 1: fix even_spec 1; only 1: intros; only 1: auto).	3.93143510818	811
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.1.0.1.0.1.2.12	synth with cache (only 1: intros hyp; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	14.6902420521	5748
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	0.0.0.2.3.4	synth with cache (only 1: induction m; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	1.73937892914	450
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.2.1.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	1.02177906036	145
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.22.5	synth with cache (only 1: intuition; only 1: apply find_2; only 1: auto).	5.36247897148	3467
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.2.1.6	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.93754696846	239
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	17.2.0.1.33.2	synth with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion H).	32.8400330544	24714
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	1.17.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	1.3775498867	611
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	2	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0979549884796	3
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	0.0.0.7.2.2.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	5.19207286835	1489
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	3.0.1.3	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: constructor).	0.448992967606	66
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.1357421875	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.1	synth with cache (only 1: intros; only 1: intuition).	0.138288021088	3
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1	synth with cache (only 1: intuition).	0.0625488758087	2
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	1.45	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	23.3645091057	12170
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	2	synth with cache (only 1: intuition).	0.0935339927673	15
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	2	synth with cache (only 1: intuition).	0.0921268463135	14
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	2	synth with cache (only 1: intuition).	0.100126028061	14
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.101203918457	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.451498031616	24
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	0	synth with cache (only 1: intuition).	0.10129904747	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	1.1	synth with cache (only 1: intro n; only 1: intuition).	0.0854921340942	4
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	1.2	synth with cache (only 1: intro n; only 1: intuition).	0.408149003983	17
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	1	synth with cache (only 1: intuition).	0.0922310352325	11
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.2.0.1.6.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	6.17078304291	567
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	18	synth with cache (only 1: firstorder).	3.50469708443	827
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	3.2.2	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: firstorder).	0.455096006393	43
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	13.11.0	synth with cache (only 1: unfold Equal; only 1: vm_compute; only 1: firstorder).	22.2970979214	7316
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	8	synth with cache (only 1: congruence).	0.102011203766	33
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.12.16	synth with cache (only 1: intros x y z H1 H2; only 1: intro H; only 1: auto).	8.99961090088	4715
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	3.4.0.7	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	9.13546609879	891
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.0	synth with cache (only 1: intros a b H; only 1: firstorder).	0.112910985947	12
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	2.7.5.7.11	synth with cache (only 1: unfold Subset, Empty, impl; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	16.9143559933	5635
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.0.7.1.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	2.36866211891	339
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	3.3.4.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	2.92767190933	438
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.1.4.3.2	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite inter_iff; only 1: destruct 1; only 1: auto).	3.57079005241	616
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	2.6.3.2	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	3.28293895721	703
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.14.9.3	synth with cache (only 1: intros; only 1: intro; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).	18.3671660423	5388
Coq.FSets.FSetPositive.PositiveSet.In_1	40	3.3.8	synth with cache (only 1: intros; only 1: inversion H; only 1: now subst).	3.81162405014	746
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.1.13	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	1.98751211166	537
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	5.6	synth with cache (only 1: intros y z H1 H2; only 1: now subst).	0.942028045654	150
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	3.1	synth with cache (only 1: intros; only 1: trivial).	0.0704281330109	6
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.3	synth with cache (only 1: unfold In; only 1: trivial).	0.0696771144867	5
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: reflexivity).	0.0708339214325	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.7	synth with cache (only 1: vm_compute; only 1: intuition).	0.165623188019	55
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	9.0	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.244905948639	51
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.4.11	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.464380979538	249
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	3.23	synth with cache (only 1: vm_compute; only 1: destr_bool).	3.40405797958	1368
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.25	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	27.9065420628	10468
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	1.0.1.0.2.0.6.1.4	synth with cache (only 1: vm_compute; only 1: intros x y z; only 1: destruct z; only 1: intros; only 1: now subst; only 1: intros; only 1: now subst; only 1: intros; only 1: now subst).	22.9193060398	4838
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.1.5	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.403028964996	91
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split).	0.104934930801	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.18	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: eauto).	3.22556614876	837
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.114575147629	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.5	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.122102975845	15
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0966432094574	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0926330089569	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0912880897522	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.23	synth with cache (only 1: intros [| ] [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	7.69361686707	3058
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.11	synth with cache (only 1: intros [| l' o' r']; only 1: reflexivity; only 1: reflexivity).	0.433475017548	146
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	2.4.4	synth with cache (only 1: intros n m p H; only 1: apply <- add_spec; only 1: auto).	0.562891960144	133
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	2.6.0	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.461881875992	66
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	2.16.9	synth with cache (only 1: intros A B H; only 1: rewrite remove_spec; only 1: tauto).	5.35843300819	1727
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.12.5	synth with cache (only 1: intros z n H; only 1: apply <- add_spec; only 1: intuition).	2.91960310936	702
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.0.1.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: auto).	0.468091964722	25
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s x y; only 1: rewrite inter_spec; only 1: tauto).	0.122645139694	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	1.3.2	synth with cache (only 1: intros a b c Ha Hb; only 1: rewrite inter_spec; only 1: auto).	0.110301017761	9
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.114593029022	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.1.3	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.149875164032	15
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	1.1.1.1	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.135687112808	11
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.1.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.107676029205	5
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.5.4.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.75635099411	175
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.2	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.112550973892	5
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40	2.36	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	7.99607086182	3057
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	0.0.2.0.1.2.1.1.29.7	synth with cache (only 1: intros q r; only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).	30.6896679401	17756
Coq.FSets.FMapPositive.append_assoc_1	40	0.0.0.5.0.0.5.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: f_equal).	20.0482070446	3617
Coq.FSets.FMapPositive.append_neutral_r	40	2.0.39	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	4.09422397614	3631
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.136418819427	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	31	synth with cache (only 1: now intros []).	3.29799890518	1249
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.142419099808	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.0.0.1	synth with cache (only 1: destruct i; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.166817903519	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.0.0.0.1.0.0.1	synth with cache (only 1: induction i; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.170558929443	10
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	5.2	synth with cache (only 1: intuition auto; ME.MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: congruence).	0.095419883728	9
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	1	synth with cache (only 1: auto).	0.0613090991974	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	1	synth with cache (only 1: auto).	0.0618829727173	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	3.18	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	1.97191309929	487
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	0.0.10.1.7	synth with cache (only 1: intro H; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: congruence).	10.8736319542	2917
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	2.0.0.0.0.4.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: discriminate).	7.33480191231	2798
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.102256059647	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	2.1.19.10	synth with cache (only 1: intros n m p q; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	7.92351484299	4153
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.2	synth with cache (only 1: destr_bool; only 1: intuition).	1.24575710297	13
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	7.1	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.0870661735535	15
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.10.0.4	synth with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	4.86927294731	1213
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.4	synth with cache (only 1: intros; only 1: intuition).	0.0730419158936	7
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.1.4	synth with cache (only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto with map).	0.140055894852	25
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	0.0.0.3.1.0.0.1.5.1.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	10.8276708126	4089
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.4	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.451286077499	59
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).	2.7697160244	644
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	4.3.0.0.0.2.0.1.0.3	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: auto).	29.2842950821	8933
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	4.2.3.1.0.0.2.3	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: discriminate).	27.4498748779	5780
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	3.3	synth with cache (only 1: intros; only 1: auto with map).	0.150724887848	20
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	3.3.2.2.5.3.2	synth with cache (only 1: compute; only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	21.221031189	4506
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	2.3.0.3.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	3.24132084846	401
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	2.3.1.2	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	2.05877995491	182
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	0.0.0.0.0.0.0.4.4.4.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: vm_compute; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	13.9632291794	2103
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	synth with cache (only 1: split).	0.0545840263367	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.1.2	synth with cache (only 1: red; only 1: compute; only 1: now simpl).	0.0949351787567	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	14.11	synth with cache (only 1: intros A x y z H1 H2; only 1: congruence).	21.6257550716	4738
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.0735721588135	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.0.4.4.0.4.2	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: split; only 1: auto; only 1: auto).	8.01751685143	1711
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.0.2.1	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	0.0949859619141	7
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	10.2.1.0.9.1	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with relations; only 1: intros; only 1: firstorder).	18.0570368767	3363
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	0.5.14	synth with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	1.27490401268	605
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.3.11	synth with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.977705955505	280
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	8.3	synth with cache (only 1: intros m1 m2; only 1: firstorder).	1.46959400177	361
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	2.1.2.0.6	synth with cache (only 1: intros; only 1: compute; only 1: intros; only 1: apply H with k; only 1: intuition).	1.00076603889	204
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	14	synth with cache (only 1: firstorder).	3.10181307793	305
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.783110141754	117
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	2.2.18	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	19.4321599007	6625
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	10	synth with cache (only 1: inversion_clear 1).	0.0427401065826	21
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.5	synth with cache (only 1: unfold Empty, empty; only 1: constructor).	0.0415968894958	7
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	0.25	synth with cache (only 1: fix even_spec 1; only 1: auto).	24.7368168831	1826
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	3.3.8.2	synth with cache (only 1: intros; only 1: induction 1; only 1: discriminate H; only 1: inversion_clear H).	4.34065485001	1053
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.232831954956	10
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0320770740509	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto).	0.0328872203827	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0	synth with cache (only 1: auto).	0.0360729694366	1
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	2.0.0.18	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	3.19063186646	1489
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	5.2.4	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).	0.852082014084	169
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	0.31	synth with cache (only 1: fix even_spec 1; only 1: auto).	6.04397416115	3596
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40	0.26	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	3.46954298019	2485
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	0.28	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	4.37239193916	2464
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.039370059967	1
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0387969017029	1
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	0.30.2	synth with cache (only 1: intros m; only 1: induction m; only 1: auto).	1.72831010818	1985
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0372920036316	2
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0.0.1.0	synth with cache (only 1: intro n; only 1: red; only 1: split; only 1: Dec.fsetdec; only 1: auto with fset).	0.155143022537	7
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: intros n m; only 1: intuition).	0.0784151554108	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.4	synth with cache (only 1: compute; only 1: firstorder).	1.36194610596	102
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	2.2.14	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).	6.04071688652	1322
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0.14.2.1	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	14.1709890366	2760
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.2.12	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	3.4188580513	554
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.1.0.0.0.0.4.2.0.0.1.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	22.3343229294	3284
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.21223306656	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	10.21.0	synth with cache (only 1: intuition; only 1: apply mem_1; only 1: eauto with set).	32.8266870975	9003
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.2	synth with cache (only 1: intro; only 1: auto with set).	0.0768868923187	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	1	synth with cache (only 1: auto with set).	0.0581920146942	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	1.5	synth with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.109470129013	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.539545059204	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	1.4.0.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.279704093933	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.586405038834	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set).	0.0583288669586	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	0.0.0.1.1.0.2.1	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	25.3031258583	1431
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.2.2	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.43528008461	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto).	0.0881488323212	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	5	synth with cache (only 1: auto with set).	0.0575749874115	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	7.23.3	synth with cache (only 1: intros; only 1: apply equal_1; only 1: eauto with set).	10.8460049629	3606
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	1.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0924429893494	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.4.1	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.089751958847	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0574271678925	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0807399749756	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	7.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: eauto with set).	1.53031396866	126
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0716519355774	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0735909938812	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0730710029602	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.2	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.150752067566	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	1.3.0.0.11.5.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: red; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	7.75792193413	1606
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set).	0.060338973999	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.121469020844	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	2.25.6	synth with cache (only 1: intros H; only 1: apply singleton_1; only 1: auto with set).	2.33324790001	1049
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	2	synth with cache (only 1: auto with set).	0.0641229152679	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	5.2.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.158087968826	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	1.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.16884803772	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0582420825958	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.0625529289246	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.0628809928894	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set).	0.0624170303345	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.059798002243	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.0592830181122	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.15717792511	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.0589759349823	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	4.2.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.154871940613	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0592939853668	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0586071014404	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.0629711151123	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0626609325409	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0621900558472	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0580339431763	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0600039958954	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0596528053284	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.270737886429	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0663900375366	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0832779407501	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.066682100296	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.063915014267	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0618259906769	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0773420333862	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.13.7	synth with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	7.86853790283	1833
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.0.2.0.0.0.3.3	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	3.13655996323	459
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.5.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.98208379745	413
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	5	synth with cache (only 1: auto with set fset).	0.0961310863495	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.3.4.2.1	synth with cache (only 1: intros a H; only 1: intro; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	4.29780697823	725
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.8.3	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.55780601501	360
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	1.0.0.0.1.0.1.1	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.853651046753	123
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	13	synth with cache (only 1: auto with set fset).	0.2987408638	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	9	synth with cache (only 1: solve_proper).	0.345853090286	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0882821083069	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).	0.226846933365	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	0.2.0.2.0.2.1	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	2.98273491859	342
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.5.4.0.19.1	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	37.2802450657	9983
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.2.0.2.6	synth with cache (only 1: red; only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	1.58878421783	119
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	18.1	synth with cache (only 1: simpl; only 1: eauto with set).	2.86668014526	1166
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.2.3.0	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.372315883636	107
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.6.3.0	synth with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	3.22514104843	607
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.1.2.2.1.2.2	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	3.22616577148	629
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.1.1.9	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	1.04219889641	294
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.2.3.3	synth with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.417947053909	90
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	4.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: intuition).	0.103258132935	15
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.1.1.3.3.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	2.51051306725	438
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.4.4.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	22.7214691639	2455
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.5.7.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	7.52894306183	1822
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0865640640259	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.1.1.5.11	synth with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	5.4884750843	2006
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.2.4.0	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.224797964096	41
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.1.4.11	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	3.33526706696	958
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	2.1.2.0	synth with cache (only 1: intros; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0738060474396	9
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.5.6.0	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	3.40370798111	658
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0720398426056	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.072722196579	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.2	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.148958921432	29
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.1.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	1.62470889091	27
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.1.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.3931620121	40
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0310719013214	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.1.2.2.0.10.10	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intuition; only 1: firstorder).	22.3674809933	9835
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.507253885269	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	7.0.0.1.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: destr_bool).	1.86706590652	389
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0933578014374	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	17	synth with cache (only 1: solve_proper).	9.67506098747	1441
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	2.44.2	synth with cache (only 1: intuition; only 1: repeat red; only 1: intuition).	11.5856759548	8127
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	1.2.8.0	synth with cache (only 1: split; only 1: red; only 1: intuition; only 1: intuition).	1.029971838	259
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.4.2	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.643882989883	37
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	2	synth with cache (only 1: intuition).	0.0622692108154	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	2	synth with cache (only 1: intuition).	0.361040830612	25
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	1	synth with cache (only 1: fsetdec).	0.166840076447	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: fsetdec).	0.072202205658	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	1	synth with cache (only 1: fsetdec).	0.101233005524	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.101041078568	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0949568748474	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	3	synth with cache (only 1: fsetdec).	0.142848014832	13
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	1	synth with cache (only 1: fsetdec).	0.108694076538	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	1	synth with cache (only 1: fsetdec).	0.108135938644	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	1	synth with cache (only 1: fsetdec).	0.176290988922	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	1	synth with cache (only 1: fsetdec).	0.100214958191	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: auto).	0.0622000694275	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	2.2.2.1	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.15495300293	123
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	1	synth with cache (only 1: fsetdec).	0.113451004028	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.100292921066	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	1	synth with cache (only 1: fsetdec).	0.196403026581	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.299643039703	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	3.3	synth with cache (only 1: intuition; only 1: fsetdec).	0.602375030518	52
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.221255064011	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	1	synth with cache (only 1: fsetdec).	0.32427406311	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.265450000763	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	2	synth with cache (only 1: fsetdec).	0.155441045761	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	1	synth with cache (only 1: fsetdec).	0.445488929749	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: fsetdec).	0.15057682991	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.193659067154	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.171891927719	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.222805023193	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.308660030365	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.159260034561	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.244779825211	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.437466144562	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.390328884125	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: fsetdec).	0.10170507431	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.099277973175	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.12251496315	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.122431993484	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.122140884399	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.138684988022	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.134244918823	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.2186191082	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.141268014908	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.224354982376	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.166931152344	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.25256896019	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.207762002945	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.326354980469	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.338560819626	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.283931016922	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.262772083282	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.123183965683	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.118547916412	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.125009059906	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0991199016571	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.117678880692	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.123959064484	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.272582054138	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.106920957565	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.251523971558	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.169950008392	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: fsetdec).	0.306818008423	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.258185863495	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	2.1.10	synth with cache (only 1: red; only 1: intro n; only 1: fsetdec).	1.72702097893	165
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.8	synth with cache (only 1: expAdd; only 1: fsetdec).	0.287309885025	10
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.3	synth with cache (only 1: expAdd; only 1: fsetdec).	0.391344070435	5
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.550889968872	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.499942064285	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.6	synth with cache (only 1: expAdd; only 1: fsetdec).	0.893856048584	38
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	0.13	synth with cache (only 1: fix le_div2 1; only 1: auto).	9.31922101974	1174
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.11.7	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).	1.46843886375	403
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.3.0.0.1.1	synth with cache (only 1: intros x y z; only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto with *).	0.627033948898	78
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	9.7.0.4.0	synth with cache (only 1: intro n; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: auto with set).	16.5409469604	3998
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	3.0.0.0.0.8.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	5.63807988167	1238
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.4.7.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	7.79685688019	1757
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.3.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0898189544678	6
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.19.0.6.15	synth with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	30.6018929482	14471
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.1.3	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: fsetdec).	0.123227119446	9
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	9	synth with cache (only 1: intuition).	0.221327066422	38
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.3.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.331502914429	38
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	1.1.6.9	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	12.8909871578	2831
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	synth with cache (only 1: auto with set fset).	0.0604560375214	2
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0985898971558	4
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0977549552917	4
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1.0	synth with cache (only 1: unfold decidable; only 1: auto).	1.07573986053	3
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.343957901001	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto).	0.104629993439	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	18	synth with cache (only 1: fsetdec).	8.63378787041	796
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	synth with cache (only 1: fsetdec).	0.127404928207	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	14	synth with cache (only 1: fsetdec).	3.21992301941	291
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	7.0	synth with cache (only 1: intro n; only 1: intuition).	0.0977101325989	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	4	synth with cache (only 1: fsetdec).	0.211933851242	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	13	synth with cache (only 1: fsetdec).	1.86381101608	257
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	9	synth with cache (only 1: fsetdec).	0.349336862564	18
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	7	synth with cache (only 1: fsetdec).	1.06233716011	39
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	1	synth with cache (only 1: fsetdec).	0.235991954803	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	8	synth with cache (only 1: fsetdec).	1.15199780464	63
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	3	synth with cache (only 1: fsetdec).	0.326323032379	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	3	synth with cache (only 1: fsetdec).	0.434545040131	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.3.1	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.144442081451	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	5	synth with cache (only 1: fsetdec).	0.28537106514	27
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	9.8	synth with cache (only 1: intros n m; only 1: fsetdec).	9.92795491219	1682
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.2	synth with cache (only 1: intro; only 1: fsetdec).	0.133372068405	4
Coq.FSets.FMapList.Raw.Elt.empty_1	40	13	synth with cache (only 1: inversion_clear 1).	0.0748910903931	60
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	1	synth with cache (only 1: constructor).	0.0293910503387	2
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.6.8.2	synth with cache (only 1: intros; only 1: induction 1; only 1: inversion_clear H; only 1: eauto with *).	5.84533905983	1730
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0339357852936	1
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto with ordered_type).	0.034120798111	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	0	synth with cache (only 1: auto).	0.0308680534363	1
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.3.2.0.1.0.2.2	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	4.97422885895	1228
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.3.0.2.1.0.2.3	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear 1; only 1: auto).	17.6870839596	3815
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.2.2.2.0.0.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	3.72071099281	661
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	6.3.9	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).	1.09167003632	360
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40	0.39	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	21.8177938461	15509
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0435380935669	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0431590080261	1
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.26.2	synth with cache (only 1: intros m; only 1: induction m; only 1: auto).	1.39945602417	1342
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0398449897766	2
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.11	synth with cache (only 1: fix odd_spec 1; only 1: auto).	1.63756489754	421
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	0.17.41.7	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: constructor; only 1: auto).	17.8247408867	49185
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.7	synth with cache (only 1: constructor; only 1: auto).	0.026358127594	13
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.3.2	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0513710975647	8
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.5.3.8.13	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	2.05523204803	3225
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	1.7	synth with cache (only 1: constructor; only 1: auto).	0.0199508666992	10
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	1.0.10.6	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.678088903427	716
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	3.1	synth with cache (only 1: red; only 1: auto with sets).	0.0201969146729	6
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.8.4.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	0.57407784462	271
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.8	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.77895998955	842
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	4	synth with cache (only 1: now induction d).	0.0209600925446	5
Coq.Numbers.DecimalFacts.norm_invol	40	10.10.26	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	9.43068385124	5987
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	2	synth with cache (only 1: now induction d).	0.0719509124756	3
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	53.7	synth with cache (only 1: simpl; only 1: now destruct n).	18.045347929	8057
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	15.5	synth with cache (only 1: intros H; only 1: now induction d).	5.28241491318	1264
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	2	synth with cache (only 1: apply of_lu_double_gen).	0.0643701553345	3
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	2	synth with cache (only 1: now induction d).	0.0604231357574	3
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.0617179870605	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0629580020905	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.1	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0909259319305	4
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	11	synth with cache (only 1: now induction d).	5.99250602722	754
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	4.4.3.4.9	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: unfold norm; only 1: now destruct nzhead).	35.7856490612	3901
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	2.2	synth with cache (only 1: simpl; only 1: auto).	0.0641119480133	6
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	1.0	synth with cache (only 1: simpl; only 1: now induction d).	0.116181135178	3
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	11.0	synth with cache (only 1: unfold Nat.of_uint; only 1: now induction d).	2.87053394318	419
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	4.5.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).	0.646358966827	107
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	5.5.10	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	2.10489296913	750
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	14.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Unsigned.of_to).	22.4159629345	3624
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0520448684692	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0869150161743	6
Coq.Numbers.DecimalN.Unsigned.of_iff	40	1.2.0.1.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.345144987106	37
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40	7.8.7	synth with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	4.01973509789	1018
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1.0	synth with cache (only 1: intros; only 1: auto).	0.0876700878143	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	3.0.5	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: auto).	0.415122032166	93
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.391277074814	18
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.0.12	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: simpl in *; only 1: now nzsimpl).	0.521652936935	142
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.178872108459	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.217402935028	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.312417030334	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.0.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.358612060547	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	9.0.0.2.2	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: intro; only 1: now nzsimpl).	16.4489860535	2064
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.1.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.3850440979	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.463873147964	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.1.0.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.670267105103	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	1.4.0	synth with cache (only 1: intros; only 1: apply le_ngt; only 1: now nzsimpl).	0.221701860428	17
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.2.1	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.109897851944	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0508961677551	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0506551265717	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0552458763123	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0501539707184	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.13.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	28.4360179901	5156
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.388969898224	44
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0767438411713	16
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.0.1.0.0.2.2.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	4.36370301247	1070
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0503380298615	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	2.4.2.1.7	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	30.6662020683	4297
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.1.30.0	synth with cache (only 1: intro n; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now nzsimpl).	24.7194440365	8168
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.2.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.521958112717	51
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.2.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.482142925262	50
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	1.2.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.506829023361	49
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.115166902542	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.0628988742828	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.0623798370361	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.14.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now try order').	1.41777706146	730
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	0.4.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0804109573364	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.063264131546	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.0618109703064	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	1.0.8.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.71215891838	611
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	1.0.10.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.9378631115	740
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0708849430084	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0706119537354	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.3.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.20289182663	24
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: symmetry; only 1: now f_equiv).	1.09211993217	197
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.505089998245	27
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.211292028427	24
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	6.10.3.4	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- (sub_simpl_r n m)  at 1; only 1: apply abs_nonneg).	26.8990941048	8500
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.0.1.0.1	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.124945163727	19
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.262816905975	39
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.423317193985	121
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.147547960281	12
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	4.0.0.0.9.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	25.6418569088	5693
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.8.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.70916891098	134
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.2.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	5.04690313339	694
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	15.4041399956	3022
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	7.88795399666	1302
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.7.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	21.8834068775	5851
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.66705513	262
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	2.1.0.3.3	synth with cache (only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.75613999367	689
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.7.0	synth with cache (only 1: intro n; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0784540176392	14
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.5.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0495190620422	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0494680404663	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.18.0	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	12.3193459511	5365
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.1.7.12.0.0	synth with cache (only 1: intros n m LE; only 1: apply lt_succ_r in LE; only 1: apply lt_le_incl; only 1: apply lt_succ_r in LE; only 1: apply lt_pred_le; only 1: order).	25.5870289803	9713
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	5.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.616194963455	74
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.5.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	3.28693604469	465
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.10028386116	20
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.1.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.920000076294	132
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.6.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.358086109161	42
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.1.2	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.304578065872	59
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.2.0.1	synth with cache (only 1: unfold sgn; only 1: intro n; only 1: intro H; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.138797998428	24
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.2.0.6.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.614545106888	178
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.12	synth with cache (only 1: apply abs_eq; only 1: order).	0.166628837585	114
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.4.10.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	27.6669850349	6132
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.1.0.0.0.0.11.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	9.50678086281	2068
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0504150390625	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	5.1.1.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto using eq_refl, le_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.950623989105	122
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.29	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.653384923935	593
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.2.2.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.996670007706	278
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.4.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	3.44624495506	447
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0888090133667	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0644919872284	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.063040971756	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	3.0.2.0.1.2.1.0.0.0	synth with cache (only 1: intro; only 1: intro; only 1: intro H; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: destruct (mod_neg_bound a b); only 1: auto; only 1: auto).	21.5396990776	4259
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.103389024734	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.293318033218	30
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.2.3.4	synth with cache (only 1: Bool.destr_bool; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	1.80096507072	668
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0680770874023	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0678699016571	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.474565982819	63
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	3.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.671738147736	60
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.248783111572	36
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.9.0.1.1.2	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	8.71055793762	1641
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	5.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	5.28028893471	640
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	2.0.3.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	1.39016914368	224
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0937788486481	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.2.1.3.0	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	1.03848099709	112
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0914950370789	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.181412935257	21
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	7.02277803421	786
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.0.2.2.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: auto).	5.89504003525	1168
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.464262008667	41
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.944197893143	48
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.2.12.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	16.5029690266	2498
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.2.2.2.1.1.1.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	9.45560121536	1773
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.1.2.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	2.76576685905	415
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	5.1.0.9	synth with cache (only 1: intro p; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now nzsimpl).	30.9977509975	4812
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	2.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: apply add_pred_l).	0.12028503418	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	0.093043088913	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.128895998001	30
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.2.7.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	9.59213709831	1785
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.11.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	2.82886505127	498
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	1.25196409225	106
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.3.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.126384019852	13
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	8.0.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	5.81011795998	1019
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0432078838348	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.20.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	19.1200921535	3593
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: auto using eq_refl, le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.65265917778	385
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.440394163132	50
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	5.0	synth with cache (only 1: intros; only 1: auto using mod_small).	0.383919000626	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	2.1.0.0.8.3.0.0	synth with cache (only 1: intro n; only 1: intros NEQ; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: auto using eq_refl, le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	29.8107149601	9428
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.1.2.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.21652197838	383
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0633230209351	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0634632110596	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.11.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	8.24847412109	2043
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.1.10.5.9	synth with cache (only 1: rewrite mul_comm; only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: now f_equiv; only 1: auto).	11.7342329025	3785
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.2.0.0.1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: intro H1; only 1: order; only 1: auto).	12.6199698448	2166
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.221769094467	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	1.3.4.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	4.3808619976	956
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0906231403351	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.2.1.2.0	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	1.50883507729	256
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0860719680786	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.1.1.2.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.0767159462	500
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.1.1.4.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.939494133	1014
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.8.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	3.73417305946	562
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.6.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	15.0786781311	1980
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.4.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.50309896469	451
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.1.4.1.2.3.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	18.2118940353	3192
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	2.1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	7.68232417107	1111
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	2.2.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: BinInt.Z.order).	0.241190910339	18
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	2.7.13.0	synth with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	7.18359899521	1846
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.9.1	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.501909017563	94
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).	0.089183807373	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0	synth with cache (only 1: reflexivity).	0.0581910610199	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	2.0.0.4.2	synth with cache (only 1: intros n m; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).	1.05480909348	156
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.8.5	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	32.3332078457	210
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0572128295898	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.141817092896	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.0.0.0.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.132555007935	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).	0.105005025864	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.9	synth with cache (only 1: destruct x; only 1: reflexivity).	5.35364699364	31
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).	1.09465098381	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	5.2	synth with cache (only 1: destruct x; only 1: now injection 1).	1.41187095642	37
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.11.1	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	1.60192990303	225
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	1	synth with cache (only 1: reflexivity).	0.0565900802612	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0	synth with cache (only 1: reflexivity).	0.0558409690857	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.2.5	synth with cache (only 1: Bool.destr_bool; only 1: destruct x; only 1: reflexivity).	0.148567914963	22
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	1.0.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.56753182411	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.0	synth with cache (only 1: vm_compute; only 1: trivial).	0.0855731964111	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0	synth with cache (only 1: reflexivity).	0.0696260929108	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0	synth with cache (only 1: auto with zarith).	0.0741329193115	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: reflexivity).	0.0670049190521	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0680599212646	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0	synth with cache (only 1: auto).	0.0710740089417	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.0	synth with cache (only 1: intros x y; only 1: auto).	0.0791888237	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.090558052063	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.2	synth with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.191545963287	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	5.2.0	synth with cache (only 1: intro n; only 1: simpl; only 1: apply spec_sub_c).	0.355996847153	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.408344984055	18
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0909650325775	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.18129992485	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	6.1	synth with cache (only 1: destruct x; only 1: apply Zeq_is_eq_bool).	0.436223983765	54
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	5.8.2.5	synth with cache (only 1: intuition; only 1: red; only 1: apply Z.lt_gt; only 1: Z.order_pos).	3.25352287292	887
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.112589120865	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0	synth with cache (only 1: unfold wB, base; only 1: auto with zarith).	0.0744321346283	2
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: Z.order; only 1: auto with zarith).	0.135772943497	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.3.0.0	synth with cache (only 1: unfold to_Z, zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.249290943146	29
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0	synth with cache (only 1: trivial).	0.0566310882568	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.12.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	4.1109919548	834
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	3.8.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	7.66745090485	1039
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.1	synth with cache (only 1: intros; only 1: trivial).	0.0829389095306	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	0.1.9	synth with cache (only 1: compute; only 1: intros x ->; only 1: apply spec_zdigits).	2.65760707855	98
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	2	synth with cache (only 1: auto with zarith).	0.0639710426331	3
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	40.0336968899	2830
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	0.105675935745	3
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).	0.0907101631165	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	2	synth with cache (only 1: discriminate).	0.0708000659943	3
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.0	synth with cache (only 1: red; only 1: reflexivity).	0.0843658447266	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: reflexivity).	0.0714640617371	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: exact eq_refl).	0.0706729888916	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	17	synth with cache (only 1: congruence).	2.81505203247	183
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.24.1	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	6.86617612839	3561
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.7.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.146261930466	20
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.0.29.0	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	26.9736938477	9945
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	4.6.1.13	synth with cache (only 1: compute; only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: auto using eqb_correct, eqb_complete).	11.8404510021	4069
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	24	synth with cache (only 1: apply subc_spec).	1.50390195847	387
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	2	synth with cache (only 1: apply sub_spec).	0.0883991718292	3
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0721230506897	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	4.2	synth with cache (only 1: intros E; only 1: now rewrite E).	0.110926866531	8
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.200392007828	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.1.1.100	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).	33.4941680431	31621
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: reflexivity).	0.0700378417969	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	2.1.1	synth with cache (only 1: intro; only 1: subst; only 1: apply negb_involutive).	0.127050161362	7
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.114407062531	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.113728046417	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.454189062119	56
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.147355079651	7
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	12.37	synth with cache (only 1: intros x P Hzero Hpos Hneg; only 1: firstorder).	38.292963028	27152
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	18	synth with cache (only 1: auto using eqb_correct, eqb_complete).	2.31099510193	757
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.359599113464	10
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	16.0.0.2.0.0.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now reflexivity; only 1: red; only 1: easy; only 1: congruence).	36.2554168701	9731
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.0.0.0.2.5.15	synth with cache (only 1: unfold base; only 1: transitivity 1; only 1: Z.order'; only 1: apply Zpower_gt_1; only 1: auto with zarith; only 1: unfold Z.lt; only 1: reflexivity).	13.4003620148	3307
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	2.1.1.1.0.41	synth with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: intuition; only 1: pose proof gt_wB_1; only 1: lia).	10.991353035	3290
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.0	synth with cache (only 1: zify; only 1: reflexivity).	0.108033895493	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	synth with cache (only 1: auto).	0.18798995018	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.0.0.0	synth with cache (only 1: intro; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.160367965698	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.0.1	synth with cache (only 1: intros; only 1: zify; only 1: reflexivity).	0.122741222382	4
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	synth with cache (only 1: reflexivity).	0.0661599636078	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0634870529175	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.06525182724	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0309269428253	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.0.2.0.5.10	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	4.65720891953	2624
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	5.2.0.6.0.4.1	synth with cache (only 1: intro n; only 1: induct ltac:(m); only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intro; only 1: intros _ H; only 1: apply lt_0_succ).	15.6276869774	5973
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.1.0.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.149688005447	33
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.4.0.0.0.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.79470992088	420
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.0.5.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.14004611969	32
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.1.0.0.0.7.2	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite lt_succ_r; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	12.3126900196	3272
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.11.5.0.1	synth with cache (only 1: intros n m p Hp; only 1: intro H; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto).	25.0238490105	8347
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.1.0.0.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl').	0.0941870212555	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.3.2.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	1.17456102371	280
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.14.1	synth with cache (only 1: intros n m H; only 1: apply div_small; only 1: split; only 1: apply le_0_l; only 1: order).	14.5324940681	4085
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.7.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_l; only 1: order).	0.754920005798	164
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0556991100311	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.202821016312	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.15.1.1.0.4.2.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').	36.4576430321	16894
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	3.0.4.1.4	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	2.71883583069	1054
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0442299842834	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.044713973999	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.20.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	12.530962944	5696
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.3.1.0.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: apply div_str_pos; only 1: auto).	0.162898778915	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.5.0.9.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	16.3933980465	5400
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	2.2.2.4	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	4.57861185074	1122
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.0688531398773	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	3.3.2.6.0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	27.501709938	5431
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.11572599411	17
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.1.0.0.0.0.0.0.0.2.1.0.4.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H; only 1: rewrite <- neq_mul_0; only 1: intuition).	32.5429520607	5765
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.0.1.0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small_iff; only 1: intro H1; only 1: now apply H; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.259835958481	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.9.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	2.41309905052	525
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.11.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	4.06501293182	943
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.5.3.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	4.85281610489	897
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.9.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	2.61542415619	506
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.0.0.11.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	7.77134990692	1498
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.8.7.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	31.2351050377	6419
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.2.1.2.1.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: intro H1; only 1: now apply H).	6.53554105759	865
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.1.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0768210887909	8
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	8.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.119348049164	25
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.2.1.3.1	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: now exists n).	0.84722495079	184
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.1.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.2437748909	39
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	0.0.2.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	0.0942680835724	9
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	2.21	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.994824171066	283
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.1.17.13.1	synth with cache (only 1: intros; only 1: unfold even; only 1: rewrite recursion_succ; only 1: auto; only 1: reflexivity; only 1: f_equiv').	9.47734618187	5999
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	5.3.22	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: now nzsimpl).	12.238079071	3421
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.19.1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	35.3062520027	10057
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.6.1	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	1.39785408974	296
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	4	synth with cache (only 1: intuition).	0.0795040130615	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.1.5.3.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	5.62436485291	1866
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	3.3.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.043359041214	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	1.3.4.1.4	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	9.83646297455	863
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	1.01803708076	125
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0306508541107	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	2.4.2	synth with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.322734117508	82
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.3.7.2	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	1.84968519211	626
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0901010036469	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0916419029236	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.181068897247	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.157757043839	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	2.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.0515429973602	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0495541095734	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now try order').	1.24922990799	415
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0670051574707	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0476758480072	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0479960441589	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.0.1.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0564999580383	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.84501600266	797
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.9.0	synth with cache (only 1: unfold natural_isomorphism; only 1: firstorder; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	1.4907951355	529
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.2.0.0.1.0	synth with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: now apply eq_le_incl; only 1: apply le_0_l; only 1: now nzsimpl).	0.202064990997	9
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.2.0.0.1.1.0.0	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.74084186554	310
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.4.1.0.0.1.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	13.0355761051	2825
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.1.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.584408998489	60
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.5.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: trivial; only 1: apply le_0_l).	1.32728791237	207
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	12.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	18.7653999329	2833
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.0926389694214	16
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.1.0.0.0.2.4.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	30.6286010742	4990
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.142809152603	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.4.0	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.0659208297729	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	6.20221686363	1358
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	3.3.6.1.2	synth with cache (only 1: intros a b Hb; only 1: intro H; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: trivial).	7.59176397324	3301
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.1.1.15.1	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	14.3298170567	5554
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.1.0.4.2.3.3	synth with cache (only 1: intros; only 1: assert (H' : b <= c) by order; only 1: destruct (le_exists_sub _ _ H') as (d, (EQ, Hd)); only 1: apply pow_lt_mono_r; only 1: trivial; only 1: apply le_0_l; only 1: trivial).	14.9816009998	3838
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.7.0.1.4.3.3	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	18.3784241676	7724
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	8.65890312195	1343
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.2.0.0.0.3.0.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	11.8995041847	1477
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	8.27005290985	1055
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0	synth with cache (only 1: firstorder).	0.0171661376953	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	1.04877185822	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0345151424408	3
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.0.1.0.2	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.690035104752	136
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.17.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	11.6342558861	2852
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0743429660797	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.6.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	2.32707691193	367
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	3.3.3.5.2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).	25.380865097	5264
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	17.9	synth with cache (only 1: intro E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	5.15844106674	1827
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	14.0.0.3	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).	8.59777188301	2006
Coq.Numbers.DecimalZ.of_inj	40	3.8.2	synth with cache (only 1: intros H; only 1: rewrite <- !Unsigned.to_of; only 1: now rewrite H).	2.83366394043	653
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.5.0.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: now nzsimpl; only 1: now nzsimpl).	0.939795017242	224
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.2.4.0	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.625145196915	149
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.0.2.0.0.8.12	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: intro H; only 1: tauto; only 1: order; only 1: intro n; only 1: order').	29.70195508	6140
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.0.3.0.5.0.14	synth with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: now nzsimpl'; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	16.9111540318	3396
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.80692696571	269
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.0.1.0.2.4.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	4.35683298111	1166
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').	1.14457392693	148
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.0573008060455	4
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0592060089111	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.3.0.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.430692911148	48
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	2.2.0.0.4.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.73552298546	1230
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0439169406891	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.140222072601	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.5.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.23102879524	139
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.144559144974	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0473709106445	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.2.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	1.94741606712	426
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.9.6.0.0.0.1.11.0	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	21.0452609062	10408
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.1.2.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	0.0753998756409	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.1.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto).	0.0371530056	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.03697681427	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.038987159729	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.036926984787	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.105654001236	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	synth with cache (only 1: order).	0.146630048752	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	3	synth with cache (only 1: order).	0.163261890411	43
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	5	synth with cache (only 1: order).	0.27688908577	65
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.4.1	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0411369800568	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.1.3.1	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	0.0926020145416	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.1.5.0	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.049644947052	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.3.1	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0443060398102	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.4.1	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0602440834045	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.4.5.0.5	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.27778100967	438
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.1.0.6	synth with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	5.25492501259	1233
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	1.45120096207	261
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	14.1.1.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intro H; only 1: intuition order).	27.0014901161	4649
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.1.4.0.2	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition; only 1: intuition order).	0.760210990906	143
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	4.3.0	synth with cache (only 1: intro n; only 1: Bool.destr_bool; only 1: intuition order).	0.69891500473	107
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0248601436615	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.1.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0628480911255	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.1.13.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	32.6825709343	8657
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0252649784088	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0249469280243	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.1.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0929899215698	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.0.1.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.130188941956	20
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.2.2.0.1.0.0.1	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	7.09465909004	1875
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	23.3	synth with cache (only 1: intros RS' n; only 1: intuition order).	0.853959798813	1025
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	0.0.2.6.2	synth with cache (only 1: intro H; only 1: compute; only 1: split; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	4.26789283752	569
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	2.2.2.12.3	synth with cache (only 1: intro H; only 1: compute; only 1: split; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	18.5235528946	3518
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	25	synth with cache (only 1: solve_proper).	0.853538990021	448
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.0.0.2	synth with cache (only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	0.100928068161	14
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.6	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	0.126148939133	28
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.2.16	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: auto).	2.23073005676	564
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	0.0.16	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.785879850388	471
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0706429481506	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.6.17	synth with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl').	13.2578611374	4075
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.1.0.4.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H1; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	12.7193210125	2311
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.0.0.0.1.0.17.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial).	7.41001486778	4141
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0710120201111	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.5.0.16.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	4.86256313324	2385
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0851581096649	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.3.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.43966293335	85
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.384594917297	22
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	13.9585599899	1949
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.88639998436	90
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.152804851532	22
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.7.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	1.82708597183	365
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.229634046555	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.221125125885	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.0.0.2.0.1.0.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	5.33270120621	1059
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	2.0.0.2.0.1.1.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	9.44553589821	2307
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.057687997818	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0574278831482	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	4.1.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.102523088455	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	4.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.187803983688	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0463309288025	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0484120845795	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	6.7.0.1.0.26	synth with cache (only 1: apply log2_unique' with 0; only 1: order; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl').	10.5513381958	4025
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.2.16.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	2.59112596512	1359
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.177560091019	13
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.1.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0362160205841	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	4.2	synth with cache (only 1: intros; only 1: firstorder).	0.0715320110321	28
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	9.05782794952	1302
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.0.7.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	28.6684920788	5401
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0579099655151	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0522038936615	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0622088909149	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0	synth with cache (only 1: reflexivity).	0.0175859928131	1
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2	synth with cache (only 1: now symmetry).	0.0187339782715	3
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0189030170441	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4	synth with cache (only 1: eauto using eq_trans, eq_sym).	4.36809396744	30
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	1.2.0.3.1.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite ?P.le_lteq; only 1: auto; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.88438391685	721
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	1.0.2	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.539908885956	105
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	2.9.6	synth with cache (only 1: intros (x1, x2); only 1: fix sqrtrem_spec 1; only 1: auto).	6.44705986977	1111
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.9	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.541917800903	149
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	14	synth with cache (only 1: intuition).	3.60946011543	837
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	12	synth with cache (only 1: Nat.order).	0.409921884537	136
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	25	synth with cache (only 1: Nat.order).	17.361604929	6183
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0663981437683	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.046756029129	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.0.12	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type).	0.614073991776	278
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	2.5.2.1	synth with cache (only 1: intros; only 1: destruct H; only 1: red; only 1: auto with ordered_type).	1.0387070179	224
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	10.13.0.11.0	synth with cache (only 1: intros x y z; only 1: vm_compute; only 1: intuition auto; MO2.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: MO1.order; only 1: MO2.order).	24.1246340275	10975
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	3.2.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.53663110733	107
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.0.22	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: eauto).	6.00803589821	3016
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: apply Pos.eq_dec).	0.0433421134949	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.2.1	synth with cache (only 1: intuition; only 1: now constructor; only 1: now constructor).	0.045608997345	8
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.11	synth with cache (only 1: vm_compute; only 1: auto).	0.64940404892	199
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.2.1	synth with cache (only 1: induction 1; only 1: red; only 1: auto).	0.154331922531	18
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	5.2.2.2.2.2	synth with cache (only 1: induction x; only 1: induction y; only 1: unfold eq; only 1: intros (x1, x2) (y1, y2); only 1: intros (U, V); only 1: eauto).	28.5709910393	3913
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	24.2.2.0	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	12.5478971004	8413
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.8	synth with cache (only 1: apply eqb_eq; only 1: firstorder).	0.161810874939	49
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	5.0.0.0.3.24.1	synth with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	3.55085301399	1982
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.0	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0571091175079	3
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	synth with cache (only 1: order).	1.04117894173	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0426931381226	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0439119338989	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	3.2	synth with cache (only 1: intro H; only 1: order).	0.217064857483	29
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	2	synth with cache (only 1: order).	0.342850923538	22
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	4	synth with cache (only 1: order).	0.362220048904	64
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	2	synth with cache (only 1: order).	1.03518795967	3
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0350589752197	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	2.0	synth with cache (only 1: intro H; only 1: intuition).	0.0469920635223	4
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	6.0	synth with cache (only 1: intro H; only 1: order).	0.11415886879	18
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0339992046356	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0333631038666	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0328619480133	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0312130451202	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	8.4.8.12.4	synth with cache (only 1: intuition; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).	20.1686339378	6848
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	3.07731199265	453
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	2.92103409767	342
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	3.0.0.3.0.3.6	synth with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: right; only 1: intro H; only 1: order; only 1: auto with ordered_type).	5.89182186127	1235
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	1.3.2.0.0.0.3	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	4.13151597977	687
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.1.0.4	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.104944944382	18
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	2.1.1.6	synth with cache (only 1: simple induction l; only 1: auto; only 1: intros x y z; only 1: auto with ordered_type).	0.47623705864	156
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.0	synth with cache (only 1: induction 1; only 1: auto).	0.046942949295	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: auto).	0.0325269699097	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0316939353943	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	1.2	synth with cache (only 1: intros; only 1: firstorder).	0.0466320514679	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	1	synth with cache (only 1: auto with ordered_type).	0.0303809642792	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	5.2	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).	0.0581080913544	13
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	1.0	synth with cache (only 1: induction 1; only 1: firstorder).	0.0478329658508	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	9.15.1	synth with cache (only 1: intros x y z; only 1: unfold eqk, eqke; only 1: order).	7.59929299355	3358
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	2	synth with cache (only 1: eauto with ordered_type).	0.0852599143982	17
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	4.1	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0446419715881	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	2.3.3.7.0	synth with cache (only 1: unfold eqk, ltk; only 1: intros; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	5.33996009827	1627
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	17.2.2.4	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	11.313824892	3843
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.1	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.17981004715	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.4.12.19.2	synth with cache (only 1: constructor; only 1: compute; only 1: intros; only 1: order; only 1: eauto with ordered_type).	4.83122396469	3555
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0418128967285	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0334780216217	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0329110622406	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.1.1.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	0.0732069015503	6
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	4.0.1.9.1	synth with cache (only 1: intros x y z; only 1: intro; only 1: induction 1; only 1: constructor; only 1: eauto with ordered_type).	3.58501696587	943
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	4.0.1.8.2	synth with cache (only 1: intros x y z; only 1: intro; only 1: induction 1; only 1: constructor; only 1: eauto with ordered_type).	4.70168113708	888
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.0.6.3.1.3	synth with cache (only 1: intros P x0 xs H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	6.11204504967	1249
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.6.1	synth with cache (only 1: inversion_clear 1; only 1: intuition; only 1: auto).	0.0850110054016	12
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.1.2.2.0	synth with cache (only 1: intros P x0 xs H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: compute in H0; only 1: intuition; only 1: auto).	0.10001707077	10
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.4	synth with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.0896899700165	28
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.1	synth with cache (only 1: autorewrite with order; only 1: easy).	0.0298919677734	5
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	10.5.18.10.4	synth with cache (only 1: constructor; only 1: repeat red; only 1: iorder; only 1: intros x y z; only 1: iorder).	4.44742107391	5986
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	10.2	synth with cache (only 1: compute; only 1: order).	1.47805380821	458
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	4.12	synth with cache (only 1: repeat red; only 1: iorder).	1.74536299706	898
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	synth with cache (only 1: iorder).	0.225656032562	21
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.7.1.1.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	2.61803293228	478
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	10	synth with cache (only 1: iorder).	0.377032995224	101
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	6.3	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.35954117775	84
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.1	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0926158428192	4
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.0	synth with cache (only 1: intro H; only 1: order).	0.0285770893097	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0292432308197	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0264348983765	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	5.3	synth with cache (only 1: intro H; only 1: order).	1.88796496391	16
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	synth with cache (only 1: order).	1.02154898643	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	synth with cache (only 1: order).	1.02078700066	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	synth with cache (only 1: order).	1.02098798752	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	4.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0560460090637	11
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	4.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0737431049347	15
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	3	synth with cache (only 1: order).	1.02198386192	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	7	synth with cache (only 1: order).	0.285895109177	61
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	1.2	synth with cache (only 1: intuition; only 1: order).	0.0314879417419	5
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	synth with cache (only 1: intuition).	0.0219130516052	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.1.1	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.131885051727	5
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0197508335114	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0197548866272	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0195229053497	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	synth with cache (only 1: order).	0.0192391872406	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	11.6.6.0	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	16.1023180485	7347
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	2.5	synth with cache (only 1: unfold lt; only 1: auto with *).	0.467401027679	55
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	1.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0260782241821	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	16	synth with cache (only 1: now apply compare_eq_iff).	0.240124940872	184
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	3	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.11762213707	30
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	4	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0267360210419	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.3.27	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	11.0458700657	5741
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.2.22.7	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: destr_bool; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	6.31297492981	5040
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.14.29	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	6.126527071	5377
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.4.1.0.0.2.11	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: apply ltb_ge; only 1: trivial; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	16.2776610851	6511
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.4.3	synth with cache (only 1: intros l x y H H'; only 1: subst; only 1: auto).	0.130868911743	24
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.1.1.0.2.3	synth with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	10.4564051628	1570
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.3.7	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	0.63818192482	143
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.3	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0901651382446	8
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	8.1.4	synth with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	1.37509512901	275
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	19	synth with cache (only 1: solve_proper).	9.66813421249	2179
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	6	synth with cache (only 1: eauto with *).	0.0427708625793	7
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	1.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0771851539612	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0517621040344	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	3	synth with cache (only 1: firstorder).	0.0390748977661	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	synth with cache (only 1: auto).	0.0337769985199	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: auto).	0.0344979763031	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	8	synth with cache (only 1: firstorder).	0.0581560134888	14
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0489950180054	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: auto).	0.0336208343506	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: auto).	0.0375881195068	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	synth with cache (only 1: auto).	0.0319738388062	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.3.1	synth with cache (only 1: induction 1; only 1: firstorder; only 1: auto).	0.102061986923	12
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	1.2.3	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.13481092453	16
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.17.4	synth with cache (only 1: firstorder; only 1: rewrite <- H; only 1: auto).	3.38910889626	1098
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.7	synth with cache (only 1: firstorder; only 1: inversion_clear H).	0.366456985474	55
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	6	synth with cache (only 1: now intros <-).	0.0526061058044	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	1	synth with cache (only 1: now intros <-).	0.127315044403	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.21	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).	6.91817307472	1872
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.2.8.3	synth with cache (only 1: intro; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now destruct 1; only 1: auto).	0.628259897232	188
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.5.5	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	1.98511600494	361
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: auto).	0.0430657863617	3
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0	synth with cache (only 1: auto).	0.0254220962524	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0255770683289	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	1	synth with cache (only 1: auto).	0.0254929065704	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0	synth with cache (only 1: induction 1; only 1: auto).	0.0395169258118	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	8.9	synth with cache (only 1: intuition; only 1: eauto).	3.95356702805	1025
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	8.0.0.3	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	1.79400205612	316
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.2	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0771520137787	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.2.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	0.627775907516	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.1.2.1.6	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto).	1.02418708801	220
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.7.2.3	synth with cache (only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: auto).	1.29225993156	254
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.1.2.4	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.489524841309	78
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	15	synth with cache (only 1: intuition).	0.49259519577	98
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.4	synth with cache (only 1: unfold eq; only 1: decide equality).	0.0403940677643	6
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0768849849701	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.1.1.0.1.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	5.18962287903	1554
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	7.7.5.4	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: intuition; only 1: order; only 1: order).	36.4391300678	3047
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	4.5.4.5.5.5.14	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: intuition order; only 1: intuition; only 1: intuition order; only 1: intuition order).	27.3988618851	15180
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	5.7	synth with cache (only 1: apply max_r; only 1: order).	0.255643129349	74
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.0.0.0.4.0.0.0.0.0.3.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: order; only 1: rewrite E', ?E; only 1: order; only 1: intuition; only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: order; only 1: rewrite E', ?E; only 1: order).	26.5396990776	5980
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.1.0.1.18	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	1.65304899216	702
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	1	synth with cache (only 1: solve_max).	0.0287351608276	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	4	synth with cache (only 1: solve_max).	0.112077951431	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0383400917053	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	1.1.0.1.1.1.0.2.1	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	4.30016899109	700
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	4	synth with cache (only 1: solve_max).	0.0584998130798	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	1	synth with cache (only 1: solve_max).	0.314705133438	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	5	synth with cache (only 1: solve_max).	0.0602171421051	13
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	1.5.1	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.158013820648	32
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	2	synth with cache (only 1: solve_max).	0.0318551063538	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	1	synth with cache (only 1: solve_max).	0.0704581737518	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.2	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.111199855804	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.3.4	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0870428085327	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.10	synth with cache (only 1: apply min_l; only 1: order).	0.0774321556091	47
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.1.1.1.12	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.832097053528	423
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.029464006424	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	7	synth with cache (only 1: solve_min).	0.277245998383	57
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0333788394928	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	6.04698300362	1278
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	1.0.0.0.1.0.0.1.2	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	10.4346129894	1100
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	10	synth with cache (only 1: solve_min).	0.27862906456	60
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	synth with cache (only 1: solve_min).	0.0311398506165	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	2.4	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).	0.0451879501343	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.4.2	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.165563106537	35
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	3	synth with cache (only 1: solve_min).	0.0334370136261	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2	synth with cache (only 1: solve_min).	0.0779268741608	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	1.0.1	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0560820102692	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.5.1	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.114693164825	26
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.7	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.145461082458	38
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.1.1.1	synth with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0787029266357	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.1.0.1.0.0.1.1.1.0.2.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	17.7853078842	4660
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.1.0.1.1.0.2.1.11	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	4.53846001625	1928
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.27	synth with cache (only 1: apply max_mono; only 1: eauto with *).	2.69178509712	2032
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.37	synth with cache (only 1: apply min_mono; only 1: eauto with *).	8.13184094429	6212
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.0.5.13.9	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	12.417522192	4495
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.2.1	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0487389564514	7
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.1.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.119436979294	30
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.1.14.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	1.62842297554	704
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.3.1	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0487580299377	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.2.3	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0511910915375	9
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.10.5.3	synth with cache (only 1: unfold eq; only 1: intros n m H; only 1: rewrite H; only 1: discriminate).	5.82810306549	1852
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.2	synth with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0443508625031	5
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.127476930618	8
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.2.0.2.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	2.22990489006	546
Coq.ZArith.Znat.positive_nat_Z	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.113775968552	8
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: reflexivity).	0.0570831298828	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: trivial).	0.0497300624847	1
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.128765106201	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.37	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	3.16893911362	1975
Coq.ZArith.Znat.Z_nat_N	40	0.0.1.0.0.0.1.0.0.39	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	7.57639193535	1776
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.0486040115356	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.292680025101	35
Coq.ZArith.Znat.N2Z.id	40	1	synth with cache (only 1: now destruct n).	0.0495841503143	2
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.0.23	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	17.5190880299	4853
Coq.ZArith.Znat.N2Z.inj_iff	40	3.5.0	synth with cache (only 1: split; only 1: apply N2Nat.inj; only 1: congruence).	5.926612854	531
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.6.39	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: easy).	2.67278504372	1601
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0509722232819	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.04518699646	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.1.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.991979122162	88
Coq.ZArith.Znat.N2Z.inj_le	40	2.0.1.1.1.1	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: simpl; only 1: intuition).	6.07392406464	477
Coq.ZArith.Znat.N2Z.inj_lt	40	1.0.1.1.1.9	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: simpl; only 1: intuition).	10.1787478924	1219
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40	5.3.10.3	synth with cache (only 1: unfold N.lt, N.gt; only 1: split; only 1: now destruct n, m; only 1: now destruct n, m).	6.76829409599	1184
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	3	synth with cache (only 1: now destruct n, m).	0.0634059906006	4
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0616698265076	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.104806900024	4
Coq.ZArith.Znat.N2Z.inj_pred_max	40	5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.110201835632	9
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.0.8.5.0.6	synth with cache (only 1: destruct n; only 1: intro; only 1: easy; only 1: induction p; only 1: trivial; only 1: trivial; only 1: intro; only 1: trivial).	29.840955019	4716
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.13.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	9.43915390968	1743
Coq.ZArith.Znat.N2Z.inj_quot2	40	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0997760295868	3
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	1.77649784088	223
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.100711107254	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	1.1.0.0	synth with cache (only 1: split; only 1: now apply Z2Pos.inj; only 1: symmetry; only 1: now f_equal).	0.0984370708466	6
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0614881515503	2
Coq.ZArith.Znat.Z2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0457799434662	1
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0595090389252	2
Coq.ZArith.Znat.Z2N.inj_add	40	2.4	synth with cache (only 1: intros; only 1: now destruct n, m).	0.0903768539429	8
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	8.16333699226	522
Coq.ZArith.Znat.Z2N.inj_succ	40	2.0.1.0.0.0.1.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	5.86477708817	537
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.4.1.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.118358135223	10
Coq.ZArith.Znat.Z2N.inj_compare	40	9	synth with cache (only 1: now destruct n, m).	0.979198932648	79
Coq.ZArith.Znat.Z2N.inj_le	40	3.3.10	synth with cache (only 1: intros; only 1: unfold N.le, N.ge; only 1: now rewrite N2Z.inj_compare).	7.31997489929	1267
Coq.ZArith.Znat.Z2N.inj_lt	40	1.2.0.0.0.0.0	synth with cache (only 1: intros Hn Hm; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: unfold N.lt, N.gt; only 1: now rewrite N2Z.inj_compare).	0.379469871521	27
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.0.0.2.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: trivial).	9.82764792442	921
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.131729125977	17
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.127357006073	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	4.1	synth with cache (only 1: intros; only 1: now destruct n).	0.0720541477203	7
Coq.ZArith.Znat.Zabs2N.id_abs	40	7	synth with cache (only 1: now destruct n).	0.809833049774	15
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0481970310211	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: reflexivity).	0.046667098999	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0438089370728	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0436151027679	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.125667095184	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.1.0.0.4.0.0	synth with cache (only 1: unfold Z.succ; only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	6.33237290382	751
Coq.ZArith.Znat.Zabs2N.inj_add	40	2.5	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	5.72415304184	367
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40	3.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	1.62112307549	75
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0838701725006	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	1.2407951355	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.0.1.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.467529058456	48
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	3	synth with cache (only 1: now destruct n, m).	1.51749587059	114
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0599679946899	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0503149032593	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	9.0.0.4	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	3.81767892838	780
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	11	synth with cache (only 1: now destruct n).	0.52046918869	108
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0842311382294	5
Coq.ZArith.Znat.Nat2Z.inj	40	16.1	synth with cache (only 1: intro H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	1.68876409531	585
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).	0.0937991142273	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.0.8.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	17.868942976	3281
Coq.ZArith.Znat.Z2Nat.inj	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0915770530701	4
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.1.0.0.1.0	synth with cache (only 1: split; only 1: apply Pos2Nat.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: now subst).	0.13247013092	8
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0472960472107	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0478417873383	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0465111732483	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	0.0.0.4.0.6.1.14	synth with cache (only 1: unfold Z.succ; only 1: intros; only 1: rewrite Z2N.inj_add by easy; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: now Nat.nzsimpl').	14.4065568447	4179
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0510430335999	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0671288967133	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.13	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	20.8379151821	3799
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.086268901825	6
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0454139709473	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0452539920807	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0459101200104	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0831599235535	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.082909822464	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	1.1.0.0.13	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	1.42266392708	224
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.2.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0958578586578	6
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.0.0.0.1.0.1.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	38.6585259438	7942
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.116310119629	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.1.1.1.2.1.2	synth with cache (only 1: intros n Hn; only 1: intros x y z; only 1: case Z.compare_spec; only 1: trivial; only 1: intros EQ; only 1: Z.order; only 1: intros EQ; only 1: Z.order).	11.6393389702	2268
Coq.ZArith.Zcompare.Zle_compare	40	4.0.1.18.0	synth with cache (only 1: intros a b H; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order).	9.11483693123	2258
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.3.5.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).	2.17753601074	354
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.125394105911	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0825159549713	2
Coq.ZArith.Zquot.Zquot_0_r	40	0.1.0.8.2.31	synth with cache (only 1: generalize 1%positive; only 1: intros H; only 1: induction a as [a IH| a IH| ]; only 1: reflexivity; only 1: trivial; only 1: trivial).	21.4763050079	8633
Coq.ZArith.Zquot.Zrem_0_r	40	25.1	synth with cache (only 1: Z.bitwise; only 1: now destruct a).	3.64438295364	1113
Coq.ZArith.Zquot.Zrem_0_l	40	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.0938849449158	2
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0615010261536	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: auto; only 1: auto).	1.56740784645	92
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.5.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	2.64925885201	124
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.5.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	1.62644886971	102
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.193389892578	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	0.0.2.11.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Z.mul_comm c b); only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	10.4008748531	2300
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.2.7.0	synth with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	5.96459889412	876
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.4.4	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.522713899612	88
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	8	synth with cache (only 1: constructor).	0.136130809784	23
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.0.1.0.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: auto).	0.140791893005	8
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	0.1.7.2.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: constructor; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	2.36752796173	700
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0837740898132	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.0683109760284	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.0651309490204	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	9.3	synth with cache (only 1: intros n m; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	2.0088570118	297
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	2.10.7	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: auto).	4.8740530014	1783
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.0633029937744	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	2.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	3.34696507454	492
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.11	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.437315940857	61
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.522374868393	36
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	42	synth with cache (only 1: now destruct n).	2.28035283089	1216
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.0484218597412	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.0479910373688	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.31	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	3.14457201958	804
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0433790683746	1
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0451629161835	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.044548034668	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0543730258942	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.7.0.1.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	17.6630520821	3815
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0631029605865	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0443840026855	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0436520576477	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.0404059886932	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0405399799347	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	2.0.0.7.0	synth with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: auto; only 1: easy || now destruct 1).	7.65371012688	778
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.3.0.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: intuition; only 1: intuition).	0.321645021439	35
Coq.ZArith.BinInt.Z.peano_ind	40	0.38.8	synth with cache (only 1: intros n m p; only 1: fix sqrtrem_spec 1; only 1: trivial).	30.3516099453	14072
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.4	synth with cache (only 1: intro H; only 1: now destruct n).	0.073371887207	8
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0945420265198	5
Coq.ZArith.BinInt.Z.sgn_null	40	1.0	synth with cache (only 1: intros H; only 1: now destruct n).	0.0688259601593	3
Coq.ZArith.BinInt.Z.sgn_pos	40	7	synth with cache (only 1: now destruct n).	0.447153091431	32
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.202754020691	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0512969493866	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.0.0.7.0.3	synth with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: intros; only 1: simpl; only 1: destr_eq H; only 1: now destruct 1 || intros _).	6.65586900711	925
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0685539245605	2
Coq.ZArith.BinInt.Z.square_spec	40	1.0.1.1.0.1.1.10	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	5.09223198891	735
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0557088851929	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.6.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	4.82261013985	801
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.0545170307159	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1	synth with cache (only 1: now destruct n).	0.238155126572	2
Coq.ZArith.BinInt.Z.succ_double_spec	40	4.1	synth with cache (only 1: simpl; only 1: now destruct n).	0.135678052902	7
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0533971786499	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.3	synth with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.831243991852	63
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	4.5.4.0.2.2.19	synth with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	21.601899147	6911
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.3.3.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	2.78486204147	468
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.1.0.0.1.1.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	2.31446790695	321
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.104324817657	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	10	synth with cache (only 1: now destruct n).	0.0802390575409	21
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	synth with cache (only 1: now destruct n).	0.0622630119324	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	5	synth with cache (only 1: now destruct a).	0.0575768947601	6
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	3.9.3.17	synth with cache (only 1: unfold lt, gt; only 1: intros H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: trivial).	11.5735750198	3587
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0850930213928	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	4.11	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	2.49517011642	484
Coq.ZArith.BinInt.Z.le_ge	40	1	synth with cache (only 1: apply ge_le_iff).	0.0824317932129	2
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	3	synth with cache (only 1: apply mul_cancel_l).	0.411777973175	18
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.9	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.255052089691	50
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	0.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: order').	0.215505123138	3
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: exact eq_refl).	0.166313171387	7
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0849380493164	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).	0.110816001892	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2.0.2.0	synth with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.148859977722	8
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	2.0.0.1	synth with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.148032903671	7
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: exact eq_refl).	0.0876779556274	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.105364084244	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.108196020126	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	3.1	synth with cache (only 1: simpl; only 1: now destruct p).	0.11057806015	6
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.105725049973	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	5.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).	0.123456954956	8
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.108035802841	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.0	synth with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	0.109792947769	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	synth with cache (only 1: trivial).	0.0894711017609	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: trivial).	0.0867421627045	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	2	synth with cache (only 1: trivial).	0.109524965286	11
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	2	synth with cache (only 1: reflexivity).	0.109786987305	12
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	1	synth with cache (only 1: reflexivity).	0.0884709358215	2
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	synth with cache (only 1: trivial).	0.0887579917908	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.0892159938812	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.5.0.2	synth with cache (only 1: simpl; only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).	7.9407491684	964
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0835819244385	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: congruence).	0.109251976013	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0830841064453	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: congruence).	0.106952905655	3
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: reflexivity).	0.0892610549927	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	synth with cache (only 1: easy).	0.0941600799561	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0884110927582	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0931468009949	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	10	synth with cache (only 1: easy).	10.1230199337	766
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.091362953186	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	3.0.4.5.0.1	synth with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: intros; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	10.5704579353	2326
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0	synth with cache (only 1: auto).	0.088968038559	1
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.136489868164	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0907871723175	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: reflexivity).	0.0914499759674	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0894799232483	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0897998809814	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0886650085449	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.087504863739	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0886559486389	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	synth with cache (only 1: trivial).	0.0902400016785	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0887849330902	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0883500576019	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.200839042664	9
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	synth with cache (only 1: apply Z.testbit_Zpos).	0.13197183609	16
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	17	synth with cache (only 1: now destruct x).	0.949725866318	400
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: exact eq_refl).	0.0878689289093	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2	synth with cache (only 1: now destruct x).	0.302988052368	28
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0969038009644	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	5.0.0.2.0.3.12	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	27.5102510452	6343
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.7.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: now destruct p; only 1: trivial).	1.46365618706	251
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.188275098801	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	1.1.1.4	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.410956144333	45
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.4	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.8481760025	45
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.5.0	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.83533501625	33
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.185389995575	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	5	synth with cache (only 1: now destruct x).	0.095752954483	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.187366962433	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	synth with cache (only 1: intros n1 n2 H; only 1: now f_equal).	0.103493928909	3
Coq.ZArith.BinInt.ZL0	40	1	synth with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.161615133286	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	3.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	0.738125085831	57
Coq.ZArith.BinInt.Z_eq_mult	40	6.3.2	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).	0.772091150284	178
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0570411682129	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.1.3.1.10.7	synth with cache (only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: auto with zarith; only 1: now try destruct p; only 1: simpl; only 1: easy).	10.1849148273	2226
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1	synth with cache (only 1: auto).	0.0423800945282	2
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40	5.4.0.0.4.0	synth with cache (only 1: intros H; only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	15.4227540493	2535
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.2.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.115876913071	14
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	1.1	synth with cache (only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0767059326172	4
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.4.0.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.13850402832	14
Coq.ZArith.Zeven.Zodd_quot2	40	5.2.1.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	2.46984887123	138
Coq.ZArith.Zeven.Zodd_quot2_neg	40	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [| | ]| [| | ]]).	2.2468931675	106
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.0.3	synth with cache (only 1: intro H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.534083843231	59
Coq.ZArith.Zeven.Zodd_ex	40	5.4.0	synth with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	4.18338799477	258
Coq.ZArith.Zeven.Zeven_2p	40	3.1.2.1.10.12.5	synth with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: easy; only 1: easy).	5.45843601227	2394
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	6.3.2.1.22.19	synth with cache (only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: easy; only 1: now destruct p).	13.231757164	6411
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.6.4.4.3.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	4.54078698158	1155
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.3.2.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.111041069031	10
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.2.2.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	1.52687597275	10
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	2	synth with cache (only 1: apply Z.divide_opp_r).	0.147527933121	31
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	3	synth with cache (only 1: apply Z.divide_opp_l).	0.150812864304	35
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	3	synth with cache (only 1: apply Z.divide_abs_l).	0.24919295311	28
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	5.2	synth with cache (only 1: intro H; only 1: Z.order).	0.235721826553	62
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	2.10.7	synth with cache (only 1: intros l; only 1: intro m; only 1: firstorder).	5.52003502846	1108
Coq.ZArith.Znumtheory.Zis_gcd_0	40	13	synth with cache (only 1: firstorder).	0.914566040039	215
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.4.0.0.15.0	synth with cache (only 1: intros n; only 1: constructor; only 1: exists n; only 1: now Z.nzsimpl'; only 1: auto with zarith; only 1: trivial).	7.43951916695	1488
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: exists 1; only 1: now Z.nzsimpl'; only 1: exists 1; only 1: now Z.nzsimpl'; only 1: trivial).	0.46280503273	8
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	1.0.1.2.2	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	1.78150296211	63
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.1.1.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.184611082077	9
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.147907972336	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40	1.1.9	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	1.00757408142	253
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.0.3	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.299971103668	28
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.0.1.2	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	0.222851037979	26
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.10	synth with cache (only 1: induction 1; only 1: intuition).	1.4094350338	175
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.0.15	synth with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.295833110809	127
Coq.ZArith.Znumtheory.not_prime_1	40	1.21	synth with cache (only 1: intros [q Hq]; only 1: discriminate).	3.00674796104	1094
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.33	synth with cache (only 1: intros (m, H); only 1: now apply (Zlt_le_succ 1)).	3.52437996864	1773
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: now apply Z.gcd_greatest).	1.11608695984	138
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0961689949036	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0966789722443	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	1.1.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: auto; only 1: auto).	0.0932939052582	6
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0931901931763	6
Coq.ZArith.Zdiv.Zmod_1_r	40	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: trivial).	3.98944687843	457
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl').	0.256435871124	16
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.6.0.1.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	2.87494301796	362
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.3.2.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).	0.104913949966	9
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.160766124725	37
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0929360389709	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0939500331879	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0927770137787	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	5	synth with cache (only 1: congruence).	0.237993955612	30
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	1.0	synth with cache (only 1: intros; only 1: now rewrite <- ?Z.add_le_mono_l).	0.0735139846802	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	4.0.5	synth with cache (only 1: unfold eqm; only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.807622909546	153
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	0.2.20	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	4.99301314354	1821
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.3.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.478232860565	62
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.0.0.0.1	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: trivial).	0.38768696785	37
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.1.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.119346141815	6
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.1.4.1.3.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros H; only 1: now f_equal; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	5.16458201408	664
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.4.1.1.0	synth with cache (only 1: intros a b Hb; only 1: intros H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	2.25723481178	230
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	7	synth with cache (only 1: solve_proper).	0.239934921265	40
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.0449638366699	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.1.15.5.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	10.4042789936	3495
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: auto; only 1: auto).	0.337350130081	63
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.2	synth with cache (only 1: intros; only 1: trivial).	0.0750308036804	4
Coq.ZArith.Int.Z_as_Int.i2z_0	40	4	synth with cache (only 1: reflexivity).	0.0893261432648	5
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: exact eq_refl).	0.0568690299988	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	4	synth with cache (only 1: trivial).	0.0592629909515	5
Coq.ZArith.Int.Z_as_Int.i2z_3	40	1	synth with cache (only 1: reflexivity).	0.0575249195099	2
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.2	synth with cache (only 1: Z.bitwise; only 1: trivial).	1.55131101608	80
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	5	synth with cache (only 1: now Z.nzsimpl).	0.223649978638	6
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.0910251140594	2
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	1	synth with cache (only 1: reflexivity).	0.0593481063843	2
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0559179782867	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1	synth with cache (only 1: solve [ trivial | destruct (proj1 (Z.le_ngt _ _) Hi _) ]).	0.0542759895325	2
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0530190467834	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0515661239624	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0547869205475	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.103137969971	6
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	9	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.571603059769	77
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: auto with arith).	0.0491499900818	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0	synth with cache (only 1: trivial).	0.0520780086517	1
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	1.2.1.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros _; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).	12.3533241749	2801
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	1.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: induction n; only 1: now Z.nzsimpl; only 1: simpl; only 1: auto).	0.245573997498	27
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	49	synth with cache (only 1: apply Pos2Nat.inj_iter).	3.55001306534	1659
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	3	synth with cache (only 1: apply two_power_pos_equiv).	0.0517380237579	4
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.0.2.0.6.17	synth with cache (only 1: destruct x; only 1: constructor; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	8.56330800056	3505
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0546660423279	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0550861358643	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0549781322479	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0686252117157	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.5	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.116191148758	12
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.681039810181	55
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0932550430298	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0948059558868	3
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	3.0.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros H; only 1: now case Z.compare_spec).	0.117215156555	6
Coq.ZArith.Zmax.Zpos_max_1	40	6	synth with cache (only 1: now destruct p).	0.0644688606262	7
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	38	synth with cache (only 1: now destruct p).	3.84772992134	1197
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.18	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.598537921906	212
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.3.0.0.0.0.2.1.0.1.3	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: right; only 1: auto).	15.8169660568	2486
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.3	synth with cache (only 1: intro H; only 1: Z.order).	1.19220209122	34
Coq.ZArith.Zorder.Zlt_not_le	40	0.2	synth with cache (only 1: intro H; only 1: Z.order).	1.10386919975	29
Coq.ZArith.Zorder.Zle_not_gt	40	1.0.3.0.0	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: trivial; only 1: intro n; only 1: intuition).	0.190833091736	12
Coq.ZArith.Zorder.Zgt_not_le	40	1.0.3.0.1	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: auto; only 1: intro n; only 1: intuition).	1.05576992035	11
Coq.ZArith.Zorder.Znot_ge_lt	40	1.11	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	1.77942299843	201
Coq.ZArith.Zorder.Znot_lt_ge	40	4.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.090313911438	11
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.0466651916504	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0739321708679	5
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.1.4	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.453547000885	37
Coq.ZArith.Zorder.Zgt_irrefl	40	8.13	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.783159017563	406
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	2.5.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	2.24421596527	94
Coq.ZArith.Zorder.Zle_gt_trans	40	5.7.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).	3.65753698349	415
Coq.ZArith.Zorder.Zgt_le_trans	40	4.2	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.088278055191	8
Coq.ZArith.Zorder.Zge_trans	40	4.2	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0952579975128	8
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0895218849182	5
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	1.45573997498	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0508000850677	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0501289367676	1
Coq.ZArith.Zorder.Zgt_succ	40	2.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.172099113464	49
Coq.ZArith.Zorder.Znot_le_succ	40	4.0.7.2	synth with cache (only 1: intros H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.959578990936	374
Coq.ZArith.Zorder.Zgt_le_succ	40	24.5	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	5.34701991081	1467
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0538301467896	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0519590377808	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0796129703522	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0521030426025	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0809319019318	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0526070594788	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.9.4.33	synth with cache (only 1: destruct n as [| p| p]; only 1: Z.order_pos'; only 1: now destruct p; only 1: intros H; only 1: easy).	16.2829060555	7743
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.36	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	5.26565408707	2793
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	synth with cache (only 1: intros a b; only 1: easy).	0.073548078537	2
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0666980743408	2
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0704879760742	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	synth with cache (only 1: easy).	0.048889875412	1
Coq.ZArith.Zorder.Zle_0_nat	40	1.0.7.2.4.11	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: Z.order; only 1: fix le_div2 1; only 1: intros n H; only 1: auto with arith).	21.1738939285	10478
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.051689863205	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0527441501617	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.0506639480591	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	2	synth with cache (only 1: apply Z.add_le_mono_r).	0.0896000862122	11
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0829818248749	11
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	2	synth with cache (only 1: apply Z.add_lt_mono_r).	0.208094120026	11
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0856430530548	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0859980583191	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.102871894836	5
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0826859474182	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.054398059845	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0543320178986	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.100370883942	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.311432123184	55
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.206659793854	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0948610305786	14
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.083508014679	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0529181957245	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0823700428009	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0529801845551	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.09889793396	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0972919464111	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	5.1.3.2	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: intros Hb; only 1: Z.order_pos).	1.7168200016	280
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0863101482391	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.123068094254	13
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0561039447784	2
Coq.ZArith.Zbool.Zle_cases	40	0.0.2.0.13.4.0.20.16	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: intros EQ; only 1: now rewrite EQ; only 1: intro H; only 1: Z.order; only 1: Z.swap_greater; only 1: intro H; only 1: auto).	21.7959899902	10497
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40	1.0.14.4.0.19.17	synth with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: intros EQ; only 1: now rewrite EQ; only 1: intro H; only 1: Z.order; only 1: now Z.swap_greater).	13.3202280998	7205
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.4.1	synth with cache (only 1: intros; only 1: apply Z.leb_le; only 1: now rewrite <- ?Z.succ_le_mono).	0.0775191783905	8
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	3.20	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	1.96050190926	886
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	1	synth with cache (only 1: trivial).	0.0490548610687	2
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.17	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	12.3000469208	3764
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0824520587921	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.165573120117	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.5	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: auto; only 1: now intuition).	0.125468015671	9
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0938220024109	6
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	0.45	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: decide equality).	8.4414498806	4197
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	2.53	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: decide equality).	24.6610999107	10855
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.1.5.5	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	5.48008704185	838
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	5.2.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	11.3670852184	1060
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).	0.115573883057	11
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.2.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: left; only 1: auto with relations).	5.94679498672	648
Coq.ZArith.ZArith_dec.Z_dec'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intro H; only 1: left; only 1: intuition Z.order; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: assumption; only 1: intro; only 1: right; only 1: auto).	36.5386528969	4392
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.2.1	synth with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.367460012436	7
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0559988021851	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.3.1.2	synth with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: easy; only 1: trivial).	1.57452607155	191
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0269980430603	2
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.1.4.1.4.4	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	3.83934998512	2102
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	1.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0491940975189	7
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0268108844757	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.28.6.9.2	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	4.38021302223	7297
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.4	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0475189685822	14
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	0	synth with cache (only 1: apply UIP_refl).	0.0149660110474	1
Coq.Program.Equality.UIP_refl_refl	40	0	synth with cache (only 1: apply UIP_refl).	0.015900850296	1
Coq.Program.Equality.inj_pairT2_refl	40	3	synth with cache (only 1: apply UIP).	0.0155711174011	4
Coq.Program.Equality.solution_left	40	4.6.0.0	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: auto).	0.239223003387	210
Coq.Program.Equality.solution_right	40	1.1.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0243980884552	5
Coq.Program.Equality.deletion	40	1	synth with cache (only 1: auto).	0.0163128376007	2
Coq.Program.Equality.simplification_heq	40	2.16.7	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.547142982483	732
Coq.Program.Equality.simplification_existT2	40	1.2.3.8.10	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.726039171219	1068
Coq.Program.Equality.simplification_existT1	40	0.0.8.23.2.28	synth with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: trivial).	11.1253590584	33843
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0260810852051	3
Coq.Program.Combinators.compose_id_left	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0194988250732	3
Coq.Program.Combinators.compose_id_right	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0194690227509	3
Coq.Program.Combinators.compose_assoc	40	1	synth with cache (only 1: trivial).	0.0150368213654	2
Coq.Program.Combinators.flip_flip	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0194730758667	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0198550224304	3
Coq.Program.Combinators.prod_curry_uncurry	40	0.9.8.37.8.36.1	synth with cache (only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros H; only 1: destruct H; only 1: exact eq_refl).	26.1544640064	92550
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	1.1.0.0.2	synth with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0957398414612	9
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	2.1.1.2.5.0.0.3.0.1.2	synth with cache (only 1: induction stack as [| []]; only 1: intros; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	38.6778240204	12090
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40	5.0.25	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: trivial).	31.5448770523	10015
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.0.7	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.0872750282288	18
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	4.12	synth with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	1.59016084671	495
Coq.Sorting.Permutation.Permutation_cons	40	0.1.8	synth with cache (only 1: reduce; only 1: subst; only 1: auto).	0.399271011353	36
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.5.1.5.1.0.2.3	synth with cache (only 1: intros x y z; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).	37.8049480915	7871
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.1.7	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.494538068771	111
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0275259017944	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	2.0.0.0.0.0.0.0.0.6	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	3.38557910919	672
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	0.0.0.4.5	synth with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: now constructor).	9.33281898499	162
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	1.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	15.9479758739	145
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	6.3	synth with cache (only 1: intros; only 1: constructor).	0.129959106445	32
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	3.5	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.06378698349	10
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.7.2.3.1	synth with cache (only 1: intros x y z; only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	3.43990707397	990
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.1.2	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.185333013535	20
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.0.1.7.5.1	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: auto; only 1: simpl; only 1: auto).	23.2515990734	5426
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	2.1.9.3.4	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	6.34940195084	2595
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	4.0.13.8	synth with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: reflexivity; only 1: congruence).	13.9153828621	1887
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	2.0.0.0.0.0.1.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	11.9172110558	1563
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	0.6.12.0	synth with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: reflexivity).	5.40801787376	967
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	7.1.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	1.13402986526	273
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	1.2.4	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto).	0.677561044693	68
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	0.0.0.8.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	0.902092218399	216
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.5	synth with cache (only 1: inversion 1; only 1: auto).	0.054652929306	15
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.3	synth with cache (only 1: inversion 1; only 1: auto).	0.0439579486847	5
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.1.1	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0527560710907	5
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	1.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder using StronglySorted_inv).	0.05397605896	4
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	0.1.3.0.0.1.15	synth with cache (only 1: intro l'; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	25.4917621613	9637
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0704660415649	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0	synth with cache (only 1: auto).	0.0508198738098	1
Coq.Sorting.Heap.defs.invert_heap	40	0.8.8	synth with cache (only 1: intros x y z; only 1: inversion 1; only 1: auto).	2.54262590408	614
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.0.1.1.1.1.1.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	3.93588519096	802
Coq.Sorting.Heap.defs.low_trans	40	4.1.4.0.3	synth with cache (only 1: simple induction T; only 1: auto; only 1: intros a G PG D PD PN; only 1: simpl; only 1: firstorder).	9.21327400208	1154
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	12.0.0.12	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	16.8315877914	844
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.0.8	synth with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: simpl; only 1: auto with arith).	0.36660695076	53
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	0.6	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0716381072998	8
Coq.Sorting.Heap.defs.list_to_heap	40	0.16	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.392354011536	228
Coq.Sorting.Heap.defs.heap_to_list	40	0.13	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	2.26701903343	202
Coq.Sorting.Heap.defs.treesort	40	0.32	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	2.62325978279	1480
Coq.Init.Wf.Well_founded.Acc_inv	40	5.2.8	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.854228973389	1492
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0185739994049	5
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.018737077713	5
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.6.2.9.24.1.1	synth with cache (only 1: intro z; only 1: intro H; only 1: reflexivity || destruct H; only 1: auto; only 1: intro H; only 1: induction n; only 1: auto).	13.8486948013	52781
Coq.Init.Tactics.decide_right	40	2.3.1.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0228729248047	10
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: auto).	0.00923109054565	2
Coq.Init.Peano.not_eq_S	40	2.0	synth with cache (only 1: intro H; only 1: auto).	0.0121419429779	4
Coq.Init.Peano.O_S	40	0	synth with cache (only 1: discriminate).	0.00952410697937	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	1.8.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.305346012115	342
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.020495891571	5
Coq.Init.Peano.plus_n_Sm	40	0.1.0.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0218858718872	9
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0233638286591	6
Coq.Init.Peano.mult_n_O	40	0.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.019299030304	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.9	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0300261974335	34
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.017058134079	3
Coq.Init.Peano.nat_case	40	3.2.5	synth with cache (only 1: induction n; only 1: auto; only 1: trivial).	0.120885848999	100
Coq.Init.Peano.nat_double_ind	40	4.1.8.3.2	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.866125106812	1356
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.2.2.0.1.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	11.0390198231	8353
Coq.Init.Peano.min_l	40	0.0.2.0.2.0.1.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.37640094757	2920
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.18792796135	3012
Coq.Init.Peano.nat_rect_succ_r	40	0.9.2.0.8	synth with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: reflexivity || destruct H; only 1: reflexivity).	3.95100283623	5096
Coq.Init.Peano.nat_rect_plus	40	1.0.1.1.0.5	synth with cache (only 1: induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.867213964462	529
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.8.42	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.363895177841	2511
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0110650062561	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0116069316864	3
Coq.Init.Datatypes.surjective_pairing	40	0.26	synth with cache (only 1: destruct p; only 1: trivial).	0.0866978168488	452
Coq.Init.Datatypes.injective_projections	40	0.0.6.9.4.18	synth with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	2.40582084656	11171
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0286781787872	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	1.1.1.1.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0184011459351	10
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.1.1.0.0.1.1.1.0.0.2	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	9.59782409668	16100
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	4.0.0.0.4.2.0.0.4.2.0.0.8	synth with cache (only 1: destruct c; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: auto).	4.34151792526	13781
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00219511985779	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	0.0.3.1.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00452709197998	10
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.4.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00314402580261	9
Coq.Init.Logic.and_iff_compat_l	40	0.0.4.4.0.0.4.4.2.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.155337810516	1379
Coq.Init.Logic.and_iff_compat_r	40	0.1.0.2.0.1.0.2.1.2	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	0.0843441486359	866
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.2.0.0.0.1.0.1.0.0.1.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.133738994598	1773
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	1.2.0.0.1.3.0.0.3.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0620400905609	771
Coq.Init.Logic.not_iff_compat	40	7.7.1.11	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.207948923111	1833
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.1.0.0.0.1.6	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: assumption).	0.124974012375	509
Coq.Init.Logic.and_assoc	40	5.5.5.0.2.0.1.0.1.2.1.1	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: assumption; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	2.51068997383	19535
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.1.0.3.3.0.1.0.3.3.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.7583360672	5701
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00929594039917	12
Coq.Init.Logic.iff_to_and	40	2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00938987731934	11
Coq.Init.Logic.universal_quantification.inst	40	5	synth with cache (only 1: trivial).	0.0078558921814	14
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.00738000869751	3
Coq.Init.Logic.Logic_lemmas.absurd	40	0.6.23	synth with cache (only 1: intro H1; only 1: intros A B []; only 1: assumption).	0.129333972931	1174
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	2.23	synth with cache (only 1: destruct 1; only 1: split).	0.0796890258789	651
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	1.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00922703742981	4
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	1.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0092830657959	4
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00798082351685	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	8.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0299279689789	106
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.9	synth with cache (only 1: destruct 2; only 1: auto).	0.0156300067902	32
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.2.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00932693481445	5
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00962781906128	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0096869468689	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	2.8.3	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: trivial).	0.191517114639	255
Coq.Init.Logic.rew_opp_r	40	0.9	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0225510597229	41
Coq.Init.Logic.rew_opp_l	40	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.011253118515	4
Coq.Init.Logic.f_equal2	40	0.1.12	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.218261003494	420
Coq.Init.Logic.f_equal3	40	0.6.0.0	synth with cache (only 1: destruct 1; only 1: destruct 2; only 1: destruct H; only 1: reflexivity).	0.0138638019562	10
Coq.Init.Logic.f_equal4	40	0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0180768966675	13
Coq.Init.Logic.f_equal5	40	0.0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0187950134277	13
Coq.Init.Logic.f_equal_compose	40	5.19.9.4	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.686141967773	3960
Coq.Init.Logic.eq_trans_refl_l	40	0.4	synth with cache (only 1: destruct e; only 1: reflexivity).	0.011904001236	6
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0108349323273	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.010950088501	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0111019611359	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0110521316528	2
Coq.Init.Logic.eq_trans_assoc	40	1.6.5.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.128701925278	402
Coq.Init.Logic.rew_map	40	0.13	synth with cache (only 1: destruct H; only 1: trivial).	0.0885059833527	208
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0116360187531	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: trivial).	0.0122029781342	2
Coq.Init.Logic.rew_swap	40	1.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0133450031281	5
Coq.Init.Logic.rew_compose	40	4.1.2	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0136330127716	10
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0107021331787	2
Coq.Init.Logic.eq_trans_map_distr	40	0.9.9.5.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.494968891144	1834
Coq.Init.Logic.eq_sym_map_distr	40	0.1	synth with cache (only 1: destruct e; only 1: trivial).	0.0126280784607	3
Coq.Init.Logic.eq_trans_sym_distr	40	0.8.1	synth with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0938339233398	105
Coq.Init.Logic.eq_trans_rew_distr	40	1.2	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0546300411224	5
Coq.Init.Logic.rew_const	40	0.4	synth with cache (only 1: destruct e; only 1: trivial).	0.0152080059052	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.7.18.1	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: assumption).	0.370752096176	1880
Coq.Init.Logic.inhabited_covariant	40	3.7	synth with cache (only 1: destruct 2; only 1: auto).	0.0330250263214	74
Coq.Init.Logic.eq_stepl	40	2.2.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0151460170746	10
Coq.Init.Logic.iff_stepl	40	10.0.10.0.6.2.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	2.70942401886	16830
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.6.1.4.3	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.141317844391	315
Coq.Init.Logic.ex2.rew_ex2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0171980857849	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.2	synth with cache (only 1: destruct 1; only 1: trivial).	0.0119409561157	4
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0117199420929	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0115628242493	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	6.1	synth with cache (only 1: destruct 2; only 1: auto).	0.0153830051422	18
Coq.Init.Logic_Type.identity_ind_r	40	1.13	synth with cache (only 1: destruct 2; only 1: auto).	0.216851949692	312
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.128210067749	4
Coq.Init.Logic_Type.identity_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0151071548462	4
Coq.Init.Specif.sigT_eta	40	0.29	synth with cache (only 1: destruct p; only 1: reflexivity).	0.227590084076	542
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0125000476837	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.119948863983	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.01398396492	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.3.8.6.7	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: constructor; only 1: exists x; only 1: auto).	0.512550830841	1764
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0187380313873	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0159380435944	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.7	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0271990299225	15
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.57	synth with cache (only 1: subst; only 1: reflexivity).	3.37474584579	14858
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	1.11.6.4	synth with cache (only 1: destruct r, q, p; only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity).	2.96532487869	4741
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0163130760193	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.2.1.1	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0201480388641	8
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.1.0.1.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0603849887848	32
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	2.2.13.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	2.65092802048	4340
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166969299316	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.3.8.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.72238111496	597
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	8.3.0.0.16.1.0.1	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	16.838876009	27575
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.2.1	synth with cache (only 1: simpl in *; only 1: destruct H, u; only 1: reflexivity).	0.054680109024	6
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.1.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0205779075623	5
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.3.0.1	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.0501029491425	14
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.7.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	3.0225019455	2186
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0200819969177	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	3.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0174908638	6
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.1.2.0.8.0.1.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	11.6856279373	2624
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0942709445953	3
Coq.QArith.Qreduction.Qred_correct	40	0.0.5	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	1.33349180222	129
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	2.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.23751783371	24
Coq.QArith.Qreduction.Qminus'_correct	40	3.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	2.29105710983	25
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	0.8.13.1	synth with cache (only 1: split; only 1: now rewrite !Qred_correct; only 1: intro; only 1: now rewrite !Qred_correct).	4.74176907539	1235
Coq.QArith.Qreduction.Qred_lt	40	0.2.19.1	synth with cache (only 1: split; only 1: now rewrite !Qred_correct; only 1: intro; only 1: now rewrite !Qred_correct).	3.77066802979	1253
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	1.0.0.4.24	synth with cache (only 1: unfold Qcmult, Qcle; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	6.24952507019	2172
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: constructor).	0.791131019592	31
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40	1.0.0.0.2.0.2.0.1.2.3	synth with cache (only 1: intros; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with zarith; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with zarith; only 1: assumption).	27.3174009323	2931
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	5.7.1.1.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	10.9212059975	1761
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	0.2.0.0.0.15.2.3	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: red; only 1: simpl; only 1: exact eq_refl; only 1: unfold Qeq, Qplus; only 1: auto).	28.0044491291	3131
Coq.QArith.Qfield.Examples.ex1	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.53164601326	5
Coq.QArith.Qfield.Examples.ex2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.314902067184	11
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.224802017212	5
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: split).	0.0702159404755	1
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.0764789581299	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0758709907532	1
Coq.QArith.Qfield.Examples.ex7	40	0.2.2.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: ring).	0.150681972504	8
Coq.QArith.Qfield.Examples.ex8	40	0.0.0.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).	0.131277084351	4
Coq.QArith.Qfield.Examples.ex9	40	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: exact eq_refl).	0.107481956482	3
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.4	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: ring).	0.884906053543	61
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.139213085175	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.1.0.13	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	3.54894399643	1014
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	3.0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: intros H; only 1: auto with arith).	0.0922560691833	8
Coq.QArith.Qcanon.Qcgt_alt	40	0.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0752720832825	6
Coq.QArith.Qcanon.Qcle_alt	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0567390918732	2
Coq.QArith.Qcanon.Qcge_alt	40	0.1.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0727620124817	4
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	1	synth with cache (only 1: auto with qarith).	0.0499558448792	2
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	1.39.0	synth with cache (only 1: intro n; only 1: qc; only 1: ring).	11.8578019142	5716
Coq.QArith.Qcanon.Qcplus_0_r	40	2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.125982046127	5
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	0.1.0	synth with cache (only 1: intros a; only 1: qc; only 1: ring).	0.106843948364	4
Coq.QArith.Qcanon.Qcplus_opp_r	40	2.0.0	synth with cache (only 1: intro n; only 1: qc; only 1: ring).	0.131089925766	5
Coq.QArith.Qcanon.Qcmult_assoc	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.444267034531	7
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: compute; only 1: auto using Z.eq_refl, Z.le_refl).	0.117849826813	4
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.174545049667	13
Coq.QArith.Qcanon.Qcmult_1_l	40	11.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	3.59700798988	462
Coq.QArith.Qcanon.Qcmult_1_r	40	0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.189679861069	19
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.567352056503	11
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.158519029617	3
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.144900798798	3
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	2.1.3.8	synth with cache (only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).	5.09266901016	746
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.135569810867	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.9.7.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	12.2792952061	1903
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.9	synth with cache (only 1: red; only 1: intro; only 1: auto with qarith).	0.558984994888	115
Coq.QArith.Qcanon.Qcle_antisym	40	23.2	synth with cache (only 1: intros x y z; only 1: intuition).	25.1854290962	4712
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	1.0.1.4	synth with cache (only 1: intros n m H; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.240462779999	37
Coq.QArith.Qcanon.Qclt_le_weak	40	6.5	synth with cache (only 1: intros a b; only 1: apply Z.lt_le_incl).	1.21882987022	184
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.2.10	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).	5.49243998528	965
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	5.0.1.0.2	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	2.90919995308	326
Coq.QArith.Qcanon.Qcnot_lt_le	40	0.1.2	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.nlt_ge).	0.59814786911	33
Coq.QArith.Qcanon.Qcnot_le_lt	40	0.2.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.nle_gt).	0.674001932144	28
Coq.QArith.Qcanon.Qclt_not_le	40	2.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0704607963562	4
Coq.QArith.Qcanon.Qcle_not_lt	40	0.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.0648539066315	2
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.7	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.527417898178	84
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.0.0.2.2.2	synth with cache (only 1: Nat.cases ltac:(n); only 1: now destruct 1; only 1: Nat.cases ltac:(n); only 1: intro H; only 1: trivial; only 1: intros; only 1: simpl; only 1: trivial).	5.71460485458	717
Coq.QArith.Qcanon.Qcpower_pos	40	0.22	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	21.2154870033	4136
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.2.3.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	2.26286697388	118
Coq.QArith.Qreals.IZR_nz	40	1.0	synth with cache (only 1: intro H; only 1: now apply not_0_IZR).	0.0803830623627	3
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	0	synth with cache (only 1: reflexivity).	0.0304608345032	1
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	synth with cache (only 1: reflexivity).	0.0303530693054	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	18	synth with cache (only 1: reflexivity).	0.200202941895	145
Coq.QArith.QArith_base.Qeq_sym	40	4.1.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros H; only 1: auto).	0.0817639827728	8
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.1.7	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.223922967911	39
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	20	synth with cache (only 1: apply Zeq_is_eq_bool).	0.865895032883	339
Coq.QArith.QArith_base.Qeq_eq_bool	40	3	synth with cache (only 1: apply Qeq_bool_iff).	0.0414710044861	4
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	5.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.leb_le).	0.467060089111	26
Coq.QArith.QArith_base.Qle_bool_imp_le	40	2	synth with cache (only 1: apply Z.leb_le).	0.0348091125488	3
Coq.QArith.QArith_base.Qnot_eq_sym	40	5.0	synth with cache (only 1: intro H; only 1: auto with qarith).	0.0537641048431	7
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.23	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.961974859238	280
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.25	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	2.59040498734	775
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	14.0.6	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now Z.nzsimpl).	3.98496699333	652
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	0.2.0.2.2.0.2.9	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: split; only 1: rewrite Hx, Hy; only 1: trivial; only 1: rewrite Hx, Hy; only 1: trivial).	38.3423919678	10121
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	9	synth with cache (only 1: easy).	0.0926489830017	15
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	1.0.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: trivial).	3.21167397499	336
Coq.QArith.QArith_base.Qplus_0_r	40	1.1.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: trivial).	21.5271220207	3058
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.135410070419	22
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.101962089539	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.1.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.132122039795	7
Coq.QArith.QArith_base.Qmult_0_l	40	8	synth with cache (only 1: easy).	0.057678937912	12
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.12	synth with cache (only 1: unfold Qeq, Qopp; only 1: simpl; only 1: intros; only 1: ring).	3.83725500107	455
Coq.QArith.QArith_base.Qmult_1_l	40	3.1.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: trivial).	25.2261059284	4723
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.47494697571	70
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.48174405098	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	2.0.1.0.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.42176103592	129
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.1.1.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.50548481941	22
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	1.1.2.5	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: auto; only 1: auto).	4.21748900414	467
Coq.QArith.QArith_base.inject_Z_opp	40	3	synth with cache (only 1: now destruct x).	0.0403008460999	4
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.125679016113	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	7.12	synth with cache (only 1: red; only 1: now reflexivity).	1.79544305801	334
Coq.QArith.QArith_base.Qle_antisym	40	10.1	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.le_antisymm).	0.529986143112	128
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	23	synth with cache (only 1: apply Z.lt_irrefl).	1.39438581467	371
Coq.QArith.QArith_base.Qlt_not_eq	40	1.0.2	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros LT EQ; only 1: Z.order).	0.0721960067749	6
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40	12.4.4.2.4.0	synth with cache (only 1: split; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases; only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order).	21.3451349735	7118
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	15.12	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.le_ngt).	3.73993492126	1556
Coq.QArith.QArith_base.Qnot_le_lt	40	7	synth with cache (only 1: apply Z.nle_gt).	0.0533921718597	12
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.034964799881	2
Coq.QArith.QArith_base.Qle_not_lt	40	2	synth with cache (only 1: apply Z.nlt_ge).	0.0356829166412	3
Coq.QArith.QArith_base.Qle_lt_or_eq	40	2.7.6.8	synth with cache (only 1: intros l; only 1: intro H; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).	10.2712478638	2867
Coq.QArith.QArith_base.Q_dec	40	0.13	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	2.39024281502	480
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	1.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: trivial; only 1: auto with *).	35.9748580456	2851
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: trivial; only 1: auto with qarith).	2.56965589523	108
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.384814977646	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.1.0.2.1.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	3.35740399361	253
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.1.0.2.1.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	17.8124649525	1442
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	4.4	synth with cache (only 1: destr_bool; only 1: now Z.nzsimpl').	0.654475927353	73
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	5	synth with cache (only 1: eauto with qarith).	1.29883122444	88
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	2.14882922173	53
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	1.07828402519	118
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.1.4.8	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	7.55445480347	1319
Coq.QArith.Qabs.Zabs_Qabs	40	0	synth with cache (only 1: reflexivity).	0.0421440601349	1
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.0.0.1.0.0.0.2.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: destruct x1; only 1: auto; only 1: destruct y1; only 1: auto; only 1: auto; only 1: auto; only 1: destruct y1; only 1: auto; only 1: auto; only 1: auto).	16.9712820053	1423
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.2.0.0	synth with cache (only 1: intros [[| n| n] d]; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).	4.79087495804	235
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	0.609859228134	123
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0080931186676	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0084490776062	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00820994377136	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	1.0.4.9.2.12.4	synth with cache (only 1: intro z; only 1: constructor; only 1: intros; only 1: hnf; only 1: induction 1; only 1: firstorder; only 1: firstorder).	16.6811380386	22618
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.00860810279846	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0117111206055	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.00844788551331	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00941109657288	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	3	synth with cache (only 1: simpl_crelation).	0.0849070549011	4
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.00966119766235	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0119018554688	1
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00888085365295	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00939798355103	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00991201400757	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00956201553345	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0119662284851	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0837090015411	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0298850536346	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0289080142975	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0160858631134	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0472888946533	1
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0608861446381	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	2.2.1	synth with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.619248151779	30
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	0.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.03432798386	4
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0102741718292	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0127139091492	1
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3.10	synth with cache (only 1: reduce; only 1: simpl_crelation).	0.12529706955	96
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.00936794281006	1
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0115489959717	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.00998497009277	1
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00934410095215	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2	synth with cache (only 1: simpl_crelation).	0.0130369663239	3
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00959396362305	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00956416130066	1
Coq.Classes.CMorphisms.proper_proper	40	0.3	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.264832019806	46
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.00983500480652	1
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0113809108734	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	3	synth with cache (only 1: simpl_crelation).	0.0538921356201	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	6.19	synth with cache (only 1: unfold respectful, relation_equivalence in *; only 1: simpl_crelation).	19.7946641445	2757
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.7	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.474931955338	43
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.1.2	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0744099617004	9
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.1.2	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.278994083405	9
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.6.3.0	synth with cache (only 1: firstorder; only 1: reduce_goal; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	1.59608602524	582
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0150260925293	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0161151885986	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0174880027771	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.405529975891	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0148859024048	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	1	synth with cache (only 1: firstorder).	0.0154259204865	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0136270523071	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	1.1	synth with cache (only 1: hnf; only 1: auto).	0.0202457904816	4
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	3	synth with cache (only 1: firstorder).	0.0669088363647	4
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.026759147644	1
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	2	synth with cache (only 1: firstorder).	0.037220954895	3
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	2	synth with cache (only 1: firstorder).	0.0444688796997	3
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.014123916626	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0148689746857	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0141060352325	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0147099494934	2
Coq.Classes.CRelationClasses.iffT_Transitive	40	1	synth with cache (only 1: firstorder).	0.0161130428314	2
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0173530578613	1
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0214879512787	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0476140975952	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.8.2.0	synth with cache (only 1: firstorder; only 1: reduce_goal; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.897210121155	486
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0152549743652	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0165319442749	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0178368091583	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.44461107254	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0141048431396	1
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	1	synth with cache (only 1: firstorder).	0.0154428482056	2
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0140500068665	2
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1.1	synth with cache (only 1: hnf; only 1: auto).	0.0204138755798	4
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0306611061096	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.031543970108	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0431380271912	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0439591407776	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0140919685364	1
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0147359371185	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.1.2	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0701179504395	6
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.028392791748	5
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.509103059769	8
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0182318687439	1
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0229799747467	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0525720119476	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0569231510162	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: exact eq_refl).	0.0144290924072	2
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0143539905548	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0142998695374	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0139629840851	1
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0175311565399	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0139491558075	1
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0148570537567	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.1.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0563039779663	4
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.015438079834	1
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0167319774628	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0154528617859	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0156779289246	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0168261528015	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.104550123215	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0295040607452	1
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0298790931702	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0185811519623	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0523920059204	1
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0607650279999	1
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	2.2.0	synth with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	2.32320690155	119
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	0.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.00340104103	4
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0174639225006	1
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	4	synth with cache (only 1: firstorder).	0.0194361209869	5
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.1.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0273978710175	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.0154149532318	1
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0187919139862	1
Coq.Classes.Morphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0149290561676	1
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0153391361237	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	2	synth with cache (only 1: simpl_relation).	0.0225021839142	3
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0147540569305	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0150530338287	1
Coq.Classes.Morphisms.proper_proper	40	0.1.0.1.0.1	synth with cache (only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.102144002914	9
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.016939163208	1
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0174281597137	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.2.3	synth with cache (only 1: red; only 1: reduce; only 1: firstorder).	0.12288403511	8
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.6.17	synth with cache (only 1: unfold respectful; only 1: reduce; only 1: firstorder).	22.9928379059	3413
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.6	synth with cache (only 1: simpl_relation; only 1: firstorder).	0.604058027267	67
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	3	synth with cache (only 1: firstorder).	0.030622959137	4
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	2	synth with cache (only 1: firstorder).	0.0301380157471	3
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	2	synth with cache (only 1: firstorder).	0.0657839775085	3
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	2	synth with cache (only 1: firstorder).	0.0282380580902	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	2	synth with cache (only 1: firstorder).	0.032368183136	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0416669845581	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	1	synth with cache (only 1: firstorder).	0.507098913193	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	1	synth with cache (only 1: firstorder).	0.0415301322937	2
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	1	synth with cache (only 1: firstorder).	0.0403201580048	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	1	synth with cache (only 1: firstorder).	0.0375711917877	2
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	1	synth with cache (only 1: firstorder).	0.034863948822	2
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	1	synth with cache (only 1: firstorder).	0.0331130027771	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	1	synth with cache (only 1: firstorder).	0.0326900482178	2
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.1	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: auto).	0.0443320274353	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.15.1.2	synth with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: auto).	4.82125401497	1012
Coq.Classes.DecidableClass.Decidable_sound	40	1.6.12.21	synth with cache (only 1: intro H; only 1: intros; only 1: apply H0; only 1: assumption).	11.9638500214	24739
Coq.Classes.DecidableClass.Decidable_complete	40	0.20.24.35	synth with cache (only 1: intro H; only 1: intros; only 1: apply H0; only 1: auto).	25.1363251209	84085
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.13	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.97373199463	584
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.1.5.0	synth with cache (only 1: symmetry; only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).	0.190896034241	50
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	3.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.130828142166	16
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	9.18	synth with cache (only 1: destruct x; only 1: easy || now destruct y).	0.731321811676	435
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	5	synth with cache (only 1: firstorder).	0.0340490341187	6
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0305659770966	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0303430557251	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	7	synth with cache (only 1: firstorder).	0.718756198883	55
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.615767002106	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1	synth with cache (only 1: firstorder).	0.0384960174561	2
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0471549034119	2
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	6.0	synth with cache (only 1: simpl_relation; only 1: firstorder).	0.260945081711	19
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.0	synth with cache (only 1: intro; only 1: firstorder).	0.0481810569763	3
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0293390750885	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1	synth with cache (only 1: trivial).	0.0304000377655	2
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.25.4	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	7.09037709236	3823
Coq.PArith.Pnat.Pos2Nat.id	40	0.18.23	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: Bool.destr_bool).	32.8305521011	10758
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	3.1.0.1.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	0.0784120559692	10
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	1.0.20.0	synth with cache (only 1: unfold lt, gt; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).	23.935174942	6463
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.1.0.3.0.0.0.13	synth with cache (only 1: induction n; only 1: simpl; only 1: exact eq_refl; only 1: simpl; only 1: destruct n; only 1: exact eq_refl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	10.1198129654	2220
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0509400367737	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	3.0.4.4	synth with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: symmetry; only 1: auto).	29.1649479866	6019
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0705571174622	6
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	2.45.0	synth with cache (only 1: intro n; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	14.8270280361	11010
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	0.1.7.0	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	0.327592849731	110
Coq.PArith.BinPos.Pos.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0425050258636	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	synth with cache (only 1: trivial).	0.0404059886932	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0377299785614	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	1.0.0.0.1.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.561471939087	86
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0419759750366	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	synth with cache (only 1: now destruct p).	0.0451848506927	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0447309017181	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.0.1.0.0.0.0.0.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	9.58365297318	1231
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	2.5.0.0.0.2.0	synth with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	14.7062017918	2046
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	1.1.0.5.4.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: trivial).	6.50856089592	1383
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.0.4	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0828449726105	10
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0303339958191	1
Coq.PArith.BinPos.Pos.add_carry_spec	40	1.28.13	synth with cache (only 1: revert q; only 1: fix le_div2 1; only 1: trivial).	29.0223150253	13351
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.6.2.0.1.2.5	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	34.9393999577	5857
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	1.0.1.1.1.0	synth with cache (only 1: revert q; only 1: destruct q; only 1: auto; only 1: auto; only 1: simpl; only 1: f_equal).	2.05479216576	222
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.1	synth with cache (only 1: simpl; only 1: reflexivity).	0.0457229614258	3
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0.0.1.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.12269616127	8
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.0.2.0.2.9	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	4.2667529583	936
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.539491891861	83
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.73483300209	118
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	1.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: discriminate; only 1: trivial).	27.3726270199	4258
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0523419380188	1
Coq.PArith.BinPos.Pos.square_xO	40	9.1.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	2.3726170063	359
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.4.2.3.3.5.3.15	synth with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	19.9952487946	12531
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	1.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.100886821747	8
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	3.7.1.9	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	12.9967110157	4332
Coq.PArith.BinPos.Pos.leb_le	40	3.7.1.11	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	12.0695569515	4207
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	7.8.14	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	22.1970140934	7553
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	6.7.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: now destruct compare).	2.2176117897	504
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.1.8.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.12797212601	246
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	3.6.18.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	19.0704028606	5949
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	9.9.10	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	17.0664410591	4875
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0	synth with cache (only 1: trivial).	0.035187959671	1
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0346069335938	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.8.5.6.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	22.6873807907	8949
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.2.2.8	synth with cache (only 1: induction p; only 1: auto; only 1: auto; only 1: simpl; only 1: reflexivity).	2.13595700264	423
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0	synth with cache (only 1: unfold lt; only 1: now split).	0.0440769195557	2
Coq.PArith.BinPos.Pos.compare_le_iff	40	6	synth with cache (only 1: now split).	0.0395059585571	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	1.1	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.144818067551	30
Coq.PArith.BinPos.Pos.gt_lt	40	2.7	synth with cache (only 1: intuition; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.166975975037	35
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0355081558228	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	2.4	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0988609790802	26
Coq.PArith.BinPos.Pos.ge_le	40	1.5	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0689690113068	8
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0357367992401	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.24	synth with cache (only 1: unfold lt, le; only 1: now destruct p).	6.42816495895	2268
Coq.PArith.BinPos.Pos.nlt_1_r	40	3	synth with cache (only 1: now destruct p).	0.0573930740356	4
Coq.PArith.BinPos.Pos.lt_1_succ	40	2	synth with cache (only 1: now destruct p).	0.177088975906	37
Coq.PArith.BinPos.Pos.le_nlt	40	0.0.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: intuition).	0.0629320144653	3
Coq.PArith.BinPos.Pos.lt_nle	40	1.3.1.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold ge, lt, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.361595153809	32
Coq.PArith.BinPos.Pos.lt_le_incl	40	7.7	synth with cache (only 1: unfold lt, le; only 1: congruence).	1.23228883743	206
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	7.2	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	1.09637093544	117
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	0.1.12.14.23	synth with cache (only 1: cut (1 = 1); only 1: intros q r; only 1: fix gcd_greatest 1; only 1: trivial; only 1: trivial).	24.8567121029	18744
Coq.PArith.BinPos.Pos.lt_strorder	40	1.0.0	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.056715965271	4
Coq.PArith.BinPos.Pos.lt_compat	40	7	synth with cache (only 1: intuition).	0.961270809174	67
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.050271987915	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.1.1.5.8.0.2.1	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply lt_eq_cases; only 1: constructor; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: now apply lt_trans with m; only 1: now subst; only 1: now subst).	31.5921390057	9059
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	4.3.0	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.0587830543518	10
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.2.2	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: intuition).	0.752035140991	35
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.8.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	1.05408811569	77
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.26	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	18.0992720127	6831
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.10.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	1.46572399139	183
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.11.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	2.01264405251	358
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0554339885712	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.113648891449	9
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0409641265869	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0921070575714	5
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.1.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0922429561615	5
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	1.2.0.3.2.15.0	synth with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case_eq (sub_mask p q); only 1: discriminate; only 1: discriminate; only 1: trivial).	31.2190709114	11469
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.3.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	2.42023897171	443
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.126878023148	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.0	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0582890510559	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.127648115158	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.1.1.13.0	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	16.8595049381	4641
Coq.PArith.BinPos.Pos.add_max_distr_l	40	5.4.0.1	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: now apply add_le_mono_l).	9.35899400711	1681
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.1.0.3	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.282049894333	37
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.1.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.127891778946	15
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	6.2.1.0.2	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	12.846244812	2817
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.1.0	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.13746213913	25
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.1.0.4	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.941501140594	39
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.1.1.4.1	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: auto).	0.672690868378	152
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.0.4.9	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intros; only 1: trivial).	0.389986038208	172
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	0.1.11.26	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: trivial).	32.2980029583	15607
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.0.0.0.14.7.3	synth with cache (only 1: intros q r; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: destruct q; only 1: auto; only 1: auto; only 1: auto).	15.2228419781	5799
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.33.1	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	6.39839696884	4261
Coq.PArith.BinPos.Pos.gcd_divide_r	40	1.2.2	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.235336780548	57
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.31	synth with cache (only 1: fix le_div2 1; only 1: auto).	35.0144021511	13696
Coq.PArith.BinPos.Pos.gcd_greatest	40	4.0.4	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.942301988602	116
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.1	synth with cache (only 1: unfold Pos.gt; only 1: now split).	0.0707180500031	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: auto).	0.090646982193	21
Coq.Arith.Le.le_elim_rel	40	7.4.4.0.0.0	synth with cache (only 1: induction n; only 1: intros; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: intuition).	26.6916639805	7080
Coq.Arith.Even.even_equiv	40	0.1.8	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	1.1426858902	268
Coq.Arith.Even.odd_equiv	40	1.2.0	synth with cache (only 1: fix even_equiv 1; only 1: intro n; only 1: trivial).	0.122200012207	31
Coq.Arith.Even.even_or_odd	40	1.0.3.77	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros n IH; only 1: intuition).	9.85321903229	17587
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0779650211334	5
Coq.Arith.Even.not_even_and_odd	40	0.13.10.8.3.2	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	18.4405639172	12576
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.651525974274	1
Coq.Arith.Even.even_even_plus	40	3	synth with cache (only 1: parity_binop).	0.132035017014	15
Coq.Arith.Even.odd_plus_l	40	1	synth with cache (only 1: parity_binop).	0.086697101593	2
Coq.Arith.Even.odd_plus_r	40	1	synth with cache (only 1: parity_binop).	0.0862278938293	2
Coq.Arith.Even.odd_even_plus	40	1	synth with cache (only 1: parity_binop).	0.133270978928	12
Coq.Arith.Even.even_plus_aux	40	5	synth with cache (only 1: parity_binop).	0.47026181221	16
Coq.Arith.Even.even_plus_even_inv_r	40	1	synth with cache (only 1: parity_binop).	0.0854139328003	2
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0846781730652	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.268342971802	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0833389759064	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.111746072769	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0829970836639	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0820481777191	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.30725312233	1
Coq.Arith.Even.even_mult_aux	40	1	synth with cache (only 1: parity_binop).	0.169177055359	2
Coq.Arith.Even.even_mult_l	40	8	synth with cache (only 1: parity_binop).	0.0796890258789	17
Coq.Arith.Even.even_mult_r	40	1	synth with cache (only 1: parity_binop).	0.0625500679016	2
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0831639766693	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.30194401741	1
Coq.Arith.Even.odd_mult	40	1	synth with cache (only 1: parity_binop).	0.098473072052	11
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0624799728394	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0890901088715	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0372879505157	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0523719787598	1
Coq.Arith.Minus.minus_diag_reverse	40	2.1.30	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: trivial).	4.27829194069	2572
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	0.0.8.0.3.5	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: split; only 1: trivial; only 1: trivial).	9.32039189339	1636
Coq.Arith.Minus.plus_minus	40	5.0.3.0.0.3.0	synth with cache (only 1: Nat.double_induct n m; only 1: intros n IH; only 1: now destruct n; only 1: intro n; only 1: now try Nat.order'; only 1: intros n m IH H1; only 1: auto).	18.2339780331	3742
Coq.Arith.Minus.minus_plus	40	0.1.1.1.0.11	synth with cache (only 1: revert m; only 1: induction n; only 1: intro n; only 1: now destruct n; only 1: simpl; only 1: trivial).	1.05334496498	394
Coq.Arith.Minus.le_plus_minus_r	40	0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	8.84780192375	1176
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	15.5	synth with cache (only 1: induction 1; only 1: intuition).	5.35831308365	2106
Coq.Arith.Between.Between.between_le	40	4.0.3	synth with cache (only 1: induction 1; only 1: apply PeanoNat.Nat.le_refl; only 1: auto).	0.107308149338	34
Coq.Arith.Between.Between.between_Sk_l	40	0.27	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	15.846765995	6632
Coq.Arith.Between.Between.between_restr	40	3.9	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	1.40208601952	435
Coq.Arith.Between.Between.exists_le_S	40	15.0.2.4	synth with cache (only 1: induction 1; only 1: constructor; only 1: trivial; only 1: now apply Peano.le_n_S).	17.232724905	5730
Coq.Arith.Between.Between.exists_S_le	40
Coq.Arith.Between.Between.in_int_intro	40	0.2.3.4.0	synth with cache (only 1: intros x y z; only 1: intro LE; only 1: intuition; only 1: red; only 1: auto).	1.07141208649	272
Coq.Arith.Between.Between.in_int_lt	40	3.3	synth with cache (only 1: intros n m p (q, Hq); only 1: PeanoNat.Nat.order').	0.103433132172	25
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	10.2	synth with cache (only 1: intros * []; only 1: intuition).	1.58343410492	351
Coq.Arith.Between.Between.in_int_Sp_q	40	4.1	synth with cache (only 1: intros * []; only 1: auto with arith).	0.0845808982849	15
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	4.1.1.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0887811183929	11
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40	0.10.0.6.42	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: left; only 1: now exists n).	12.6505589485	18206
Coq.Arith.Peano_dec.dec_eq_nat	40	0.0.0.0.0.0.0.0.0.0.4.28.7	synth with cache (only 1: unfold decidable; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: right; only 1: auto).	17.4725439548	12499
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	1.1.2.3.5.20	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now left; only 1: simpl; only 1: intros m IH; only 1: intuition).	15.7284071445	4308
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	2.1.0.0.0.0.1.2	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n [IH1 IH2]; only 1: auto; only 1: intro n; only 1: exact (proj1 (D n))).	2.40396499634	556
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	2	synth with cache (only 1: intuition).	0.0367829799652	3
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	1.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0545439720154	4
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.395937919617	54
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	2	synth with cache (only 1: apply Nat.add_le_mono_l).	0.185204982758	20
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0652379989624	11
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	6	synth with cache (only 1: apply Nat.add_le_mono).	0.0445840358734	11
Coq.Arith.Plus.plus_lt_compat	40	2.6.14	synth with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: intuition Nat.order).	1.95341515541	820
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	0.15.1.2.35	synth with cache (only 1: Nat.induct n; only 1: reflexivity; only 1: intro n; only 1: constructor; only 1: trivial).	13.7898669243	5205
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40	5.0.33	synth with cache (only 1: repeat red; only 1: intro H; only 1: now rewrite <- Nat.le_add_r).	14.660241127	4495
Coq.Arith.Plus.plus_is_O	40	8.1.0.7	synth with cache (only 1: Nat.induct n; only 1: intro H; only 1: auto; only 1: Bool.destr_bool).	8.2525639534	2210
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	0.8.0.2.18	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: Nat.nzsimpl; only 1: intuition).	4.59247612953	2031
Coq.Arith.Lt.lt_le_S	40	5.0	synth with cache (only 1: intro H; only 1: trivial).	0.0528330802917	7
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0352611541748	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0630629062653	3
Coq.Arith.Lt.le_not_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0483090877533	2
Coq.Arith.Lt.lt_not_le	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.045921087265	2
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0464680194855	2
Coq.Arith.Lt.lt_0_neq	40	1.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0648469924927	5
Coq.Arith.Lt.lt_n_S	40	2	synth with cache (only 1: apply le_n_S).	0.0972819328308	27
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0483920574188	12
Coq.Arith.Lt.S_pred	40	0.3.4.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intro H; only 1: easy; only 1: trivial).	2.06282806396	614
Coq.Arith.Lt.S_pred_pos	40	0.0.9	synth with cache (only 1: inversion 1; only 1: now subst; only 1: trivial).	0.483066082001	140
Coq.Arith.Lt.lt_pred	40	3.8.36	synth with cache (only 1: destruct m; only 1: easy; only 1: apply Nat.succ_lt_mono).	37.1238789558	20821
Coq.Arith.Lt.lt_pred_n_n	40	5.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	0.0669720172882	9
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.831348180771	177
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0206670761108	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0245621204376	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0239870548248	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0273299217224	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.8.9	synth with cache (only 1: intros P F; only 1: fix gcd_greatest 1; only 1: trivial).	2.34699511528	668
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0918428897858	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	1.19.4.31	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: fix le_div2 1; only 1: trivial).	15.7165608406	7160
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.0780470371246	4
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	2.47278094292	383
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: Nat.auto'; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.00166296959	199
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0952861309052	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	3.0.0.11	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: auto; only 1: auto with arith).	1.11971712112	282
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	1.4.0	synth with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: auto).	0.0992770195007	17
Coq.Arith.Compare_dec.ge_dec	40	3.4.0	synth with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: apply le_dec).	0.105347156525	19
Coq.Arith.Compare_dec.dec_le	40	0.0.1.0.0.0.9	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: intro H; only 1: right; only 1: Nat.order).	1.63500213623	487
Coq.Arith.Compare_dec.dec_lt	40	4	synth with cache (only 1: apply Nat.le_decidable).	0.0705950260162	20
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.0307319164276	3
Coq.Arith.Compare_dec.dec_ge	40	3	synth with cache (only 1: apply Nat.le_decidable).	0.0315940380096	4
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0307459831238	1
Coq.Arith.Compare_dec.not_le	40	2	synth with cache (only 1: apply Nat.lt_nge).	0.0588939189911	14
Coq.Arith.Compare_dec.not_gt	40	4	synth with cache (only 1: apply Nat.le_ngt).	0.0438950061798	13
Coq.Arith.Compare_dec.not_ge	40	4	synth with cache (only 1: apply Nat.nle_gt).	0.0468828678131	14
Coq.Arith.Compare_dec.not_lt	40	2	synth with cache (only 1: apply Nat.nlt_ge).	0.0627210140228	14
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	5.8.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	11.3709189892	2710
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.1.0.3.3.10	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	5.14951109886	2127
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	16	synth with cache (only 1: apply Nat.compare_lt_iff).	2.20173692703	588
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	20	synth with cache (only 1: apply Nat.compare_gt_iff).	1.51244091988	633
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	4.4.7	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	3.6711537838	658
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	2	synth with cache (only 1: apply Nat.leb_le).	0.047623872757	12
Coq.Arith.Compare_dec.leb_correct_conv	40	0.14	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.867139816284	259
Coq.Arith.Compare_dec.leb_complete_conv	40	1	synth with cache (only 1: apply leb_iff_conv).	0.0314741134644	2
Coq.Arith.Compare_dec.leb_compare	40	1.4.5	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: Bool.destr_bool).	2.28763794899	335
Coq.Arith.EqNat.eq_nat_refl	40	0.2.63	synth with cache (only 1: Nat.induct n; only 1: constructor; only 1: trivial).	1.80412697792	2307
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.1.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0757439136505	7
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.812143087387	129
Coq.Arith.EqNat.eq_nat_elim	40	0.27	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	9.11112499237	4039
Coq.Arith.EqNat.eq_nat_decide	40	0.0.3.0.0.0.1.2.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: auto; only 1: destruct m; only 1: auto; only 1: destruct (IHn m); only 1: auto; only 1: auto).	2.66845202446	621
Coq.Arith.EqNat.beq_nat_refl	40	2.0.24	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	1.68819189072	1039
Coq.Arith.EqNat.beq_nat_true	40	5.0.1.0.0.0.3.0.5	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	9.18670797348	3070
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	14.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).	1.29395294189	621
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3	synth with cache (only 1: destr_bool).	0.0166249275208	4
Coq.Arith.PeanoNat.Nat.recursion_succ	40	5.3.4	synth with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	0.788317918777	305
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0213260650635	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: auto).	0.0156881809235	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0150520801544	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0153748989105	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0210499763489	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0380439758301	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.126224040985	43
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0203101634979	2
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0231289863586	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.2.0.0.2.0.0.1.1.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: easy).	4.11379694939	1177
Coq.Arith.PeanoNat.Nat.compare_succ	40	1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.0870490074158	12
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	17.8277640343	5627
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.3.0.0.3	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destr_bool; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	22.7793841362	7026
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.1.0.1.0.0.3.0.0.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	24.6257851124	7650
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	19.9287748337	6271
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.19210100174	5
Coq.Arith.PeanoNat.Nat.pow_0_r	40	3	synth with cache (only 1: reflexivity).	0.0240540504456	4
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.3.0	synth with cache (only 1: intro H; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: auto).	0.103481054306	20
Coq.Arith.PeanoNat.Nat.square_spec	40	1	synth with cache (only 1: reflexivity).	0.0237729549408	2
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.0.0.0	synth with cache (only 1: intros ([| ], H); only 1: now apply lt_irrefl with 0; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).	0.0559380054474	5
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	2.1.5.1	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: tauto).	1.9956099987	523
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0325210094452	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: reflexivity).	0.13947892189	63
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.1.0.2	synth with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: intro H; only 1: auto).	0.0963089466095	35
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0333251953125	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	16	synth with cache (only 1: apply le_0_l).	0.252235174179	130
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.4.4.15.6	synth with cache (only 1: simpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: destr_bool; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.56126093864	1408
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0687029361725	6
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0483448505402	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.0.2	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: intro n; only 1: intuition).	0.0684080123901	15
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.16.0	synth with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: easy).	27.8811171055	6317
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: reflexivity; only 1: trivial).	0.0417840480804	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.1.0.1.0.4	synth with cache (only 1: apply testbit_bitwise_2; only 1: reflexivity; only 1: rewrite max_le_iff; only 1: auto; only 1: rewrite max_le_iff; only 1: auto).	1.22370505333	194
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0316019058228	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0263509750366	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.0891859531403	16
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0778560638428	15
Coq.Arith.Gt.gt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0374391078949	2
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0399990081787	1
Coq.Arith.Gt.le_not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.0559868812561	11
Coq.Arith.Gt.gt_not_le	40	3	synth with cache (only 1: apply Nat.lt_nge).	0.0673561096191	13
Coq.Arith.Gt.le_S_gt	40	1.0	synth with cache (only 1: intro H; only 1: trivial).	0.0494220256805	3
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0326581001282	1
Coq.Arith.Gt.gt_le_S	40	3.0	synth with cache (only 1: intro H; only 1: trivial).	0.0466380119324	5
Coq.Arith.Gt.le_gt_S	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0599880218506	4
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	2.6.52	synth with cache (only 1: induction n; only 1: intuition; only 1: intuition).	38.4136769772	35937
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0333061218262	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0325651168823	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.8.7	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: auto).	0.254153013229	256
Coq.Logic.JMeq.JMeq_trans	40	0.8	synth with cache (only 1: destruct 1; only 1: trivial).	0.0328619480133	17
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0235359668732	5
Coq.Logic.JMeq.JMeq_rect	40	1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0228958129883	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0233228206635	5
Coq.Logic.JMeq.JMeq_rect_r	40	1.2.0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0380878448486	11
Coq.Logic.JMeq.JMeq_congr	40	0.20.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.559556007385	796
Coq.Logic.JMeq.JMeq_eq_dep_id	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0255100727081	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0251190662384	3
Coq.Logic.JMeq.eq_dep_JMeq	40	1.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0209431648254	4
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.9.26.4	synth with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: trivial).	16.29226017	13941
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.17.26	synth with cache (only 1: intros n m; only 1: destruct m; only 1: auto).	1.64160895348	4401
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.1.1.1	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).	0.030072927475	7
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	5.2	synth with cache (only 1: intros A *; only 1: tauto).	0.098443031311	25
Coq.Logic.Classical_Prop.not_imply_elim	40	0.1	synth with cache (only 1: intros P H; only 1: tauto).	0.0391628742218	3
Coq.Logic.Classical_Prop.not_imply_elim2	40	2.0.2.0.0	synth with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intros _; only 1: assumption).	0.165918827057	33
Coq.Logic.Classical_Prop.imply_to_or	40	0.6.9	synth with cache (only 1: intro H; only 1: intro NP; only 1: tauto).	0.998250007629	406
Coq.Logic.Classical_Prop.imply_to_and	40	1.1.0.2.1	synth with cache (only 1: intros Ext A a; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.0713319778442	11
Coq.Logic.Classical_Prop.or_to_imply	40	1	synth with cache (only 1: tauto).	0.432202100754	61
Coq.Logic.Classical_Prop.not_and_or	40	3.1	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	0.26029920578	6
Coq.Logic.Classical_Prop.or_not_and	40	0	synth with cache (only 1: tauto).	0.0280809402466	1
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0275130271912	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0276880264282	1
Coq.Logic.Classical_Prop.imply_and_or	40	6	synth with cache (only 1: tauto).	0.447293043137	126
Coq.Logic.Classical_Prop.imply_and_or2	40	5.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.101435184479	32
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	1.1.15.15.26	synth with cache (only 1: red; only 1: intros n m; only 1: induction n; only 1: cbn; only 1: eauto).	2.42712903023	6003
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.36	synth with cache (only 1: red; only 1: eauto).	0.248444080353	736
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.29.7	synth with cache (only 1: intros; only 1: subst; only 1: auto).	1.06270599365	2187
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.1.2.0.1.15.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: auto; only 1: right; only 1: assumption; only 1: reflexivity).	2.7408349514	2949
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	44	synth with cache (only 1: firstorder).	24.4893090725	12404
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	8.2.8	synth with cache (only 1: split; only 1: intros y [H1 H2]; only 1: intuition).	8.07883810997	2013
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	6	synth with cache (only 1: firstorder).	1.15443205833	29
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.0.10.2.0.0.6.1.3.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro x; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: auto; only 1: exists f; only 1: firstorder).	24.3902158737	17852
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	3.1.0.0.0.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: auto).	0.240829944611	108
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	2.3.47	synth with cache (only 1: compute; only 1: intros; only 1: firstorder).	22.8765189648	31500
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.9.0.0.7.1	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: assumption).	2.28259587288	1800
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.3.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.203085899353	54
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	1.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0591840744019	8
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.258825063705	22
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	1.0.6.1.0.4.3	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	3.26565599442	1327
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	2.0.0.5.2	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.239120960236	167
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	14	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.777661085129	198
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	14.10.2.2.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	14.3574888706	13963
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	2.2.7.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	7.33835816383	1747
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.7.0.0.0.0.0.0	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	33.0920519829	7219
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.5.1	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).	0.196976900101	58
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.2.4.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0640721321106	10
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	8.0.24.3	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: auto; only 1: firstorder).	18.0758209229	10753
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40	2.5.3.7.38.33	synth with cache (only 1: destruct n; only 1: red; only 1: now exists nil; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	10.9426989555	18831
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	11.47	synth with cache (only 1: red; only 1: eauto).	1.36193490028	1851
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0612308979034	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.2.8	synth with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.167420864105	172
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.11.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0995428562164	126
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0231189727783	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.1.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.023432970047	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	6.12.0.2	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.556872844696	668
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: exact eq_refl).	0.0139789581299	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: exact eq_refl).	0.0134739875793	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	1.1	synth with cache (only 1: intros A P H p q; only 1: eauto using @functional_extensionality_dep).	0.0210819244385	4
Coq.Logic.HLevels.false_hprop	40	11.4	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.136199951172	177
Coq.Logic.HLevels.true_hprop	40	0.9.1	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: exact eq_refl).	0.0729520320892	74
Coq.Logic.HLevels.not_hprop	40	4.4.3.1.2	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: contradiction).	0.75648188591	855
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	11.0.0.0.0.43.1	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: exists x; only 1: firstorder).	26.322988987	15864
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.19	synth with cache (only 1: destruct 1; only 1: auto).	0.252995967865	489
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0207889080048	4
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.54.2	synth with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	3.49045205116	11680
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.64.35.5	synth with cache (only 1: intro x; only 1: inversion 1; only 1: exists eq_refl; only 1: reflexivity).	18.9311039448	89585
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	3.31	synth with cache (only 1: inversion 1; only 1: reflexivity).	1.41385006905	2951
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.4	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0285019874573	14
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.5.0.1.11.8	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.288367033	2023
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	2.1.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0261619091034	7
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.4	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0296339988708	14
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.12.1.0.14.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.70031905174	2803
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	2.1.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0271921157837	7
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	2.0.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.027086019516	6
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	1.4.8.35	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	1.06578993797	2354
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.6.0.11.13.9.12.24	synth with cache (only 1: subst; only 1: intro eq_rect_eq; only 1: red; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: rewrite H; only 1: reflexivity).	21.8447461128	52146
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.9	synth with cache (only 1: red; only 1: auto).	0.0423920154572	24
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	3.20.2.4	synth with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	5.97287607193	8235
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	1.1.2	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.0269160270691	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	9.0	synth with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.149276018143	84
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0334360599518	12
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0225501060486	3
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	synth with cache (only 1: intros * []; only 1: trivial).	0.022842168808	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	3.2.1	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0243949890137	9
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	10	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.655657052994	35
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	13	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.731663942337	195
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.12.25	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto).	3.97311401367	7481
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	9.0.1.3	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: contradiction).	0.37589597702	410
Coq.Logic.Decidable.dec_True	40	1.2	synth with cache (only 1: constructor; only 1: auto).	0.0184469223022	5
Coq.Logic.Decidable.dec_False	40	1.1	synth with cache (only 1: unfold decidable; only 1: auto).	0.0189208984375	4
Coq.Logic.Decidable.dec_or	40	10.10	synth with cache (only 1: unfold decidable; only 1: tauto).	1.94399905205	2054
Coq.Logic.Decidable.dec_and	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0385999679565	4
Coq.Logic.Decidable.dec_not	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0240638256073	4
Coq.Logic.Decidable.dec_imp	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.031054019928	4
Coq.Logic.Decidable.dec_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0413229465485	4
Coq.Logic.Decidable.not_not	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0400590896606	4
Coq.Logic.Decidable.not_or	40	1	synth with cache (only 1: tauto).	0.0195240974426	2
Coq.Logic.Decidable.not_and	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0287330150604	5
Coq.Logic.Decidable.not_imp	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.033280134201	5
Coq.Logic.Decidable.imp_simp	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0265941619873	4
Coq.Logic.Decidable.not_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0639550685883	4
Coq.Logic.Decidable.not_true_iff	40	5	synth with cache (only 1: tauto).	0.0310049057007	14
Coq.Logic.Decidable.not_false_iff	40	2	synth with cache (only 1: tauto).	0.0278079509735	3
Coq.Logic.Decidable.not_not_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0253310203552	4
Coq.Logic.Decidable.contrapositive	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0291841030121	4
Coq.Logic.Decidable.or_not_l_iff_1	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0326089859009	4
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0321018695831	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0316390991211	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0334968566895	2
Coq.Logic.Decidable.imp_not_l	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0347480773926	3
Coq.Logic.Decidable.not_or_iff	40	1	synth with cache (only 1: tauto).	0.0240890979767	2
Coq.Logic.Decidable.not_and_iff	40	2	synth with cache (only 1: tauto).	0.0208899974823	3
Coq.Logic.Decidable.not_imp_iff	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0677928924561	3
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0394101142883	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	2	synth with cache (only 1: eauto with *).	0.0436930656433	3
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.134191989899	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.1.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.441586017609	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.1	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	3.23125290871	985
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	1	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0429651737213	2
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0485980510712	2
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0814361572266	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.1.1	synth with cache (only 1: induct s x; only 1: eauto with *; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.291567087173	10
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	24.1	synth with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	6.32546520233	2734
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0422120094299	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.2.0.1	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.42124581337	8
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.0.0.5	synth with cache (only 1: split; only 1: simpl; only 1: auto; only 1: auto).	0.0852510929108	9
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.2.10.9	synth with cache (only 1: intros n; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: auto).	2.74554014206	768
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	4.7	synth with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.461887121201	109
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.046019077301	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0609080791473	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.16304397583	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.0.1.0.11.13	synth with cache (only 1: intro H; only 1: inversion H; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).	5.88880395889	2715
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.144730091095	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	4.48.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	1.8108818531	2903
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	3.2.1.1.0.4	synth with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	2.77685213089	754
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.4.0.4	synth with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	1.50260996819	304
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.0768029689789	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	1.0.0.1	synth with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.109084129333	6
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.4.0.1	synth with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.147724151611	17
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	5.39	synth with cache (only 1: unfold filter; only 1: auto_tc).	5.35086512566	3662
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.2.2.3	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.195198059082	31
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.1.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.1102039814	6
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.1.0.0.0.3.0.4	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	4.97769713402	856
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.33251404762	218
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	0.0.3.1.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.389997959137	62
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.151895046234	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.2.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.305774927139	44
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	7	synth with cache (only 1: firstorder).	0.116198062897	15
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2.0.3	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.294674873352	92
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: trivial).	0.0633130073547	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	8	synth with cache (only 1: firstorder).	0.055566072464	9
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	9.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.246039152145	67
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	43.0	synth with cache (only 1: intros n; only 1: easy).	6.59198689461	5002
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.2.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.03449487686	387
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0966019630432	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	0.0.9.21	synth with cache (only 1: intro Pdec; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: eauto).	16.6203961372	6926
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.9	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: eauto).	0.325870990753	118
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0994839668274	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.7	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.184448957443	42
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.088830947876	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.087338924408	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0858001708984	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.29	synth with cache (only 1: intros [| ] [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	13.8245561123	2917
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.27	synth with cache (only 1: intros [| l' o' r']; only 1: auto; only 1: trivial).	4.81667208672	1751
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	1.4.12	synth with cache (only 1: intros n m Hn; only 1: fix even_spec 1; only 1: intuition).	8.47321581841	1826
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.2	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0969669818878	5
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	3.35	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	6.33630514145	4126
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.39.9	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: trivial).	5.1374938488	3038
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.290708065033	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.4	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.466949939728	31
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	0.0.2.0.21	synth with cache (only 1: rewrite remove_spec; only 1: intros; only 1: elim H; only 1: intros; only 1: auto).	16.1243770123	3444
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.106796979904	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	1.7	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.151303052902	25
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0870759487152	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.251018047333	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	1.3.0	synth with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.110306024551	7
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.2.0.2	synth with cache (only 1: rewrite diff_spec; only 1: intro H; only 1: intros EQ; only 1: tauto).	0.161652803421	23
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0863270759583	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.3.7.4	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	2.97587299347	563
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.1.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.187273979187	14
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.1.0.1.2.25	synth with cache (only 1: intros E; only 1: split; only 1: rewrite E; only 1: auto; only 1: rewrite E; only 1: auto).	37.6154880524	13830
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	1	synth with cache (only 1: intuition).	0.285556077957	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	1.42	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	12.7771360874	7197
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	2	synth with cache (only 1: intuition).	0.0671889781952	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	3	synth with cache (only 1: intuition).	0.0711200237274	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	4	synth with cache (only 1: intuition).	0.069816827774	5
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0643990039825	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	3.3.2.25.1	synth with cache (only 1: split; only 1: rewrite add_spec; only 1: intuition; only 1: intros; only 1: firstorder).	17.9132361412	6437
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	2.4.1.3	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	5.24382615089	543
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.11	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	2.21165800095	209
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.5	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.534075021744	50
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0854170322418	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0861229896545	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	1	synth with cache (only 1: intuition).	0.258507966995	2
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.2.0.1.6.1	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	10.5710101128	1076
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	11.2.1	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: firstorder).	5.54548883438	790
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	8.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.244457006454	35
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	25	synth with cache (only 1: firstorder).	6.23450803757	2661
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.1.1.3.13	synth with cache (only 1: vm_compute; only 1: intros s s' E; only 1: intros x y z; only 1: rewrite E; only 1: auto).	19.0954182148	3850
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2	synth with cache (only 1: firstorder).	0.407965898514	52
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.3.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.26234292984	12
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.4.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.269870996475	14
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.5.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: auto).	0.243773937225	14
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.6.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.212054014206	14
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.13.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite diff_spec; only 1: intuition).	3.22455501556	568
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.2.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.348256111145	17
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: case (mem x s); only 1: intuition; only 1: intuition).	1.58991289139	8
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1	synth with cache (only 1: intuition).	0.0659520626068	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.0667397975922	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	1	synth with cache (only 1: fsetdec).	1.4460580349	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0747361183167	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.100371837616	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.101503133774	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.165802001953	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1	synth with cache (only 1: fsetdec).	0.0857241153717	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.112107992172	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.109604120255	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	1.1	synth with cache (only 1: intuition; only 1: fsetdec).	1.38250398636	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0996069908142	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0938899517059	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	1.3.3.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.51732397079	46
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.114549875259	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.101475000381	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	5.2	synth with cache (only 1: intuition; only 1: fsetdec).	1.16261291504	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.252693891525	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	2.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.192137956619	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.785906076431	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.217162132263	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.689644813538	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.142796993256	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.863266944885	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	2	synth with cache (only 1: fsetdec).	0.149087190628	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.12925195694	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.161641836166	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.160655021667	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.241477966309	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.692400932312	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.250258922577	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.763015031815	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.603907108307	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0855967998505	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0854449272156	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.111860990524	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.113163948059	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.252153873444	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.128584861755	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.12585401535	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	2	synth with cache (only 1: fsetdec).	0.340574979782	12
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.135056972504	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.144634008408	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.152554988861	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.181025981903	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.20108795166	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.268446922302	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.272262096405	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.251753091812	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.216961145401	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	1	synth with cache (only 1: fsetdec).	0.106845140457	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.104098081589	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0880858898163	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0882818698883	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.108886957169	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.174198150635	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.130098819733	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0934510231018	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.221381902695	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.163540124893	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.224164962769	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.210102081299	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	3.0.4	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).	0.348479986191	10
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.6	synth with cache (only 1: expAdd; only 1: fsetdec).	0.444934129715	24
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.38000702858	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.62823009491	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.487730979919	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.5	synth with cache (only 1: expAdd; only 1: fsetdec).	0.785378217697	27
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.0.25.4	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	7.16188597679	2909
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.3.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0943710803986	6
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	0.0.10.0.5.8	synth with cache (only 1: intro; only 1: rewrite elements_Empty, cardinal_spec; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	15.7106068134	3751
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.1.3	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: fsetdec).	0.121776103973	9
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.3.10.10.2	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: rewrite cardinal_fold; only 1: auto with *).	10.5217688084	2544
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	9.1	synth with cache (only 1: intros a b H; only 1: auto with *).	0.626646995544	115
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.6.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	0.58235001564	74
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.2.6.11	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: rewrite remove_spec; only 1: intuition; only 1: auto).	29.3952019215	6742
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1	synth with cache (only 1: auto with set).	0.0592629909515	2
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0982351303101	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0983099937439	4
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	0.14.28.2	synth with cache (only 1: intuition; only 1: generalize (Dec.F.is_empty_iff s); only 1: fix even_spec 1; only 1: auto).	15.4926569462	6980
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	2	synth with cache (only 1: eauto with *).	0.0585739612579	3
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.6	synth with cache (only 1: constructor 2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.291287183762	28
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.7.1.1.3	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	18.9031879902	2454
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.101248025894	5
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	2.1.1.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: auto; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.154693126678	9
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.1.0.1.1.1	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.66807413101	104
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	5.9.0	synth with cache (only 1: intuition; only 1: apply <- mem_spec; only 1: eauto with set).	2.98674798012	412
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	2.3	synth with cache (only 1: intro H; only 1: auto with set).	0.0753219127655	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	1	synth with cache (only 1: auto with set).	0.0649919509888	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.1	synth with cache (only 1: apply <- mem_spec; only 1: Dec.fsetdec).	0.281710863113	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.791523933411	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.2.0.1.0.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.443209886551	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.864685058594	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set relations).	0.0624599456787	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.0966031551361	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	2.54212594032	83
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.1	synth with cache (only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.100182056427	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.109195947647	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.4.0	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.10412812233	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0642240047455	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0850830078125	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	12.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: eauto with set).	7.37045884132	773
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0748250484467	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0812618732452	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0795810222626	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	0.3	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.314898967743	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set relations).	0.0641179084778	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.128098011017	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	2	synth with cache (only 1: auto with set relations).	0.0604798793793	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0966920852661	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.084459066391	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0606439113617	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.0681130886078	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.0669438838959	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set relations).	0.0656599998474	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0619258880615	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.0593769550323	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.16918182373	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.0588750839233	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0784277915955	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0672709941864	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0649650096893	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.0742778778076	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0716450214386	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0689868927002	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0621280670166	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0623500347137	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0613839626312	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	2.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.160163879395	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0725729465485	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0907709598541	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0720999240875	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.0681149959564	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0654270648956	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.1	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0832540988922	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	1.0.0.0.18.5	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	19.1197059155	5269
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.0.6.0.0.0.3.3	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	10.8510808945	1823
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.3.0.0.0.5.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	4.34140491486	792
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	2.0	synth with cache (only 1: intros x y H; only 1: auto with set).	0.0851790904999	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.2.2.1.0	synth with cache (only 1: intros a H; only 1: intro; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	1.40970301628	206
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.2.0.4.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	1.42788815498	265
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.1.0.0.2.1.0.1.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	6.99290704727	1153
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	synth with cache (only 1: auto with set).	0.067225933075	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	16	synth with cache (only 1: solve_proper).	2.10263800621	302
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.1.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).	0.116461992264	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).	0.172332048416	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	3.2.0.4.0	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	4.87895298004	597
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.0.2.19.1	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	9.79956388474	2883
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.1.1.2	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.147080898285	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.1.0	synth with cache (only 1: unfold decidable; only 1: intro H; only 1: auto).	1.07934808731	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0621719360352	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.0492708683014	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	13	synth with cache (only 1: fsetdec).	4.67914915085	354
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	3.1	synth with cache (only 1: intro H; only 1: fsetdec).	0.344405889511	15
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	11	synth with cache (only 1: fsetdec).	1.29359602928	100
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1.0	synth with cache (only 1: intro n; only 1: intuition).	0.0765419006348	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	2	synth with cache (only 1: fsetdec).	0.124545097351	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	14	synth with cache (only 1: fsetdec).	2.2010140419	292
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	8.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.154828071594	10
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	2	synth with cache (only 1: fsetdec).	0.525555849075	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	1	synth with cache (only 1: fsetdec).	0.513742923737	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	12	synth with cache (only 1: fsetdec).	1.47516012192	210
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1	synth with cache (only 1: fsetdec).	0.283648014069	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	1	synth with cache (only 1: fsetdec).	0.326469898224	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.5	synth with cache (only 1: vm_compute; only 1: intuition).	0.246213912964	16
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	5	synth with cache (only 1: fsetdec).	0.2345058918	20
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	14	synth with cache (only 1: fsetdec).	5.39816188812	746
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	1	synth with cache (only 1: fsetdec).	0.376049995422	11
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	1.6.0.6	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: auto).	4.57118201256	1229
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	1.6.0.6	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: auto).	15.0172879696	3994
Coq.MSets.MSetGenTree.Props.isok_iff	40	2.5.1	synth with cache (only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: auto).	0.114228963852	42
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	4.6.2.0.0.0.4	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto; only 1: red; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	37.375880003	8851
Coq.MSets.MSetGenTree.Props.In_node_iff	40	11	synth with cache (only 1: intuition_in).	1.06504487991	97
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	6	synth with cache (only 1: intuition_in).	0.237557172775	48
Coq.MSets.MSetGenTree.Props.lt_leaf	40	27.13	synth with cache (only 1: intros x y z; only 1: intuition_in).	7.43849492073	4813
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0475120544434	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	4.12.8	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	5.85888290405	1043
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.0.12	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	1.91993498802	176
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.5.0	synth with cache (only 1: intros n m; only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.111824035645	22
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	11	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.574961900711	139
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0680129528046	5
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	2	synth with cache (only 1: eauto).	0.0972640514374	18
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	4.1.1.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	9.79824519157	1661
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	1.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.267938137054	20
Coq.MSets.MSetGenTree.Props.empty_spec	40	13	synth with cache (only 1: firstorder).	0.0850808620453	60
Coq.MSets.MSetGenTree.Props.empty_ok	40	3	synth with cache (only 1: auto with bool).	0.0286500453949	4
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	4.7.1	synth with cache (only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: auto).	3.67618179321	932
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.4	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	4.08855700493	681
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	3.1.4.1.3.0.5	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition_in; only 1: now auto; only 1: fix even_spec 1; only 1: simpl; only 1: auto).	19.2201139927	4961
Coq.MSets.MSetGenTree.Props.eq_equiv	40	31	synth with cache (only 1: firstorder).	3.31759214401	1271
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	2.20	synth with cache (only 1: fix odd_spec 1; only 1: auto).	29.6752340794	8682
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4	synth with cache (only 1: firstorder).	0.0948648452759	12
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	12	synth with cache (only 1: firstorder).	0.0780119895935	46
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	11.1	synth with cache (only 1: intro H; only 1: firstorder  (subst; auto)).	1.70986199379	289
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	synth with cache (only 1: intro n; only 1: intuition).	0.0772521495819	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: Dec.fsetdec).	0.093652009964	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.1	synth with cache (only 1: compute; only 1: firstorder).	1.12363815308	51
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.20.1.2	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	10.121227026	2662
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	11.3	synth with cache (only 1: red; only 1: firstorder).	4.93724107742	664
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.1.9	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.70847296715	199
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.1.0.0.0.0.1.0.0.0.2.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	12.7982368469	1207
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.4.0.0.0.0.3.0.0.0.2.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	33.8853430748	3547
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	0.8	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.211395978928	45
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0476319789886	11
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.3	synth with cache (only 1: intros; only 1: intuition).	0.0472700595856	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	3.1.1.0.4.1.0	synth with cache (only 1: split; only 1: unfold singleton; only 1: intros; only 1: inv; only 1: trivial; only 1: unfold singleton; only 1: auto).	15.2242040634	1024
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	11	synth with cache (only 1: constructors).	0.0871469974518	34
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.13.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	10.7079629898	229
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	7.2	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.151084899902	54
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	2.2.2	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.426625967026	52
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0	synth with cache (only 1: auto).	0.0305571556091	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0296840667725	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	2.0.3.5	synth with cache (only 1: destruct s; only 1: easy; only 1: simpl; only 1: easy).	4.6647131443	658
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0291910171509	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	6.1.7	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	3.36089587212	807
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: auto).	0.0280010700226	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	3.3.2	synth with cache (only 1: intros x l; only 1: fix even_spec 1; only 1: auto).	0.466543912888	93
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	1.15	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	3.6044318676	883
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.2.0.1.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	14.0197319984	1759
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	2	synth with cache (only 1: auto).	0.0323178768158	3
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.2.0.2.7.6	synth with cache (only 1: intro n; only 1: unfold singleton; only 1: intro l; only 1: intuition; only 1: inv; only 1: auto).	8.70405602455	2735
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.309559822083	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	0.13	synth with cache (only 1: fix odd_spec 1; only 1: auto).	12.8205521107	2250
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	2	synth with cache (only 1: auto with bool).	0.0336639881134	3
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	6.3.25	synth with cache (only 1: red; only 1: unfold not; only 1: inversion 1).	4.29843688011	1797
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	9.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0988440513611	42
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	2.0.2.0.0	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0891411304474	9
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	4.5.5	synth with cache (only 1: intro H; only 1: repeat rewrite <- isok_iff; only 1: intuition).	1.60191679001	411
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0622460842133	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	2.1.2.9	synth with cache (only 1: destruct s; only 1: easy; only 1: simpl; only 1: easy).	3.55644512177	720
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0312538146973	1
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0297169685364	2
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	21	synth with cache (only 1: solve_proper).	11.775177002	3212
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	1.2.8.4.3	synth with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: elim H; only 1: intuition; only 1: auto).	3.71157097816	1173
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: reflexivity).	0.0892140865326	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.1.2	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0288660526276	7
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.5.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	1.42071890831	476
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	1.0.3.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto with sets).	0.0399031639099	14
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.11.19	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.942893981934	1323
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.6.19.25	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	4.52398705482	10610
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.4.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0416960716248	13
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	1.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.0357961654663	8
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.0.2.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.482851982117	265
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.2.0.3.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	4.31829595566	1484
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.1.0.0.7.1.3.1.3	synth with cache (only 1: constructor 1; only 1: red; only 1: auto; only 1: red; only 1: induction 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	2.99370408058	2901
Coq.Sets.Uniset.defs.leb_refl	40	4	synth with cache (only 1: destr_bool).	0.0172209739685	5
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.1.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.031986951828	5
Coq.Sets.Uniset.defs.seq_refl	40	0	synth with cache (only 1: auto).	0.0149848461151	1
Coq.Sets.Uniset.defs.seq_trans	40	0.1.5.11.1.3	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro x; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	8.00154304504	5641
Coq.Sets.Uniset.defs.seq_sym	40	2	synth with cache (only 1: auto).	0.0159621238708	3
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0274810791016	3
Coq.Sets.Uniset.defs.union_empty_right	40	1.3.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0416090488434	9
Coq.Sets.Uniset.defs.union_comm	40	4.3.1	synth with cache (only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.189773082733	66
Coq.Sets.Uniset.defs.union_ass	40	6.1.0.3.1.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: unfold union; only 1: unfold charac; only 1: destr_bool; only 1: auto with bool).	6.52425193787	2936
Coq.Sets.Uniset.defs.seq_left	40	0.1.6.0.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destr_bool; only 1: rewrite H; only 1: auto).	1.12999415398	375
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0650610923767	10
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_refl	40	7.1	synth with cache (only 1: intros; only 1: congruence).	0.0388188362122	10
Coq.Sets.Multiset.multiset_defs.meq_trans	40	9.0	synth with cache (only 1: intros x y z; only 1: congruence).	0.844892978668	110
Coq.Sets.Multiset.multiset_defs.meq_sym	40	1.2.2	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: now symmetry).	0.0428581237793	8
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0457379817963	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.050849199295	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	5.11.0.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: intros n m p; only 1: firstorder).	19.1233201027	4254
Coq.Sets.Multiset.multiset_defs.munion_ass	40	3.0.0.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: destruct x; only 1: unfold multiplicity; only 1: auto with arith).	0.409310817719	63
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.1.2.0.6	synth with cache (only 1: intros; only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	10.8149580956	1510
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with arith).	0.0829348564148	8
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.1.1.1.5	synth with cache (only 1: intros; only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	6.23976612091	1037
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	2	synth with cache (only 1: exact PeanoNat.Nat.le_refl).	0.034942150116	3
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0862770080566	13
Coq.Sets.Integers.Integers_sect.le_trans	40	2.4.0.0	synth with cache (only 1: red; only 1: intros x y z; only 1: intros; only 1: PeanoNat.Nat.order').	0.0665769577026	10
Coq.Sets.Integers.Integers_sect.le_Order	40	1.0.1.0.0.0.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.503101825714	90
Coq.Sets.Integers.Integers_sect.triv_nat	40	15.5	synth with cache (only 1: red; only 1: split).	3.68435001373	1267
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.47.9.3	synth with cache (only 1: intros; only 1: intro x; only 1: red; only 1: auto).	8.68020606041	23979
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	4.0.0.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto  10 with sets).	0.124084949493	27
Coq.Sets.Relations_1_facts.contains_is_preorder	40	1	synth with cache (only 1: auto  10 with sets).	0.0162827968597	2
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.11.2.3	synth with cache (only 1: unfold same_relation at 1; only 1: intros U R H'; only 1: intros [? ?]; only 1: auto  10 with sets).	0.937038898468	889
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0234520435333	4
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0232000350952	3
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	synth with cache (only 1: intros U R H'; only 1: auto  10 with sets).	0.0195188522339	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	1	synth with cache (only 1: auto with sets).	0.0145101547241	2
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.2.0.0.1.19.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto with sets).	10.1386249065	11680
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.1.10.0.2.3.7.1.1	synth with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	37.3782680035	30708
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.2.0.0.1.1.0.1.0.0.3	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	13.9540519714	6091
Coq.Sets.Relations_2_facts.star_monotone	40	1.0.3.1.0.1.0.0.3	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	23.1011459827	9227
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	6	synth with cache (only 1: auto).	0.0478971004486	22
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.6.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0300488471985	13
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.0.11.5.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: trivial; only 1: trivial).	2.6872959137	1648
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40	0.0.18.0	synth with cache (only 1: intuition; only 1: exists x; only 1: auto with sets; only 1: trivial).	3.15976190567	1389
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.14.1.8.0.1.2	synth with cache (only 1: intuition; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H; only 1: inversion H; only 1: inversion H0; only 1: intuition).	22.3849141598	10150
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	10.6.6.3	synth with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intros x0 H'0; only 1: firstorder).	8.7328209877	4882
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	5.0.0	synth with cache (only 1: red; only 1: intuition; only 1: contradiction).	0.0347399711609	13
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	18	synth with cache (only 1: auto  10 with sets).	0.57101893425	145
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0156180858612	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	1.0	synth with cache (only 1: red; only 1: auto with sets).	0.0216999053955	3
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.2.0.1.0.0.0.0.0.4	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	22.430562973	2365
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	1.1.0.0.0.8	synth with cache (only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: trivial; only 1: trivial).	5.44080591202	1753
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.1.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0326969623566	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.1	synth with cache (only 1: intro X; only 1: auto with sets).	0.05730509758	3
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0156409740448	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.1.0.0.4.1	synth with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.363567829132	154
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0372998714447	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.5	synth with cache (only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.730005979538	25
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	6.1.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0454487800598	10
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.0.0	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0471398830414	4
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.5.1.2.5	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	7.16771197319	2880
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.2.1.0.3	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.07532000542	185
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	6.0	synth with cache (only 1: intros A B x H'; only 1: firstorder).	0.362818002701	52
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.1.1.0.1.1.1.1.0.1	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	9.74475693703	2600
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	21	synth with cache (only 1: auto  10 with sets).	0.910325050354	617
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	1	synth with cache (only 1: auto  6 with sets).	0.0236101150513	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	2.15	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.668837070465	318
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0174992084503	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0196928977966	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	26.5	synth with cache (only 1: intro A; only 1: auto  10 with sets).	4.84832692146	3061
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	1	synth with cache (only 1: auto  6 with sets).	0.0241649150848	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	2	synth with cache (only 1: auto  9 with sets).	0.0279541015625	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.1.1.0.0.0.1.1.0.1.1.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	6.7558400631	2450
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.3.3.1.0.3.3.1.2.5.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	11.4454228878	6394
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	16.1.4.9	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	16.3477668762	9421
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.1.3.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.04825091362	14
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.6	synth with cache (only 1: unfold Add; only 1: auto with sets).	0.407562971115	81
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.2	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0836820602417	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	9.1.7.1.3	synth with cache (only 1: unfold Add; only 1: intros x y z H' H'0; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	11.1625540257	5112
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.0180511474609	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0210258960724	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0271301269531	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.0.13.0.2.3.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	12.1630740166	6512
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.1.2.1.1.1	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: red; only 1: auto with sets).	1.2220518589	343
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.2.2.4.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: auto with sets; only 1: intuition).	2.3082280159	1058
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.13.0.13.6.4	synth with cache (only 1: destruct 1; only 1: constructor; only 1: intro x; only 1: auto; only 1: intro x; only 1: auto).	7.65551185608	14619
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	10	synth with cache (only 1: destruct 1).	0.0184569358826	21
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	1	synth with cache (only 1: destruct 1).	0.0100450515747	2
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.1.15	synth with cache (only 1: constructor; only 1: red; only 1: auto).	1.56729221344	1854
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	2.3.1	synth with cache (only 1: unfold Add at 1; only 1: intros x H; only 1: auto with sets).	0.0265529155731	18
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	0.22.0.18.1.5.8	synth with cache (only 1: intro; only 1: red; only 1: destruct 1; only 1: intros; only 1: elim (Noone_in_empty x); only 1: subst; only 1: auto with sets).	33.5617470741	79441
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.5.2.0.1.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.572371959686	622
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.5	synth with cache (only 1: destruct 1; only 1: exact eq_refl).	0.0434520244598	29
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.3	synth with cache (only 1: destruct 1; only 1: auto with sets).	0.0262279510498	20
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.3.4	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0618431568146	29
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0212340354919	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.6.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.157022953033	113
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.1	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0171749591827	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.1	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0166358947754	4
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	1.2.2	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0325298309326	21
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.0.6	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0755560398102	20
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.12.15	synth with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	2.2418627739	1839
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	3.9.9.1	synth with cache (only 1: intros A H'; only 1: induction 1; only 1: firstorder; only 1: auto with arith).	36.7871129513	11512
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.5.2.0.13	synth with cache (only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	12.4028878212	3742
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.0.8	synth with cache (only 1: induction 1; only 1: exact eq_refl; only 1: auto with sets).	0.09632396698	49