coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	17.638931	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.1.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	18.452372	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	19.046129	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	18.644401	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.11	synth with cache (only 1: destruct p; only 1: reflexivity).	20.048236	33
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.5	synth with cache (only 1: destruct p; only 1: reflexivity).	20.425656	17
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.1	synth with cache (only 1: intros ?; only 1: trivial).	20.668886	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.5	synth with cache (only 1: destruct p; only 1: reflexivity).	21.343992	17
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.17	synth with cache (only 1: destruct p; only 1: reflexivity).	21.139398	45
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.2.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	20.920936	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	1.0	synth with cache (only 1: red; only 1: auto).	22.693198	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.1.4.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	22.658399	50
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.2	synth with cache (only 1: destruct 2; only 1: trivial).	22.461202	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	0.5.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: rewrite H; only 1: trivial).	22.909372	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	5.0	synth with cache (only 1: red; only 1: discriminate).	25.294057	72
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.0.0.4.3.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: auto).	25.520997	94
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	8.069068	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0.1	synth with cache (only 1: intros ?; only 1: trivial).	7.423348	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: assumption).	5.737728	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	1.3	synth with cache (only 1: destruct 1; only 1: trivial).	28.682948	100
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.2.1.1.1	synth with cache (only 1: red; only 1: intros ?; only 1: destruct 1; only 1: apply H; only 1: trivial).	10.629872	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.2.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	9.594311	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.4	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	11.248062	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.11.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: trivial).	8.640902	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	1	synth with cache (only 1: auto).	6.627164	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.2.6.0.0.0.1.6.0.0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	34.741193	206
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0.0.0.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: auto).	10.832131	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: trivial; only 1: trivial).	8.855596	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120	0.15.3	synth with cache (only 1: intros; only 1: elim p; only 1: trivial).	17.604516	471
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.878149	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.2.0.0.0.12	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	9.544701	88
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120	0.0.1.1.0.0.0.1.1.0.1.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	45.497264	510
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.6.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	7.475158	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	6.845201	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	1.3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	19.765067	229
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	7.114187	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.422924	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	2.2.0.5.0.1.1	synth with cache (only 1: intros ?; only 1: induction n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	52.363421	716
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120	0.5.0.6.0.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction decide; only 1: trivial; only 1: destruct b; only 1: trivial).	56.822312	767
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.2.1.1.1	synth with cache (only 1: red; only 1: intros ?; only 1: destruct 1; only 1: apply H; only 1: trivial).	9.162467	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120	0.1.0.1.1	synth with cache (only 1: intros ?; only 1: induction n; only 1: trivial; only 1: constructor; only 1: trivial).	9.660611	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	0.3.0.1.0.0.2.0.6.0.4.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H; only 1: auto).	69.084315	1277
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.1.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: constructor; only 1: trivial).	9.121210	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.6.0.0.0.0.0.7.0.13.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	54.655338	1790
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	3.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact X).	23.052230	320
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	0.0.5.3.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct decide; only 1: induction H; only 1: trivial; only 1: auto).	16.425378	77
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	1.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	23.269521	353
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	0.5.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: trivial).	8.634971	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	1.5.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	29.676023	843
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.1.0.2.0.0.0.2.0.8.0.1.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	82.574495	1338
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	1.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact H).	25.229311	416
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	0.25.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: reflexivity).	19.001966	415
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.878440	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	6.25.1.2.1	synth with cache (only 1: intros ?; only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	64.459466	1431
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.065521	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.886016	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.148279	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	3.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact X).	22.882259	412
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	3.3.3.2.17.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct a; only 1: auto; only 1: destruct b; only 1: auto; only 1: auto).	94.879652	3705
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: reflexivity).	6.554092	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	1.3.2.1.1.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: reflexivity).	23.114010	487
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.4.1	synth with cache (only 1: intros ?; only 1: destruct c; only 1: trivial; only 1: trivial; only 1: trivial).	10.228627	27
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.5.0.4.0.0.0.0.1.0.4.0.2.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	106.248749	1765
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120	0.1.0.0.1.0.10.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: trivial; only 1: induction H; only 1: induction n; only 1: trivial; only 1: constructor; only 1: auto; only 1: constructor; only 1: trivial).	81.283489	701
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.12.6.0.0.0.12.7.0.13.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	117.494518	4614
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	1.3.2.3.1.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: reflexivity).	42.539800	976
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120	0.6.0.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H; only 1: reflexivity).	8.954458	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	6.230941	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.7.3	synth with cache (only 1: intros; only 1: rewrite e; only 1: reflexivity).	13.543717	220
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120	0.15.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	16.813560	375
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120	1.5.3.3.2.2.2.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: reflexivity).	36.458906	1356
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120	0.1.1.1.4.1.1.3	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct e; only 1: intros ?; only 1: reflexivity).	20.670406	643
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: auto).	10.267960	76
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	21.0.1	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: auto).	11.325266	143
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.3.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: trivial).	9.312500	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120	0.0.4.2	synth with cache (only 1: destruct 1; only 1: destruct H2; only 1: destruct 1; only 1: reflexivity).	38.993927	526
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.18.7	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.887262	86
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.6.7	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.606326	79
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120	0.4.9.3.1.1.1.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H2; only 1: reflexivity).	57.504970	1919
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120	0.0.6.6.2.2.1.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	64.538657	2079
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.2.7.21.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: auto; only 1: auto).	60.190749	1012
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	0.2.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	25.808428	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120
