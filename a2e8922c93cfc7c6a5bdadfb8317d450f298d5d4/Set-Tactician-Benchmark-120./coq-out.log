Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Debug: starting proving server with connection through their stdin
Debug: using textmode optiontext
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
 |- (sin (2 * (PI / 3)) = sqrt 3 / 2)
[{'tacticText': 'rewrite double', 'confidence': 1}]
 |- (sin (2 * (PI / 3)) = sqrt 3 / 2)
[{'tacticText': 'rewrite double', 'confidence': 1}]
 |- (sin (PI / 3 + PI / 3) = sqrt 3 / 2)
[{'tacticText': 'rewrite sin_plus', 'confidence': 1}]
 |- (sin (PI / 3) * cos (PI / 3) + cos (PI / 3) * sin (PI / 3) = sqrt 3 / 2)
[{'tacticText': 'rewrite sin_PI3', 'confidence': 1}]
 |- (sqrt 3 / 2 * cos (PI / 3) + cos (PI / 3) * (sqrt 3 / 2) = sqrt 3 / 2)
[{'tacticText': 'rewrite cos_PI3', 'confidence': 1}]
 |- (sqrt 3 / 2 * (1 / 2) + 1 / 2 * (sqrt 3 / 2) = sqrt 3 / 2)
[{'tacticText': 'unfold Rdiv', 'confidence': 1}]
 |- (sqrt 3 * / 2 * (1 * / 2) + 1 * / 2 * (sqrt 3 * / 2) = sqrt 3 * / 2)
[{'tacticText': 'rewrite Rmult_1_l', 'confidence': 1}]
 |- (sqrt 3 * / 2 * / 2 + / 2 * (sqrt 3 * / 2) = sqrt 3 * / 2)
[{'tacticText': 'rewrite (Rmult_comm (/ 2))', 'confidence': 1}]
 |- (sqrt 3 * / 2 * / 2 + sqrt 3 * / 2 * / 2 = sqrt 3 * / 2)
[{'tacticText': 'rewrite double_var', 'confidence': 1}]
 |- (sqrt 3 * / 2 * / 2 + sqrt 3 * / 2 * / 2 = sqrt 3 * / 2 / 2 + sqrt 3 * / 2 / 2)
[{'tacticText': 'reflexivity', 'confidence': 1}]
Building oracle data...
Oracle data built, ready for incoming connections
Python server running in text mode
