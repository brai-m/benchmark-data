
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	19.3.4	synth with cache (only 1: intros until x; only 1: intros Ex; only 1: firstorder).	5.8004322052	4846
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	17.0.19	synth with cache (only 1: intros Q; only 1: intros y; only 1: CRelationClasses.simpl_crelation).	4.04321885109	4265
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	6	synth with cache (only 1: firstorder).	0.0456521511078	21
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	8.0.1.7	synth with cache (only 1: intros y2; only 1: intros H0; only 1: intros y; only 1: intuition).	2.74731492996	1586
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	81	synth with cache (only 1: firstorder).	5.18014883995	14648
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0201148986816	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0203440189362	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	2.1.2	synth with cache (only 1: intros n; only 1: intros ?; only 1: ring).	0.0354859828949	8
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0203161239624	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0187859535217	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: destruct H; only 1: easy).	0.0958440303802	16
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).	4.90635609627	1496
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	0.3.2.0.1.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: rewrite <- (Rplus_0_l n); only 1: apply Rplus_lt_mono; only 1: apply -> (Rplus_lt_mono_l n m (- n - m)) in H; only 1: apply Rlt_0_1; only 1: easy).	7.4041659832	2206
Coq.micromega.Ztac.eq_incl	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros m'; only 1: intros EQ; only 1: rewrite EQ; only 1: easy).	0.032742023468	5
Coq.micromega.Ztac.elim_concl_eq	40	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).	0.564892053604	139
Coq.micromega.Ztac.elim_concl_le	40	1.5.0	synth with cache (only 1: intros; only 1: apply Z.ge_le; only 1: trivial).	0.0278089046478	15
Coq.micromega.Ztac.elim_concl_lt	40	0.3.0	synth with cache (only 1: intros; only 1: apply Z.nle_gt; only 1: easy).	0.0888319015503	39
Coq.micromega.Ztac.Zlt_le_add_1	40	0.3.0.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: easy).	0.0658028125763	7
Coq.micromega.Ztac.add_le	40	0.0.3.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0261218547821	7
Coq.micromega.Ztac.mul_le	40	0.0.0.0.0.2.1	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: auto).	0.864480018616	115
Coq.micromega.ZifyInst.PropAnd	40	0.6.31	synth with cache (only 1: split; only 1: intros; only 1: intuition).	1.10179805756	912
Coq.micromega.ZifyInst.PropOr	40	66	synth with cache (only 1: RelationClasses.simpl_relation).	1.24179697037	2233
Coq.micromega.ZifyInst.PropArrow	40	0.4	synth with cache (only 1: split; only 1: tauto).	0.0179240703583	6
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.382159948349	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0.8	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.0691769123077	37
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.1.1.0.0.0.2	synth with cache (only 1: intros n; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: destruct n; only 1: trivial; only 1: easy; only 1: trivial).	0.677206993103	359
Coq.micromega.ZifyInst.z_max_spec	40	8.0.6	synth with cache (only 1: intros a; only 1: intros m; only 1: Z.solve_max).	1.61384415627	1291
Coq.micromega.ZifyInst.z_min_spec	40	14.3.0	synth with cache (only 1: intros a; only 1: intros; only 1: Z.solve_min).	5.28482580185	4055
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	2.3.8.3	synth with cache (only 1: intros n; only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _tmp_tactician0, _tmp_tactician2); only 1: intros m; only 1: auto).	13.5004131794	2401
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.027224779129	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0866961479187	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0294620990753	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0321011543274	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0296139717102	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	1	synth with cache (only 1: exact (OrderedRing.rminus_morph sor)).	1.51587605476	247
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	5.1.4.0	synth with cache (only 1: intros; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	8.22501897812	2576
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.161659955978	22
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.4.0.0.0.3	synth with cache (only 1: intros a; only 1: intros y; only 1: intros H; only 1: intros H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	9.21118593216	2704
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.1.1.0.1.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hn; only 1: subst; only 1: easy; only 1: destruct 1; only 1: Z.order).	2.50710892677	984
Coq.micromega.ZMicromega.lt_le_iff	40	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.0165140628815	2
Coq.micromega.ZMicromega.le_0_iff	40	0.0.4.0.5	synth with cache (only 1: intros a; only 1: intros m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	1.10339617729	600
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0244679450989	5
Coq.micromega.ZMicromega.xnormalise_correct	40	8.12.1	synth with cache (only 1: intros env; only 1: fix odd_spec 1; only 1: easy).	23.0108969212	11683
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.0.0.1.0.15.5	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	37.0203769207	15366
Coq.micromega.ZMicromega.isZ0_n0	40	0.1.8	synth with cache (only 1: fix even_spec 1; only 1: intros s2; only 1: easy).	0.968554973602	351
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.3.0.2.10	synth with cache (only 1: intros c; only 1: intros b; only 1: rewrite xnnormalise_correct; only 1: intros Hab; only 1: easy).	22.3796980381	6637
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0425639152527	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.0.1.0.0.1.0.0.0.12	synth with cache (only 1: intros a0; only 1: destruct a0; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: intros n; only 1: easy; only 1: easy).	13.5755410194	7064
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	0.5.0	synth with cache (only 1: rewrite <- jump_add; only 1: rewrite Pos.add_1_l; only 1: f_equal).	0.051787853241	20
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	5.0.1.1.0.5.2	synth with cache (only 1: unfold jump; only 1: destruct p; only 1: unfold tail; only 1: easy; only 1: easy; only 1: unfold tail; only 1: constructor).	1.89358901978	1366
Coq.micromega.Env.S.nth_pred_double	40	0.3.4.0.4.0.3.3.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: induction p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	19.0298039913	18066
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.0.3	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.125954151154	56
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	4.2	synth with cache (only 1: intros Ha; only 1: destr_bool).	0.0332729816437	11
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0139620304108	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0129718780518	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.0.3.8	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: easy).	0.325556993484	221
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	6.30.1	synth with cache (only 1: intros until f1; only 1: fix odd_spec 1; only 1: auto).	31.0813701153	37595
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.0.4.1.5.0.16	synth with cache (only 1: intros l; only 1: unfold cnf_tt; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).	2.66987299919	4457
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	3.36.0	synth with cache (only 1: unfold cnf_ff; only 1: fix odd_spec 1; only 1: congruence).	20.9090280533	26601
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.0.1.0.6.0.4.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.00545597076	631
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	0.2.0.2.4.1.7.8.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: intros; only 1: apply H; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: tauto).	8.45883393288	9027
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0.1	synth with cache (only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.0360939502716	5
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	48.4	synth with cache (only 1: intros; only 1: eauto).	2.20386600494	2699
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	5.1.1.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons in *; only 1: unfold eval_clause; only 1: tauto).	2.35490012169	730
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0805099010468	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.0.9.0.33	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: easy; only 1: easy; only 1: easy).	32.890737772	48035
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	29.0.15	synth with cache (only 1: intros IH; only 1: intros x2; only 1: firstorder).	27.9989879131	28052
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0123538970947	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	54	synth with cache (only 1: firstorder).	3.02651381493	2942
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	74.0	synth with cache (only 1: simpl; only 1: simpl_relation).	2.9277150631	5742
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	15.4477581978	2226
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.0.3.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	26.5336329937	3974
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: jump_simpl; only 1: rewrite jump_pred_double; only 1: easy).	0.138606071472	6
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.160578012466	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	2.1.1.16	synth with cache (only 1: induction M; only 1: easy; only 1: easy; only 1: easy).	1.50422787666	456
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0110068321228	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0117108821869	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.00947594642639	1
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0129148960114	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0139639377594	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros x1; only 1: intros x2; only 1: intros H1; only 1: intros y1; only 1: intros y2; only 1: intros H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: rewrite H2; only 1: easy).	1.18941998482	405
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	18.12.0.7	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: easy).	15.5750858784	10539
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.1.1.2	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: firstorder).	0.0633399486542	60
Coq.micromega.Refl.make_impl_map	40	6.2.0.0	synth with cache (only 1: intros g; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder).	0.910398960114	525
Coq.micromega.Refl.make_conj_cons	40
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.1.4.1.1.1	synth with cache (only 1: intros a; only 1: intros c; only 1: intros _tmp_tactician0; only 1: intros n; only 1: intros; only 1: rewrite make_conj_cons; only 1: intuition PeanoNat.Nat.order).	4.40107393265	1403
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0	synth with cache (only 1: intros r; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: reflexivity; only 1: reflexivity).	0.0465340614319	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0136711597443	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.10	synth with cache (only 1: intros n; only 1: field).	0.950188159943	310
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	0.4.19.0.7	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: intros ?; only 1: unfold Q2R; only 1: simpl; only 1: auto with real).	15.1671099663	11836
Coq.micromega.RMicromega.Q2R_1	40	4.16	synth with cache (only 1: unfold Q2R; only 1: auto with real).	0.71205496788	457
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	1.0.0.0.2.32.15.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl; only 1: destruct z; only 1: easy; only 1: easy; only 1: reflexivity; only 1: easy).	39.669052124	27977
Coq.micromega.RMicromega.is_neg_false	40	0.1.11.0.3.1.0.0.0.0	synth with cache (only 1: intros until z; only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: easy; only 1: easy; only 1: easy; only 1: Z.swap_greater; only 1: intros H'; only 1: apply Nat2Z.is_nonneg).	27.0868809223	12219
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: apply Qeq_eqR; only 1: easy).	0.818066835403	147
Coq.micromega.RMicromega.Q2R_pow_pos	40	2.18.4	synth with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto with real).	39.9176328182	15800
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (y1, y2); only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	2.77471017838	571
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40	14.7.0	synth with cache (only 1: intros l; only 1: fix odd_spec 1; only 1: easy).	13.7629070282	6974
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.2.0.0.2.2.1.0.0.2.2.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: rewrite IHp; only 1: easy; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: trivial).	18.1201729774	10790
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.163553953171	7
Coq.rtauto.Bintree.length_map	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros Ha; only 1: intros f; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.179877996445	9
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	3.2.1.0.14	synth with cache (only 1: intros n; only 1: induction n; only 1: split; only 1: split; only 1: easy).	1.80504894257	1604
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	3.2.0.4.5	synth with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.532303094864	342
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	8.9.10	synth with cache (only 1: intros x; only 1: fix odd_spec 1; only 1: intuition).	9.48043894768	9935
Coq.rtauto.Rtauto.form_eq_refl	40	0.2.12.9	synth with cache (only 1: intros EQ; only 1: fix even_spec 1; only 1: intros H; only 1: auto).	3.52715301514	3801
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40	1.2.1.2.0.1.15.1	synth with cache (only 1: intros H; only 1: intros l; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros H; only 1: intros x; only 1: firstorder).	34.2675728798	34925
Coq.rtauto.Rtauto.with_env.compose2	40	3.1.1.4.1.1.1.0	synth with cache (only 1: induction F; only 1: intros Y; only 1: auto; only 1: intros e; only 1: intros x; only 1: intros B; only 1: intros A; only 1: firstorder  (subst; auto)).	18.3811249733	11165
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	1.14.0.2.0.3	synth with cache (only 1: intros B; only 1: intros F; only 1: intros C; only 1: intros e; only 1: fix even_spec 1; only 1: auto).	22.7046501637	25127
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	2.4.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: setoid_rewrite H; only 1: cring).	1.71600699425	169
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: intros ?; only 1: trivial).	0.159650087357	3
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).	0.0863990783691	7
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.153409004211	12
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0705440044403	11
Coq.nsatz.Nsatz.Rcri	40	0.23.1.2.8	synth with cache (only 1: cut (exp_in 0 (exp 0)); only 1: intros H2; only 1: red; only 1: apply Rmult_comm; only 1: exact (proj2_sig (exist_exp 0))).	31.6528990269	9447
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0476849079132	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.0	synth with cache (only 1: intros EQ; only 1: discriminate).	0.0628080368042	2
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0562570095062	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.0749020576477	2
Coq.omega.OmegaLemmas.Zred_factor1	40	3.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.027163028717	11
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	0.3	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.405531167984	41
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.198572158813	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: easy).	0.0548911094666	5
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	2.0	synth with cache (only 1: intros; only 1: Z.order).	0.0179719924927	4
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: easy).	0.0796520709991	39
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.1.6.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Hx; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.763022899628	480
Coq.omega.OmegaLemmas.OMEGA6	40	0.6.1.0.3	synth with cache (only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: Z.nzsimpl; only 1: easy).	2.04833102226	851
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	11.0.1.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: easy).	0.322160959244	401
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0.0.0.1	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.0653278827667	7
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0.0.0.62.0.1	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: Z.bitwise; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: f_equal; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	19.3577561378	24648
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.0.0.0.0	synth with cache (only 1: intros H; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: Z.nzsimpl; only 1: trivial).	0.100191116333	5
Coq.omega.OmegaLemmas.OMEGA18	40	0.19.0.6.7.0.5	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: intros EQ; only 1: intros y'; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: subst; only 1: easy).	13.4828801155	15039
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros NE; only 1: intros EQ; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.0676219463348	7
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.2.1.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: easy).	0.0772469043732	9
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0349469184875	5
Coq.btauto.Algebra.Decidable_complete	40	0.1.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0322480201721	6
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.104994058609	30
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: intros Hc; only 1: simpl in *; only 1: intuition congruence).	0.0994877815247	31
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	2.0.5	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).	1.08591198921	246
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.0.19.0.0	synth with cache (only 1: unfold Pos.ltb; only 1: unfold Pos.lt; only 1: case Pos.compare_spec; only 1: easy; only 1: intros; only 1: easy; only 1: easy).	12.5402870178	9772
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	8.1.7	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: auto).	2.23154211044	1033
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	3.7.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	1.76097583771	630
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.5.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros m; only 1: intros H; only 1: inversion H; only 1: split).	0.0521531105042	10
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0.0	synth with cache (only 1: intros n; only 1: trivial).	0.0509161949158	2
Coq.btauto.Reflect.Completeness.list_nth_succ	40	0.0.0.0.0.5.5	synth with cache (only 1: intros y; only 1: intros z; only 1: intros var1; only 1: intros k; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	12.9412281513	4200
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	25.3	synth with cache (only 1: intros H; only 1: intuition).	2.33589792252	1872
Coq.funind.Recdef.Splus_lt	40
Coq.funind.Recdef.SSplus_lt	40	1.16.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: apply Nat.le_add_r).	3.68409609795	3192
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0238120555878	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	6.0	synth with cache (only 1: intros EQ; only 1: Z.order_pos).	0.0307619571686	8
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	18	synth with cache (only 1: assumption).	0.0899219512939	145
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0224320888519	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	12.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	10.7162559032	2005
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	2.0088570118	71
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.8680961132	452
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0214779376984	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	23.6	synth with cache (only 1: intuition; only 1: firstorder).	2.30522799492	1242
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0113179683685	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0153970718384	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	11	synth with cache (only 1: easy).	0.122045993805	72
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	14	synth with cache (only 1: eauto).	0.34189581871	75
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	4.0.12	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: easy).	5.23532700539	198
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	0.1.0.2.0	synth with cache (only 1: intros H; only 1: rewrite rdiv_def; only 1: intros H0; only 1: rewrite H0; only 1: easy).	6.05350184441	43
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	7.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: easy).	8.26740908623	73
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.83124113083	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.3.3.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite rpow_pow; only 1: simpl; only 1: reflexivity).	5.00165700912	54
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	15.259155035	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: easy).	11.2697880268	13
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	2.2.1	synth with cache (only 1: intros; only 1: simpl; only 1: easy).	5.20831894875	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00859904289246	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00793814659119	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00630402565002	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	7	synth with cache (only 1: intuition).	0.281853914261	78
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	5.7.5.0.3	synth with cache (only 1: intros until x; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	5.60378313065	4076
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.5.7.4.2	synth with cache (only 1: intros y; only 1: intros H7; only 1: intros x; only 1: destruct x; only 1: reflexivity).	34.9358949661	9975
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.228604078293	12
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	1.14.2.33	synth with cache (only 1: intros H5; only 1: intros y; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).	8.89459490776	2921
Coq.setoid_ring.Rings_R.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0887758731842	11
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	2	synth with cache (only 1: easy).	0.0194940567017	3
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	5.2	synth with cache (only 1: firstorder; only 1: easy).	0.608412027359	9
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	13	synth with cache (only 1: easy).	0.0652928352356	61
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	1.2.0.0.0.25	synth with cache (only 1: split; only 1: easy; only 1: intros H; only 1: intros H0; only 1: congruence; only 1: congruence).	0.691733837128	676
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.0.1.1.61	synth with cache (only 1: split; only 1: red; only 1: easy; only 1: red; only 1: easy).	1.4773080349	2444
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.18	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.557343959808	233
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.9.5	synth with cache (only 1: intros A; only 1: intros n; only 1: firstorder).	6.21008896828	1862
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.2.2.4	synth with cache (only 1: intros n; only 1: intros x; only 1: intros z; only 1: firstorder).	1.0484662056	290
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0	synth with cache (only 1: easy).	0.0167829990387	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	3	synth with cache (only 1: firstorder).	0.146270990372	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	2.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: easy).	0.0293419361115	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0181710720062	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.01717710495	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	1	synth with cache (only 1: easy).	0.0316488742828	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	12	synth with cache (only 1: firstorder).	0.330363988876	46
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	4.1.14	synth with cache (only 1: intros n; only 1: intros; only 1: firstorder).	3.75541996956	1088
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	11.14	synth with cache (only 1: intros x; only 1: firstorder).	4.68122887611	2378
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.1	synth with cache (only 1: intros H; only 1: firstorder).	0.0373980998993	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	48	synth with cache (only 1: firstorder).	10.8425688744	8389
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	21.14	synth with cache (only 1: intros; only 1: firstorder).	2.77039194107	1652
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	17.15	synth with cache (only 1: intros; only 1: firstorder).	2.6459839344	1331
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	6	synth with cache (only 1: auto).	0.0292320251465	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	42	synth with cache (only 1: firstorder).	1.67592000961	901
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	37	synth with cache (only 1: firstorder).	0.750065088272	696
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.030130147934	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.032261133194	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	1.16.7.7	synth with cache (only 1: rewrite (ARmul_comm ARth x); only 1: rewrite (ARmul_comm ARth x); only 1: elim ARth; only 1: easy).	4.10668182373	1461
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00932502746582	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00904679298401	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00916814804077	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros x1; only 1: intros x2; only 1: intros Ex; only 1: intros y1; only 1: intros y2; only 1: intros Ey; only 1: rewrite (ARsub_def ARth); only 1: rewrite (ARsub_def ARth); only 1: rewrite Ex; only 1: rewrite Ey; only 1: easy).	1.20351719856	273
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.6.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: rewrite H; only 1: rrefl).	0.294131040573	74
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	21.18	synth with cache (only 1: intros l; only 1: firstorder).	4.88121199608	3092
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00989603996277	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0100800991058	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00992298126221	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0123281478882	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: intros until n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.908579111099	185
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	3.58	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	14.4704420567	11700
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.2.4	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0571799278259	24
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0165619850159	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0176501274109	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0203251838684	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	39	synth with cache (only 1: easy).	4.63756299019	775
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	12.0.6.14	synth with cache (only 1: intros a; only 1: intros m; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	15.6865279675	4966
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	7.7.8	synth with cache (only 1: intros n; only 1: intros y; only 1: firstorder).	3.87390494347	1430
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	10.8.14	synth with cache (only 1: intros a; only 1: intros y; only 1: CRelationClasses.simpl_crelation).	3.72293281555	3077
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.3.1	synth with cache (only 1: red; only 1: unfold Pequiv; only 1: CRelationClasses.simpl_crelation).	12.8409910202	2714
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	15.0683889389	1684
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0100381374359	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0365278720856	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.3.6.19.0.1	synth with cache (only 1: intros y; only 1: intros x; only 1: intros n; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm y); only 1: reflexivity).	32.5837550163	12582
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.241581201553	46
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.6.2.2	synth with cache (only 1: intros Hc; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	3.1338891983	889
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0223968029022	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0127289295197	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.4	synth with cache (only 1: unlock; only 1: easy).	0.0323619842529	15
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0118942260742	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	3.11	synth with cache (only 1: destruct 1; only 1: auto).	0.538408994675	776
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0153431892395	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.011027097702	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2.2	synth with cache (only 1: intros H0; only 1: intuition).	0.0319509506226	6
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0112481117249	1
Coq.ssr.ssreflect.abstract_context	40	1.47.28	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).	2.46494317055	18677
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0170888900757	1
Coq.ssr.ssrbool.is_true_true	40	15	synth with cache (only 1: easy).	0.0304610729218	91
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: easy).	0.0126569271088	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.0154099464417	2
Coq.ssr.ssrbool.negbT	40	0.0.0	synth with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: split).	0.0199909210205	3
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.0156099796295	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0166301727295	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0144670009613	1
Coq.ssr.ssrbool.negbK	40	1.11	synth with cache (only 1: intros b; only 1: by case : b ).	0.0495979785919	61
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.0135571956635	1
Coq.ssr.ssrbool.negb_inj	40	0.29	synth with cache (only 1: intros A; only 1: Bool.destr_bool).	0.361152887344	556
Coq.ssr.ssrbool.negbLR	40	8	synth with cache (only 1: Bool.destr_bool).	0.0493559837341	31
Coq.ssr.ssrbool.negbRL	40	9	synth with cache (only 1: Bool.destr_bool).	0.0510349273682	24
Coq.ssr.ssrbool.contra	40	0.0.11	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.289705038071	182
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0192549228668	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0191020965576	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0193040370941	1
Coq.ssr.ssrbool.contraT	40	5.13	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.489988088608	270
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0162160396576	1
Coq.ssr.ssrbool.contraFT	40	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.611301898956	204
Coq.ssr.ssrbool.contraFN	40	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.73689198494	247
Coq.ssr.ssrbool.contraTF	40	3.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.565579891205	154
Coq.ssr.ssrbool.contraNF	40	3.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.643929004669	174
Coq.ssr.ssrbool.contraFF	40	0.2.9	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.312111139297	66
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0.45	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).	18.0460870266	1408
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0223867893219	3
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.0146880149841	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0197548866272	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0141501426697	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case b).	0.014573097229	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.0135028362274	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0132970809937	1
Coq.ssr.ssrbool.BoolIf.ifE	40	12	synth with cache (only 1: trivial).	0.0546820163727	46
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0199229717255	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0202510356903	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0150821208954	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.30.4.13	synth with cache (only 1: intros p; only 1: intros H0; only 1: destruct p; only 1: by case Hb; auto; only 1: by case Hb; auto).	33.8309950829	14532
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.18.12	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.737102985382	878
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	8	synth with cache (only 1: by case Pb).	0.0237131118774	9
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	9.10.23	synth with cache (only 1: intros H; only 1: destruct H; only 1: auto).	0.934864997864	2475
Coq.ssr.ssrbool.impliesPn	40	0.2.24.12.26	synth with cache (only 1: intros ?; only 1: red; only 1: destruct H; only 1: intros h1; only 1: auto).	12.0211279392	33498
Coq.ssr.ssrbool.unlessL	40	7.4.10.3.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros h2; only 1: intros H; only 1: auto).	0.682523965836	1945
Coq.ssr.ssrbool.unlessR	40	0.13.5.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros y; only 1: intuition).	0.329385042191	760
Coq.ssr.ssrbool.unless_sym	40	3.4.4.5.63.5	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	23.3285291195	102399
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	8.11.2	synth with cache (only 1: intros h2; only 1: intros y; only 1: intuition).	0.521059036255	783
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.0.2.0.0.2.6.2	synth with cache (only 1: split; only 1: split; only 1: intros z; only 1: destruct (H z); only 1: auto; only 1: intros z; only 1: destruct (H z); only 1: auto).	0.424890041351	543
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0520889759064	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0210571289062	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0235500335693	1
Coq.ssr.ssrbool.pair_andP	40	6	synth with cache (only 1: intuition).	0.0320339202881	12
Coq.ssr.ssrbool.ReflectConnectives.idP	40	2.2.23	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	2.44360995293	4941
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0122470855713	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0136427879333	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.0150368213654	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0127429962158	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0141618251801	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).	0.0513250827789	5
Coq.ssr.ssrbool.ReflectConnectives.and4P	40	0.0.4	synth with cache (only 1: destruct b4; only 1: by case b1; case b2; case b3; constructor; try by case; only 1: by case b1; case b2; case b3; constructor; try by case).	0.0884819030762	17
Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).	0.155774831772	13
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0206389427185	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0207040309906	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0149929523468	1
Coq.ssr.ssrbool.andTb	40	1.2	synth with cache (only 1: intros P; only 1: reflexivity).	0.0162961483002	5
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.0116391181946	1
Coq.ssr.ssrbool.andbT	40	4.3	synth with cache (only 1: intros P; only 1: Bool.destr_bool).	0.0196158885956	9
Coq.ssr.ssrbool.andbF	40	3.20	synth with cache (only 1: intros H; only 1: Bool.destr_bool).	0.214878082275	286
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0122790336609	1
Coq.ssr.ssrbool.andbC	40	0.24	synth with cache (only 1: intros P; only 1: Bool.destr_bool).	0.194672107697	306
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0127539634705	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0149669647217	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0231449604034	2
Coq.ssr.ssrbool.andbACA	40	13	synth with cache (only 1: by do 3!case).	0.0938098430634	60
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.0109078884125	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0116381645203	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.0147109031677	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0131878852844	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0117120742798	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0154089927673	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0187690258026	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0190689563751	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0177140235901	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0262548923492	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0133669376373	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0133929252625	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0132808685303	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0132930278778	1
Coq.ssr.ssrbool.andb_orl	40	4	synth with cache (only 1: by do 3!case).	0.0284388065338	5
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.0138409137726	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.019504070282	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0443799495697	1
Coq.ssr.ssrbool.andb_idl	40	1.0.9	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: by case : b  => // ->).	0.158585071564	69
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.020534992218	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0221431255341	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0265839099884	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0188539028168	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.020437002182	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0268068313599	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0575380325317	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.0165672302246	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0179150104523	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0163779258728	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0164840221405	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.015958070755	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0163781642914	1
Coq.ssr.ssrbool.implybT	40	2	synth with cache (only 1: by case : b ).	0.0158219337463	3
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0140271186829	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0131680965424	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0139980316162	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.013662815094	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.016526222229	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0161249637604	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0165181159973	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0165050029755	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.016674041748	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0209729671478	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0204248428345	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0274789333344	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.0118458271027	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0131509304047	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0138599872589	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0147609710693	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0177929401398	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0186719894409	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0185658931732	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0267689228058	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0196940898895	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.0192601680756	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0175130367279	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0149228572845	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.0227179527283	2
Coq.ssr.ssrbool.addbI	40	2	synth with cache (only 1: by do 3!case).	0.0250549316406	3
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0140910148621	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.016273021698	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0161819458008	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0164041519165	1
Coq.ssr.ssrbool.addbP	40	0.0.0.18.0.0.0.22.3	synth with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: intuition; only 1: constructor; only 1: easy; only 1: Bool.destr_bool; only 1: constructor; only 1: easy; only 1: intuition).	4.79698491096	9362
Coq.ssr.ssrbool.subrelUl	40	11.5.1.0.41	synth with cache (only 1: intros B; only 1: intros ?; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	4.63083100319	10553
Coq.ssr.ssrbool.subrelUr	40	11.5.0.28.16	synth with cache (only 1: intros Hx''; only 1: intros ?; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	4.09181904793	9139
Coq.ssr.ssrbool.sub_refl	40	3.12	synth with cache (only 1: red; only 1: auto).	0.0727949142456	114
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.0143477916718	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0146238803864	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0158398151398	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.0129580497742	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.0120098590851	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0130338668823	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	3	synth with cache (only 1: reflexivity).	0.0117089748383	4
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.5	synth with cache (only 1: intros x0; only 1: by [  ]).	0.0265409946442	7
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0145130157471	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0159811973572	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	18	synth with cache (only 1: auto).	0.238878011703	184
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0210950374603	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0169801712036	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0151000022888	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0855250358582	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0205950737	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0156140327454	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0159959793091	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.016932964325	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0206668376923	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0211260318756	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0178759098053	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0220050811768	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0193419456482	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0303769111633	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	34.33.15.30	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct 2; only 1: symmetry; only 1: auto).	39.7619121075	80325
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.024022102356	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0202181339264	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0210070610046	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0209438800812	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0249700546265	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0253231525421	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.46	synth with cache (only 1: intros ?; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.30781888962	1621
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0291428565979	1
Coq.ssr.ssrbool.sub_in2	40	6.4.6	synth with cache (only 1: intros; only 1: intros ?; only 1: auto).	0.740175962448	854
Coq.ssr.ssrbool.sub_in3	40	8.4.3.0.2.9	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H0; only 1: intros H2; only 1: intros ?; only 1: auto).	4.74335598946	5042
Coq.ssr.ssrbool.sub_in12	40	1.18	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.378159999847	187
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0185079574585	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0251398086548	13
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.016105890274	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0175530910492	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0160000324249	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0275411605835	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.0.0	synth with cache (only 1: intros A; only 1: intros Hx'; only 1: tauto).	0.00994896888733	3
Coq.ssr.ssrfun.unitE	40	0.2.10.46	synth with cache (only 1: red; only 1: intros p; only 1: destruct p; only 1: tauto).	1.20694088936	6968
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: split).	0.0112409591675	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: by [  ]).	0.0172278881073	2
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.26.2.2.24	synth with cache (only 1: intros Hsnd; only 1: intros ?; only 1: intros ?; only 1: rewrite Hsnd; only 1: trivial).	11.1154048443	46904
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: split).	0.0106770992279	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0260539054871	1
Coq.ssr.ssrfun.Sig.svalP	40	0.1	synth with cache (only 1: destruct u; only 1: assumption).	0.0199208259583	3
Coq.ssr.ssrfun.Sig.s2valP	40	1.2.1	synth with cache (only 1: destruct u; only 1: simpl in *; only 1: trivial).	0.0246648788452	7
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0161290168762	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0190410614014	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0254039764404	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0201370716095	2
Coq.ssr.ssrfun.Injections.canLR	40	3.6.3.2	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.680526971817	672
Coq.ssr.ssrfun.Injections.canRL	40	8.3	synth with cache (only 1: destruct 2; only 1: auto).	0.122008085251	89
Coq.ssr.ssrfun.Some_inj	40	0.1.28	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	1.44944906235	1993
Coq.ssr.ssrfun.of_voidK	40	14.8	synth with cache (only 1: intros P; only 1: intuition).	0.360058069229	449
Coq.ssr.ssrfun.esymK	40	0.15.3	synth with cache (only 1: intros z; only 1: subst; only 1: reflexivity).	0.253349065781	416
Coq.ssr.ssrfun.etrans_id	40	0.19	synth with cache (only 1: subst; only 1: reflexivity).	0.0925929546356	186
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1.0.1.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).	0.0543658733368	30
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	12.20.1.6	synth with cache (only 1: intros Fr; only 1: intros _tmp_tactician0; only 1: intros ?; only 1: auto).	2.51606988907	5507
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	1.0.13.10.8.5	synth with cache (only 1: intros Hl; only 1: intros _tmp_tactician2; only 1: intros _tmp_tactician0; only 1: intros x''; only 1: intros Hx''; only 1: auto).	4.48828697205	9585
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	2.22.34	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	10.277326107	28746
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	1.8.1.8.21	synth with cache (only 1: exists f; only 1: intros H; only 1: trivial; only 1: intros H; only 1: trivial).	0.750292062759	1632
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0135490894318	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	4	synth with cache (only 1: auto).	0.0133481025696	5
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: trivial).	0.0120499134064	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: trivial).	0.0119400024414	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: easy).	0.0108630657196	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	9	synth with cache (only 1: congruence).	0.341130971909	146
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2.1.0	synth with cache (only 1: intros b; only 1: intros; only 1: easy).	0.0324161052704	6
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	1	synth with cache (only 1: easy).	0.0184259414673	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.0.0	synth with cache (only 1: intros; only 1: destruct v; only 1: reflexivity; only 1: reflexivity).	0.0376670360565	5
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.0.0.4.0.2	synth with cache (only 1: intros x; only 1: intros H; only 1: intros n'; only 1: intros EQ; only 1: subst n'; only 1: auto with arith).	0.74593091011	391
Coq.Setoids.Setoid.Seq_refl	40	1.0	synth with cache (only 1: intros x'; only 1: firstorder).	0.0112760066986	3
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0126309394836	2
Coq.Setoids.Setoid.Seq_trans	40	6.0	synth with cache (only 1: intros x; only 1: firstorder).	0.508557081223	239
Coq.Setoids.Setoid.gen_st	40	4.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).	0.0179870128632	14
Coq.Bool.IfProp.Iftrue_inv	40	1.0.1.16	synth with cache (only 1: intros H; only 1: destruct 1; only 1: intuition; only 1: easy).	0.630236148834	1218
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0282161235809	6
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0529890060425	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0293731689453	17
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.3.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: easy).	0.0414438247681	25
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0222718715668	4
Coq.Bool.Zerob.zerob_false_intro	40	0.0.1.1.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: intros H; only 1: easy; only 1: intros b; only 1: trivial).	0.105721950531	59
Coq.Bool.Zerob.zerob_false_elim	40	3.0.3.0	synth with cache (only 1: intros; only 1: intros H1; only 1: rewrite H1 in H; only 1: easy).	0.0648341178894	21
Coq.Bool.DecBool.ifdec_left	40	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).	3.52935099602	3380
Coq.Bool.DecBool.ifdec_right	40	1.5.0.3	synth with cache (only 1: intros until H; only 1: case H; only 1: contradiction; only 1: auto).	1.95320510864	1634
Coq.Bool.Sumbool.sumbool_of_bool	40	23.27.7.11	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).	3.89679384232	18494
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.2.2.1	synth with cache (only 1: intros H; only 1: intros P; only 1: destruct H; only 1: auto; only 1: auto).	0.0246758460999	10
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).	0.0203120708466	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0322442054749	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0259990692139	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.00638198852539	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00624799728394	1
Coq.Bool.Bool.eq_true_false_abs	40	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros z; only 1: discriminate; only 1: intros z; only 1: discriminate).	0.628847837448	1332
Coq.Bool.Bool.not_true_is_false	40	0.9.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: split).	0.0459909439087	81
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.010596036911	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.4.4	synth with cache (only 1: intros A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.312500953674	420
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0163171291351	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0.0.0.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: split; only 1: split; only 1: split; only 1: intuition; only 1: split; only 1: split; only 1: split).	0.514320850372	444
Coq.Bool.Bool.eqb_subst	40	3.1.0	synth with cache (only 1: intros H; only 1: intros z; only 1: destr_bool).	0.0140948295593	7
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00933718681335	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.008544921875	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0187959671021	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0235900878906	6
Coq.Bool.Bool.negb_orb	40	1	synth with cache (only 1: destr_bool).	0.0489819049835	65
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0085620880127	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.00754404067993	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0073938369751	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00843119621277	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.00762391090393	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00803804397583	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.00805997848511	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.00830507278442	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0135810375214	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0145120620728	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0249240398407	8
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.022579908371	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.017765045166	5
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.1	synth with cache (only 1: intros until a; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0193209648132	7
Coq.Bool.Bool.orb_true_intro	40	2.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.314675092697	223
Coq.Bool.Bool.orb_false_intro	40	0	synth with cache (only 1: destr_bool).	0.00832390785217	1
Coq.Bool.Bool.orb_false_elim	40	2.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.124920129776	64
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.00731301307678	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00760293006897	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00779008865356	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00798392295837	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00785994529724	1
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.00765800476074	2
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.00778889656067	1
Coq.Bool.Bool.orb_assoc	40	0.2.1.0	synth with cache (only 1: intros; only 1: destruct b1; only 1: trivial; only 1: reflexivity).	0.0156610012054	7
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.084056854248	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0262858867645	5
Coq.Bool.Bool.andb_true_eq	40	0.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.301364898682	177
Coq.Bool.Bool.andb_false_intro1	40	6.0	synth with cache (only 1: intros until b1; only 1: destr_bool).	0.0969479084015	74
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0129261016846	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00806093215942	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00771403312683	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00746297836304	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00869297981262	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00761318206787	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0254688262939	14
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00836682319641	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.00888895988464	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0108730792999	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0110030174255	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0108468532562	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0115399360657	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0120191574097	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0376029014587	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.00798487663269	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00670003890991	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00867295265198	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00817704200745	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00706601142883	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00772309303284	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00854897499084	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0104629993439	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0098659992218	1
Coq.Bool.Bool.xorb_move_l_r_1	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0165491104126	12
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0112729072571	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0111360549927	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0112009048462	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.00901699066162	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros until b'; only 1: destruct b'; only 1: trivial; only 1: trivial; only 1: intros until b'; only 1: destruct b'; only 1: trivial; only 1: trivial).	0.0287389755249	10
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.00884795188904	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.08895611763	5
Coq.Bool.Bool.eq_true_iff_eq	40	3.3.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.309982061386	249
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0112450122833	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0118689537048	2
Coq.Bool.Bool.absurd_eq_bool	40	4.1	synth with cache (only 1: intros; only 1: intuition).	0.0147740840912	16
Coq.Bool.Bool.absurd_eq_true	40	8.2	synth with cache (only 1: intros H; only 1: intuition).	0.0777390003204	131
Coq.Bool.Bool.trans_eq_bool	40	1.4.0.0	synth with cache (only 1: intros x; only 1: intros; only 1: subst; only 1: intuition).	0.0136559009552	9
Coq.Bool.Bool.Is_true_eq_true	40	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).	0.0748429298401	72
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00817084312439	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0110630989075	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.00650405883789	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0133798122406	3
Coq.Bool.Bool.orb_prop_elim	40	3.0.2.0.0.3	synth with cache (only 1: intros until a; only 1: destruct a; only 1: simpl; only 1: auto with bool; only 1: simpl; only 1: auto).	0.590756893158	763
Coq.Bool.Bool.orb_prop_intro	40	8.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0115950107574	10
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0145859718323	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0187690258026	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0163569450378	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.016028881073	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0124621391296	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0108110904694	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0105619430542	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0129628181458	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.00904297828674	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.00918102264404	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.00824499130249	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00691604614258	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	3.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0261099338531	22
Coq.Bool.Bool.reflect_dec	40	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).	0.0184190273285	9
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0.1.7	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: intuition; only 1: intuition; only 1: destruct b'; only 1: intuition; only 1: intuition).	0.368857145309	350
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0164189338684	7
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	1.0.0.0.0.5.0.2.1.3.1.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros a0; only 1: easy; only 1: intros a0; only 1: intros Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros eq; only 1: auto; only 1: auto).	24.3532640934	13112
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	5	synth with cache (only 1: intuition).	0.472389936447	177
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.0.0.2.2.0.1.4.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: intros a0; only 1: simpl; only 1: intros H0; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	20.8153939247	10109
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.134333133698	20
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1| H1]; only 1: auto with datatypes; only 1: tauto).	1.06826210022	217
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros H; only 1: case (set_union_elim _ _ _ H); only 1: auto; only 1: contradiction).	0.0505719184875	6
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.3.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.459627151489	90
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	0.6.0.0.0.0.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intros Hl'; only 1: simpl; only 1: constructor; only 1: intros Hl'; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: apply set_add_nodup; only 1: auto).	15.5928030014	6425
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	5.0.3.13	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).	17.6359450817	905
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.15.18	synth with cache (only 1: intros p; only 1: destruct p; only 1: reflexivity).	0.513131141663	2558
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.1.8.0	synth with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: auto).	1.26257586479	1371
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	0.0.1.2.0.6.4.3.1.3	synth with cache (only 1: intros x; only 1: case x; only 1: intros; only 1: case x; only 1: intros ?; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: trivial with datatypes; only 1: auto with datatypes).	4.87112092972	9190
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	10.7.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.886185884476	1907
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0214130878448	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0188739299774	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.0.3.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros s1; only 1: intros s; only 1: apply IHn).	0.699892997742	378
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0411200523376	10
Coq.Lists.List.Facts.nil_cons	40	0.0	synth with cache (only 1: intros m; only 1: discriminate).	0.0129628181458	2
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40	1.8.7.5	synth with cache (only 1: intros b; only 1: intros a'; only 1: fix even_spec 1; only 1: tauto).	36.9332280159	28388
Coq.Lists.List.Facts.hd_error_some_nil	40	0.1.3.0.0.5	synth with cache (only 1: intros p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).	1.27792596817	972
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.1.0.4.1.0.1.10	synth with cache (only 1: split; only 1: destruct l; only 1: firstorder  discriminate; only 1: intros Hc; only 1: simpl in *; only 1: discriminate; only 1: destruct l; only 1: auto; only 1: discriminate).	1.22468495369	1034
Coq.Lists.List.Facts.hd_error_nil	40	4	synth with cache (only 1: reflexivity).	0.00850486755371	5
Coq.Lists.List.Facts.hd_error_cons	40	1.2	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).	0.0124709606171	5
Coq.Lists.List.Facts.in_eq	40	0.6.0	synth with cache (only 1: intros a; only 1: intros y; only 1: firstorder  discriminate).	0.0191941261292	9
Coq.Lists.List.Facts.in_cons	40	0.0.1.1	synth with cache (only 1: intros y; only 1: intros R3; only 1: simpl; only 1: auto).	0.0606379508972	36
Coq.Lists.List.Facts.not_in_cons	40	7.4	synth with cache (only 1: simpl in *; only 1: intuition).	0.724670171738	444
Coq.Lists.List.Facts.in_nil	40	2.2.0.2	synth with cache (only 1: intros n; only 1: simpl; only 1: intros H1; only 1: tauto).	0.016667842865	10
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.00933408737183	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	3	synth with cache (only 1: auto).	0.00999999046326	4
Coq.Lists.List.Facts.app_nil_r	40	0.0.7.2.0.2.1.20.16	synth with cache (only 1: intros H; only 1: elim H; only 1: easy; only 1: induction l; only 1: easy; only 1: simpl; only 1: destruct l; only 1: apply f_equal; only 1: apply f_equal).	15.0445590019	34985
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0955920219421	7
Coq.Lists.List.Facts.app_assoc	40	0.0.3.7.3.1	synth with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	9.52836298943	6100
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros m; only 1: intros n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0407719612122	9
Coq.Lists.List.Facts.app_comm_cons	40	2.0	synth with cache (only 1: intros l; only 1: auto).	0.0131688117981	4
Coq.Lists.List.Facts.app_eq_nil	40	0.4.4.0.2.1	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros m; only 1: intros; only 1: firstorder  discriminate).	1.42822289467	1217
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	0.1.0.1.2.4	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros H; only 1: auto).	1.58921599388	1107
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	4.0.3.0.0.0.0.1	synth with cache (only 1: induction l; only 1: intros m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros H; only 1: intros H0; only 1: intuition).	7.06834101677	5401
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.0.0.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: intros l; only 1: intros m; only 1: revert n; only 1: auto).	0.027480840683	8
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.0.0.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros d'; only 1: intros d; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.07192111015	441
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	3.0	synth with cache (only 1: simpl; only 1: easy).	0.0130839347839	5
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	3.1.0.5.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: simpl; only 1: destruct eq_dec as [_tmp_tactician0| Hneq]; only 1: easy; only 1: easy).	0.907431125641	596
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: destruct (eq_dec x y); only 1: easy; only 1: easy).	0.0311670303345	5
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.2.11.3	synth with cache (only 1: intros a; only 1: induction l; only 1: auto; only 1: auto).	1.48986387253	1862
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: split).	0.00917911529541	1
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intros y; only 1: simpl; only 1: trivial).	0.0305070877075	7
Coq.Lists.List.ListOps.concat_app	40	0.3.9.0.1.0.1.3.10	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite <- app_assoc; only 1: trivial).	26.9850289822	24233
Coq.Lists.List.ListOps.list_eq_dec	40	14	synth with cache (only 1: decide equality).	0.645555019379	433
Coq.Lists.List.Map.map_cons	40	2.4	synth with cache (only 1: simpl; only 1: f_equal).	0.0144929885864	8
Coq.Lists.List.Map.in_map	40	1.0.1.0.2.1.0.0.2.0	synth with cache (only 1: intros until l; only 1: induction l as [| a l IH]; only 1: intros a; only 1: intros H; only 1: auto; only 1: intuition; only 1: simpl; only 1: firstorder; only 1: subst; only 1: intuition).	7.1733880043	4636
Coq.Lists.List.Map.in_map_iff	40	3.0.0.0.4.0.0.0.0.0.1	synth with cache (only 1: intros l; only 1: split; only 1: induction l as [| a l IH]; only 1: intros _tmp_tactician0; only 1: easy; only 1: firstorder  (subst; auto); only 1: induction l as [| a l IH]; only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	14.5508389473	11054
Coq.Lists.List.Map.map_length	40	0.0.0.2.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).	0.0533170700073	17
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	1.5.2.1.2.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros l2; only 1: f_equal; only 1: trivial).	4.75987195969	3290
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros H; only 1: auto; only 1: generalize (app_nil_r (A:=l)); only 1: intros d; only 1: easy).	0.0590541362762	22
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.1.0.0.0.3.0.5	synth with cache (only 1: intros b; only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	4.88178992271	3475
Coq.Lists.List.concat_map	40	0.0.0.0.1.5.4.2.5	synth with cache (only 1: intros b; only 1: intros l2; only 1: intros _tmp_tactician0; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	27.8597450256	27248
Coq.Lists.List.map_id	40	1.0.7.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.754587888718	690
Coq.Lists.List.map_map	40	1.0.0.0.0.8.2	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	3.62271499634	2297
Coq.Lists.List.map_ext_in	40	0.0.2.0.2.0.2.2.1.1	synth with cache (only 1: intros A; only 1: intros R1; only 1: intros n; only 1: induction l; only 1: auto; only 1: intros _tmp_tactician0; only 1: simpl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder).	30.6836400032	20128
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	2.3.1.0.4.1	synth with cache (only 1: intros R; only 1: intros a; only 1: intros _tmp_tactician0; only 1: intros R'; only 1: fix even_spec 1; only 1: auto  4).	4.30833888054	3535
Coq.Lists.List.map_ext	40	0.0.1.0.1.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H; only 1: auto).	0.0330789089203	8
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	4.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0248370170593	9
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.0.0.0.1.1.4	synth with cache (only 1: intros R2; only 1: induction l; only 1: auto; only 1: intros; only 1: simpl in *; only 1: rewrite IHl; only 1: auto).	0.894685029984	546
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	2.4.1.0.0.0.10.4	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros l2; only 1: rewrite IHl; only 1: intuition).	24.5305271149	19283
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: auto; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.279991149902	153
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	0.0.0.0.0.2.0.0.0.1.38	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: case_eq (f a); only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: rewrite IHl; only 1: auto).	23.6906571388	36256
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: intropattern subst -> _tmp_tactician2; only 1: easy).	0.0278749465942	6
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.0.1.1.0.0.0.0.0.0.5	synth with cache (only 1: intros _tmp_tactician0; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite IHl; only 1: auto; only 1: auto; only 1: intuition).	22.6634590626	14404
Coq.Lists.List.Filtering.ext_in_filter	40	0.2.0.5.6	synth with cache (only 1: intros x0; only 1: intros H; only 1: intros f; only 1: rewrite filter_map; only 1: apply ext_in_map).	8.22470593452	4549
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.0.0.0.0.0.3.2.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros r; only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	3.91215491295	2852
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.3.0.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros l; only 1: intros; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0302770137787	10
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	3.67540287971	1720
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0511560440063	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.1.8	synth with cache (only 1: induction l as [| v l IHl]; only 1: easy; only 1: firstorder  (subst; auto)).	0.273212909698	194
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	35	synth with cache (only 1: RelationClasses.simpl_relation).	0.938510894775	1695
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	1.5.0.0	synth with cache (only 1: unfold lel; only 1: intros H1; only 1: simpl; only 1: auto with arith).	0.0295050144196	11
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0143768787384	3
Coq.Lists.List.length_order.lel_tail	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0153169631958	4
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.00698113441467	2
Coq.Lists.List.SetIncl.incl_tl	40	1.0.0.0.3.7	synth with cache (only 1: intros n; only 1: induction l; only 1: intros l'; only 1: firstorder  discriminate; only 1: intros l2; only 1: firstorder  (subst; auto)).	2.3720240593	1647
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.00922989845276	2
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0108749866486	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0105419158936	1
Coq.Lists.List.SetIncl.incl_cons	40	0.0.1.10.1.1	synth with cache (only 1: intros a; only 1: induction l; only 1: intros a'; only 1: firstorder  (subst; auto); only 1: intros Eq; only 1: firstorder  (subst; auto)).	6.91260099411	5287
Coq.Lists.List.SetIncl.incl_app	40	3.1.1.0.4.1.4	synth with cache (only 1: intros l; only 1: intros m; only 1: intros n; only 1: elim l; only 1: auto; only 1: intros H; only 1: firstorder).	34.4839251041	21815
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.35	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.290791034698	786
Coq.Lists.List.Cutting.firstn_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0123469829559	3
Coq.Lists.List.Cutting.firstn_all	40	5.0.0.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: auto).	0.497838020325	332
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0117177963257	2
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as []; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.0243010520935	6
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.0557758808136	35
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0130639076233	2
Coq.Lists.List.Cutting.skipn_none	40	2.0.0.2.4	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: easy; only 1: easy).	0.681782007217	342
Coq.Lists.List.Cutting.skipn_all2	40
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40	2.0.0.0.0.0.0.0.1.5	synth with cache (only 1: induction n; only 1: intros _tmp_tactician0; only 1: simpl; only 1: auto with arith; only 1: intros until l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.65667891502	6236
Coq.Lists.List.Cutting.skipn_all	40	0.0.4	synth with cache (only 1: induction l as [| ? ? H]; only 1: easy; only 1: easy).	0.0201289653778	7
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1; only 1: intros l2; only 1: simpl; only 1: f_equal; only 1: intros l1; only 1: intros l2; only 1: destruct l1 as [| x xs]; only 1: unfold length; only 1: rewrite app_nil_l; only 1: rewrite app_nil_l; only 1: rewrite <- minus_n_O; only 1: easy; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	18.8215930462	8406
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.2.12.3	synth with cache (only 1: induction l; only 1: split; only 1: simpl; only 1: auto).	0.758621931076	796
Coq.Lists.List.Combining.combine_firstn_l	40	4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros until l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: firstorder).	5.88135004044	2785
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.0.1.0.0.0.1.2.3.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: intros; only 1: simpl; only 1: destruct l'; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	11.8673181534	7545
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	10.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: firstorder).	4.44556808472	2027
Coq.Lists.List.Add.Add_length	40	0.0.0.1.1.0	synth with cache (only 1: induction 1; only 1: destruct l; only 1: auto; only 1: auto with arith; only 1: simpl in *; only 1: auto).	0.0349090099335	8
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0.10.8	synth with cache (only 1: revert l; only 1: intros d; only 1: apply NoDup_Add; only 1: apply Add_app).	2.0200278759	1667
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: easy; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	0.043251991272	8
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	3.1.0.0.0.4.11	synth with cache (only 1: intros l; only 1: induction l as [| a l' Hrec]; only 1: intros; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	9.36580395699	10911
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40	0.27.1	synth with cache (only 1: intros l1; only 1: fix le_div2 1; only 1: easy).	25.9128110409	21266
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.2.0.1	synth with cache (only 1: split; only 1: intros H; only 1: inversion H; only 1: firstorder).	0.0186359882355	7
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.0.11	synth with cache (only 1: intros y; only 1: intros l; only 1: inversion 1; only 1: easy).	0.433332920074	358
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3	synth with cache (only 1: inversion 1; only 1: trivial).	0.0476729869843	32
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.0.0.0.1.2.0.1.1	synth with cache (only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: induction H0; only 1: constructor; only 1: right; only 1: auto; only 1: auto).	5.68423986435	5540
Coq.Lists.List.Forall2.Forall2_refl	40	7	synth with cache (only 1: auto).	0.00796413421631	8
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	5.11.0.3.5	synth with cache (only 1: revert n; only 1: induction n as [| k iHk]; only 1: easy; only 1: simpl; only 1: auto).	1.53053307533	2784
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros E1; only 1: intros ?; only 1: intros ?; only 1: auto).	0.170308113098	16
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.1.0.1.2.4	synth with cache (only 1: induction l; only 1: intros l2; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	6.16084909439	889
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.13.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).	15.1057989597	4769
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.0.1.1.3.0.2.68	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).	5.33481001854	5028
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.0.0.0.2.1.10.5	synth with cache (only 1: etransitivity; only 1: constructor; only 1: easy; only 1: eassumption; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	8.69960379601	5229
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.0.0.0	synth with cache (only 1: rewrite app_comm_cons; only 1: rewrite (PermutationA_cons_append l₁ x); only 1: rewrite <- app_assoc; only 1: easy).	0.0365369319916	4
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0278179645538	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.1.0.0.0.1.2	synth with cache (only 1: intros P; only 1: intros Pdec; only 1: intros l; only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	1.64194107056	570
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	2.0.3.1	synth with cache (only 1: split; only 1: intros H; only 1: inversion_clear H; only 1: easy).	0.0560450553894	32
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.5.0.0.0.0.9.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	38.8307828903	26951
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	15	synth with cache (only 1: easy).	0.0632891654968	91
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	3.0.2.3.2.2.0.5	synth with cache (only 1: intros H; only 1: split; only 1: induction 1; only 1: easy; only 1: auto; only 1: induction 1; only 1: easy; only 1: auto).	32.316193819	23303
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	40	synth with cache (only 1: firstorder).	0.961812019348	858
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).	4.15989089012	1024
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.1.0.1.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros H; only 1: rewrite InA_alt; only 1: firstorder).	0.10121512413	36
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.4	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.0428540706635	7
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	1.0.6	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	3.62671113014	78
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.2.0.2.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder).	1.17058706284	25
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	1.1.0.1.0.3.9.0	synth with cache (only 1: constructor; only 1: rewrite InA_alt; only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (y, _tmp_tactician2); only 1: destruct _tmp_tactician2 as (H4, H5); only 1: intuition; only 1: constructor).	1.66356706619	850
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.1	synth with cache (only 1: intros E; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.0593769550323	5
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.0.0.0.2	synth with cache (only 1: intros l'; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.0972650051117	8
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.1	synth with cache (only 1: intros l'; only 1: rewrite InA_app_iff; only 1: tauto).	0.0309948921204	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	0.7.0.0.0.8.0.4.1.1	synth with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto with relations; only 1: auto with relations).	40.0053110123	13586
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.1.5.8.9.6.1	synth with cache (only 1: intros Hrec; only 1: intros x; only 1: intros N'; only 1: intros y; only 1: intros y'; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	15.9581170082	19542
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	3.7.0.0	synth with cache (only 1: intros Hxx'; only 1: intros l'; only 1: rewrite Hxx'; only 1: intuition).	5.85761809349	1533
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	5.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.259594917297	33
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0481300354004	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.3.0.19.5	synth with cache (only 1: intros until l; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	35.2902288437	30972
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intros Hll'; only 1: simpl; only 1: auto).	0.128083944321	28
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0363209247589	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.16.6	synth with cache (only 1: intros A; only 1: fix even_spec 1; only 1: auto).	27.2252750397	28071
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	2.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: reflexivity).	0.0509719848633	15
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.00967001914978	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	0.0263781547546	6
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0101521015167	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	1	synth with cache (only 1: trivial).	0.00795412063599	2
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0108969211578	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.00724101066589	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0245630741119	6
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.7	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).	0.0163850784302	10
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.1.0.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	36.8280580044	22413
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: reflexivity).	6.84860801697	3231
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0152299404144	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0.9.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.321349859238	428
Coq.NArith.BinNat.N.succ_0_discr	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0201661586761	3
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: easy).	0.0152139663696	3
Coq.NArith.BinNat.N.add_succ_l	40	0.1.25.66	synth with cache (only 1: revert m; only 1: fix le_div2 1; only 1: intros until m; only 1: trivial).	8.77359700203	23618
Coq.NArith.BinNat.N.sub_0_r	40	0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0165741443634	5
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: trivial).	0.0242230892181	8
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40	1.2.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.182327985764	91
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.0.1.1	synth with cache (only 1: destruct n; only 1: unfold lt; only 1: easy; only 1: unfold lt; only 1: easy).	0.179340839386	89
Coq.NArith.BinNat.N.compare_le_iff	40	0.0	synth with cache (only 1: unfold le; only 1: easy).	0.010586977005	2
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.0.2.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: trivial).	0.0379431247711	10
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	13	synth with cache (only 1: easy).	0.781871080399	189
Coq.NArith.BinNat.N.succ_double_spec	40	0.0.1.5	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).	0.138668060303	44
Coq.NArith.BinNat.N.double_add	40	0.0.0.2.0.0.0.1	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: unfold add; only 1: simpl; only 1: easy).	0.237265110016	68
Coq.NArith.BinNat.N.succ_double_add	40	0.0.1.9.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: easy).	11.6422650814	6112
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: easy).	0.0344159603119	9
Coq.NArith.BinNat.N.succ_double_mul	40	0.7.0.0.0.0.0.1	synth with cache (only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: rewrite <- mul_succ_l; only 1: easy).	9.98843479156	4814
Coq.NArith.BinNat.N.div2_double	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0172119140625	5
Coq.NArith.BinNat.N.div2_succ_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0137140750885	3
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	0.0.0.2.0.0.0.0.0.9	synth with cache (only 1: destruct n; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H2; only 1: destruct m as [| q]; only 1: easy; only 1: trivial).	4.98319005966	2207
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	12.4802289009	7361
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.567357778549	194
Coq.NArith.BinNat.N.compare_0_r	40	0.0.0.4	synth with cache (only 1: destruct n; only 1: rewrite compare_refl; only 1: easy; only 1: easy).	0.0259211063385	8
Coq.NArith.BinNat.N.pow_0_r	40	0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0143871307373	6
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	12.16.0	synth with cache (only 1: intros ?; only 1: rewrite <- (mul_0_r n)  at 1; only 1: false_hyp H nlt_0_r).	17.067412138	14766
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.2.1.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).	0.0982189178467	8
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0.0.0	synth with cache (only 1: intros IH; only 1: generalize (div_eucl_spec a b); only 1: unfold div; only 1: unfold modulo; only 1: destruct div_eucl; only 1: easy).	0.0335359573364	6
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intros H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0129890441895	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.1.0.5.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: exists bb; only 1: clear _tmp_tactician2; only 1: rewrite Pos.mul_comm; only 1: easy).	9.13404607773	6247
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	synth with cache (only 1: apply le_0_l).	0.321258068085	173
Coq.NArith.BinNat.N.testbit_even_0	40	0.5.17	synth with cache (only 1: induction a; only 1: easy; only 1: easy).	0.162193059921	302
Coq.NArith.BinNat.N.testbit_odd_0	40	0.0.0.15.6	synth with cache (only 1: simpl; only 1: unfold add; only 1: destruct a; only 1: split; only 1: easy').	0.869171142578	752
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40	0.1.0.0.0.2.0.0.0.0.0.0.0.1	synth with cache (only 1: nzsimpl; only 1: intros _tmp_tactician0; only 1: destruct a; only 1: destruct n as [| n]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).	21.6464350224	12903
Coq.NArith.BinNat.N.testbit_even_succ	40	1.5.1.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros H; only 1: destruct n; only 1: destruct a; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct a; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).	21.6986792088	13871
Coq.NArith.BinNat.N.testbit_neg_r	40	0.0.2	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.123795032501	39
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40	1.3.0.0.0.1.1.2.4	synth with cache (only 1: destruct a; only 1: easy; only 1: simpl; only 1: f_equal; only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	2.23207092285	1540
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0099310874939	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40	1.9.4.0.0.0.1.2	synth with cache (only 1: unfold lt; only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	34.2416040897	19268
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00682306289673	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0.0.0.1	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy').	0.201747894287	84
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00666093826294	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.2.1.1.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.647241830826	349
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.0240979194641	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	0.106441020966	32
Coq.NArith.Ndec.Pcompare_Peqb	40	0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	0.0366880893707	2
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0.0.1.1.0.26.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: destruct n as [| n]; only 1: intros; only 1: subst; only 1: trivial; only 1: rewrite <- N.eqb_eq; only 1: easy).	12.3279929161	15735
Coq.NArith.Ndec.Neqb_complete	40	0.0	synth with cache (only 1: rewrite <- N.eqb_eq; only 1: easy).	0.0399370193481	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	0.2.0.5	synth with cache (only 1: intros H0; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.217131853104	34
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: apply H; only 1: trivial).	0.0738570690155	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0.3.0.1.0.5.29	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: easy).	36.9594190121	47608
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.0.1.1.0.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intros H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_succ_double; only 1: intros ?; only 1: assumption).	10.6102819443	4686
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	4.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0974810123444	16
Coq.NArith.Ndec.Nmin_le_5	40	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.126307010651	4
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0880398750305	7
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.0.0.0.2	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| p']; only 1: intros ?; only 1: easy; only 1: easy).	0.0845849514008	46
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.13.4.2.6.11	synth with cache (only 1: intros p; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	11.8584699631	19291
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.6.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.863651990891	754
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0372908115387	15
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0143060684204	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.7.6	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: trivial).	0.448434114456	380
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.155838012695	35
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	3.12.5	synth with cache (only 1: intros z; only 1: fix le_div2 1; only 1: easy).	20.804625988	12648
Coq.NArith.Ndist.ni_le_le	40	4.9.2	synth with cache (only 1: intros a; only 1: fix le_div2 1; only 1: trivial).	6.70692110062	4143
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	1.0.0.2.0.0.1.1.2.12	synth with cache (only 1: intros n; only 1: intros _tmp_tactician2; only 1: destruct n; only 1: destruct _tmp_tactician2 as [| n]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: f_equal; only 1: Nat2N.nat2N).	19.222974062	16073
Coq.NArith.Ndigits.Nshiftr_nat_S	40	4.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: simpl; only 1: trivial).	0.092227935791	16
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: easy).	0.0315978527069	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0250289440155	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	5.0.0	synth with cache (only 1: intros q; only 1: intros H; only 1: split).	0.0378429889679	8
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.0.0.0.1.4.0.2.0.0.1.2.6	synth with cache (only 1: destruct a'; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite xorb_false_r; only 1: trivial; only 1: destruct a; only 1: rewrite xorb_false_l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	16.8350689411	9836
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.0.0.0.0.2.0.0.0.8	synth with cache (only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: rewrite orb_false_r; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	1.95448899269	837
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.0.0.0.0.0.1.0.1.0.1	synth with cache (only 1: destruct a; only 1: rewrite <- Ntestbit_Nbit; only 1: simpl; only 1: trivial; only 1: rewrite <- Ntestbit_Nbit; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	6.86281085014	3073
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.4.1.0.3.0.27	synth with cache (only 1: revert a; only 1: intros _tmp_tactician2; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite N.ldiff_spec; only 1: rewrite <- Ntestbit_Nbit; only 1: easy).	1.97892403603	3046
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40	0.1.0.1.5.3	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: intros m; only 1: destruct m; only 1: easy; only 1: easy).	3.65803194046	1742
Coq.NArith.Ndigits.Nbit0_correct	40	2.0.3.9.3.0.10.0	synth with cache (only 1: intros; only 1: destruct n as [| n]; only 1: trivial; only 1: rewrite <- Ntestbit_Nbit; only 1: destruct n; only 1: trivial; only 1: apply Ptestbit_Pbit; only 1: trivial).	16.7947618961	13709
Coq.NArith.Ndigits.Ndouble_bit0	40	0.3.20.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: easy).	1.27962708473	1858
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: easy; only 1: trivial).	0.0448958873749	4
Coq.NArith.Ndigits.Ndiv2_double	40	0.0.0.0.0.3.5.0.0.0.0	synth with cache (only 1: intros until n; only 1: intros H; only 1: destruct n; only 1: easy; only 1: vm_compute in H; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).	18.5148639679	7670
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.0.2.0.1.0.0.0.1.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: intros Ha; only 1: easy; only 1: destruct p; only 1: intros H; only 1: reflexivity; only 1: intros; only 1: vm_compute in H; only 1: simpl; only 1: easy; only 1: trivial).	14.379431963	5156
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.1.0.2.3	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: induction p; only 1: trivial; only 1: intros _tmp_tactician0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	5.02929902077	1836
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	8.12.3	synth with cache (only 1: intros c; only 1: fix odd_spec 1; only 1: trivial).	14.0258171558	9427
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.2.0	synth with cache (only 1: intros n; only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.128520965576	24
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: intros until a'; only 1: destruct a'; only 1: easy; only 1: trivial; only 1: intros until a'; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	6.23248004913	2468
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	0.0.11.0.0.6.1.3.0.1	synth with cache (only 1: intros n; only 1: unfold Nless; only 1: destruct n; only 1: easy; only 1: induction p; only 1: simpl; only 1: solve [ auto ]; only 1: easy; only 1: simpl; only 1: trivial).	21.0802388191	17483
Coq.NArith.Ndigits.N0_less_1	40	0.0.7.2.27.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: easy; only 1: destruct 1; only 1: exists p; only 1: trivial).	6.3992061615	9354
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40	1.0.0.29	synth with cache (only 1: intros l1; only 1: fix le_div2 1; only 1: intros _tmp_tactician0; only 1: auto with arith).	18.0722799301	27493
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	0.2.2.1.0	synth with cache (only 1: intros x; only 1: intros m; only 1: intros EQ; only 1: intros _tmp_tactician2; only 1: intuition N.Private_Tac.order).	0.113929033279	25
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.3.1.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id a); only 1: rewrite <- (id a'); only 1: f_equal; only 1: easy; only 1: intros Ha; only 1: rewrite Ha; only 1: easy).	2.92350292206	980
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	0.0.1.1.0.2.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pmult_nat_mult; only 1: easy).	0.445788860321	292
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.1.0.8	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.069680929184	55
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.3.1.1.0	synth with cache (only 1: split; only 1: apply Nat2Pos.inj; only 1: intros Hn; only 1: rewrite Hn; only 1: easy).	0.226233005524	68
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0230870246887	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0193989276886	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).	0.0308840274811	5
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0204930305481	1
Coq.NArith.Nnat.Nat2N.inj_sub	40
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0193781852722	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0211617946625	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0190072059631	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0209178924561	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).	0.29701590538	109
Coq.Strings.Ascii.eqb_neq	40	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite Nat.eqb_eq; only 1: easy).	0.0305569171906	3
Coq.Strings.Ascii.eqb_compat	40	2.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: intros y; only 1: t_eqb).	0.21500992775	43
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40	5.3.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: destr_bool).	3.49739909172	1325
Coq.Strings.String.eqb_neq	40	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite BinInt.Z.eqb_eq; only 1: easy).	0.032742023468	3
Coq.Strings.String.eqb_compat	40	0.3.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: Morphisms.f_equiv; only 1: easy).	0.191478967667	40
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40	0.16.3.3	synth with cache (only 1: intros l; only 1: intros s1; only 1: fix le_div2 1; only 1: easy).	25.1403710842	16167
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.3.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros b'; only 1: t_eqb).	4.42958378792	2215
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	6	synth with cache (only 1: trivial).	0.025869846344	7
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	5	synth with cache (only 1: trivial).	0.0236010551453	6
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	8	synth with cache (only 1: easy).	0.718118906021	50
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	214	synth with cache (only 1: constructor).	20.4568061829	120482
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: unfold Rdiv; only 1: ring).	0.0608620643616	4
Coq.Reals.Ratan.pos_half_prf	40	1.1.0.0.0.0	synth with cache (only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: generalize (sqrt_positivity 2 (Rlt_le 0 2 Hyp)); only 1: intros H1; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.399864912033	29
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	0.0.2.10	synth with cache (only 1: intros _tmp_tactician0; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	18.0032939911	4419
Coq.Reals.Ratan.pow2_abs	40	0.0.22.1	synth with cache (only 1: intros n; only 1: split_Rabs; only 1: ring; only 1: ring).	11.518488884	5328
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	1.0.2	synth with cache (only 1: intros H1; only 1: intros pr; only 1: lra).	0.152590036392	39
Coq.Reals.Ratan.pos_opp_lt	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0276300907135	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.2.0.4	synth with cache (only 1: intros a; only 1: intros; only 1: apply pow_lt; only 1: auto).	1.13171696663	185
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	1.0.0.1.0.0.3	synth with cache (only 1: intros H16; only 1: unfold Ratan_seq; only 1: unfold PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: ring).	4.87895298004	901
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	2.0.2.2.1.2.0	synth with cache (only 1: intros m; only 1: simpl; only 1: case m; only 1: intros H0; only 1: easy; only 1: intros a; only 1: auto).	8.55756902695	2465
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.5.0.6	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	4.68482017517	1883
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.1.1.0.0.1.7	synth with cache (only 1: intros n; only 1: induction n; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: auto).	3.54657506943	1390
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.2.0.0.1.1	synth with cache (only 1: intros r1; only 1: intros n2; only 1: intros; only 1: Morphisms.f_equiv; only 1: rewrite H; only 1: reflexivity).	0.193479061127	46
Coq.Reals.RList.RList_P22	40	6.4.0.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	2.97639298439	730
Coq.Reals.RList.RList_P23	40	7.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intros ?; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	4.37456297874	996
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	0.0.4.5.1.0.4.2.2	synth with cache (only 1: intros n; only 1: intros b; only 1: induction n; only 1: intros n; only 1: reflexivity; only 1: intros m; only 1: simpl; only 1: destruct (IHn m); only 1: reflexivity).	32.6255772114	16790
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low; only 1: intros high; only 1: intros k; only 1: intros H1; only 1: intros H2; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.110840797424	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	2.0.0.0.3	synth with cache (only 1: intros Eq; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).	0.0758190155029	19
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	4.0.0.5.0.0.0.0.1	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros P; only 1: intros H1; only 1: unfold Rmin; only 1: intros Hnotz; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	16.2072050571	8887
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.2.0.0.0.5.5	synth with cache (only 1: intros r1; only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intros ?; only 1: assumption; only 1: auto).	15.3111209869	8125
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H1; only 1: auto with real; only 1: intros _tmp_tactician0; only 1: auto with real).	0.0404710769653	8
Coq.Reals.Rbasic_fun.Rmin_left	40	1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros H1; only 1: pattern x at 1; only 1: contradiction).	0.0519609451294	10
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0330200195312	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	8.11399912834	1855
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.0.0.0.2.1.2.2	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H1; only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	29.6589910984	11263
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.121648073196	6
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros ?; only 1: auto; only 1: intros Eq0; only 1: auto).	0.142122983932	8
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros P; only 1: intros H1; only 1: intros H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0499660968781	10
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros H1; only 1: auto with real; only 1: intros H1; only 1: auto with real).	0.0426678657532	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0382761955261	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0307939052582	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	6.44883298874	2255
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.0368490219116	7
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.0382151603699	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.0.0.3.0.1.10.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros H; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).	26.0899350643	16828
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	1.3.1.0.0.0.0.2	synth with cache (only 1: intros r; only 1: intros H; only 1: unfold Rabs; only 1: destruct (Rcase_abs r) as [Hlt| Hge]; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 Hlt); only 1: auto with real; only 1: trivial).	9.12139201164	3188
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	1.1.1.0.1.0.3.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmax_case_strong; only 1: intros H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	25.9542529583	6168
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.03107690811	161
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	0.1.13.0.0.3.0.0.6.64	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: intros r2; only 1: eapply Rlt_asym; only 1: apply Rplus_lt_compat_l; only 1: eauto; only 1: auto with real; only 1: intros H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	38.9329330921	15852
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	3.0	synth with cache (only 1: red; only 1: solve_proper).	1.46721386909	247
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	4.0	synth with cache (only 1: intros; only 1: intuition).	0.205630064011	32
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.0.7.0.7.0	synth with cache (only 1: intros ?; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	8.40274310112	2407
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.3.1.9.0.3	synth with cache (only 1: intros p; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: apply Rmult_0_l).	4.93525600433	1979
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intros ?; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.556976079941	127
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.9.0	synth with cache (only 1: intros ?; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.53141593933	398
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	3.1.2.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros _tmp_tactician0; only 1: auto with real).	0.144465923309	39
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	5.4	synth with cache (only 1: intros f; only 1: firstorder).	11.7023830414	1201
Coq.Reals.NewtonInt.NewtonInt_P4	40	0.1.0.1.0.0.6.1.6	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: elim H1; only 1: intros Hb; only 1: simpl; only 1: intros; only 1: ring).	34.1633410454	9196
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.0.3.3	synth with cache (only 1: intros lpe; only 1: intros; only 1: injection H; only 1: auto).	0.496393203735	135
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	1.0.43.4	synth with cache (only 1: intros ?; only 1: fix le_div2 1; only 1: intros; only 1: auto).	9.58226203918	22288
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	2.0.0	synth with cache (only 1: simpl; only 1: intros m; only 1: trivial).	0.0403969287872	5
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros p0; only 1: auto with real).	0.03586602211	2
Coq.Reals.Rfunctions.pow_1	40	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0587661266327	6
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros m; only 1: rewrite H'; only 1: auto with real).	1.2563688755	258
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40	7.0.0.4.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros r; only 1: rewrite Rdef_pow_add; only 1: intros; only 1: field; only 1: auto with real).	26.7010860443	8306
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0.1.0.0	synth with cache (only 1: intros r2; only 1: intros n; only 1: induction n; only 1: auto with real; only 1: auto with real).	0.0554890632629	6
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.2.4.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros H1; only 1: rewrite S_INR; only 1: ring).	1.40988588333	388
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	0.2.0.3.0.2	synth with cache (only 1: simple induction n; only 1: intros ?; only 1: easy; only 1: simpl; only 1: intros a; only 1: auto with real).	3.33493900299	731
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	9.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.666896820068	167
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	2.2.0.0.5.2	synth with cache (only 1: intros m; only 1: intros n; only 1: intros H2; only 1: rewrite Zpower_nat_Z; only 1: rewrite <- nat_N_Z; only 1: Z.order_pos).	11.5525522232	5170
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0259139537811	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.5.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: auto with real).	0.0479030609131	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.161900043488	9
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	0.2.0.13	synth with cache (only 1: intros a; only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	1.81887197495	791
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.1.0.1	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	0.237145185471	53
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0474288463593	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.1.1	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	0.0467879772186	5
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).	0.0241439342499	2
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	0.025593996048	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.0.0.1.0.3	synth with cache (only 1: intros a; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto with real).	3.74652910233	817
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.0.1.0.0.4.0	synth with cache (only 1: intros f; only 1: intros expr; only 1: intros Dg; only 1: intros x; only 1: intros x0; only 1: intros _tmp_tactician0; only 1: firstorder).	15.4175760746	2722
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.131876945496	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	3.0.3.0.0.0.0	synth with cache (only 1: intros f; only 1: intros D; only 1: intros X; only 1: intros cvp; only 1: intros H0; only 1: intros H; only 1: firstorder).	11.3307230473	2312
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.1.1.0	synth with cache (only 1: intros; only 1: intros abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: eauto).	0.649566173553	282
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	27.13.1.5	synth with cache (only 1: destruct (CRltLinear R); only 1: intros ?; only 1: destruct (CRisRingExt R); only 1: apply R).	10.328827858	13837
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	2.0.22	synth with cache (only 1: intros _tmp_tactician0; only 1: right; only 1: trivial).	1.25769400597	1873
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: reflexivity).	0.0168778896332	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.7.0	synth with cache (only 1: intros r; only 1: intros Ey; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.196591854095	104
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.0.0.0.3	synth with cache (only 1: intros r; only 1: intros y; only 1: intros _tmp_tactician0; only 1: intros abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.65059709549	200
Coq.Reals.RIneq.Rgt_not_eq	40	0.0.2.1.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros _tmp_tactician0; only 1: intros abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	1.79854202271	905
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.397719144821	163
Coq.Reals.RIneq.Rlt_le	40	0.3.0	synth with cache (only 1: red; only 1: intros n; only 1: auto with arith).	0.0604128837585	38
Coq.Reals.RIneq.Rgt_ge	40	2.1.10	synth with cache (only 1: intros Hb; only 1: left; only 1: tauto).	1.7275788784	697
Coq.Reals.RIneq.Rle_ge	40	15.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).	3.46901702881	1989
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0282537937164	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0139110088348	2
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0095329284668	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0551488399506	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0187530517578	3
Coq.Reals.RIneq.Rnot_lt_le	40	5.1.3.1.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros b; only 1: intros H2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	17.6876289845	7416
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0304539203644	6
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.96258711815	876
Coq.Reals.RIneq.Rnot_lt_ge	40	0.2.1.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.100978851318	37
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	synth with cache (only 1: intros; only 1: auto with real).	0.0255491733551	13
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.025691986084	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0254349708557	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.3.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros EQ; only 1: intros abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.189961910248	39
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.5	synth with cache (only 1: red; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).	0.21791100502	57
Coq.Reals.RIneq.Rge_not_gt	40	0.0.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros EQ; only 1: apply Rle_not_lt; only 1: auto with real).	0.172914981842	31
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0192971229553	3
Coq.Reals.RIneq.Req_ge	40	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0926539897919	18
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0894401073456	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.083596944809	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0920338630676	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0294609069824	5
Coq.Reals.RIneq.Rle_le_eq	40	2.0.1	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition).	0.105489015579	39
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0222239494324	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.1.1	synth with cache (only 1: intros IH; only 1: intros m; only 1: congruence).	0.035248041153	22
Coq.Reals.RIneq.Rgt_eq_compat	40	2.5.0	synth with cache (only 1: intros x; only 1: intros m; only 1: congruence).	0.605230093002	176
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	2.87319898605	68
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.0.1.0.1.7	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	3.13918995857	1007
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.120364904404	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0.0.1	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0615599155426	6
Coq.Reals.RIneq.Rge_dec	40	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.117046117783	16
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.2.0.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold not; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros a; only 1: intuition).	0.159446954727	10
Coq.Reals.RIneq.Rgt_ge_dec	40	1.5.3	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.346037149429	147
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0503449440002	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.407441139221	101
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0352079868317	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.375978946686	86
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.2894551754	56
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.365911960602	111
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	2.08578109741	36
Coq.Reals.RIneq.Rplus_opp_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	13.6405570507	48
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.3.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).	0.079910993576	16
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.3.1.0	synth with cache (only 1: intros r; only 1: intros; only 1: rewrite H; only 1: tauto).	0.167474985123	54
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	1.5.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	37.0981149673	1779
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.034353017807	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0765058994293	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros ?; only 1: field).	0.0607621669769	18
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0381581783295	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.7.13	synth with cache (only 1: intros H; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	5.52126502991	2025
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0992970466614	19
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0.0.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: apply f_equal).	0.0256969928741	4
Coq.Reals.RIneq.Rmult_eq_compat_r	40	7.3	synth with cache (only 1: intros n; only 1: congruence).	1.12933087349	395
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	4.0	synth with cache (only 1: intros r2; only 1: auto with real).	0.0199749469757	6
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0111129283905	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	7.0.2.0	synth with cache (only 1: intros r1; only 1: intros Hnotz; only 1: intros H; only 1: intuition).	1.98269200325	523
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.3.1.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros Hn; only 1: auto with real).	0.151919841766	13
Coq.Reals.RIneq.Rmult_plus_distr_r	40	6.1.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	10.5783159733	130
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros _tmp_tactician0; only 1: auto with real).	0.0238308906555	6
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.0601840019226	11
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.2.3.2.7	synth with cache (only 1: intros j; only 1: intros ?; only 1: unfold IZR; only 1: rewrite H; only 1: ring).	2.29031300545	1077
Coq.Reals.RIneq.Ropp_involutive	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.276172876358	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: ring).	0.0275390148163	3
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.7.2	synth with cache (only 1: intros n; only 1: intros y; only 1: ring).	0.769169092178	171
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.022087097168	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.3.3	synth with cache (only 1: intros n; only 1: intros m; only 1: ring).	0.670224905014	149
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0.3	synth with cache (only 1: intros n; only 1: intros p; only 1: ring).	0.203761100769	39
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0232520103455	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros ?; only 1: ring).	0.0782730579376	11
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0693588256836	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0193738937378	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0203149318695	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.4.2.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: inversion 1; only 1: ring).	5.34655308723	1489
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0201280117035	3
Coq.Reals.RIneq.Rminus_eq_contra	40	3.1.1.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: auto with real).	0.0643107891083	9
Coq.Reals.RIneq.Rminus_not_eq	40	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.26275396347	66
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0296900272369	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.0366051197052	18
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0255270004272	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0282609462738	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0.0.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: field; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.681193113327	137
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.2.5.0.1	synth with cache (only 1: intros a; only 1: intros; only 1: rewrite <- (Ropp_involutive r2); only 1: field; only 1: auto with real).	3.82166194916	807
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.3.0.0.1	synth with cache (only 1: intros a; only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.531632900238	115
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	3.0.1	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).	0.2139108181	29
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.0.2	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).	0.0473930835724	26
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	0.981815099716	126
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.0.3.14	synth with cache (only 1: intros abs; only 1: unfold Rge; only 1: intros y; only 1: intuition).	30.7365169525	12581
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intros ?; only 1: left; only 1: auto with zarith real; only 1: intros ?; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	3.01096391678	682
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.1.0.2.2	synth with cache (only 1: intros ?; only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.769366979599	417
Coq.Reals.RIneq.Rplus_lt_compat	40	8.0.1.2	synth with cache (only 1: intros r; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: eauto with real).	4.4164788723	2448
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0186970233917	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	3.4.0.2.2.2.1	synth with cache (only 1: intros r1; only 1: unfold Rle; only 1: intros m; only 1: intros p; only 1: intuition; only 1: subst; only 1: auto with real).	38.9006769657	22096
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.2.8	synth with cache (only 1: red; only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	1.36557602882	783
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.4.6.10	synth with cache (only 1: red; only 1: unfold Rge; only 1: intuition; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	37.9852311611	29376
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1.1.5	synth with cache (only 1: intros Ha'; only 1: intros m; only 1: intuition).	0.0473489761353	13
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.159177064896	65
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0764000415802	9
Coq.Reals.RIneq.Ropp_gt_contravar	40	6.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.69931602478	56
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.17560696602	382
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0.4.0	synth with cache (only 1: unfold Rge; only 1: intros n; only 1: intros _tmp_tactician0; only 1: intuition).	0.655938148499	70
Coq.Reals.RIneq.Ropp_le_contravar	40	1.1.0.0.2.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intros ?; only 1: auto with real; only 1: auto with real).	0.129227876663	16
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.1.0.2.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1; only 1: intros x; only 1: destruct 1; only 1: auto with real; only 1: auto with real).	0.261482000351	47
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0156779289246	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.2	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.127269029617	44
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.016391992569	3
Coq.Reals.RIneq.Ropp_lt_cancel	40	1.0.1.3.0.0.4	synth with cache (only 1: intros a; only 1: intros; only 1: apply Rnot_le_lt; only 1: intros abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	3.10406494141	1617
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).	0.234853029251	117
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.0236220359802	1
Coq.Reals.RIneq.Rmult_gt_compat_l	40	7.3	synth with cache (only 1: intros a; only 1: intuition).	0.937355995178	312
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.2.7	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).	5.50451803207	3548
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.2.8	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).	13.0016422272	10034
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	11.3.0	synth with cache (only 1: intros x; only 1: intros; only 1: auto with *).	10.3345270157	5285
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	2.7.0.0.1	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition).	2.63760113716	1559
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: easy).	0.02117395401	4
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1; only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: ring).	0.0333061218262	6
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40
Coq.Reals.RIneq.Rle_0_1	40	1	synth with cache (only 1: auto with real).	0.0104258060455	2
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	1.0.3.0.0.11.4	synth with cache (only 1: intros x; only 1: unfold Rminus; only 1: intros m; only 1: intros H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: auto with real).	31.9090819359	28022
Coq.Reals.RIneq.S_INR	40	0.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).	2.51099300385	841
Coq.Reals.RIneq.S_O_plus_INR	40	4.0.7.0.0.2.2	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).	8.32788705826	3164
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.19	synth with cache (only 1: fix even_spec 1; only 1: auto with real).	4.91864609718	3384
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	6.1.4.2	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: tauto; only 1: intuition).	23.5874919891	10720
Coq.Reals.RIneq.INR_not_0	40	4.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).	0.133865833282	44
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40	1.0.3.14.1	synth with cache (only 1: intros x; only 1: fix le_div2 1; only 1: intros n; only 1: intros HR; only 1: auto with arith).	32.3585810661	26325
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.0.1.0.0.9	synth with cache (only 1: intros x; only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: auto using Z.lt_pred_l).	1.15466690063	1244
Coq.Reals.RIneq.INR_IPR	40	5.1.11	synth with cache (only 1: fix even_spec 1; only 1: intros ?; only 1: easy).	2.74150490761	2311
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	1.0.9.1.1.20.5	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	21.8998990059	13708
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.1.1.0.4	synth with cache (only 1: intros a; only 1: intros z; only 1: intros Ha; only 1: contradict Ha; only 1: apply eq_IZR; only 1: auto).	8.13626194	2262
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	5.2.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: ring).	0.0572869777679	16
Coq.Reals.RIneq.double_var	40	2.16.32	synth with cache (only 1: intros p; only 1: ring_simplify; only 1: field).	24.0735051632	13305
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40	1.2.3.0	synth with cache (only 1: intros H; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.0404798984528	14
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.15138220787	40
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	4.3.0.9.1	synth with cache (only 1: intros n; only 1: intros r1; only 1: intros p; only 1: unfold Rdiv; only 1: ring).	16.1844520569	6250
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.0.3.3.3.1	synth with cache (only 1: intros x; only 1: intros ?; only 1: intros y; only 1: pattern x at 1; only 1: unfold Rdiv; only 1: ring).	5.69951605797	2847
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0306169986725	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: apply Nat.mul_le_mono_pos_l; only 1: Nat.order').	0.0450088977814	4
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.2.1	synth with cache (only 1: intros n; only 1: intros IH; only 1: auto with arith).	0.138689041138	29
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	3	synth with cache (only 1: auto with real).	0.018483877182	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0491878986359	11
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	0.1.2.0.7	synth with cache (only 1: intros Hn; only 1: intros Dg; only 1: intros x; only 1: intros H1; only 1: auto using Rplus_lt_compat with rorders).	2.92107701302	717
Coq.Reals.Ranalysis2.quadruple	40	4.0	synth with cache (only 1: intros ?; only 1: field).	0.0459380149841	6
Coq.Reals.Ranalysis2.quadruple_var	40	2.17	synth with cache (only 1: intros Hm; only 1: field).	1.16319394112	821
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	1.0	synth with cache (only 1: unfold interior; only 1: trivial).	0.0344440937042	3
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.11.0	synth with cache (only 1: intros; only 1: intros ?; only 1: eauto).	2.36273694038	907
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	0.1.6.28.6.0.3	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: apply (Rlt_irrefl 0); only 1: destruct _tmp_tactician0 as (a, H); only 1: exfalso; only 1: inversion_clear H; only 1: auto).	21.7704980373	32551
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	1.0.1.2.4.1.4	synth with cache (only 1: intros n; only 1: intros y; only 1: intros m; only 1: intuition; only 1: unfold included in H; only 1: induction H0; only 1: firstorder).	19.4430670738	8646
Coq.Reals.Rtopology.open_set_P2	40	7.1.1.4	synth with cache (only 1: intros a; only 1: intros y; only 1: intros H1; only 1: firstorder).	8.40553379059	3140
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	1.1.1.0	synth with cache (only 1: unfold open_set; only 1: intros ?; only 1: unfold neighbourhood; only 1: easy).	0.0543298721313	7
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40	8.7.8	synth with cache (only 1: intros _tmp_tactician0; only 1: fix sqrtrem_spec 1; only 1: auto).	21.4888179302	12514
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	10.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: firstorder).	2.30934119225	810
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	1.0.8	synth with cache (only 1: intros x0; only 1: intros; only 1: firstorder).	1.34673309326	466
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.35.11	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).	2.88780212402	7620
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	1.0.2.0.1.3	synth with cache (only 1: intros n; only 1: intros a; only 1: intros m; only 1: intros cvfk; only 1: Nat.nzsimpl; only 1: auto with arith).	8.51098799706	1452
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	9.0.0.0.0.2.4	synth with cache (only 1: intros n; only 1: intros LT; only 1: intros ?; only 1: intros x'; only 1: intros ?; only 1: unfold opp_fct; only 1: auto with real).	13.3920209408	3683
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.109755992889	3
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.253891944885	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.3.1	synth with cache (only 1: intros a; only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.920001029968	107
Coq.Reals.Ranalysis1.derive_pt_D_in	40	3.3.1.1.7	synth with cache (only 1: intros Dg; only 1: intros H'; only 1: intros r2; only 1: fix odd_spec 1; only 1: easy).	7.91431093216	2151
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	7.5.5.4	synth with cache (only 1: intros m; only 1: intros r2; only 1: intros _tmp_tactician0; only 1: eauto).	18.6910209656	6078
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.3.0	synth with cache (only 1: intros l; only 1: intros r2; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0810458660126	8
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.4.36	synth with cache (only 1: intros t; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).	1.82435798645	1583
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intros ?; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.125245094299	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.2.3.5	synth with cache (only 1: intros q; only 1: intros H1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	6.84392595291	1264
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.3.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.301340103149	14
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.491145849228	32
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	2.22	synth with cache (only 1: fix odd_spec 1; only 1: auto with real).	3.8352701664	2177
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	4.0.2.5	synth with cache (only 1: intros f; only 1: intros _tmp_tactician0; only 1: intros P; only 1: firstorder  (subst; auto)).	4.1206882	1621
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	2.0.3.0.0	synth with cache (only 1: intros x; only 1: intros Heub; only 1: fix gcd_divide 1; only 1: intros _tmp_tactician0; only 1: easy).	0.150712013245	29
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0313918590546	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	0.0.7.3.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: easy).	2.31840205193	585
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40	5.6.2.0.7.0.20.6	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: rewrite double; only 1: unfold tan; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_plus; only 1: unfold Rdiv; only 1: ring).	13.2595341206	9747
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.18940615654	22
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.100057125092	3
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	1.11.0.38	synth with cache (only 1: apply Rgt_not_eq; only 1: destruct pi2_int; only 1: apply sqrt_lt_R0; only 1: Lra.lra).	7.87521600723	5587
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0518548488617	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.8	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.125975847244	34
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_0_2; only 1: apply PI_RGT_0).	0.0458900928497	3
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.358907938004	121
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	12.0.5.1.0.0.0.0.13	synth with cache (only 1: rewrite double; only 1: generalize PI2_RGT_0; only 1: intros H1; only 1: generalize (Rplus_lt_compat_l PI 0 (PI / 2) H1); only 1: rewrite Rplus_0_r; only 1: intros H2; only 1: pattern PI at 2; only 1: rewrite double_var; only 1: Lra.lra).	37.8884689808	16780
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.0.15.0.0.0	synth with cache (only 1: intros ?; only 1: unfold toRad; only 1: unfold toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).	4.24330401421	2497
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.10.0	synth with cache (only 1: intros; only 1: intros x; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	5.02067995071	2024
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0450210571289	5
Coq.Reals.Ranalysis4.derivable_cosh	40
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0386960506439	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.1.7	synth with cache (only 1: intros p; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.626760005951	294
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.6	synth with cache (only 1: intros eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.113910913467	22
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.202356100082	38
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	3.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.0450899600983	9
Coq.Reals.DiscrR.IZR_eq	40	0.3.0.1.1	synth with cache (only 1: intros n; only 1: intros z; only 1: intros ?; only 1: Morphisms.f_equiv; only 1: easy).	0.496084928513	126
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R); only 1: destruct p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R); only 1: destruct p; only 1: exact (f x x H H)).	1.62804102898	527
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.0.1.2	synth with cache (only 1: intros n; only 1: intros A; only 1: intros y; only 1: intros H; only 1: firstorder).	0.527787923813	106
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	19	synth with cache (only 1: eauto with arith).	0.880512952805	590
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	9	synth with cache (only 1: trivial).	0.0474109649658	34
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	0.1.4	synth with cache (only 1: intros EQ; only 1: intros t; only 1: apply CReal_isRingExt).	6.24768996239	482
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	18.9771661758	478
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	2.1.0	synth with cache (only 1: intros x; only 1: intros t; only 1: apply (Ropp_ext CReal_isRingExt)).	13.6498169899	237
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros z; only 1: intros y0; only 1: intros H0; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	10.8741071224	697
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	10.1	synth with cache (only 1: intros _tmp_tactician0; only 1: ring).	0.524509906769	209
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.03457903862	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0391988754272	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	2	synth with cache (only 1: assumption).	0.024964094162	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.0.0.2	synth with cache (only 1: intros n; only 1: intros y; only 1: intros y0; only 1: apply CReal_mult_proper_l).	2.26959204674	110
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0420219898224	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	4.20.3	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: ring).	6.54136681557	5285
Coq.Reals.R_sqr.Rsqr_mult	40	1.6.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).	0.0452198982239	14
Coq.Reals.R_sqr.Rsqr_plus	40	4.4.5.6	synth with cache (only 1: intros ?; only 1: intros n; only 1: unfold Rsqr; only 1: ring).	3.68975114822	1614
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.028146982193	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	12.2.3	synth with cache (only 1: intros a; only 1: intros p; only 1: ring_Rsqr).	3.9124519825	2158
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0183780193329	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.0.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	0.115526914597	12
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).	0.0348789691925	9
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.1.1	synth with cache (only 1: intros n; only 1: intros; only 1: ring_Rsqr).	0.0629529953003	23
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0236549377441	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.0.0.4.2.1	synth with cache (only 1: intros y; only 1: intros r2; only 1: unfold Rsqr; only 1: intros t; only 1: intros H'; only 1: intros ?; only 1: auto with real).	8.88794517517	2968
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.33.0.1.1	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: unfold Rabs; only 1: compute; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: auto with real; only 1: auto with real).	33.2455410957	29051
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	0.0.16.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: intropattern subst -> H; only 1: rewrite <- Rsqr_abs; only 1: ring_Rsqr).	23.672205925	11128
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.4.0.4	synth with cache (only 1: intros r; only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	2.21090507507	897
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.0.1.0.0.8	synth with cache (only 1: intros x; only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: auto using Z.lt_pred_l).	2.07701897621	1069
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0.0.1	synth with cache (only 1: intros c; only 1: intros X1; only 1: intros; only 1: apply derivable_pt_id).	0.122026920319	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.0.0.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros ub; only 1: intros a; only 1: intuition).	1.35988211632	52
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_0_2).	0.199014902115	7
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).	3.63592410088	1959
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.195702791214	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0743119716644	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.069267988205	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0754721164703	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.2.0.0.0.1.0.1.2	synth with cache (only 1: intros a; only 1: intros x; only 1: intros ?; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros n1; only 1: auto with real).	24.3985080719	4002
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.5.2.1	synth with cache (only 1: intros m; only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros y; only 1: apply Rplus_le_compat_l).	6.40782403946	1503
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.0.2.2.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm _ p); only 1: rewrite (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros y; only 1: apply Rplus_le_compat_l).	3.20748090744	830
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmax_case_strong; only 1: intros w; only 1: rewrite Rmin_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy; only 1: intros w; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy).	23.0231921673	4192
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmin_case_strong; only 1: intros w; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy; only 1: intros w; only 1: rewrite Rmax_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy).	31.1517021656	5130
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	1.0.1.6.8.1	synth with cache (only 1: intros a; only 1: unfold Rgt; only 1: intros H1; only 1: apply Rmult_lt_0_compat with (1 := H1); only 1: apply Rinv_0_lt_compat; only 1: auto with real).	21.1513040066	9665
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0.9	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	0.69581413269	234
Coq.Reals.Rlimit.eps4	40	5.13	synth with cache (only 1: intros _tmp_tactician2; only 1: field).	3.27765703201	2159
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.022351026535	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0.1.6	synth with cache (only 1: intros r2; only 1: rewrite <- double; only 1: intros; only 1: lra).	0.23202586174	74
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	6.0.2	synth with cache (only 1: intros x; only 1: intros; only 1: firstorder).	1.39908003807	291
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0559520721436	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0454370975494	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.4.0.3.2	synth with cache (only 1: simpl; only 1: intros r2; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	5.68862891197	2098
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0279240608215	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	6.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	14.8616800308	4088
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	1.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.0669720172882	8
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	1.3628988266	231
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.0.0.1.1.0.1.0.2.0	synth with cache (only 1: intros x; only 1: intros H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: apply Rmult_lt_compat_r; only 1: easy; only 1: easy; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	26.4999308586	10074
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.951420068741	74
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.20650100708	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.103806972504	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	0.0.15.5.12	synth with cache (only 1: unfold Rminus; only 1: intros Hn; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	25.8265900612	14760
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intros x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intros H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).	5.24594807625	1055
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40	7.1.11	synth with cache (only 1: intros l; only 1: rewrite <- cos_sym; only 1: reflexivity).	11.2707231045	4767
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.3.0	synth with cache (only 1: intros x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.518158912659	63
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.0.0.5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).	7.20380115509	1239
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.4.0	synth with cache (only 1: intros x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.191899061203	19
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.201090097427	9
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	1.2.8.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).	11.9522528648	3564
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2); only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2); only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr; only 1: field; only 1: field).	7.36817312241	1228
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0213060379028	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0196008682251	2
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0852520465851	9
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: rewrite tech5; only 1: rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	7.02267003059	1998
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	1.0.0.1.0.1.6.3	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: destruct _tmp_tactician0 as [| | ]; only 1: reflexivity; only 1: auto; only 1: ring).	6.74305915833	3207
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intros abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	7.4354019165	3834
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	4.19	synth with cache (only 1: fix le_div2 1; only 1: solve [ auto ]).	0.57186794281	1106
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.0.12	synth with cache (only 1: intros ?; only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0984101295471	105
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0288028717041	8
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	0.0.0.0.6.2	synth with cache (only 1: intros a; only 1: intros l; only 1: intros H; only 1: split; only 1: apply H; only 1: apply H).	6.60782599449	1148
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	3.1.1.5.0.3.0	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intros y0; only 1: destruct H0; only 1: apply H; only 1: assumption).	24.5582749844	8031
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	2.0.5.9	synth with cache (only 1: red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto with *).	9.57634806633	7471
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.2.2.6	synth with cache (only 1: intros EQ; only 1: intros x'; only 1: intros Hx; only 1: rewrite Hx; only 1: reflexivity).	2.65243983269	1615
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	4	synth with cache (only 1: trivial).	0.00687909126282	5
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	10	synth with cache (only 1: auto).	0.0166850090027	34
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: clear H; only 1: rewrite <- (CReal_plus_comm x); only 1: rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.178003072739	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intros abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.97156715393	704
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	4	synth with cache (only 1: easy').	0.0460751056671	5
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.00742411613464	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.0	synth with cache (only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0451600551605	6
Coq.Reals.Rtrigo_reg.derivable_cos	40
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.1.0.0.0.0.0.0.2.12.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: cut (forall h : R, sin (h + PI / 2) = cos h); only 1: intros ?; only 1: generalize (derivable_pt_lim_comp (id + fct_cte (PI / 2))%F sin); only 1: intros; only 1: apply derivable_pt_lim_sin; only 1: intros ?; only 1: rewrite cos_sin; only 1: rewrite Rplus_comm; only 1: reflexivity).	38.217815876	10846
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.3.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.34851193428	60
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Hx; only 1: split; only 1: eauto with real; only 1: auto with real).	0.195142030716	23
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.5.0.12	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).	7.09696793556	2765
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	2.4.13.19	synth with cache (only 1: constructor; only 1: revert n; only 1: fix even_spec 1; only 1: trivial).	1.88060092926	2037
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.0	synth with cache (only 1: intros r; only 1: auto).	0.0370590686798	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: constructor).	0.0292139053345	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.148537158966	27
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0739409923553	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.4.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).	0.0502710342407	8
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0817749500275	6
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	7.21	synth with cache (only 1: intros P; only 1: inversion 1).	1.10155701637	637
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	1.14	synth with cache (only 1: fix even_spec 1; only 1: easy).	2.08960294724	1263
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	8.16	synth with cache (only 1: fix odd_spec 1; only 1: easy).	14.9522612095	8508
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	1.3.2.7.0	synth with cache (only 1: intros m; only 1: intros y; only 1: intros; only 1: apply find_2; only 1: auto).	3.18522381783	1707
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	1.3.0.0.0.2.0.23	synth with cache (only 1: intros EQ; only 1: unfold elements; only 1: intros e; only 1: intros e'; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: intros y; only 1: auto).	16.4469299316	10184
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	4.5.5.6	synth with cache (only 1: intros x; only 1: intros n; only 1: fix even_spec 1; only 1: easy).	9.30886888504	3798
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	3.0	synth with cache (only 1: intros; only 1: tauto).	0.037328004837	5
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: intros; only 1: trivial).	0.0713589191437	14
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	2.2.2.2.2.1.1.12	synth with cache (only 1: intros n; only 1: intros sorted; only 1: pattern n; only 1: intros x; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	24.4440600872	24986
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	0.11.1.2	synth with cache (only 1: intros Eq; only 1: intros m; only 1: intros until r; only 1: intuition_in).	1.63117814064	567
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	15	synth with cache (only 1: easy).	0.42996096611	290
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.0.1	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.0201349258423	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.4.5.4	synth with cache (only 1: intros sorted; only 1: intuition; only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	6.41451382637	844
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.4.3.2	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: Tactics.program_simpl; only 1: intuition_in; only 1: order).	9.56602406502	245
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: intros; only 1: eauto with *).	0.0204629898071	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0128269195557	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0120689868927	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.012008190155	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.2.0	synth with cache (only 1: intros m; only 1: intros p; only 1: eauto with ordered_type).	0.0279970169067	5
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: generalize (H _ H0); only 1: order).	0.0204560756683	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.065083026886	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	3	synth with cache (only 1: intuition).	0.0104131698608	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.1.3.0.9	synth with cache (only 1: intros IN; only 1: unfold empty; only 1: intros x; only 1: intros _tmp_tactician2; only 1: intuition_in).	0.399590015411	208
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	0.10	synth with cache (only 1: fix odd_spec 1; only 1: easy).	3.81314492226	318
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	8.3.0.1	synth with cache (only 1: intros until m; only 1: case m; only 1: easy; only 1: easy).	3.30189108849	1939
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	1.0.0.0.3.0.0	synth with cache (only 1: intros m; only 1: intuition_in; only 1: constructor; only 1: auto; only 1: auto; only 1: intuition_in; only 1: intuition_in).	0.426966905594	165
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	5.0.2.0	synth with cache (only 1: unfold create; only 1: intros m; only 1: intros m'; only 1: intuition_in).	0.498139858246	163
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	9.13.4	synth with cache (only 1: red; only 1: fix gcd_divide 1; only 1: auto).	14.7053191662	17581
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	0.3.0.5.1.0.0.8	synth with cache (only 1: intros c; only 1: induction s as [| l Hl y e r Hr h]; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: rewrite Hl; only 1: simpl; only 1: apply Hr).	7.37645602226	6005
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	24.19.13.24	synth with cache (only 1: intros a; only 1: destruct a; only 1: easy; only 1: easy).	10.694341898	34309
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.0.0.2.3.5.2.8.0	synth with cache (only 1: intros l; only 1: intros m1; only 1: intros y; only 1: induction l; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: inversion H; only 1: intuition; only 1: intuition; only 1: intuition).	36.4534959793	34067
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0580639839172	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	0.18.7.2	synth with cache (only 1: intros until m; only 1: intros sorted; only 1: fix even_spec 1; only 1: trivial).	36.4327402115	53628
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	2	synth with cache (only 1: easy).	0.0134909152985	3
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	0.2.0.0.0.4.2.0.0	synth with cache (only 1: intros m; only 1: intros x; only 1: red; only 1: simpl; only 1: intros y; only 1: intros e; only 1: intros e'; only 1: intros ?; only 1: eauto using add_2, add_3).	4.26029682159	3230
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.19.0.0	synth with cache (only 1: intros m; only 1: intros x; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: auto).	3.33905100822	4283
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.0.19.0.0.0.8	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: intros RS; only 1: rewrite elements_mapsto; only 1: eauto using Raw.Proofs.add_2, Raw.Proofs.add_3).	20.6837990284	27921
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	6.10.22.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| _tmp_tactician2]; only 1: easy; only 1: exact I).	1.87259292603	4971
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.0128839015961	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: easy).	0.0150790214539	4
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	31	synth with cache (only 1: intuition).	19.0820250511	12286
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	7	synth with cache (only 1: intuition).	0.108194112778	54
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intros EQ; only 1: intuition).	0.0339169502258	8
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	10	synth with cache (only 1: intuition).	0.064523935318	44
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.12.4	synth with cache (only 1: intros ?; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	1.2854809761	1072
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	5	synth with cache (only 1: intuition).	0.184957027435	20
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	5.2	synth with cache (only 1: intros Ha; only 1: intuition).	0.0351459980011	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4.3	synth with cache (only 1: intros Ha; only 1: intuition).	0.0633549690247	27
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	9.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.430800914764	334
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: intros H; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.04628992081	301
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.10	synth with cache (only 1: intros A; only 1: firstorder  (subst; auto)).	2.20617699623	790
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	6.4.0.2	synth with cache (only 1: red; only 1: red; only 1: intros x2; only 1: firstorder  (subst; auto)).	24.6923530102	9287
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.0.3.1	synth with cache (only 1: intros ?; only 1: intros H; only 1: apply equal_2; only 1: intuition).	0.0295670032501	9
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.1.1.0	synth with cache (only 1: intros x; only 1: intros m; only 1: red; only 1: auto).	0.10666513443	52
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.6	synth with cache (only 1: intros A; only 1: firstorder  (subst; auto)).	0.464951038361	199
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.0.0.9.0.7	synth with cache (only 1: intros p; only 1: intros; only 1: intros s'; only 1: rewrite add_iff; only 1: intuition; only 1: eauto with set).	33.3768620491	13078
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.0.1.0.5	synth with cache (only 1: intros; only 1: intros a; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	2.73202991486	1197
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	3.0.0.0.1.4.0.1.2	synth with cache (only 1: intros a; only 1: intros m; only 1: intros n'; only 1: intros ?; only 1: intros ?; only 1: intros Hpq; only 1: intros H0; only 1: rewrite inter_iff; only 1: intuition).	25.2771790028	15784
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.1.0.0.3.3	synth with cache (only 1: intros s'; only 1: intros; only 1: intros x; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).	2.35209703445	1001
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.0.2.1	synth with cache (only 1: intros x; only 1: intros q; only 1: intros r; only 1: congruence).	0.208802938461	89
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.1	synth with cache (only 1: intros ?; only 1: trivial).	0.0119230747223	3
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	3.0	synth with cache (only 1: intros ?; only 1: easy).	0.0220868587494	5
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.0	synth with cache (only 1: intros; only 1: easy).	0.0247519016266	5
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	1.0.6	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x; only 1: eauto).	0.283825874329	96
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.0471289157867	22
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0109810829163	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.1.0.0.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: easy; only 1: easy'; only 1: trivial).	0.036936044693	7
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	5	synth with cache (only 1: easy).	0.016284942627	11
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	4.2.0	synth with cache (only 1: fix odd_spec 1; only 1: intros s2; only 1: easy).	0.0935490131378	11
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.26	synth with cache (only 1: intros m; only 1: rewrite is_empty_spec; only 1: trivial).	14.6859059334	9834
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	5.0.1.0	synth with cache (only 1: intros q; only 1: intros _tmp_tactician0; only 1: intros y; only 1: easy).	0.0274810791016	14
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.0.2.3	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.414180994034	134
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40	3.13.8	synth with cache (only 1: intros H1; only 1: fix odd_spec 1; only 1: easy).	12.1020019054	7455
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	7.2.1	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: easy).	1.5742161274	666
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.22	synth with cache (only 1: fix odd_spec 1; only 1: easy).	32.6263830662	24284
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.7.0.3.1.11	synth with cache (only 1: intros IH; only 1: intros n; only 1: unfold Equal; only 1: rewrite equal_subset; only 1: fix even_spec 1; only 1: trivial).	33.5963041782	19130
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	1.1.0.1.1.0.0.12.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: auto; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: reflexivity).	6.17629885674	5860
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	2.5.4	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	3.25371694565	1309
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0371701717377	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	5.11.4	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: auto).	11.4323530197	5438
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0231781005859	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	6.12.16.13.25	synth with cache (only 1: intros H; only 1: elim H; only 1: constructor; only 1: constructor; only 1: constructor).	10.0162351131	39754
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0221979618073	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0234949588776	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	0.238210916519	100
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	3.0.1.6.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.47391295433	416
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.0.7	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.294469833374	123
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	4.0.0.1.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros b; only 1: rewrite remove_spec; only 1: intros Hb; only 1: tauto).	0.629364013672	228
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.0.1.1.3	synth with cache (only 1: intros n; only 1: intros Hi; only 1: intros m; only 1: rewrite remove_spec; only 1: unfold In; only 1: intuition congruence).	0.498402833939	264
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.1.0.0.3	synth with cache (only 1: red; only 1: unfold singleton; only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.114086151123	40
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	1.19032001495	494
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).	0.0280318260193	5
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0.0.3	synth with cache (only 1: intros b; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).	0.358001947403	149
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0.4.0	synth with cache (only 1: intros s; only 1: intros n; only 1: intros m; only 1: rewrite diff_spec; only 1: tauto).	0.122978925705	51
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: intros ?; only 1: tauto).	0.53164601326	185
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	2.8.1.3.5	synth with cache (only 1: intros H; only 1: intros s'; only 1: intros x; only 1: fix odd_spec 1; only 1: easy).	30.8267700672	14934
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0.1.0.0	synth with cache (only 1: intros b; only 1: unfold filter; only 1: intros a0; only 1: intros _tmp_tactician0; only 1: intros x; only 1: rewrite xfilter_spec; only 1: tauto).	0.113179922104	32
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	0.14.0.6.2.0	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: intros _tmp_tactician0; only 1: intuition; only 1: firstorder; only 1: fix even_spec 1; only 1: trivial).	27.4744570255	15514
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0.0.4.11	synth with cache (only 1: intros H; only 1: intros f; only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: tauto).	16.9789860249	11315
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	1.1.0.2.1	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold exists_; only 1: intros f; only 1: rewrite xexists_spec; only 1: trivial).	0.215485095978	92
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.4	synth with cache (only 1: destr_bool; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.392179012299	173
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	1.12.0	synth with cache (only 1: unfold In; only 1: fix even_spec 1; only 1: auto).	2.37048196793	1836
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40	0.16	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.334949970245	420
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).	0.0979089736938	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.0.0.0.0.17.16.4.3	synth with cache (only 1: intros H; only 1: generalize H; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [q| q| ]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: firstorder  discriminate).	19.4655299187	27560
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0.6	synth with cache (only 1: intros ?; only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.908268928528	210
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	2.0.3.0.7	synth with cache (only 1: intros n; only 1: induction n; only 1: auto with arith; only 1: auto; only 1: easy).	0.959782123566	558
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intros H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intros H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	15.8883869648	4714
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.0.0.0.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	1.25984692574	341
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	7.8.0	synth with cache (only 1: intros H; only 1: symmetry; only 1: congruence).	1.14849305153	957
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	8	synth with cache (only 1: congruence).	0.176381111145	44
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0326578617096	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	9.25910305977	5140
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0666642189026	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	0.2.0.3.0.3	synth with cache (only 1: intros a; only 1: split; only 1: intros ?; only 1: apply (MapsTo_1 H H0); only 1: firstorder; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	2.89345288277	1312
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	13.0	synth with cache (only 1: intros; only 1: intuition).	1.15072512627	536
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	9.2.0	synth with cache (only 1: destr_bool; only 1: rewrite <- not_true_iff_false; only 1: intuition).	1.0343849659	377
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	0.1.5.7	synth with cache (only 1: intros s2; only 1: intros Ha; only 1: intros; only 1: intuition).	3.61102795601	1780
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.2.14	synth with cache (only 1: red; only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	1.74591302872	1357
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0	synth with cache (only 1: intros until m; only 1: intuition).	0.0435469150543	2
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros _tmp_tactician0; only 1: apply add_2; only 1: auto; only 1: auto).	0.0868580341339	9
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0826621055603	8
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.1.0.1.0.5.0.1.0.1	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	28.0757169724	18377
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	2.1.6.1.0.0.0.4.0.4	synth with cache (only 1: intros n; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: easy; only 1: intros Eq; only 1: discriminate).	25.6392629147	16767
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	5.2	synth with cache (only 1: intros s; only 1: intuition).	0.0489490032196	13
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	0.0.0.0.0.0.8.2.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	3.66112184525	1671
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition).	0.0880830287933	12
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.2.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.413666963577	48
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	4.0	synth with cache (only 1: intros; only 1: split).	0.03835105896	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.0.5.0	synth with cache (only 1: intros; only 1: intros e; only 1: elim H; only 1: auto with map).	0.253350973129	9
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	3.0.0.2.2.2	synth with cache (only 1: intros c; only 1: intros ?; only 1: intros p; only 1: intros q; only 1: intros Hc; only 1: congruence).	3.76100492477	1908
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	5.0	synth with cache (only 1: intros; only 1: auto with map).	0.0732660293579	24
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	4.1.2.0.2.2.5	synth with cache (only 1: intros Hrec; only 1: intros a; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pempty; only 1: auto).	7.86576390266	5314
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	0.5.1.0.0.27	synth with cache (only 1: intros Hc; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: intuition).	31.0961761475	44378
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.12.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: easy; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	9.04333806038	7715
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	1.2.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Hk; only 1: firstorder).	0.247126102448	80
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	1.1.8.0.0.0.7	synth with cache (only 1: intros s; only 1: intros; only 1: intros k; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, _tmp_tactician4); only 1: apply H with k; only 1: auto).	13.2573740482	11547
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	6.4	synth with cache (only 1: compute; only 1: firstorder).	2.20962500572	929
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.1.0.1.0.1	synth with cache (only 1: intros m; only 1: intros m'; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	4.57017993927	1297
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	3.0.2	synth with cache (only 1: intros m'; only 1: fix even_spec 1; only 1: auto).	0.178560972214	56
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	3.20	synth with cache (only 1: fix odd_spec 1; only 1: auto with *).	19.1880469322	7280
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	4.0.0	synth with cache (only 1: intros x; only 1: intros H; only 1: easy).	0.0251188278198	7
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	2.52	synth with cache (only 1: compute; only 1: auto).	0.498780012131	1554
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.1.0.5	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: intuition; only 1: easy).	0.609889030457	365
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	2.1	synth with cache (only 1: intros inlist; only 1: auto).	0.0271461009979	5
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0148169994354	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	2.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: auto; only 1: auto).	0.104238033295	19
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	0.0.4.2.1.3.8	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).	9.85581707954	7687
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	1.29.1.0	synth with cache (only 1: intros m; only 1: intros x; only 1: fix odd_spec 1; only 1: intuition).	32.6250169277	39198
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	2	synth with cache (only 1: easy).	0.020348072052	3
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	1.9	synth with cache (only 1: fix odd_spec 1; only 1: easy).	0.194246053696	130
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	3.18	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.47814202309	1223
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.5.0	synth with cache (only 1: intros m; only 1: induction m; only 1: intuition).	0.0326211452484	8
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0231101512909	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	3.0.34	synth with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	1.17702388763	3649
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	10	synth with cache (only 1: auto).	0.127006053925	71
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0	synth with cache (only 1: red; only 1: intros y; only 1: intuition).	0.0365312099457	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: Dec.fsetdec).	0.0378699302673	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	0.6.9	synth with cache (only 1: intros H; only 1: compute; only 1: firstorder).	6.51971507072	3162
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	10.0.4	synth with cache (only 1: intros x'; only 1: intros Hxx'; only 1: firstorder).	2.9226500988	1948
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0730309486389	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.8.1	synth with cache (only 1: rewrite <- mem_iff; only 1: rewrite FM.elements_iff; only 1: intuition).	10.1966300011	1926
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0140559673309	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	9	synth with cache (only 1: auto with set).	0.127653121948	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.189269065857	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	14.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.731250047684	366
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0885181427002	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.013699054718	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.5	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0242409706116	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	2.6.2.1	synth with cache (only 1: rewrite mem_iff; only 1: intros; only 1: rewrite H; only 1: intuition).	0.770532846451	417
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.0128879547119	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.023934841156	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0240139961243	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	2.5.0	synth with cache (only 1: apply subset_1; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0892159938812	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	3.2.0	synth with cache (only 1: intros; only 1: rewrite <- equal_iff; only 1: auto with set).	0.0295159816742	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	4.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).	0.0261690616608	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0417230129242	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0143971443176	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	4.0.7.2	synth with cache (only 1: intros; only 1: rewrite <- mem_iff; only 1: apply remove_3 with x; only 1: auto with set).	9.64137291908	1700
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	2.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.176191091537	39
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0428490638733	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	3.3.1.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: apply singleton_1; only 1: intuition).	1.99095606804	514
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	6.0	synth with cache (only 1: rewrite <- equal_iff; only 1: Dec.fsetdec).	0.098827123642	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0178079605103	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0139579772949	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0127120018005	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0133090019226	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set).	0.0139729976654	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.014662027359	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0140650272369	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0124480724335	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: auto with set).	0.0586698055267	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0144557952881	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0152020454407	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0147008895874	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0140860080719	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.012885093689	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.012059211731	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0130310058594	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.150871038437	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0122628211975	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0122179985046	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0323770046234	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0126090049744	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0161101818085	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0132460594177	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0135629177094	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.012974023819	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0186970233917	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	14.0989220142	3778
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	2.2.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	5.45109510422	1622
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0519850254059	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0773451328278	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.232573986053	88
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	0.1.2.15	synth with cache (only 1: intros h; only 1: intros n; only 1: rewrite <- not_mem_iff; only 1: intuition).	6.85555696487	3598
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.1.0.0.5.0.0.0.0.0.0.7.7	synth with cache (only 1: intros a; only 1: intros s'; only 1: rewrite cardinal_fold; only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: intros Hm; only 1: auto).	21.7256140709	11816
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.6.16	synth with cache (only 1: intros H; only 1: intros s'; only 1: auto with set fset).	0.591920852661	487
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	4	synth with cache (only 1: solve_proper).	0.0948569774628	53
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	8.4	synth with cache (only 1: intros; only 1: auto with set).	0.285451889038	159
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0159728527069	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.0.4.17	synth with cache (only 1: intros x; only 1: intros; only 1: f_equal; only 1: auto).	1.43134284019	1161
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.1.0.5.1	synth with cache (only 1: simpl; only 1: intros _tmp_tactician0; only 1: intros l; only 1: intros a0; only 1: eauto with set).	1.03882408142	606
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	3.4.1	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).	0.0694770812988	79
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	3.26.0.1	synth with cache (only 1: intros Eq; only 1: intros s; only 1: fix odd_spec 1; only 1: assumption).	7.75371909142	12989
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.0.1.0.1.1.16	synth with cache (only 1: intros a; only 1: unfold equal; only 1: intros; only 1: destruct eq_dec as [_tmp_tactician0| NEQ]; only 1: intuition; only 1: intuition; only 1: discriminate).	2.02708601952	1630
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.20.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros s'; only 1: fix odd_spec 1; only 1: intuition).	31.5648510456	27265
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.0.2.0.0.0.0.1	synth with cache (only 1: intros s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	0.230097055435	113
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.127	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).	17.6263170242	111754
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	6.0	synth with cache (only 1: intros; only 1: intuition).	0.0549659729004	36
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0391221046448	9
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	31.2033441067	2775
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	1.1.0.0.0.1.0.1.2.2.0	synth with cache (only 1: intros s; only 1: case (M.min_elt s); only 1: unfold For_all; only 1: unfold max_elt; only 1: intros s'; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto; only 1: auto).	22.2610480785	2138
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0226368904114	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0225529670715	5
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0.4	synth with cache (only 1: intros x; only 1: intros y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.103986978531	94
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.1.1.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: intuition; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0519969463348	21
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0238420963287	6
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0237438678741	6
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.0.3	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.681972980499	225
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0248718261719	6
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.1.0.0.0.0.1.1.0	synth with cache (only 1: intros s; only 1: firstorder; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	4.13852119446	1552
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0113251209259	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.12.0.0.14.2	synth with cache (only 1: intros; only 1: intros ?; only 1: intros x'; only 1: intros; only 1: inversion 1; only 1: auto with ordered_type).	39.5075199604	46594
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.0.0.0.1.1.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: unfold compat_bool; only 1: intros f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.874871969223	258
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intros; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.356004953384	10
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0412299633026	7
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.2	synth with cache (only 1: red; only 1: solve_proper).	2.10249495506	280
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	5.0.3.19.0	synth with cache (only 1: split; only 1: fix odd_spec 1; only 1: auto; only 1: intros H; only 1: intuition).	3.71419906616	3166
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.152761936188	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.0.2.0.0	synth with cache (only 1: red; only 1: intros a; only 1: split; only 1: intuition; only 1: intuition).	0.0686159133911	7
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.0781970024109	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.1129322052	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0476460456848	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0740461349487	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0751039981842	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.063404083252	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0491111278534	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0759150981903	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.16	synth with cache (only 1: red; only 1: fsetdec).	1.31421208382	509
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.116656780243	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.108179092407	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0682611465454	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.10	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.708333015442	124
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0864119529724	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	4.1.5	synth with cache (only 1: intuition; only 1: intros g_eq; only 1: fsetdec).	0.30643415451	82
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.111617088318	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.228291034698	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.149584054947	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.171306848526	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.191601037979	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.20014500618	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	12	synth with cache (only 1: fsetdec).	0.184045791626	47
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.394344806671	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.435133934021	44
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.114879131317	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.163331985474	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	1.0	synth with cache (only 1: intros H0; only 1: fsetdec).	0.164975881577	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.230102777481	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	3.9	synth with cache (only 1: intros y; only 1: fsetdec).	0.229017019272	68
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.256594181061	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.438097953796	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.400752067566	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0609509944916	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0572080612183	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0887920856476	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0902888774872	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0878179073334	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.105515003204	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.113715171814	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.106142997742	11
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.111434936523	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.112419843674	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.135048866272	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.142976999283	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.197680950165	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.26381611824	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.27993106842	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.248207092285	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	1.6.0	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.272697925568	11
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0746228694916	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0761549472809	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0657250881195	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0629467964172	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0838990211487	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.100334882736	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.107683181763	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0769040584564	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.17168211937	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.162779092789	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.226276874542	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.199974060059	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.0.0.0.0.1.2.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	1.00900387764	234
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.5.1.8	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: fsetdec).	4.40334701538	1115
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.531406164169	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.46005988121	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.376041889191	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.2.1	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.66302800179	372
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0552320480347	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.2.1.15	synth with cache (only 1: intros l1; only 1: intros s'; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	14.6443488598	9213
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	7.0.2	synth with cache (only 1: intros a; only 1: intros n; only 1: intuition).	0.817706823349	248
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.5	synth with cache (only 1: intros Pstep; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.344754934311	93
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.0.6.2	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: auto with set; only 1: auto with set; only 1: auto with set).	3.26896309853	1507
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.126487016678	22
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0486249923706	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0479731559753	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: intros A; only 1: tauto).	1.14416790009	3
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0	synth with cache (only 1: tauto).	0.606312036514	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	4	synth with cache (only 1: easy).	0.0655558109283	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	0.6.1	synth with cache (only 1: intros y; only 1: intros b; only 1: fsetdec).	0.858403921127	119
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.1.0	synth with cache (only 1: intros s'''; only 1: intros n'; only 1: fsetdec).	0.101456165314	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.2.0.0.4	synth with cache (only 1: intros s2'; only 1: intros n; only 1: intros s'; only 1: intros m; only 1: fsetdec).	0.684283018112	99
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.0.4	synth with cache (only 1: intros; only 1: apply singleton_2; only 1: auto).	0.0458550453186	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1.0.4	synth with cache (only 1: intros a; only 1: intros y; only 1: fsetdec).	0.139343976974	15
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.2.6.2	synth with cache (only 1: intros s'''; only 1: intros b; only 1: intros s''; only 1: fsetdec).	1.53950691223	744
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.101813077927	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.142074108124	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.0.9	synth with cache (only 1: intros n; only 1: intros x; only 1: fsetdec).	1.81097912788	226
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.4.3	synth with cache (only 1: intros H; only 1: intros Hf; only 1: fsetdec).	0.605572938919	78
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.2.3.0	synth with cache (only 1: intros s'; only 1: intros b; only 1: intros a; only 1: fsetdec).	0.312451839447	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.301723957062	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.4.2.3	synth with cache (only 1: intros y; only 1: unfold Subset; only 1: intros m; only 1: firstorder).	0.605208158493	145
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.0.0	synth with cache (only 1: intros Sym2; only 1: intros s2'; only 1: fsetdec).	0.107131004333	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	3.0.2	synth with cache (only 1: intros s; only 1: intros s'; only 1: fsetdec).	0.460638046265	58
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	1.9	synth with cache (only 1: intros _tmp_tactician0; only 1: fsetdec).	0.873276948929	306
Coq.FSets.FMapList.Raw.Elt.empty_1	40	1	synth with cache (only 1: easy).	0.0174889564514	2
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.014771938324	5
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.7.3.0.22	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: easy; only 1: simpl; only 1: easy).	16.1371660233	11382
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.2.3	synth with cache (only 1: intros m; only 1: intros Hm; only 1: auto with ordered_type).	1.15109610558	24
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0172760486603	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	6.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: auto).	0.0898578166962	22
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.0.0.0.1.3.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: destruct a as (x', e'); only 1: simpl; only 1: intros; only 1: inversion H; only 1: inversion_clear H; only 1: auto).	2.03947710991	548
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	6.1.0.0.0.2.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: intuition).	17.8424768448	4932
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0840258598328	8
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40	0.1.22.6.0.3.0	synth with cache (only 1: intros m; only 1: intros sorted; only 1: case m; only 1: intros _tmp_tactician4; only 1: fix even_spec 1; only 1: intros Hm; only 1: auto).	29.4592430592	30874
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.17	synth with cache (only 1: intros H1; only 1: inversion_clear 1).	0.084221124649	145
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0201590061188	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0263741016388	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.4.3	synth with cache (only 1: induction m; only 1: simpl; only 1: auto).	0.0415630340576	19
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: reflexivity).	0.0266878604889	8
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.0.1	synth with cache (only 1: intros m; only 1: fix even_spec 1; only 1: easy).	0.0384960174561	14
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	0.5.18.2	synth with cache (only 1: unfold eq; only 1: fix even_spec 1; only 1: intros H'; only 1: auto).	2.93930912018	2898
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.7	synth with cache (only 1: split; only 1: auto with sets).	0.0363759994507	25
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	4.8	synth with cache (only 1: inversion 1; only 1: auto with sets).	3.80755996704	1857
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.0.6.0	synth with cache (only 1: intros; only 1: intros x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.0523550510406	42
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.15	synth with cache (only 1: left; only 1: assumption).	0.136781930923	195
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.3.0.1.1.8.2	synth with cache (only 1: intros y; only 1: intros H; only 1: intros H2; only 1: induction H2; only 1: intros H2; only 1: induction H2; only 1: auto with sets; only 1: auto with sets).	2.93248701096	3172
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	2.0.0.1.1	synth with cache (only 1: red; only 1: intros y; only 1: intros H2; only 1: apply Acc_intro; only 1: auto with sets).	0.0210001468658	9
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: easy).	0.901068925858	534
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.00956177711	1048
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.56385111809	689
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	1.0.0.5.0.0.2.0.0.2.0.0.2.14	synth with cache (only 1: induction d; only 1: N.bitwise; only 1: trivial; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: simpl; only 1: N.order'; only 1: easy; only 1: easy; only 1: split).	40.0146799088	15009
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	0.0564758777618	5
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0275859832764	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	6.1	synth with cache (only 1: simpl; only 1: trivial).	0.0353810787201	9
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0310041904449	4
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3.1.1	synth with cache (only 1: revert n; only 1: intros a; only 1: split).	0.025563955307	11
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	0.5.0.0.8.1.1	synth with cache (only 1: unfold N.to_uint; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: easy; only 1: unfold Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: trivial).	6.19237685204	3649
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.0.1.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: unfold unorm; only 1: split; only 1: easy; only 1: easy).	11.7066590786	6136
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.3.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: easy).	0.0907728672028	24
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.1.1.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm; only 1: rewrite E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.607444047928	114
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	8.0	synth with cache (only 1: intros m; only 1: split).	0.0270040035248	22
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	3.2.0.8.2.8	synth with cache (only 1: intros x1; only 1: intros y; only 1: compute; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	32.6921210289	31487
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0.1.0	synth with cache (only 1: unfold Z.pred; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl in *; only 1: nzsimpl; only 1: easy).	0.120311975479	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.4.0.1.28.83	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.eq; only 1: simpl; only 1: intros IH; only 1: nzsimpl; only 1: reflexivity).	5.77025985718	15982
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	5.0.143	synth with cache (only 1: compute; only 1: nzsimpl'; only 1: easy).	3.05638718605	11477
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	5	synth with cache (only 1: easy).	0.0244429111481	21
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).	0.0183789730072	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.0.0.0.8	synth with cache (only 1: intros a; only 1: unfold Z.eq; only 1: simpl in *; only 1: nzsimpl; only 1: easy).	0.440198898315	285
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.2.0.0.3	synth with cache (only 1: intros f; only 1: unfold Z.eq; only 1: simpl; only 1: intros n; only 1: nzsimpl; only 1: easy).	1.64415311813	318
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	1.0.3.11	synth with cache (only 1: compute; only 1: intros _tmp_tactician0; only 1: nzsimpl; only 1: easy).	0.868320941925	771
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.1.0.1.0.0	synth with cache (only 1: unfold Z.succ; only 1: unfold Z.eq; only 1: simpl; only 1: intros IH; only 1: intros m; only 1: nzsimpl; only 1: easy).	0.282549142838	26
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0.0.0	synth with cache (only 1: unfold Z.mul; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl; only 1: easy).	0.112200021744	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	7.4	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intuition).	0.316835165024	278
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	4.0.0.4.6	synth with cache (only 1: intros m; only 1: intros q; only 1: unfold Z.lt; only 1: unfold Z.le; only 1: intuition order).	4.71814894676	1862
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_mono; only 1: easy; only 1: easy).	0.0531420707703	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).	0.0576150417328	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).	0.0631539821625	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.0464029312134	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.0.0.0.5.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_lt_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).	1.77338814735	915
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.0.0.0.6.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_le_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).	4.38740515709	2020
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	1.0.2.4.1.1.0	synth with cache (only 1: intros m; only 1: rewrite <- (mul_0_l m)  at 1; only 1: symmetry; only 1: nzsimpl; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_0_l; only 1: easy).	3.00629711151	1505
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	2.0.0.4.1	synth with cache (only 1: intros m; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_opp_r; only 1: nzsimpl; only 1: easy).	0.613466024399	231
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	0.0.0.2.5.1	synth with cache (only 1: intros m; only 1: symmetry; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite <- le_0_sub; only 1: easy).	0.912334918976	460
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	0.1.1.4.1	synth with cache (only 1: intros m; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).	0.416369915009	150
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.1.0.0.0.6	synth with cache (only 1: rewrite succ_lt_mono; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: apply lt_succ_diag_r).	0.312288045883	110
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	0.0.0.0.0.0.0.0.0.0.2.0.1.1	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	15.4956438541	7929
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.0.1.0.3.3	synth with cache (only 1: intros p; only 1: intros; only 1: rewrite (sub_lt_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	4.40943789482	1415
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	0.1.0.0.1.9.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite (add_lt_mono_r _ _ p); only 1: rewrite sub_simpl_r; only 1: rewrite (add_comm m p); only 1: easy).	36.8404800892	13294
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	0.0.1.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite (add_lt_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite (sub_lt_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	1.50361609459	527
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	0.0.1.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite (sub_le_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	2.00237607956	578
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	0.2.0.0.1.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	25.8597838879	12082
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	0.2.0.0.1.1.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	25.0472931862	12813
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.0.9.0.0.1.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite Even_succ; only 1: easy).	9.75557589531	3062
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	1.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite odd_succ; only 1: easy).	0.174270868301	16
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	0.0.8.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: nzsimpl'; only 1: rewrite add_simpl_r; only 1: easy).	11.5519919395	3583
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.3.0.1.0	synth with cache (only 1: intros n; only 1: intros p; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: easy).	0.0842669010162	49
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: easy; only 1: easy).	0.0309000015259	5
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	19.6870679855	5459
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	3.3.0	synth with cache (only 1: destr_bool; only 1: order'; only 1: order').	0.021821975708	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.0.0.1.0.0.0.1.0.0.2.5.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: simpl; only 1: apply le_refl; only 1: simpl; only 1: order').	15.6045339108	12981
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.2.4.3	synth with cache (only 1: intros n; only 1: rewrite testbit_spec'; only 1: f_equiv; only 1: nzsimpl; only 1: easy; only 1: apply le_refl).	3.1529211998	1411
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	0.0.7.1.1.1	synth with cache (only 1: intros Hn; only 1: rewrite lt_nge; only 1: rewrite <- not_false_iff_true; only 1: apply imp_iff_compat_r; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).	2.65813398361	1484
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	0.3.0.0.5.1.4	synth with cache (only 1: intros x; only 1: intros x'; only 1: compute; only 1: intros EQ; only 1: intros m; only 1: f_equiv; only 1: easy).	20.666025877	4119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	0.0.0.0.0.0.4.0.0.0.4	synth with cache (only 1: intros a0; only 1: intros n; only 1: intros Hn; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftr_spec; only 1: rewrite sub_opp_r; only 1: easy; only 1: easy; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	26.3913638592	12821
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.3.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftl_spec; only 1: easy; only 1: trivial; only 1: easy).	3.80520796776	1586
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	0.0.0.1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).	3.07759690285	1562
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	0.0.1.2.0	synth with cache (only 1: intros n; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl'; only 1: easy; only 1: apply le_refl).	0.13868689537	53
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	0.2.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy; only 1: rewrite opp_nonneg_nonpos; only 1: apply le_refl).	0.0937788486481	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	0.0.2.3.3.5	synth with cache (only 1: intros H; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).	38.2515928745	20684
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	0.0.0.0.5.0.3	synth with cache (only 1: intros a0; only 1: rewrite <- shiftl_opp_r; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).	11.9370880127	5183
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.70253896713	674
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.57270383835	639
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.53055596352	594
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.017392873764	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	6.1.1	synth with cache (only 1: intros m; only 1: bitwise; only 1: split).	0.121507167816	86
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0180950164795	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	5.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: easy).	0.127559900284	165
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.8.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	1.50927591324	1785
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0171310901642	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0157549381256	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: unfold setbit; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	31.9917271137	14283
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.12	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	15.8962600231	6745
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	0.2.0.5.0.2.2	synth with cache (only 1: intros; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite clearbit_eqb; only 1: rewrite H; only 1: rewrite andb_true_r; only 1: easy).	19.801721096	12680
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0371661186218	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite <- lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.53076481819	2401
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.103205919266	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	0.0.0.0.1.1.1.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite ldiff_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.69426989555	2566
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	1.0.0.5.0.32	synth with cache (only 1: apply add_move_0_r; only 1: nzsimpl'; only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).	0.724662780762	1114
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	1.0.0.0.1.0.0.1	synth with cache (only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: unfold lnot; only 1: rewrite opp_pred; only 1: rewrite opp_0; only 1: rewrite pred_succ; only 1: easy).	0.258500099182	122
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: easy).	0.0220429897308	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: easy).	0.0241429805756	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: easy).	0.0218548774719	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	0.0.5.1.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: trivial; only 1: easy; only 1: easy).	1.24626803398	919
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: rewrite orb_negb_r; only 1: easy; only 1: easy; only 1: easy).	0.0318820476532	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	0.0.4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: easy; only 1: easy).	0.0791969299316	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: apply andb_negb_r; only 1: trivial).	0.103997945786	44
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.4.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: trivial; only 1: trivial).	0.40180182457	272
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	2.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (lxor_0_r (lnot a)); only 1: rewrite <- lnot_m1; only 1: rewrite lxor_lnot_lnot; only 1: bitwise; only 1: apply xorb_comm).	0.0354080200195	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	0.0.4.6.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: compute; only 1: intros H; only 1: rewrite H; only 1: f_equiv).	6.92396497726	5018
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: rewrite <- shiftl_opp_r; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftl_nonneg; only 1: easy).	0.0929489135742	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	0.0.8.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).	0.711201906204	466
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftr_nonneg; only 1: easy).	0.0246341228485	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	0.0.7.3.1.0.1	synth with cache (only 1: intros ?; only 1: rewrite lt_nge; only 1: unfold lnot; only 1: rewrite <- lt_le_pred; only 1: rewrite opp_pos_neg; only 1: rewrite lt_nge; only 1: easy).	14.2516019344	10436
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	0.0.0.2.1.1.3.0.0.0	synth with cache (only 1: intros a; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite lt_nge; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: split; only 1: order; only 1: intros Ha; only 1: order_pos).	5.40854907036	3760
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	5.1.0.0.5.1.1	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite lt_nge; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: intuition order).	20.0947580338	12018
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	2.0.0.2.0.0.0.0.0.2.2	synth with cache (only 1: intros m; only 1: intros ?; only 1: split; only 1: intros H; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	18.2861349583	10617
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0493860244751	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	2.4.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: rewrite gcd_opp_l; only 1: easy).	18.2452960014	8469
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	0.0.2.1.0.2.0.1.1.1	synth with cache (only 1: intros Hn; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_0_r; only 1: apply divide_abs_l; only 1: easy; only 1: intros; only 1: apply divide_abs_r; only 1: easy).	14.3668351173	8301
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	1.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_0_l_nonneg; only 1: apply abs_nonneg).	0.312634944916	103
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.2.0.1.0.1.1.3.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_r; only 1: easy; only 1: intros; only 1: apply divide_abs_r; only 1: easy).	13.6662290096	7806
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.0.1.4.3.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: rewrite gcd_mul_mono_l; only 1: rewrite mul_comm; only 1: easy; only 1: trivial).	36.1610319614	17379
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	0.1.4.0.1	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_abs_r; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.260658979416	151
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.3.1.0	synth with cache (only 1: unfold lcm; only 1: intros m; only 1: intros p; only 1: apply abs_nonneg).	0.0645060539246	51
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.0.5.10.1	synth with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite gcd_0_l; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: easy; only 1: auto using eq_refl, le_refl).	2.22482395172	1872
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.10303902626	21
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.4.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial).	2.82358503342	1390
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0855441093445	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0240399837494	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros Hp; only 1: intros H; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: easy; only 1: trivial).	0.0360450744629	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0278270244598	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	0.248960018158	61
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.1.1.5.1.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: assert (LE : 0 <= abs n); only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: easy; only 1: easy; only 1: trivial using divide_refl).	34.5844578743	21468
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.1.0.0.0.0.0.1.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy).	26.8588900566	15542
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy; only 1: rewrite max_l; only 1: rewrite max_l; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).	26.7042379379	15410
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy).	9.16184997559	4435
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.0.0.0.2.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial; only 1: rewrite max_l; only 1: rewrite min_l; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial).	36.8624141216	19404
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial).	12.6097679138	7586
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0.0.0.1	synth with cache (only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0539259910583	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	2.4.3	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.247979879379	185
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.5.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0192749500275	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.0.5.0.0.3	synth with cache (only 1: intros AP; only 1: intros m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: rewrite <- lt_succ_r; only 1: easy).	3.91007614136	2466
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	1.3.16	synth with cache (only 1: intros LS; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	8.10047793388	11353
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	1.7.8.0	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: order).	12.8301589489	9582
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0528030395508	20
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.0.9.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	9.08403420448	7066
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.1.0.5.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).	1.6761059761	1323
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	1.0.0.1.4.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: symmetry; only 1: apply lt_succ_r).	25.9017078876	13310
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0240540504456	13
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.700294017792	278
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.4.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	1.46448302269	726
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.0.0.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: rewrite <- lt_pred_le; only 1: easy).	1.27669692039	646
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	1.2.6.2	synth with cache (only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).	1.84841895103	1644
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	2.2.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: easy; only 1: order').	1.55518293381	851
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0475330352783	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.2.2	synth with cache (only 1: intros H2; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.39192199707	155
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0598788261414	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	1.0.2.2.0.0.1	synth with cache (only 1: intros m; only 1: split; only 1: intros EQ; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- EQ; only 1: apply abs_nonneg; only 1: apply abs_neq).	0.902238845825	395
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	0.0.0.8.0.2.0.8.3.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: easy; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	6.76225090027	7653
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	12.0.0	synth with cache (only 1: rewrite abs_eq; only 1: easy; only 1: easy).	1.44392991066	624
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	13.0.5.0.1	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: left; only 1: reflexivity; only 1: auto with relations).	10.7912158966	7736
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.5.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).	0.259047985077	73
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: easy; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	1.01318001747	294
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0414679050446	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: easy; only 1: easy).	0.0293560028076	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.113124132156	10
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	0.0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: intros r; only 1: intros b; only 1: intros _tmp_tactician0; only 1: symmetry; only 1: apply NZQuot.div_unique with r; only 1: destruct _tmp_tactician0 as (Hb, Hr); only 1: trivial; only 1: easy; only 1: intuition; only 1: nzsimpl; only 1: easy).	23.5000870228	12933
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.8.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	3.2363140583	934
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b); only 1: apply quot_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.173764944077	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.032478094101	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).	31.6669681072	12484
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0404291152954	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.0624990463257	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.190212965012	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	0.0.0.0.0.4.9.1.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	35.1821758747	23322
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.728616952896	263
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0338709354401	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0329618453979	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: intuition order; only 1: easy; only 1: nzsimpl; only 1: easy).	11.7570900917	4735
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.512320995331	120
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.615380048752	69
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.165147066116	34
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial; only 1: order).	1.11018490791	321
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: easy; only 1: easy; only 1: order).	0.101688146591	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).	0.0493979454041	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0473928451538	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0507388114929	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.181228160858	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.0.0.0.1.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: easy; only 1: rewrite mul_add_distr_l; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.mod_add; only 1: rewrite add_shuffle0; only 1: rewrite <- div_mod; only 1: rewrite mul_comm; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	34.1532800198	13026
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.3.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	9.58148503304	2882
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.0.0.2.1.1.1.1.2	synth with cache (only 1: intros b; only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite Private_NZDiv.mul_mod_distr_l; only 1: easy; only 1: trivial; only 1: trivial).	22.6097819805	9787
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	1.1.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: apply mod_bound_or; only 1: easy; only 1: easy).	1.07809090614	509
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.0.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros p; only 1: intros Hn; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).	7.6082880497	2523
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.3.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: rewrite (mul_comm a); only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: trivial; only 1: trivial).	10.6579370499	4210
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.2.1.1.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	8.5918340683	2892
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.0.3.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: apply add_mod_idemp_l; only 1: trivial; only 1: trivial).	6.8618311882	2689
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.35326910019	377
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	0.6.0.3.1	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: easy).	14.2992081642	4178
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	0.0.0.0.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: rewrite opp_succ; only 1: rewrite sub_succ_r; only 1: rewrite pred_inj_wd; only 1: easy).	0.0620241165161	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite add_succ_l; only 1: rewrite pred_succ; only 1: easy).	0.0390720367432	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.0.0.1.0.1.0.3.0.1	synth with cache (only 1: intros m; only 1: rewrite <- add_opp_r; only 1: nzinduct m; only 1: rewrite add_0_l; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite opp_succ; only 1: rewrite add_pred_r; only 1: nzsimpl; only 1: easy).	4.27259492874	1825
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.0729570388794	20
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.1.2.1.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: easy).	0.400480985641	117
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.1.0.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: easy).	0.453421115875	93
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.2.0.0.0.0.0.1.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	10.2090198994	5819
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (opp_inj_wd (- n) m); only 1: rewrite opp_involutive; only 1: easy).	0.068647146225	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: easy).	0.106334924698	21
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.3.0.0.2.0.1.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).	33.0613350868	11577
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.2.0.3.1	synth with cache (only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	1.64935493469	682
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: easy).	0.0938658714294	11
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	4.3.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: apply add_shuffle0).	2.6015958786	1208
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	1.3.0.1.0.1.1.0.2.0	synth with cache (only 1: intros n; only 1: intros n'; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: nzsimpl; only 1: rewrite pred_inj_wd; only 1: easy).	11.9197461605	6033
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	0.9.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).	2.56079411507	1880
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	0.6.2.4.1.2.0	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite add_comm; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_0_l; only 1: easy).	10.3616468906	8460
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.0.0.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite add_comm; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.0644011497498	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.0.0.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.283442974091	153
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	0.0.0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).	0.0698549747467	29
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.3.2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite <- add_sub_assoc; only 1: apply add_move_l; only 1: easy).	0.0372371673584	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.0.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_sub_swap; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: easy).	0.0279400348663	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.1.0.0.0.2.0.1	synth with cache (only 1: nzinduct m; only 1: nzsimpl; only 1: apply add_opp_diag_l; only 1: intros m; only 1: rewrite opp_succ; only 1: rewrite sub_succ_r; only 1: rewrite add_pred_l; only 1: rewrite pred_inj_wd; only 1: easy).	4.32090306282	1710
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.0.2.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: easy).	0.0268039703369	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	0.209952831268	48
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	0.0.0.2.3.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: rewrite add_opp_r; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy).	38.5269370079	16066
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (add_comm n m); only 1: apply add_add_simpl_l_l).	0.0315928459167	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	0.0.0.0.0.2.0.0.2.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite (add_comm p n); only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite add_opp_r; only 1: easy).	3.75638604164	1984
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	1.4.0.4.0.0.3.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite add_assoc; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	38.4101529121	18874
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).	1.34658002853	925
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.290853023529	111
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.141601085663	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: order).	0.0426909923553	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.1.0.0.0.0.0.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).	0.839568138123	316
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0199518203735	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0182061195374	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: apply mul_comm).	1.17988801003	564
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: easy; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).	0.689474105835	231
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.427285909653	70
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.14121389389	34
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).	0.0314559936523	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.3.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.791353940964	287
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0382900238037	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.0385000705719	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.1.0.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_always_pos; only 1: easy; only 1: rewrite mul_add_distr_l; only 1: rewrite add_shuffle0; only 1: rewrite <- div_mod; only 1: rewrite mul_comm; only 1: easy; only 1: easy).	26.2755029202	9897
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.4.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: easy; only 1: trivial).	14.5557630062	4058
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.1.2.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite Private_NZDiv.mul_mod_distr_l; only 1: easy; only 1: trivial; only 1: trivial).	11.7764251232	3518
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	1.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: apply mod_always_pos; only 1: easy; only 1: easy).	0.0626611709595	20
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.0.1.1.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hb; only 1: intros Hn; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).	3.59194993973	661
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.3.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: rewrite (mul_comm a); only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: trivial; only 1: trivial).	22.2290668488	5486
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.1.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	32.5498919487	6607
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.1.3.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: apply add_mod_idemp_l; only 1: trivial; only 1: trivial).	5.19788312912	1439
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	6.30503988266	2430
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1.0	synth with cache (only 1: intros x; only 1: BinInt.Z.order).	0.0403029918671	13
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	2.0.4.1.3	synth with cache (only 1: intros A; only 1: intros R; only 1: intros b; only 1: intros x; only 1: firstorder).	1.44877409935	607
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.5.11	synth with cache (only 1: intros IH; only 1: intros y; only 1: intros ?; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	18.2452950478	10495
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	0.34	synth with cache (only 1: fix even_spec 1; only 1: easy).	17.7859258652	12229
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	0.4.19	synth with cache (only 1: intros p; only 1: <Coq.Strings.String.t_eqb>; only 1: discriminate).	6.10355496407	5291
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	4.0.2	synth with cache (only 1: intros; only 1: destruct x; only 1: apply Z.eq_refl).	0.139760017395	31
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: auto).	0.0397040843964	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.2.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: intros p; only 1: easy).	0.0396420955658	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	5.1.1.0.2.1.2	synth with cache (only 1: intros n; only 1: intros h; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: intuition).	7.61579108238	3030
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	5.3.5.1.1.0.0.0.1	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: intros H; only 1: rewrite H; only 1: trivial).	39.7735328674	14130
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	5.2.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: trivial).	5.18614411354	63
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.00992012023926	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	4.1.2.1.2.2.2	synth with cache (only 1: intros n; only 1: intros IH; only 1: induction n; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	10.1273748875	4379
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.17.1	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [e' z]; only 1: simpl; only 1: auto).	13.0587260723	1001
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	1.0.4.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl in *; only 1: trivial).	5.10004091263	63
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: simpl; only 1: auto).	0.0326609611511	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.0.0.1.0.2	synth with cache (only 1: intros Ha; only 1: simpl in *; only 1: intros m; only 1: firstorder; only 1: rewrite H; only 1: trivial).	0.1048848629	29
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	7.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).	0.0248560905457	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	3.0.2	synth with cache (only 1: simpl; only 1: intros ?; only 1: reflexivity).	0.0301380157471	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	3.1.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: auto).	0.0239880084991	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.1.4	synth with cache (only 1: intros l; only 1: destruct l; only 1: compute; only 1: auto).	6.14590597153	37
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	1.2.0.0.1.1.2.2.2	synth with cache (only 1: intros; only 1: destruct z; only 1: apply incr_inv; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: rewrite incr_twice_plus_one; only 1: trivial).	2.93098402023	1146
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.00998020172119	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	1	synth with cache (only 1: reflexivity).	0.00979399681091	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	1	synth with cache (only 1: reflexivity).	0.0119941234589	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	3	synth with cache (only 1: auto).	0.00913500785828	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.00769305229187	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	2.0	synth with cache (only 1: simpl; only 1: trivial).	0.0199010372162	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1	synth with cache (only 1: trivial).	0.0123498439789	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0210371017456	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0164408683777	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.6.1	synth with cache (only 1: intros; only 1: unfold sub31; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.275102853775	119
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0201499462128	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0188670158386	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0888121128082	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0219438076019	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.047042131424	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	2.15	synth with cache (only 1: intros r; only 1: apply Zeq_is_eq_bool).	25.3584401608	8000
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	33.4.0	synth with cache (only 1: red; only 1: apply Pos.le_succ_l; only 1: lia).	6.39251804352	5888
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0692420005798	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0814278125763	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0967569351196	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.3.1.0	synth with cache (only 1: unfold to_Z; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.301504135132	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	6	synth with cache (only 1: auto with zarith).	0.0752038955688	14
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	2.4.0.0	synth with cache (only 1: intros; only 1: unfold to_Z; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0906538963318	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	3.3	synth with cache (only 1: unfold to_Z; only 1: auto with zarith).	0.280366897583	38
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.3.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	0.102329015732	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	0.0.2.1.4.17	synth with cache (only 1: intros H2; only 1: unfold is_zero; only 1: case eqbP; only 1: intros h; only 1: easy; only 1: easy).	39.2530608177	13673
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	synth with cache (only 1: RelationClasses.simpl_relation).	0.0131208896637	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.6.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.0621440410614	9
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: Z.order_nz).	0.0487968921661	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	2	synth with cache (only 1: easy).	0.0428919792175	3
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	1	synth with cache (only 1: easy).	0.0260419845581	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: tauto).	0.0275762081146	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0256550312042	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	343	synth with cache (only 1: congruence).	14.3726789951	73660
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: trivial).	0.0769460201263	5
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0562000274658	4
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.13.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: reflexivity).	2.76187610626	1954
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0431928634644	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.0.0	synth with cache (only 1: intros h; only 1: rewrite (to_Z_inj _ 0 h); only 1: easy).	0.0451080799103	3
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.2.2	synth with cache (only 1: intros EQ; only 1: subst; only 1: split).	0.0476398468018	8
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	1.4.0.9.13.0	synth with cache (only 1: apply to_Z_inj; only 1: pose proof (to_Z_bounded x); only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: trivial).	34.4879891872	13255
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite add_spec in h; only 1: rewrite add_spec in h; only 1: apply eqm_mod in h; only 1: apply eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI; only 1: apply h; only 1: lia).	0.464391946793	98
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	1.6.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).	0.279331922531	48
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.0452008247375	3
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: easy).	0.0259850025177	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.3.2.0.0.4.22	synth with cache (only 1: destruct a; only 1: destruct b; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct b; only 1: intuition; only 1: intuition).	29.7090320587	7048
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0.0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: destruct Z.odd; only 1: easy; only 1: easy).	0.0773968696594	5
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: destruct Z.even; only 1: apply Z.eqb_eq; only 1: constructor; only 1: reflexivity).	0.0650780200958	6
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	1.0.0.0.17.0	synth with cache (only 1: apply bit_ext; only 1: intros Hb; only 1: rewrite land_spec; only 1: unfold bit; only 1: rewrite lsr0; only 1: easy).	5.22805309296	3962
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.2.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: rewrite andb_false_r; only 1: trivial).	0.0680820941925	8
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	3.0.0.3.0	synth with cache (only 1: apply bit_ext; only 1: intros Hn; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: apply orb_false_r).	0.448703050613	140
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	0.5.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_r; only 1: auto).	0.451600790024	114
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	3.0.0.4.1.3	synth with cache (only 1: intros A; only 1: intros R; only 1: intros x; only 1: intros z; only 1: intros B; only 1: firstorder).	5.65255999565	1585
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: auto using eqb_correct, eqb_complete).	0.0745489597321	3
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	8.0.2	synth with cache (only 1: intros x; only 1: intros H; only 1: ring).	1.38452410698	323
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.4.0.0	synth with cache (only 1: intros n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.176267147064	16
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	8.1.0.1.6.3	synth with cache (only 1: intros n; only 1: intros q; only 1: pattern q; only 1: zify; only 1: Morphisms.f_equiv; only 1: ring).	4.49207186699	4097
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.9.7.3	synth with cache (only 1: intros x; only 1: intros m; only 1: rewrite N.eqb_eq; only 1: easy).	8.27012205124	5654
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	4.0.0.2.2.51.127	synth with cache (only 1: compute; only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: intros; only 1: firstorder).	20.2635920048	27656
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.2.0.19	synth with cache (only 1: intros Ha; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).	11.9193139076	3794
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: split).	0.00867199897766	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	6	synth with cache (only 1: easy).	0.011598110199	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.12	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).	0.439049959183	414
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.11.0.11	synth with cache (only 1: intros m; only 1: zify; only 1: Z.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	10.8180811405	6028
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.1.0.4	synth with cache (only 1: intros Q0; only 1: zify; only 1: simpl; only 1: split).	0.0657591819763	36
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.3	synth with cache (only 1: simpl; only 1: auto).	0.0342600345612	5
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: easy).	0.0227570533752	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.024671792984	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.1	synth with cache (only 1: rewrite <- even_equiv; only 1: easy).	0.418148994446	134
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	0.1.2.13.1	synth with cache (only 1: split; only 1: parity_binop; only 1: intros H; only 1: rewrite <- odd_equiv; only 1: easy).	4.41429495811	3753
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	4.8.4	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).	3.16331791878	3662
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.2.7.0	synth with cache (only 1: intros n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.70014500618	612
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	7.0.3.4.0.1.1.1.1	synth with cache (only 1: intros n; only 1: rewrite lt_eq_cases; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: false_hyp H nlt_0_r; only 1: rewrite H; only 1: easy; only 1: intuition).	36.1930282116	35872
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.2.0	synth with cache (only 1: intros n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0199048519135	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.7.1.2	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: right; only 1: apply lt_0_succ).	1.0283100605	990
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	1.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: false_hyp H lt_irrefl; only 1: intros; only 1: rewrite pred_succ; only 1: easy).	0.268342018127	190
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	5.0.0.0.0.0.0.0.1	synth with cache (only 1: cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	3.5918879509	2324
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.1.1.6.0.0.0.0.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).	31.9427390099	24157
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.0.0.3.0.0.0.3.1.1.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: induct n; only 1: intros H; only 1: rewrite pred_0; only 1: easy; only 1: intros n; only 1: intros IH; only 1: rewrite pred_succ; only 1: intros H; only 1: apply lt_succ_l; only 1: easy).	25.1798648834	17888
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.1.0.0.3.0.7.1	synth with cache (only 1: intros z; only 1: intros AP; only 1: intros H; only 1: destruct (lt_exists_pred _ _ H) as (n', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (EQ, LE); only 1: rewrite EQ; only 1: rewrite pred_succ; only 1: easy).	26.6664090157	23047
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.0.0.0.1.0.0.1.3	synth with cache (only 1: intros z; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m; only 1: intros IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	6.16764211655	4004
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.3.0.0.1.0.0.1.1	synth with cache (only 1: intros H1; only 1: intros n; only 1: cases n; only 1: rewrite pred_0; only 1: intros H; only 1: easy; only 1: intros n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	6.04966878891	4387
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.4.0.0.0.0.0.1.0.1.1	synth with cache (only 1: intros H2; only 1: cases ltac:(m); only 1: intros H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_r; only 1: apply le_succ_l; only 1: easy).	19.5809338093	12353
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.2.0.0.0.1.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: cases n; only 1: rewrite pred_0; only 1: intros H2; only 1: apply lt_0_succ; only 1: intros n; only 1: intros IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: order).	7.8951420784	4618
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.0.0.0.0.2.3.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).	10.6633238792	4045
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: nzsimpl; only 1: easy).	0.0465159416199	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.678016901016	313
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.05482006073	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).	0.0507569313049	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0238771438599	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0245289802551	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.1.4.1.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.762587070465	372
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.1.1.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.254576921463	82
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0221741199493	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0207231044769	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: apply mul_comm).	0.512898921967	135
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.116173028946	26
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0388629436493	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.186214923859	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.4.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.116042852402	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: easy).	0.0739078521729	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: easy).	0.58615899086	117
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').	0.0532219409943	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').	0.0551319122314	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	1.0.0.0.0.0.1.3	synth with cache (only 1: intros a; only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	5.5147190094	1756
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.134374141693	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').	3.43012094498	1106
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').	0.911396026611	214
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: easy; only 1: easy).	0.92069196701	275
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.117305040359	32
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').	0.0441770553589	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.4.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_r; only 1: easy; only 1: easy).	0.0910580158234	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0704250335693	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	0.0494260787964	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_r; only 1: easy; only 1: easy).	3.83101582527	1503
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: easy; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: easy).	1.8907418251	552
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: rewrite Hc; only 1: rewrite mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	14.8752319813	6605
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: apply neq_sym; only 1: intros EQ; only 1: pose proof (pred_succ n) as EQ'; only 1: rewrite EQ in EQ'; only 1: rewrite pred_0 in EQ'; only 1: rewrite <- EQ' in EQ; only 1: apply (neq_succ_diag_l 0); only 1: easy).	0.508386135101	213
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: easy; only 1: easy; only 1: intros; only 1: auto; only 1: apply le_0_l).	1.45936894417	426
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.0.7.6.0.11.4.9	synth with cache (only 1: intros n; only 1: cases ltac:(n); only 1: left; only 1: easy; only 1: intros n; only 1: right; only 1: exists n; only 1: easy).	4.81022787094	10978
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.1.0.1.9.1	synth with cache (only 1: cases ltac:(n); only 1: order; only 1: intros H1; only 1: intros H; only 1: rewrite pred_succ; only 1: easy).	2.2307331562	2458
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.0.0.15	synth with cache (only 1: unfold def_add; only 1: intros n; only 1: rewrite recursion_0; only 1: easy).	0.399466991425	675
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	0.0.0.0.1.0.0.1.7.3	synth with cache (only 1: intros n; only 1: intros y; only 1: compute; only 1: intros LT; only 1: f_equiv; only 1: intros Hx; only 1: intros y'; only 1: intros Hm; only 1: intuition; only 1: auto).	20.6719238758	12742
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.0.123	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: easy).	2.02103805542	7957
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.0.3.12	synth with cache (only 1: unfold pow; only 1: intros H; only 1: rewrite recursion_0; only 1: easy).	4.55757689476	1871
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.4.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	1.11127591133	475
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm m p); only 1: rewrite (mul_comm n p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	3.93251299858	2542
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0.0.0.1.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto).	0.0878360271454	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).	5.32092499733	1893
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.1.0.0.2.4.7	synth with cache (only 1: intros a0; only 1: destruct a0; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: nzsimpl; only 1: easy; only 1: order').	1.12640213966	1127
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order').	0.497830867767	90
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.2.2.5.4.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: simpl; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order'; only 1: order_nz).	4.03140997887	2830
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: nzsimpl; only 1: easy).	0.102421045303	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.44794178009	134
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	0.0.0.0.0.0.0.1.0.3.3.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: easy).	28.1771309376	17933
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	0.0.1.0.1.0.0.0.0.4.0.3.0.1	synth with cache (only 1: intros IH; only 1: intros a; only 1: rewrite testbit_eqb; only 1: apply eq_true_iff_eq; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: f_equiv; only 1: rewrite pow_succ_r'; only 1: rewrite <- div_div; only 1: f_equiv; only 1: order_nz; only 1: order_nz).	23.3146078587	8801
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.0254700183868	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.6.3.0.0.5	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros y; only 1: setoid_rewrite Hx; only 1: easy).	38.1257719994	5463
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_spec; only 1: easy; only 1: apply le_0_l).	0.0289969444275	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	0.0.1.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.482177019119	103
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	0.0.2.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec_high'; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.20925283432	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.0711770057678	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.0416140556335	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order_nz).	0.0464260578156	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	1.0.0.1.0.1.5.1.2.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	31.9407060146	15470
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	5.22372412682	1728
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	3.60526895523	1304
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	2.05861210823	609
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	1.2.1.1.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros Ha; only 1: bitwise; only 1: rewrite Ha; only 1: apply xorb_nilpotent).	17.4499821663	12542
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0323641300201	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	8.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.302253961563	150
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.028657913208	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.12.3	synth with cache (only 1: intros H; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.707721948624	883
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0350279808044	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.4.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.046924829483	14
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0327749252319	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	21.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).	12.488132	11427
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	1.1.0.0.1.2.5	synth with cache (only 1: intros a; only 1: intros IH; only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite (pow2_bits_false _ _ H); only 1: apply orb_false_r).	22.3133268356	6798
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	0.2.0.0.2.2.1	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: rewrite andb_true_r; only 1: easy).	7.33190488815	2854
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).	0.0899398326874	23
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lor_spec; only 1: easy).	0.0475988388062	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	0.0.4.2.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite ldiff_spec; only 1: easy).	19.5014669895	6134
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.7.0.0.1.5	synth with cache (only 1: intros a; only 1: bitwise; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite bits_0; only 1: apply xorb_false_r).	1.81508302689	1379
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	1.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0295178890228	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.4.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: unfold lnot; only 1: bitwise; only 1: destruct a.[m]; only 1: easy; only 1: easy).	2.54190015793	1340
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.2.1.1.4	synth with cache (only 1: intros x; only 1: intros a; only 1: intros b; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	11.5605461597	5404
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	1.0.0.0.0.0.0.1.2.1	synth with cache (only 1: intros n; only 1: intros a; only 1: intros b; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: rewrite odd_add; only 1: easy).	4.62413716316	2803
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.1.0.0.0.1.0.0.0.14	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_0; only 1: easy; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	1.13197803497	1284
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	3.6.0.1	synth with cache (only 1: intros a; only 1: apply sqrt_spec; only 1: rewrite <- lt_succ_r; only 1: apply lt_0_succ).	0.410111188889	386
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	7.1.0	synth with cache (only 1: intros Ha; only 1: apply sqrt_square; only 1: apply le_0_l).	0.5363509655	332
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	1.2.0.0.0.3.1.0.4	synth with cache (only 1: intros H; only 1: intros n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intros ?; only 1: rewrite succ_inj_wd; only 1: nzsimpl; only 1: easy).	16.7703790665	11072
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	1.0.0.0.0.1.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: nzsimpl; only 1: easy).	11.7066569328	6613
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.5.2.0.0.0.0.1.1	synth with cache (only 1: intros IH; only 1: intros n; only 1: cases n; only 1: intros H; only 1: elim H; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy).	31.1939790249	14801
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros; only 1: rewrite pred_succ; only 1: rewrite even_succ; only 1: easy).	0.192244052887	13
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.3.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite odd_succ; only 1: trivial; only 1: trivial).	2.68566012383	828
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	1.3.0.1.2.2.1.0.2	synth with cache (only 1: intros Ha; only 1: induct ltac:(m); only 1: nzsimpl; only 1: apply le_refl; only 1: intros n; only 1: nzsimpl; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).	21.7678620815	13242
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.0.1.1.0.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: apply le_0_l).	0.0513110160828	18
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: apply le_0_l; only 1: easy).	0.0496890544891	12
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.0358159542084	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros Ha; only 1: destruct (lt_trichotomy a 0) as [LT| _tmp_tactician0]; only 1: rewrite pow_neg_r; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [EQ| GT]; only 1: order; only 1: apply pow_0_l; only 1: easy).	0.801568984985	434
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	2.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: apply le_0_l).	0.0343391895294	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	0.1.0.7.4.0.0	synth with cache (only 1: intros a; only 1: intros Hb; only 1: intros p; only 1: rewrite pow_add_r; only 1: easy; only 1: apply le_0_l; only 1: apply le_0_l).	12.2103610039	7213
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	2.4.3.1.3	synth with cache (only 1: intros c; only 1: intros m; only 1: intros; only 1: rewrite pow_mul_l; only 1: easy).	13.3716609478	6788
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.5.0.1.0.1	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Ha; only 1: intros LE; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	14.3072021008	8301
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: easy; only 1: order').	0.118839979172	12
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.255589962006	91
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy).	30.689677	12478
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: easy; only 1: apply mul_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: easy; only 1: apply mul_le_mono_r; only 1: easy).	27.3210070133	11566
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	0.0.0.0.1.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial).	21.3100979328	12699
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	4.0	synth with cache (only 1: symmetry; only 1: eauto).	0.0217349529266	6
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m; only 1: intros Hm; only 1: destruct (nlt_0_r _ Hm)).	0.686789035797	164
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.0221769809723	12
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	5.8.0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: apply divide_antisym; only 1: apply divide_0_r; only 1: apply divide_lcm_l).	3.03805994987	2407
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0622580051422	23
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.1.1.1.5	synth with cache (only 1: intros p; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	5.90976905823	3621
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.1.1.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.584321975708	236
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.3.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.478849172592	267
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.0.1.1.2.0.0.1	synth with cache (only 1: intros c; only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: apply divide_refl; only 1: trivial).	1.84807705879	1069
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	0.0.0.0.0.3.1.3.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite add_comm; only 1: intros LT; only 1: rewrite (add_lt_mono_r _ _ p) in LT; only 1: apply le_lt_trans with (n - p + p); only 1: auto using sub_add_le; only 1: auto using sub_add_le).	24.6801350117	12391
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	0.3.3.2.0	synth with cache (only 1: intros n; only 1: intros; only 1: rewrite (add_le_mono_r _ _ p); only 1: rewrite H; only 1: auto using sub_add_le).	10.7270109653	3024
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	0.6.4.0.1.1.0.4	synth with cache (only 1: revert d'; only 1: intros p; only 1: intros; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: unfold Z.to_int; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: rewrite H; only 1: easy).	7.76088094711	5649
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.0.7.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.541867017746	451
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.1.0.0.0.0.1.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: easy; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: nzsimpl'; only 1: easy).	2.58792996407	1212
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.0.0.0.1.12	synth with cache (only 1: intros H1; only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	6.7361471653	6244
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.4.1.2.1.0.0.1	synth with cache (only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: apply le_le_succ_r; only 1: apply sqrt_nonneg; only 1: order).	7.03442192078	6718
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0167629718781	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.0.0.0.0.9	synth with cache (only 1: nzsimpl'; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: f_equiv; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: apply sqrt_square; only 1: easy; only 1: apply lt_succ_diag_r).	0.415250062943	383
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.5.0.0	synth with cache (only 1: intros m; only 1: intros Hb; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition order; only 1: nzsimpl; only 1: order).	1.15491700172	901
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: easy).	0.261147975922	92
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).	1.32594609261	701
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.0.1.6.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: symmetry; only 1: apply div_unique_exact; only 1: easy; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: easy).	2.48729109764	1144
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	6.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.85400891304	586
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.119292974472	55
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.0847568511963	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.07182097435	3
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.6.0.0.1.0.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	13.9740638733	7555
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.120729923248	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	2.41220808029	799
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.884179830551	240
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.0453038215637	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	4.11.4.16	synth with cache (only 1: intros R'; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).	20.5118288994	21540
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	1.0.14.2.0	synth with cache (only 1: intros n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply le_refl).	2.37126088142	3387
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.0.0.1.0	synth with cache (only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: easy).	0.0230128765106	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.0.1.0.0.6.0.0.0.5.0.18	synth with cache (only 1: split; only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).	14.3815100193	12200
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.023472070694	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	6.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0212061405182	16
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0212020874023	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0239360332489	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	3.1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H1; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0457971096039	18
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0237448215485	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	8.0	synth with cache (only 1: intros x; only 1: order).	0.198040962219	99
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	4.0	synth with cache (only 1: intros x; only 1: order).	0.179173946381	94
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	synth with cache (only 1: order).	0.263545036316	121
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.0.1.2.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	1.39679098129	430
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.0.3.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: apply le_succ_l; only 1: apply lt_le_incl; only 1: easy).	0.0218029022217	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.5.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LE; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: easy).	1.77310395241	1297
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	1.4.0.0.1	synth with cache (only 1: intros x; only 1: intros m; only 1: intros LE; only 1: rewrite lt_succ_r; only 1: order).	0.694465875626	490
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	1.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.439560890198	203
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0162200927734	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.0351920127869	17
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.0.0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.0246140956879	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.0.6.4.6	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	10.1428849697	10672
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0836989879608	45
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.2.6.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	1.34728002548	826
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.0.3.0.1.0	synth with cache (only 1: intros n; only 1: intros m; only 1: symmetry; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.142668008804	80
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0110700130463	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	1.5.0.6.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: easy; only 1: right; only 1: intuition order).	36.0244979858	15943
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.195173978806	60
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0112159252167	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0109000205994	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.0.0.1.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: order; only 1: destruct _tmp_tactician0 as [| ]; only 1: left; only 1: order; only 1: right; only 1: order).	10.4704129696	6240
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.196391820908	66
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: split; only 1: intros H; only 1: apply le_succ_l; only 1: order; only 1: intros H1; only 1: rewrite lt_succ_r; only 1: order).	0.673268079758	319
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	2.1.4.0.2.0.0.2.6	synth with cache (only 1: intros x; only 1: intros Ha; only 1: intros H; only 1: intros H2; only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	27.9754269123	21562
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	1	synth with cache (only 1: easy).	0.0080771446228	2
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0118958950043	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.3.1.0.0.6.0.3.0	synth with cache (only 1: unfold ofnat; only 1: simpl; only 1: intros n; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: rewrite lt_succ_r; only 1: simpl; only 1: apply lt_le_incl; only 1: easy).	10.8073728085	9488
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	0.4.1.13	synth with cache (only 1: fix gcd_divide 1; only 1: intros x; only 1: simpl; only 1: easy).	3.30962896347	4000
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	0.6.1.6	synth with cache (only 1: intros m; only 1: simpl; only 1: fix le_div2 1; only 1: easy).	2.67657589912	1853
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	2.0.0.3	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy; only 1: easy).	0.174097061157	60
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.1.0.3.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: easy; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0953919887543	24
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	0.2.1.15.4.2.6	synth with cache (only 1: intros y; only 1: symmetry; only 1: destruct H; only 1: rewrite H; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r in H; only 1: easy).	26.5195400715	24189
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.4.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (q, Hq); only 1: exists q; only 1: rewrite Hq; only 1: rewrite mul_assoc; only 1: easy).	6.54467201233	3609
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	2.1.6.0	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: easy).	0.512799978256	475
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.1.2.6.1	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: rewrite mul_comm; only 1: apply divide_mul_l; only 1: apply divide_refl).	1.67454910278	1586
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	0.0.0.2.0.4.0.0.1.6	synth with cache (only 1: intros y; only 1: intros n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: apply gcd_greatest; only 1: easy; only 1: easy).	24.1186971664	22325
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.1.1.0.1.0.0.0.0	synth with cache (only 1: intros p; only 1: intros Hp; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: rewrite mul_0_l; only 1: easy; only 1: easy; only 1: trivial).	1.42711400986	1008
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0225570201874	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.3.0.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply divide_refl; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial).	4.15232491493	3264
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0290319919586	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0202260017395	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.3.0.3.0.2.0.1.1.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: easy; only 1: trivial using gcd_divide_r).	28.9043281078	19557
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.1.0.2.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: easy; only 1: trivial using divide_refl; only 1: apply divide_mul_l; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	8.5559489727	5593
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite le_succ_l; only 1: easy; only 1: order').	0.121044874191	9
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	11.0156798363	3125
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.0188279151917	4
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	0.1.3.14.1.16	synth with cache (only 1: nzsimpl'; only 1: rewrite odd_spec; only 1: unfold Odd; only 1: exists 0; only 1: nzsimpl'; only 1: easy).	3.91746211052	4444
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	0.0.0.23.1	synth with cache (only 1: intros; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: apply Odd_succ).	35.27064991	31013
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	0.0.0.0.4.7	synth with cache (only 1: intros p; only 1: rewrite Odd_succ; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).	3.04137802124	2029
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: rewrite Even_succ; only 1: apply Odd_succ).	0.239294052124	54
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.0219750404358	6
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros Hm; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite Hm; only 1: destruct (even n); only 1: easy; only 1: easy).	1.28279590607	599
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.0.0.12.0.5.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: f_equiv; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	35.1756291389	20859
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).	0.14409995079	10
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	0.140880823135	10
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	0.0.0.0.0.0.0.1.4.2.1	synth with cache (only 1: intros m; only 1: intros x; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_mono_l; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).	36.0426619053	24755
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.0532698631287	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.0500428676605	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.0.0.0.0.15.1	synth with cache (only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: easy).	1.15353512764	1411
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).	0.721210002899	160
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	1.0.2.0.0.2.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).	18.1415030956	5890
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	0.0.1.0.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intros n; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).	28.6715149879	7687
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: nzsimpl'; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.0680499076843	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.0445029735565	3
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).	5.70128011703	1557
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	0.1.0.2.2.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: easy).	6.00822997093	2235
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	0.1.1.3.0.0.2.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: rewrite mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: easy).	22.928016901	9003
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	0.0.3.3.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (mul_comm m); only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: easy).	4.86905789375	1167
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.6.0.3	synth with cache (only 1: apply log2_unique; only 1: easy; only 1: nzsimpl; only 1: split; only 1: easy; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: easy).	1.35019087791	1215
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.1.0.1.0.0.1.0.1.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: order'; only 1: split; only 1: easy; only 1: nzsimpl; only 1: apply lt_0_2; only 1: nzsimpl; only 1: easy).	3.64270305634	2196
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.366060972214	135
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.2.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order_pos; only 1: order).	1.15832090378	797
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order_pos; only 1: order).	0.249352931976	153
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0	synth with cache (only 1: rewrite log2_up_eqn0; only 1: easy; only 1: order).	0.0131728649139	3
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.1.1.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order'; only 1: nzsimpl'; only 1: apply lt_succ_diag_r; only 1: order).	4.69909787178	2291
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).	0.0127580165863	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	17	synth with cache (only 1: intuition).	0.365880966187	531
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).	0.520505905151	365
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	2.0.0.1.0.1.0.2	synth with cache (only 1: intros m; only 1: intros n2; only 1: f_equiv; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: f_equiv; only 1: easy).	2.12630105019	1764
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_neg_r; only 1: easy; only 1: easy).	0.100467920303	17
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_pos_r; only 1: easy; only 1: easy).	0.0496881008148	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	0.0.6.1.1	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	14.1107609272	4014
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0425429344177	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	1.1.1.1.2.0.0.2.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H3; only 1: intros H4; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	14.1090118885	10954
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.04114985466	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0169508457184	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: easy).	0.0283579826355	11
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0146279335022	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0169100761414	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.484372138977	191
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite P.le_lteq; only 1: intuition).	0.0319831371307	5
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1.2.0.0.1	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: trivial).	0.590714931488	225
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2	synth with cache (only 1: Nat.order).	0.654581069946	235
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	4.2.1.1	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LT; only 1: Nat.order).	0.996627092361	361
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0241839885712	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0128428936005	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	1.5.6.1.5	synth with cache (only 1: intros; only 1: intros _tmp_tactician0; only 1: contradict H; only 1: destruct _tmp_tactician0 as []; only 1: apply StrictOrder_Irreflexive).	15.3758001328	9597
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	2.4	synth with cache (only 1: intros l'; only 1: easy).	0.019387960434	8
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	0	synth with cache (only 1: firstorder).	0.0118029117584	1
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	2.13.0	synth with cache (only 1: intros _tmp_tactician2; only 1: fix le_div2 1; only 1: auto).	0.734934806824	1080
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	1.3.5.1	synth with cache (only 1: intros Hp1; only 1: fix sqrtrem_spec 1; only 1: intros Exx'; only 1: easy).	0.675046205521	338
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0173268318176	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.1.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct 1; only 1: auto; only 1: auto; only 1: compute; only 1: intros z; only 1: eauto).	0.0217781066895	9
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.5	synth with cache (only 1: intros p; only 1: easy).	0.0423030853271	32
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0149049758911	5
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	0.10.13.4	synth with cache (only 1: intros H; only 1: unfold not; only 1: fix even_spec 1; only 1: easy).	8.45036315918	8085
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	0.0.2.1.0.0.1.26	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x; only 1: intros B; only 1: intros x'; only 1: intros Hxx'; only 1: eauto).	1.6033141613	1117
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	4.0.1.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: easy).	0.103685855865	20
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.1.7	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.11438703537	63
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0181159973145	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0180971622467	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0173809528351	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0140550136566	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.016932964325	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0146541595459	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0162239074707	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	7.0	synth with cache (only 1: intros Hx; only 1: intuition).	0.0287420749664	13
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.0151929855347	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	9	synth with cache (only 1: order).	0.138767957687	61
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0168309211731	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0167980194092	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.015506029129	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.837965011597	346
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.3.0	synth with cache (only 1: intros l; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.150870084763	51
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	0.0.0.2.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	1.69682312012	633
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	0.1.4.0.0.1.14	synth with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto with ordered_type).	21.6935751438	20110
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.0.0.0.2.0.1.4.3.0.6	synth with cache (only 1: intros n; only 1: intros m; only 1: intros IH; only 1: destruct n; only 1: intros; only 1: auto; only 1: intros q; only 1: intros H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	31.7929670811	29112
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.1.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros l1; only 1: intuition).	0.0648598670959	11
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	1.12	synth with cache (only 1: apply InA_InfA; only 1: auto with *).	1.27376794815	856
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: easy).	0.0198798179626	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0134980678558	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0127348899841	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.0	synth with cache (only 1: intros l'; only 1: auto with ordered_type).	0.0161781311035	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0123240947723	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk; only 1: intuition).	0.0212099552155	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.1.0.4.6	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros H; only 1: induction H; only 1: easy).	0.758898019791	381
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.0.3.0.5	synth with cache (only 1: intros n; only 1: unfold eqk; only 1: intros x; only 1: intros z; only 1: order).	1.70405387878	832
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0174200534821	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2.11	synth with cache (only 1: intros a; only 1: eauto with ordered_type).	0.588871002197	272
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.1	synth with cache (only 1: unfold ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	0.0448920726776	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.13.5.2.0.12.13	synth with cache (only 1: constructor; only 1: firstorder; only 1: unfold eqk; only 1: auto with ordered_type; only 1: intros f; only 1: intros j; only 1: eauto with ordered_type).	17.710488081	14530
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0985119342804	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.108430147171	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0153410434723	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0155200958252	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	2.2.1.2.7	synth with cache (only 1: induction 1; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).	1.19431018829	675
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	2.2.0.1.5.0.2.0.7	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician2; only 1: intros l'; only 1: intros H; only 1: destruct l; only 1: intros Hll'; only 1: intuition; only 1: rewrite H; only 1: easy).	34.4197361469	24634
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	8.6.0.2.9	synth with cache (only 1: simple induction l; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	39.2942569256	26089
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.1.5.0.3.7.2	synth with cache (only 1: intros x; only 1: intros a; only 1: intros _tmp_tactician2; only 1: intros _tmp_tactician0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	38.7462248802	17189
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	0.3.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).	26.9287860394	7785
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.0.3.1.0.4	synth with cache (only 1: intros l'; only 1: inversion 1; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	1.21266889572	525
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.0.1.2.0.6	synth with cache (only 1: intros _tmp_tactician10; only 1: unfold eqke; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).	2.37754893303	902
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0259130001068	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: easy; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intros H; only 1: split; only 1: easy; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intros H; only 1: split; only 1: easy; only 1: easy).	38.8443908691	14966
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	16.4146699905	6739
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	21.0349390507	10047
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.0100409984589	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.1	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.014496088028	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	8.1.6	synth with cache (only 1: red; only 1: intros y; only 1: order).	0.908476829529	1212
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.4.16	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).	5.31233215332	6737
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.00985908508301	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.5.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.642338037491	256
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0325381755829	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0146927833557	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0169680118561	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.1.2.0	synth with cache (only 1: intros H; only 1: intros EQ; only 1: contradict ltac:(H); only 1: order).	0.0177609920502	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0153608322144	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0142819881439	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.84795188904	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0084400177002	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.00838589668274	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0081639289856	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0756328105927	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0846800804138	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.00905990600586	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.00950598716736	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0093469619751	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.00817894935608	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intros H; only 1: order).	0.0116720199585	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0102760791779	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.00999212265015	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.01043009758	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0092761516571	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	2.2.0.1.0.1.0.1.0.4.2	synth with cache (only 1: split; only 1: intros EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).	11.4250018597	9381
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0.0	synth with cache (only 1: intros H; only 1: apply compare_eq_iff; only 1: easy).	0.0117290019989	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.00928688049316	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0173690319061	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).	0.0250179767609	9
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	1.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: easy).	27.7626609802	14561
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.2.0.5	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	2.36935806274	1259
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.0.0.0.1.4	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.422940969467	263
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.17.2	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: apply imp_iff_compat_r; only 1: apply ltb_lt).	4.11707401276	3306
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.0.0.3.1	synth with cache (only 1: symmetry; only 1: rewrite <- not_true_iff_false; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite ltb_lt; only 1: easy).	0.06316614151	25
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.0.3.0	synth with cache (only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy).	0.0204629898071	7
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.1.3.0.0.1.0.11	synth with cache (only 1: case ltb_spec0; only 1: rewrite leb_nle; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).	9.35197997093	5844
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.0.0.1	synth with cache (only 1: rewrite ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0141937732697	5
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	0.1.0.0.7.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	1.23668003082	812
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	0.0.0.0.3.4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.370680093765	279
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.2.0.0.0.4.11.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).	3.85191679001	3813
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.1	synth with cache (only 1: induction 1; only 1: intros; only 1: auto).	0.166736125946	97
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.1.1.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst a; only 1: eapply InA_cons_hd; only 1: intuition).	0.953012943268	578
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.4.3.5.3.4	synth with cache (only 1: intros Q; only 1: intros _tmp_tactician0; only 1: intros l; only 1: intros H; only 1: rewrite <- H; only 1: easy).	11.2861390114	8083
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.1.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: easy; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0413949489594	9
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.1.1.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: intros H; only 1: intuition).	0.0317859649658	9
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	5.18	synth with cache (only 1: fix gcd_greatest 1; only 1: eauto).	24.0285959244	13498
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	2.1.1.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: solve_proper).	0.0632140636444	14
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	5.1	synth with cache (only 1: unfold ltk; only 1: solve_proper).	0.95799612999	21
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.0	synth with cache (only 1: reduce; only 1: intuition).	0.0162289142609	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.0	synth with cache (only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0915539264679	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.4.3.0.0.10.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction l; only 1: intros Hl; only 1: firstorder; only 1: intropattern subst <- _tmp_tactician0; only 1: intros _tmp_tactician0; only 1: firstorder).	15.0858840942	8236
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.1.5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).	0.889230966568	228
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	0.0.0.0.8.0.4.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	10.8065731525	3810
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2.5.4	synth with cache (only 1: intros x; only 1: intros _tmp_tactician0; only 1: firstorder).	0.592792987823	336
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	1	synth with cache (only 1: trivial).	0.00949597358704	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	synth with cache (only 1: split).	0.0115120410919	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	19.8	synth with cache (only 1: intuition; only 1: apply H).	0.553827047348	947
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	15	synth with cache (only 1: firstorder  (subst; auto)).	0.175963878632	225
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: firstorder).	0.012090921402	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: reflexivity).	0.0105500221252	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.011442899704	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.2.0.1	synth with cache (only 1: rewrite InA_alt; only 1: intros _tmp_tactician0; only 1: rewrite InA_alt; only 1: destruct _tmp_tactician0 as (y, H); only 1: firstorder).	0.0508079528809	11
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	6.3.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	1.29291605949	603
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.0.4.1.0.9	synth with cache (only 1: red; only 1: rewrite In_alt; only 1: split; only 1: firstorder; only 1: easy; only 1: easy).	1.91479897499	1652
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	5.0.7.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: intros l'; only 1: auto).	10.4373679161	5341
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	2.0.2.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros l'; only 1: intropattern subst <- _tmp_tactician0; only 1: unfold In; only 1: unfold MapsTo; only 1: intuition).	0.0501179695129	16
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	1.1.1.1.0.0	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: inversion 1; only 1: setoid_rewrite Exists_exists; only 1: firstorder; only 1: auto).	0.061970949173	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	10.0.11.0	synth with cache (only 1: firstorder; only 1: intuition; only 1: rewrite InA_cons in H; only 1: intuition).	9.90224099159	5797
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.2.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).	0.595033168793	141
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	0.4.19	synth with cache (only 1: fix gcd_divide 1; only 1: intros ?; only 1: easy).	4.62037777901	4483
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	3.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: firstorder).	0.0302178859711	23
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	1	synth with cache (only 1: auto).	0.00779700279236	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.00787687301636	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	1.0	synth with cache (only 1: unfold eqk; only 1: auto).	0.0106410980225	3
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	6.2	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0970079898834	31
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.0.6.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros Hxy; only 1: eauto).	0.288366794586	132
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	1.3.7.0.0.4	synth with cache (only 1: split; only 1: easy; only 1: auto; only 1: intros Eq; only 1: intros P; only 1: eauto).	2.72331190109	1180
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0287289619446	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	3.3.1.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: left; only 1: intuition; only 1: auto).	2.06517291069	1446
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	1.5.0.1.2.2	synth with cache (only 1: intros ?; only 1: intros x; only 1: intros z; only 1: intuition; only 1: rewrite <- H; only 1: auto).	2.21201109886	1683
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	3.27	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	27.2519190311	26343
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.1.2.7.4.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: induction l; only 1: intuition; only 1: auto using eqke_equiv; only 1: auto using eqke_equiv).	3.92355799675	2531
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	3.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: auto).	0.120230913162	53
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	20	synth with cache (only 1: intuition).	0.363270998001	186
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.0.3.7	synth with cache (only 1: intros n; only 1: unfold eq; only 1: intros y; only 1: decide equality).	1.67693710327	645
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x; only 1: intros y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	35.4974138737	9377
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min; only 1: unfold gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0308198928833	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: easy; only 1: apply max_l; only 1: easy).	8.16125416756	5902
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	5.1	synth with cache (only 1: apply max_r; only 1: order).	0.0123109817505	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.6.0.4.0.1.0.2.4	synth with cache (only 1: destruct (max_spec m n) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: apply max_l; only 1: order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: apply max_r; only 1: order).	9.06134700775	7585
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.3.1.7	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.716108798981	533
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0106937885284	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2.2.0.8.1	synth with cache (only 1: split; only 1: revert m; only 1: intros y; only 1: solve_max; only 1: apply max_l).	2.24780893326	1841
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	synth with cache (only 1: solve_max).	0.0318760871887	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	6.98243618011	4639
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0559229850769	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0227799415588	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0112478733063	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.024120092392	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0505628585815	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.012934923172	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.0433959960938	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0232272148132	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.039458990097	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: apply min_r; only 1: order).	9.77806901932	5431
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.00792503356934	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.8.9	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).	7.82339596748	6891
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.010057926178	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: easy).	0.253690004349	188
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0335638523102	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	8.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	5.82655906677	3977
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.73682594299	803
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.2.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0246179103851	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0116970539093	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.026731967926	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0620331764221	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0124049186707	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.045783996582	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0211589336395	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.1.0.0.0.0	synth with cache (only 1: intros Hnm; only 1: intros Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0337429046631	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_l; only 1: solve_min).	0.0292899608612	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.9	synth with cache (only 1: apply min_l; only 1: solve_max).	0.118441104889	84
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.2.2.0.0.0.0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: revert m; only 1: intros; only 1: auto with relations).	16.6883180141	17899
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.1.0.5.0.5.0	synth with cache (only 1: intros Compat; only 1: intros x; only 1: intros Hl; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	17.0576810837	18876
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0117437839508	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0153741836548	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.10.0.1	synth with cache (only 1: intros Compat; only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	3.89787387848	4212
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0118489265442	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0149190425873	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	6.0.6.0.5.0.3	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros; only 1: red; only 1: unfold eq; only 1: rewrite H; only 1: easy).	37.3255488873	39649
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	5.15.6.3.0	synth with cache (only 1: unfold eq; only 1: intros H; only 1: intros m; only 1: rewrite compare_sym; only 1: decide equality).	22.0870859623	32557
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.3.1	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	0.0447700023651	8
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	0.0714998245239	6
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.024395942688	1
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: reflexivity).	0.0248560905457	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	0.069314956665	7
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.4.13	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	1.43818998337	558
Coq.ZArith.Znat.Z_nat_N	40	0.4.0.24	synth with cache (only 1: destruct n; only 1: easy; only 1: Nat2N.nat2N; only 1: easy).	1.83070707321	668
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.2.18	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).	1.10666513443	266
Coq.ZArith.Znat.Zabs_nat_N	40	2.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).	0.0653510093689	9
Coq.ZArith.Znat.N2Z.id	40	0.3.0	synth with cache (only 1: destruct n; only 1: easy; only 1: trivial).	0.0616528987885	6
Coq.ZArith.Znat.N2Z.inj	40	1.0.3.0.3.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: N.order'; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).	4.49259495735	1665
Coq.ZArith.Znat.N2Z.inj_iff	40	0.1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: Morphisms.f_equiv; only 1: N.order).	4.67518210411	988
Coq.ZArith.Znat.N2Z.is_nonneg	40	3.1.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy).	0.159087896347	8
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.134873867035	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0242500305176	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.2.0.0.1.1.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	2.1155500412	470
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40	0.2.8	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: reflexivity).	3.21700406075	935
Coq.ZArith.Znat.N2Z.inj_ge	40	1.0.0.0.1.9.8.0	synth with cache (only 1: unfold N.ge; only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	31.877715826	12352
Coq.ZArith.Znat.N2Z.inj_gt	40	0.5.10.21	synth with cache (only 1: revert n m; only 1: intros IH; only 1: fix odd_spec 1; only 1: easy).	22.4333040714	12634
Coq.ZArith.Znat.N2Z.inj_abs_N	40	5.2.0.114.21	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy; only 1: easy; only 1: trivial).	18.6879050732	46630
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial).	0.0629451274872	9
Coq.ZArith.Znat.N2Z.inj_mul	40	0.0.0.0.7.0	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: reflexivity; only 1: destruct m; only 1: easy; only 1: easy).	1.53971505165	206
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40
Coq.ZArith.Znat.N2Z.inj_pred_max	40
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.2.5.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	4.47999501228	2092
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.19.3.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	3.85038399696	3536
Coq.ZArith.Znat.N2Z.inj_quot2	40	0.0.0.1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0582938194275	7
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a]; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	6.24777698517	2533
Coq.ZArith.Znat.Z2N.id	40	0.1.0.0.0.0	synth with cache (only 1: intros Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct Hn; only 1: easy).	0.0547118186951	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0295989513397	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.0533871650696	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.031898021698	2
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	0.2.0.0.0.0.1.3.0	synth with cache (only 1: destruct n; only 1: intros Hm; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	20.3960478306	4789
Coq.ZArith.Znat.Z2N.inj_succ	40	0.1.1.0.2.2.1.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: rewrite Pos.add_1_r; only 1: trivial; only 1: destruct 1; only 1: easy).	6.54021000862	2562
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: trivial).	0.97937297821	176
Coq.ZArith.Znat.Z2N.inj_compare	40	0.1.0.0.1.1.0.0.0.0.2.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: easy; only 1: intros; only 1: destruct m as [| m| m]; only 1: trivial; only 1: simpl; only 1: easy; only 1: trivial; only 1: easy).	12.3441669941	3689
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1.0.2.2.6.3.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: easy; only 1: easy; only 1: reflexivity; only 1: trivial).	4.16693902016	2361
Coq.ZArith.Znat.Z2N.inj_quot2	40
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0521109104156	6
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	0.0573937892914	8
Coq.ZArith.Znat.Zabs2N.id_abs	40	0.0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0477271080017	6
Coq.ZArith.Znat.Zabs2N.id	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).	0.0417718887329	4
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0324058532715	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0279779434204	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0217790603638	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.1.1	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.122920036316	8
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.1.1.0.2.8.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: rewrite Pos.add_1_r; only 1: trivial; only 1: destruct 1; only 1: easy).	8.38076496124	3378
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.2.0.1.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct 1; only 1: easy).	10.7966270447	2230
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.1.0.0.3.2.1	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	6.56787204742	2322
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0819008350372	8
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0836088657379	8
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.1.2.0.1.2.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	8.37004709244	4066
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	1.50001311302	445
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: easy).	0.0200901031494	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.2.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0359721183777	5
Coq.ZArith.Znat.Nat2Z.id	40	5.0.0.21	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	3.71250891685	2023
Coq.ZArith.Znat.Nat2Z.inj	40	0.0.0.0.1.7.8	synth with cache (only 1: revert m; only 1: intros n'; only 1: intros H; only 1: rewrite <- (Nat2N.id n); only 1: rewrite <- (Nat2N.id n'); only 1: f_equal; only 1: easy).	15.3342308998	7022
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.0.1.1	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros H; only 1: subst; only 1: easy).	0.233952045441	49
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40	0.7.4.1	synth with cache (only 1: symmetry; only 1: unfold Z.gt; only 1: rewrite N2Z.inj_compare; only 1: apply Nat.compare_gt_iff).	2.95585799217	1360
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.0.2.3.4.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Ha; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy; only 1: destruct 1; only 1: easy).	13.2661759853	9513
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z2N.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: subst; only 1: easy).	0.108199119568	13
Coq.ZArith.Znat.Z2Nat.inj_0	40	1	synth with cache (only 1: trivial).	0.0186278820038	2
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: easy).	0.0197179317474	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: easy).	0.0171699523926	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	0.0.0.0.12.1.2.1.1.1	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct n; only 1: trivial; only 1: clear _tmp_tactician0; only 1: simpl; only 1: rewrite <- Pos2Nat.inj_succ; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: easy).	24.0606839657	26482
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.238005161285	6
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.234225988388	5
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.21	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	13.3568189144	12796
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0979900360107	18
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: easy).	0.0207190513611	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: easy).	0.0182249546051	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0181069374084	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.1.2.1.2.4.4.1.0.1	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: easy; only 1: intros Hm; only 1: simpl Z.succ; only 1: rewrite Pos.add_1_r; only 1: simpl; only 1: apply Pos2Nat.inj_succ; only 1: destruct 1; only 1: easy).	26.0008230209	15288
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	0.0.0.1.0.0.1.0.1.2.0.0.0.3.10.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: destruct m; only 1: Z.nzsimpl; only 1: easy; only 1: destruct n; only 1: easy; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	39.1915040016	13726
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite Z2Nat.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0696260929108	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite Z2Nat.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0652358531952	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	3.0.0.1.0.1.2.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: destruct n; only 1: trivial; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: apply Z.abs_nonneg).	3.08349108696	1312
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: easy).	0.0276010036469	6
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.5.5.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Zlt_0_rec; only 1: intros; only 1: apply Hrec; only 1: trivial).	9.95675396919	5205
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0237059593201	4
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	0.1.0.0.0.0.2	synth with cache (only 1: intros EQ; only 1: intros n; only 1: intros H3; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.0968079566956	51
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0331439971924	14
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0250198841095	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: rewrite H; only 1: easy).	0.0268869400024	5
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0.0.0.15	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.4100048542	825
Coq.ZArith.Zquot.Zrem_0_l	40	0.0.0.1	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.0487749576569	5
Coq.ZArith.Zquot.Zquot_0_l	40	0.0.0.1	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.0484910011292	5
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0.0	synth with cache (only 1: intros Ha; only 1: intros Hb; only 1: apply Z.rem_bound_pos; only 1: easy; only 1: trivial).	0.255398988724	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.175238847733	25
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.270183086395	52
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.332299947739	51
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros EQ; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.3477871418	78
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.2.3.0.2.3	synth with cache (only 1: intros m; only 1: intros c; only 1: intros Hb; only 1: rewrite Z.rem_divide; only 1: rewrite Z.mod_divide; only 1: easy; only 1: easy; only 1: easy).	13.425702095	5052
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	32.13	synth with cache (only 1: intros _tmp_tactician0; only 1: constructor).	8.95950222015	14136
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.1.25	synth with cache (only 1: intros LS; only 1: intros H; only 1: exact 0%Z).	5.46903991699	4536
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	3.0.1.0	synth with cache (only 1: intros b; only 1: intros _tmp_tactician0; only 1: intros Hb; only 1: easy).	0.0382921695709	8
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	2.1.1.0.1	synth with cache (only 1: simpl; only 1: intros m; only 1: intros n; only 1: intros p; only 1: easy).	0.142235994339	14
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0112318992615	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: simpl; only 1: trivial; only 1: auto; only 1: auto).	0.0655858516693	10
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.10	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.117290019989	153
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.0.2.0.3.12	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.30246591568	345
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.0.1.0.42	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	1.37827301025	2968
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.0.1.36	synth with cache (only 1: induction n; only 1: easy; only 1: easy; only 1: easy).	1.12055015564	1607
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.4.0.0.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy).	2.24118304253	1426
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m as [| m| m]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	31.0792222023	13263
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0119919776917	4
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0120890140533	2
Coq.ZArith.BinInt.Z.add_0_l	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0199460983276	4
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0126991271973	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.0.4.2.0.0.0.16	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.70492815971	3379
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0356130599976	8
Coq.ZArith.BinInt.Z.sub_0_r	40	0.0.0.76	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	6.8639690876	30550
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0224120616913	4
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	2.4.0	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	0.161828994751	87
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	1.2.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.0426940917969	20
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1.1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite N.compare_antisym; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.0285201072693	9
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.0	synth with cache (only 1: unfold le; only 1: easy).	0.0127348899841	2
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.1.2.2.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: easy; only 1: intuition).	12.3666501045	7027
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.2.0.1.1.0.0	synth with cache (only 1: unfold le; only 1: unfold min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: intuition).	1.53509998322	573
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	0.0.0.2.2	synth with cache (only 1: intros H; only 1: destruct n; only 1: reflexivity; only 1: easy; only 1: easy).	0.0942151546478	43
Coq.ZArith.BinInt.Z.abs_neq	40	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: induction p; only 1: easy; only 1: easy; only 1: trivial).	0.0375158786774	9
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: easy; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).	0.0391609668732	17
Coq.ZArith.BinInt.Z.sgn_pos	40	1.5.1.29.1	synth with cache (only 1: intros Hp; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.25931119919	3798
Coq.ZArith.BinInt.Z.sgn_neg	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.025514125824	4
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: easy).	0.00947999954224	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: easy).	0.010880947113	1
Coq.ZArith.BinInt.Z.square_spec	40	0.0.2.0.0.3.0.0.15	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	2.32561302185	1052
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.0.0.0.4	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).	0.0499968528748	30
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).	0.0239410400391	4
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: easy).	0.00864005088806	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.0.10.0	synth with cache (only 1: simpl; only 1: destruct n; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	1.04829287529	358
Coq.ZArith.BinInt.Z.pred_double_spec	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0178098678589	4
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot; only 1: unfold rem; only 1: destruct quotrem; only 1: easy).	0.374406099319	39
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	0.1.0.1.3.0.0.0.0.0.2.0.12.0.0.0.0	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (m, H); only 1: exists (- m); only 1: destruct m; only 1: easy; only 1: easy; only 1: rewrite mul_opp_l; only 1: easy; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (m, H); only 1: exists (- m); only 1: destruct m; only 1: easy; only 1: simpl in *; only 1: trivial; only 1: easy).	28.4344639778	26803
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.3.4.0.2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: clear _tmp_tactician2; only 1: exists bb; only 1: rewrite H; only 1: rewrite mul_comm; only 1: easy).	11.5345640182	10352
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.1.0.0.0.1.0.0.2	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.593038082123	340
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	2	synth with cache (only 1: easy).	0.00941395759583	3
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.1.0.1.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.407341957092	530
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.1.1.0.0.13	synth with cache (only 1: rewrite <- le_succ_l; only 1: intros Hn; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.0481979847	790
Coq.ZArith.BinInt.Z.testbit_odd_0	40	0.0.0.0.1.0.0.7.9.28.58	synth with cache (only 1: rewrite <- (mul_0_r a); only 1: revert a; only 1: intros m; only 1: rewrite Private_BootStrap.mul_0_r; only 1: destruct m as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	17.4219110012	28376
Coq.ZArith.BinInt.Z.testbit_even_0	40
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0.1.0.10.21.0	synth with cache (only 1: intros H; only 1: rewrite <- le_succ_l; only 1: destruct (le_gt_cases n m); only 1: apply le_succ_l; only 1: easy; only 1: apply le_succ_l; only 1: easy).	11.3663480282	11603
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00884795188904	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	2.4.4.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite <- compare_lt_iff; only 1: reflexivity).	11.289978981	5127
Coq.ZArith.BinInt.Z.ge_le	40	0.1.0.0.0.0.2	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: case compare; only 1: easy'; only 1: easy; only 1: easy).	0.274269104004	102
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00838303565979	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	5.0.9.0.0.0	synth with cache (only 1: intros Hp; only 1: intros H; only 1: apply lt_gt_cases in Hp; only 1: apply mul_cancel_l in H; only 1: easy; only 1: intuition order).	11.8273060322	6866
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.0.1.0.0.4.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: trivial).	1.10476899147	464
Coq.ZArith.BinInt.Z.add_diag	40	2.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: easy).	0.118811845779	6
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ones_spec_low; only 1: trivial; only 1: auto; only 1: rewrite ones_spec_high; only 1: trivial; only 1: auto).	0.0372090339661	7
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0224599838257	8
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.00678896903992	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: congruence).	0.0170521736145	4
Coq.ZArith.BinInt.Pos2Z.is_pos	40	3	synth with cache (only 1: easy).	0.0109889507294	4
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	11	synth with cache (only 1: easy).	0.196104049683	127
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.00669384002686	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	synth with cache (only 1: easy).	0.0661292076111	16
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0	synth with cache (only 1: easy).	0.00775098800659	1
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: reflexivity).	0.0112340450287	4
Coq.ZArith.BinInt.Pos2Z.inj_add	40	6.2	synth with cache (only 1: symmetry; only 1: easy).	0.0741710662842	16
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.1.0.0.0.0.7	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: intros H; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.843772172928	866
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	synth with cache (only 1: easy).	0.0082700252533	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.0.13.3	synth with cache (only 1: revert q; only 1: intros r; only 1: apply Pos.iter_swap_gen; only 1: easy).	1.04661488533	1067
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.010910987854	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0104560852051	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.00774788856506	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0066499710083	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	synth with cache (only 1: unfold Pos.ltb; only 1: reflexivity).	0.00910210609436	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.00811696052551	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	synth with cache (only 1: reflexivity).	0.0081741809845	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.0077109336853	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.1.0.0.0.1.1.0.5	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.933353900909	726
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.00709295272827	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: congruence).	0.0169401168823	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: apply inj).	0.00769710540771	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).	0.0221509933472	5
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: easy).	0.00892901420593	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1.4.1	synth with cache (only 1: induction p using Pos.peano_ind; only 1: easy; only 1: easy).	0.0170390605927	9
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.00855898857117	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0102899074554	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0114550590515	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.00781488418579	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.0	synth with cache (only 1: unfold Pos.le; only 1: easy').	0.0121719837189	6
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.00935316085815	8
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: easy).	0.00782895088196	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: easy).	0.00742506980896	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.00768804550171	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.00747513771057	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00972390174866	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0064001083374	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00716209411621	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	synth with cache (only 1: split).	0.0840940475464	60
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.00722908973694	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.00718593597412	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.2.0	synth with cache (only 1: intros Hn; only 1: apply Z.testbit_Zpos; only 1: trivial).	0.0167860984802	5
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0098249912262	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.0.1.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.0208690166473	5
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.0.0.4.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.172220945358	96
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.1.0.0.0.2.4.3.0.0.18.19.1	synth with cache (only 1: destruct 1; only 1: apply Pos.eqb_eq; only 1: unfold Z.pred; only 1: destruct x; only 1: apply Pos.eqb_eq; only 1: split; only 1: rewrite Pos.eqb_eq; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: split).	12.7199048996	24353
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0405519008636	7
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1.0.1.3.0.0.3	synth with cache (only 1: intros Ha; only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: trivial; only 1: intros; only 1: simpl; only 1: destr_eq H; only 1: easy).	1.71143698692	1146
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.0.2.0.0	synth with cache (only 1: destruct x; only 1: intros m; only 1: Z.order; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.239373922348	81
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0405530929565	7
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0389409065247	7
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.1.3.64	synth with cache (only 1: apply Pos2Nat.inj; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	1.16589522362	2922
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0553278923035	20
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0.0	synth with cache (only 1: intros n; only 1: intros x'; only 1: congruence).	0.0138590335846	3
Coq.ZArith.BinInt.ZL0	40	0.0	synth with cache (only 1: PeanoNat.Nat.nzsimpl'; only 1: easy).	0.106024980545	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.10	synth with cache (only 1: Z.nzsimpl'; only 1: easy).	0.566957950592	188
Coq.ZArith.BinInt.Z_eq_mult	40	0.5.1.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: Z.nzsimpl; only 1: easy).	0.781423807144	255
Coq.ZArith.Zcomplements.floor_gt0	40	0.0.1	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: easy).	0.0353519916534	4
Coq.ZArith.Zcomplements.floor_ok	40	1.6.6.11.3	synth with cache (only 1: intros; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial).	16.7018470764	12338
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0.0.3.16	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	1.16696310043	555
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: trivial).	0.0237309932709	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	33.4752120972	9605
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.15.4.0.0.0.15.4.10.60	synth with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy).	27.6732461452	47302
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40	2.0.0.1.1.2.0.0.1.4.2.0.24	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).	7.21505403519	7787
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0710771083832	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	1.0.0.0.1.0.0.0.2.2.0.1	synth with cache (only 1: rewrite Zodd_equiv; only 1: intros _tmp_tactician0; only 1: unfold Z.pred; only 1: destruct _tmp_tactician0 as (m, _tmp_tactician2); only 1: intropattern subst -> _tmp_tactician2; only 1: destruct m as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [a| a| ]; only 1: easy; only 1: easy; only 1: easy).	3.52379798889	1896
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: intros a0; only 1: easy; only 1: intros Ha; only 1: easy; only 1: intros Hn; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	8.59772896767	1889
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	19.1232581139	2934
Coq.ZArith.Zeven.Zodd_quot2	40	2.0.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros Ha; only 1: intros Hn; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: simpl; only 1: easy; only 1: destruct _tmp_tactician0 as [p| p| ]; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	35.2941880226	8490
Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.0.0.0.0.0.0.1.0.0.0.2.0.0	synth with cache (only 1: intros Hn; only 1: intros Hn'; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: apply Zodd_bool_iff in Hn'; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	37.3061590195	8365
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: boolify_even_odd; only 1: intros H; only 1: exists (Z.div2 n); only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	9.26478600502	2390
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.0.0.0.0.0.0.0.0.2.0.1.1.11	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	26.041686058	10503
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: rewrite Z.odd_add; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	0.158700942993	9
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: rewrite Z.odd_add; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	0.134720087051	9
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	37.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros Ha; only 1: rewrite Z.even_mul; only 1: rewrite Ha; only 1: intuition).	14.9019889832	13320
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0201640129089	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0188748836517	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	0.1.0.3.1.32	synth with cache (only 1: destruct a; only 1: intros Hb; only 1: trivial; only 1: intros Hn; only 1: easy; only 1: apply Z.divide_opp_l).	23.7867240906	24344
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0178680419922	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.3.0.4.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	5.39263701439	2391
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	21.0	synth with cache (only 1: intros H; only 1: Z.order).	18.2064399719	9203
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	1.4.0.8.5.2.0	synth with cache (only 1: intros Ha; only 1: intros _tmp_tactician0; only 1: rewrite Z.div_exact; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: rewrite Hc; only 1: apply Z_mod_mult; only 1: Z.order).	15.6901068687	8476
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	8.8.1	synth with cache (only 1: intros n; only 1: intros q; only 1: firstorder).	19.4970810413	7649
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.1.18.12.2	synth with cache (only 1: intros Hn; only 1: constructor; only 1: intuition; only 1: easy; only 1: trivial).	4.89276885986	4040
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.0	synth with cache (only 1: intros p; only 1: easy).	0.0264580249786	3
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0687308311462	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.5.2	synth with cache (only 1: intros a; only 1: destruct 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	2.05058217049	907
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.1.0.0.1.0	synth with cache (only 1: intros a; only 1: induction 1; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.561638832092	132
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	18.3	synth with cache (only 1: intros a; only 1: firstorder).	22.9031469822	12366
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.1.0.21.3	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	3.06803894043	2604
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.0.0.0.1.4	synth with cache (only 1: intros z; only 1: intros r; only 1: intros _tmp_tactician0; only 1: intros Ha; only 1: destruct _tmp_tactician0 as (Hy', _tmp_tactician2); only 1: intuition).	2.17516803741	541
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.32.56	synth with cache (only 1: intros n; only 1: induction n; only 1: easy).	12.738877058	12673
Coq.ZArith.Znumtheory.not_prime_1	40	6.11	synth with cache (only 1: Z.nzsimpl'; only 1: easy').	0.544280052185	306
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	2.15.0.8.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: apply (Zlt_le_succ 1); only 1: red; only 1: simpl in *; only 1: destruct _tmp_tactician0 as (m, H); only 1: auto with zarith).	6.48807120323	5699
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	1.1.8.6	synth with cache (only 1: intros a0; only 1: fix sqrtrem_spec 1; only 1: intros d; only 1: trivial).	11.3134019375	6972
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	4.6.0	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: easy).	2.43709611893	902
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.0.3.0.0.8.0.58.0	synth with cache (only 1: intros Hb; only 1: revert a; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0); only 1: Z.order; only 1: unfold Z.div; only 1: symmetry; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	36.5341358185	53159
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_eq; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.102484941483	18
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5.3	synth with cache (only 1: intros EQ; only 1: easy).	0.315032958984	35
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.1.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0507080554962	6
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.9.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: easy).	0.320957899094	117
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.158406972885	6
Coq.ZArith.Zdiv.Zmod_1_r	40	0.11.2	synth with cache (only 1: intros n; only 1: Z.nzsimpl; only 1: easy).	1.38727402687	883
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.7.0	synth with cache (only 1: intros; only 1: Z.nzsimpl'; only 1: easy).	0.127897977829	21
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.2.0.1.0.0.2	synth with cache (only 1: intros n; only 1: intros b; only 1: Z.swap_greater; only 1: intros Ha; only 1: intros H; only 1: apply Z.div_pos; only 1: trivial; only 1: trivial).	3.18766689301	812
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0504329204559	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.2.2	synth with cache (only 1: intros b; only 1: intros m; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.591664075851	117
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: trivial).	0.0567429065704	12
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0.0.0.0.4	synth with cache (only 1: intros Ha; only 1: intros b; only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.915776014328	388
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: trivial).	0.180459022522	35
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	4.0	synth with cache (only 1: intros b; only 1: easy).	0.0216889381409	6
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	1.0.0	synth with cache (only 1: intros m; only 1: intros; only 1: easy).	0.0289611816406	4
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.0.0.10	synth with cache (only 1: intros Hrec; only 1: unfold eqm; only 1: intros; only 1: Z.order).	7.18295788765	3192
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	3.0.0.0.0.0.9.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: intros b; only 1: intros n; only 1: easy; only 1: intros b; only 1: congruence).	1.31645202637	560
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: trivial).	0.330966949463	117
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.191184997559	37
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.1.1.1	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hc; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.185626029968	31
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.0.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.div_exact; only 1: easy; only 1: easy).	0.0745680332184	9
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: easy; only 1: easy).	0.0648159980774	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.4.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: easy).	0.179656028748	79
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.00924611091614	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.0.4.5.0.1.0.0	synth with cache (only 1: intros Ha; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: discriminate Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: discriminate Hb).	20.1414017677	10356
Coq.ZArith.Zabs.Zabs_ind	40	0.2.11.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	8.71823692322	8269
Coq.ZArith.Zabs.Zabs_intro	40	0.3.1.0.10.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct m; only 1: intros; only 1: trivial; only 1: easy; only 1: trivial).	6.39757609367	7535
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	5.2	synth with cache (only 1: intros H; only 1: easy).	0.0215311050415	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: easy).	0.0162239074707	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0163989067078	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0157940387726	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0157809257507	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.1.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: simpl; only 1: trivial; only 1: intros n; only 1: Z.nzsimpl; only 1: easy).	0.589654922485	82
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	2	synth with cache (only 1: easy).	0.0232138633728	3
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0201268196106	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0205681324005	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0185699462891	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.0187330245972	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0180671215057	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0192890167236	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.00957703590393	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.6.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.605834960938	37
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	8.9	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).	0.664431095123	246
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.1.0.0.1	synth with cache (only 1: intros Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: easy).	0.631623983383	82
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	5	synth with cache (only 1: easy).	0.361630916595	6
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	6.0	synth with cache (only 1: simpl; only 1: trivial).	0.0139029026031	8
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0	synth with cache (only 1: easy).	0.0105061531067	1
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.7.2.1.1	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros r; only 1: simpl; only 1: congruence).	4.84085988998	1862
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	10.3	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, _tmp_tactician0); only 1: apply Pos2Nat.inj_iter).	0.314100980759	197
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	8	synth with cache (only 1: apply two_power_pos_equiv).	0.0475370883942	11
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.0.0.12.3.1	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.23979091644	2018
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0.1	synth with cache (only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	0.0347859859467	3
Coq.ZArith.auxiliary.Zle_left	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0333480834961	11
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0214228630066	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0220229625702	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.0230839252472	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: apply Z.le_0_sub; only 1: apply Z.le_succ_l; only 1: apply Z.lt_0_sub; only 1: Z.swap_greater; only 1: easy).	0.0761389732361	9
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0438950061798	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0442049503326	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.0.0.0.2.1	synth with cache (only 1: unfold Z.max; only 1: intros H; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.185008049011	41
Coq.ZArith.Zmax.Zpos_max_1	40	0.7.8.6	synth with cache (only 1: induction p; only 1: easy; only 1: trivial; only 1: easy).	2.22414398193	993
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	7.0.1.0.1.16.0	synth with cache (only 1: unfold Z.min; only 1: induction p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: auto with relations).	12.197106123	8031
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40	0.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.59022593498	917
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.59	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	1.07458519936	3101
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order).	0.017639875412	2
Coq.ZArith.Zorder.Zlt_not_le	40	0.1	synth with cache (only 1: intros LT; only 1: Z.order).	0.0202860832214	3
Coq.ZArith.Zorder.Zle_not_gt	40	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).	0.0264258384705	5
Coq.ZArith.Zorder.Zgt_not_le	40	0.1.4	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).	0.0892729759216	32
Coq.ZArith.Zorder.Znot_ge_lt	40	1.27	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	1.42211794853	1433
Coq.ZArith.Zorder.Znot_lt_ge	40	1.4.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.027911901474	8
Coq.ZArith.Zorder.Znot_gt_le	40	1.5.1	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.0288510322571	10
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0206689834595	4
Coq.ZArith.Zorder.not_Zne	40	1.0.35.6	synth with cache (only 1: intros H; only 1: destruct (Z.eq_decidable n m); only 1: easy; only 1: intuition).	3.39903402328	4438
Coq.ZArith.Zorder.Zgt_asym	40	2.3.1	synth with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).	0.177913188934	30
Coq.ZArith.Zorder.Zgt_irrefl	40	11	synth with cache (only 1: easy).	0.0523610115051	57
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	0.375360012054	99
Coq.ZArith.Zorder.Zle_gt_trans	40	0.0.3.2	synth with cache (only 1: intros H1; only 1: Z.swap_greater; only 1: intros H2; only 1: Z.Private_Tac.order).	0.0592641830444	19
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0208599567413	2
Coq.ZArith.Zorder.Zge_trans	40	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	3.59707593918	1734
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.0.0.2.58	synth with cache (only 1: unfold Z.lt; only 1: destruct 1; only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	20.0431959629	29001
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0250508785248	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.00882315635681	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.00918006896973	1
Coq.ZArith.Zorder.Zgt_succ	40
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0104758739471	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.00898790359497	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0189509391785	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0107469558716	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0284051895142	11
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0106191635132	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.0.1.0.7.4.11.0	synth with cache (only 1: destruct n; only 1: Z.order'; only 1: simpl; only 1: destruct p; only 1: easy; only 1: destruct 1; only 1: easy; only 1: Z.order; only 1: easy).	6.9805829525	7714
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.0.0.0.1.11.1.5.9	synth with cache (only 1: destruct n as [| n| n]; only 1: easy; only 1: destruct 1; only 1: intros H; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	37.1338980198	38967
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2	synth with cache (only 1: intros a; only 1: easy).	0.0193848609924	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intros n; only 1: reflexivity).	0.0097930431366	2
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0132689476013	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	synth with cache (only 1: easy).	0.00790309906006	1
Coq.ZArith.Zorder.Zle_0_nat	40	0.1.30	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	1.62285709381	3372
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0102410316467	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0106310844421	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0101230144501	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0098659992218	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0103268623352	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0113179683685	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0241851806641	6
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0302789211273	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0418360233307	12
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0188450813293	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.7.4.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_le_mono_nonneg_r; only 1: Z.Private_Tac.order; only 1: easy).	3.14558196068	1546
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0107431411743	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0103750228882	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0861699581146	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.0.2.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: trivial).	0.0572481155396	19
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: trivial).	0.0481011867523	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0177869796753	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00938105583191	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.017382144928	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00930094718933	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0278739929199	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0285308361053	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	0.0.1.2.0.3.0.5.2.0	synth with cache (only 1: intros H1; only 1: destruct m; only 1: easy; only 1: intros Hn; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).	27.3842530251	16034
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	4.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.197067975998	67
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	0.1.1.0.0.5.1.0.21.1	synth with cache (only 1: intros H1; only 1: destruct n; only 1: intros IH; only 1: easy; only 1: destruct m; only 1: intros Hb; only 1: easy; only 1: split; only 1: easy; only 1: easy).	20.7110340595	16496
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.132925987244	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0707039833069	34
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00875687599182	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.4	synth with cache (only 1: intros EQ; only 1: apply Z.leb_le; only 1: trivial).	0.0917220115662	18
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	synth with cache (only 1: easy).	0.0201768875122	3
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.5	synth with cache (only 1: rewrite Z.leb_le; only 1: easy).	0.133844852448	43
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.12.3	synth with cache (only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.leb_le).	1.34845495224	774
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.14.18	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto; only 1: auto).	18.7664890289	17476
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros H1; only 1: intros H2; only 1: intros H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0571720600128	7
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.4.25	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).	4.57919096947	841
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).	0.0717852115631	22
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.1.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: easy).	0.0940208435059	25
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt; only 1: unfold Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: intuition).	7.55872702599	3647
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.2	synth with cache (only 1: intros ?; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.374413967133	110
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.00946187973022	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.2.1.1.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: intros; only 1: induction (Rwf x); only 1: auto).	0.0420680046082	9
Coq.Program.Wf.Well_founded.Fix_F_inv	40
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0459718704224	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0190210342407	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.6.8.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	0.481858968735	464
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	5.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.016618013382	7
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.1.8.1.0.2.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros f; only 1: intros y; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).	6.21603798866	8658
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.00816202163696	3
Coq.Program.Equality.UIP_refl_refl	40	17	synth with cache (only 1: apply UIP).	0.0343768596649	126
Coq.Program.Equality.inj_pairT2_refl	40	8	synth with cache (only 1: apply UIP).	0.00833606719971	9
Coq.Program.Equality.solution_left	40	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0196239948273	6
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0126729011536	5
Coq.Program.Equality.deletion	40	3.0	synth with cache (only 1: intros y; only 1: trivial).	0.00916504859924	5
Coq.Program.Equality.simplification_heq	40	0.2.6.1.1	synth with cache (only 1: intros H; only 1: intros H'; only 1: subst; only 1: apply H; only 1: trivial).	0.438573122025	659
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.4.1	synth with cache (only 1: intros H; only 1: intros J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.217689037323	322
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0164229869843	3
Coq.Program.Combinators.compose_id_left	40	1.0	synth with cache (only 1: intros A; only 1: auto).	0.0157568454742	3
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0159101486206	2
Coq.Program.Combinators.compose_assoc	40	0.5	synth with cache (only 1: intros; only 1: reflexivity).	0.024178981781	12
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0159480571747	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0191149711609	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros a; only 1: intros H; only 1: eapply In_InA in H; only 1: eapply multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0582392215729	8
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40	0.23.1.1.5.2	synth with cache (only 1: unfold PermutSetoid.permutation; only 1: intros i; only 1: unfold meq; only 1: intros l1; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).	30.3382270336	40753
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.0.0.8.0.2.0.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	5.15783214569	5293
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	4.1.10	synth with cache (only 1: induction l; only 1: easy; only 1: firstorder).	1.03931188583	687
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).	12.1041941643	3430
Coq.Sorting.Permutation.Permutation_cons	40	3	synth with cache (only 1: simpl_relation).	0.213273048401	48
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.0.1.0.1.2.1.0.0	synth with cache (only 1: induction 1; only 1: intros Hx; only 1: easy; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intuition; only 1: auto).	21.039880991	6470
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0199439525604	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.1.3.1.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).	1.82461118698	413
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros ?; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: transitivity (length l'); only 1: easy; only 1: easy).	5.88251900673	1684
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros l; only 1: intros tl; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	14.8188331127	157
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	27	synth with cache (only 1: split).	0.169209957123	362
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	1.2	synth with cache (only 1: unfold permutation; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.0212090015411	5
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	1.0.13.0.1	synth with cache (only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).	4.55829381943	2726
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0272209644318	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros l; only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	13.8587188721	3987
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	2.23.0.2.6	synth with cache (only 1: intros H; only 1: intros; only 1: destruct eqA_dec as [_tmp_tactician0| NEQ]; only 1: easy; only 1: auto).	22.1600670815	25873
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.052218914032	6
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.1.1.0	synth with cache (only 1: intros P; only 1: intros; only 1: inversion H; only 1: auto).	0.105306863785	61
Coq.Sorting.Sorted.defs.Sorted_inv	40	3.1	synth with cache (only 1: inversion 1; only 1: easy).	0.109181880951	46
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	0.0.39	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: firstorder using Sorted_inv).	20.6880509853	39394
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.0.0	synth with cache (only 1: intros a; only 1: intros l; only 1: inversion_clear 1; only 1: auto).	0.024041891098	4
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0293970108032	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	2.0.2.0.0.1.1	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	0.812792062759	579
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	3	synth with cache (only 1: constructor).	0.0264511108398	15
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.014936208725	2
Coq.Sorting.Heap.defs.invert_heap	40	0.13.2	synth with cache (only 1: intros l1; only 1: inversion 1; only 1: auto with datatypes).	0.802432060242	452
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	0.2.0.12.0.0.13.10	synth with cache (only 1: unfold meq in *; only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros y; only 1: intros; only 1: rewrite H; only 1: auto with datatypes).	5.52381086349	3214
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.0546360015869	12
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	1.7	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0615429878235	39
Coq.Sorting.Heap.defs.list_to_heap	40	3.1.2	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.0339319705963	17
Coq.Sorting.Heap.defs.heap_to_list	40	3.13	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	1.16320800781	912
Coq.Sorting.Heap.defs.treesort	40	4.0.4	synth with cache (only 1: fix merge 1; only 1: intros l2; only 1: auto with datatypes).	0.160352945328	85
Coq.Init.Wf.Well_founded.Acc_inv	40	10.2.0.0.2	synth with cache (only 1: intros ?; only 1: intros H; only 1: intros y; only 1: destruct H; only 1: auto).	5.10271883011	7710
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0202579498291	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0228111743927	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.32.3	synth with cache (only 1: intros; only 1: destruct r; only 1: trivial).	1.07881307602	2078
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0158760547638	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00640392303467	2
Coq.Init.Peano.not_eq_S	40	0.9	synth with cache (only 1: intros ?; only 1: auto).	0.023001909256	43
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.0196278095245	17
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0176200866699	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.016096830368	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0207619667053	7
Coq.Init.Peano.mult_n_O	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0167469978333	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0107469558716	5
Coq.Init.Peano.le_n_S	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0331978797913	33
Coq.Init.Peano.nat_case	40	1.0.3.6	synth with cache (only 1: induction n; only 1: intros ?; only 1: trivial; only 1: trivial).	0.170027017593	255
Coq.Init.Peano.nat_double_ind	40	1.1.4.3.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).	0.35621213913	608
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40
Coq.Init.Peano.nat_rect_succ_r	40	0.3.2.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.670013904572	884
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.2	synth with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.8209400177	833
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.1.2.13.30	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	9.64953899384	34145
Coq.Init.Datatypes.eq_true_ind_r	40	0.1.2.7	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).	0.46800494194	1046
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).	0.0153760910034	6
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).	0.0156018733978	6
Coq.Init.Datatypes.surjective_pairing	40	1.0.7.3.0	synth with cache (only 1: intros x''; only 1: intros Hx'; only 1: intros ?; only 1: destruct p; only 1: reflexivity).	0.410261154175	645
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0137710571289	6
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.1.5	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0334169864655	32
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00261378288269	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00727605819702	10
Coq.Init.Logic.Equivalence.iff_sym	40	1.1.1.0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0078718662262	14
Coq.Init.Logic.and_iff_compat_l	40	2.0.2.2.2.0.2.0.1.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros C; only 1: intros B; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	19.7742340565	157125
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	8.78373980522	27102
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40	0.0.1.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: auto).	1.11025309563	1884
Coq.Init.Logic.imp_iff_compat_r	40	1.1.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	2.30888295174	3724
Coq.Init.Logic.not_iff_compat	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: intros _tmp_tactician2; only 1: auto).	0.0192310810089	8
Coq.Init.Logic.neg_false	40	3.1.1.17.0.0.1.1	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: auto).	9.03421521187	40398
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.997425079346	1320
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	1.88155293465	3027
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0.2.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0180130004883	9
Coq.Init.Logic.iff_to_and	40	4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: split; only 1: trivial; only 1: trivial; only 1: intros _tmp_tactician0; only 1: assumption).	2.17158198357	2515
Coq.Init.Logic.universal_quantification.inst	40	14.0	synth with cache (only 1: intros B; only 1: auto).	0.340401887894	872
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00954914093018	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.0.2.0.3.1.5	synth with cache (only 1: intros Fr; only 1: intros A; only 1: unfold not; only 1: intros H; only 1: intros H1; only 1: elim H1; only 1: exact H).	2.52829408646	6681
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.4	synth with cache (only 1: destruct 1; only 1: trivial).	0.0149681568146	14
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0132410526276	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0122148990631	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0127370357513	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.27.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct 1; only 1: destruct _tmp_tactician0 as []; only 1: trivial).	1.21808886528	5524
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.2.2.0.0.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: auto).	0.475552082062	441
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0240128040314	8
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0253658294678	8
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0265319347382	8
Coq.Init.Logic.equality_dep.f_equal_dep	40	0.9.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? _tmp_tactician2]; only 1: trivial).	0.242048978806	387
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	1.1.1.2	synth with cache (only 1: intros until H; only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0225040912628	9
Coq.Init.Logic.rew_opp_r	40	1.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0171518325806	5
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0166020393372	3
Coq.Init.Logic.f_equal2	40	0.0.1.0.1.1	synth with cache (only 1: intros A; only 1: intros B; only 1: intros x; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0383539199829	17
Coq.Init.Logic.f_equal3	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.01833319664	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0224061012268	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0269129276276	6
Coq.Init.Logic.f_equal_compose	40	0.0.6.0.3.5.1.2.2.3	synth with cache (only 1: intros A; only 1: intros P; only 1: intros Hl; only 1: intros C; only 1: intros x; only 1: intros H0; only 1: intros y; only 1: intros H; only 1: destruct H; only 1: reflexivity).	31.4444568157	54165
Coq.Init.Logic.eq_trans_refl_l	40	0.0.2	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0159320831299	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0161948204041	3
Coq.Init.Logic.eq_sym_involutive	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0152611732483	3
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0174369812012	3
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.120599985123	3
Coq.Init.Logic.eq_trans_assoc	40	0.0.2.1.0.1.0	synth with cache (only 1: intros until e; only 1: intros h2; only 1: destruct h2; only 1: intros h2; only 1: destruct h2; only 1: destruct e; only 1: reflexivity).	0.259738922119	214
Coq.Init.Logic.rew_map	40	1.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0186729431152	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0183222293854	4
Coq.Init.Logic.map_subst_map	40	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0206549167633	3
Coq.Init.Logic.rew_swap	40	6.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0200340747833	10
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0202839374542	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0150401592255	2
Coq.Init.Logic.eq_trans_map_distr	40	0.0.0.4.3.0	synth with cache (only 1: intros until e; only 1: intros h2; only 1: destruct h2; only 1: destruct e; only 1: simpl; only 1: reflexivity).	0.279628992081	193
Coq.Init.Logic.eq_sym_map_distr	40	0.2.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0212249755859	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0.1	synth with cache (only 1: intros until e'; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0410661697388	27
Coq.Init.Logic.eq_trans_rew_distr	40	0.0.1	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	0.0212352275848	4
Coq.Init.Logic.rew_const	40	0.2.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	0.0197520256042	5
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	6.2.4.5.2	synth with cache (only 1: intros P; only 1: intros y; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, Huni); only 1: auto).	1.88113999367	5182
Coq.Init.Logic.inhabited_covariant	40	0.0.0	synth with cache (only 1: intros H; only 1: destruct 1; only 1: auto).	0.01722407341	3
Coq.Init.Logic.eq_stepl	40	0.0.6	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0279068946838	18
Coq.Init.Logic.iff_stepl	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros y; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).	1.20478200912	751
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.1.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.119449138641	72
Coq.Init.Logic.ex2.rew_ex2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0293710231781	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00853610038757	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00869703292847	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00909209251404	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1; only 1: intros h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0181250572205	6
Coq.Init.Logic_Type.identity_ind_r	40	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).	0.0252070426941	17
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0230679512024	8
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0243380069733	8
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0121719837189	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0142021179199	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0122680664062	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.6.7.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x, _tmp_tactician4); only 1: split; only 1: exists x; only 1: trivial).	0.186192035675	589
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.3.64.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).	2.2578959465	19840
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.017431974411	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0153849124908	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.5.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0294630527496	12
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.37.0.7.0	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: destruct q; only 1: subst; only 1: reflexivity).	5.77752685547	18212
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	2.15.6	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	4.44535708427	6229
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0189151763916	4
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.107964992523	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0310719013214	8
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	5.2.0.0.0.0.0.3	synth with cache (only 1: destruct u as [u1 u2]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct v as [v1 v2]; only 1: apply eq_exist_uncurried).	8.01852083206	6031
Coq.Init.Specif.sig.rew_sig	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0215628147125	3
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.0.0.4.2.2.0.3	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).	3.15224695206	3623
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	3.0.1.0.0.0.1.1.0.0.1	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	6.59217786789	5002
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0222849845886	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0.0.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0283408164978	7
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).	0.0503251552582	10
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	20.8383741379	12100
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0226988792419	3
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros A; only 1: intros C; only 1: intros h1; only 1: intros h2; only 1: destruct (h2 h1)).	0.0130739212036	6
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	4	synth with cache (only 1: solve_proper).	3.10756707191	411
Coq.QArith.Qreduction.Qred_correct	40	1.0.1.12	synth with cache (only 1: fix le_div2 1; only 1: fix sqrtrem_spec 1; only 1: intros ?; only 1: auto with *).	1.01339888573	820
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0.7.1.3.0	synth with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: revert q; only 1: intros _tmp_tactician2; only 1: apply Qeq_bool_iff; only 1: apply Qred_correct).	6.23649787903	1844
Coq.QArith.Qreduction.Qminus'_correct	40	1.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.149988889694	65
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40	0.0.1.0.14.11	synth with cache (only 1: revert q; only 1: intros b; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: rewrite Qlt_alt; only 1: easy).	6.82996296883	5025
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	4.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).	0.540686845779	146
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.0.0.0.9.3.0	synth with cache (only 1: intros _tmp_tactician0; only 1: simpl in *; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	3.96274709702	2214
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.0.0.1.8.2.0.6.57	synth with cache (only 1: constructor; only 1: intros q; only 1: destruct q as [a b]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| n]; only 1: unfold Qeq; only 1: simpl in *; only 1: trivial; only 1: easy).	8.82846593857	8298
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.0152571201324	1
Coq.QArith.Qfield.Examples.ex2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.102243900299	11
Coq.QArith.Qfield.Examples.ex3	40	0.3.0.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros b; only 1: intros p; only 1: destruct _tmp_tactician0 as (aa, bb); only 1: ring).	0.740238189697	280
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: split).	0.0205070972443	2
Coq.QArith.Qfield.Examples.ex5	40	1	synth with cache (only 1: trivial).	0.0273299217224	2
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0256500244141	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	0.0695221424103	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0319459438324	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0318450927734	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: intros H0; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.144845962524	21
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.051276922226	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.0181910991669	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.7	synth with cache (only 1: unfold N.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.575311183929	284
Coq.QArith.Qcanon.Qcle_alt	40	1.2.2	synth with cache (only 1: intros n; only 1: intros m; only 1: reflexivity).	0.0831120014191	36
Coq.QArith.Qcanon.Qcge_alt	40	1.0.8.4.8	synth with cache (only 1: simpl; only 1: intros n; only 1: induction n; only 1: symmetry; only 1: apply Z.ge_le_iff).	9.72205901146	6588
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	2	synth with cache (only 1: easy).	0.014876127243	12
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.1.10.0.1	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	5.55868601799	2904
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.0485548973083	10
Coq.QArith.Qcanon.Qcmult_assoc	40	0.0.9.1.5	synth with cache (only 1: intros _tmp_tactician0; only 1: intros n; only 1: fix even_spec 1; only 1: intros m; only 1: trivial).	11.7154128551	6433
Coq.QArith.Qcanon.Qcmult_0_l	40	2.1	synth with cache (only 1: intros _tmp_tactician0; only 1: auto with qarith).	0.0225219726562	14
Coq.QArith.Qcanon.Qcmult_0_r	40	1.0.8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.627505064011	372
Coq.QArith.Qcanon.Qcmult_1_l	40	9.1.1.8.19	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (q', hq'); only 1: qc; only 1: field).	19.7639451027	21419
Coq.QArith.Qcanon.Qcmult_1_r	40	9.1.1.8.19	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (q', hq'); only 1: qc; only 1: field).	21.0155589581	21968
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.3.0.3.6	synth with cache (only 1: intros b; only 1: intros m; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.21049284935	2570
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	1.2.0.8.0.5	synth with cache (only 1: intros m; only 1: intros _tmp_tactician0; only 1: intros; only 1: destruct _tmp_tactician0 as (q, hq); only 1: qc; only 1: ring).	39.6631009579	14353
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.0.4.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.91473603249	832
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	8.4.3.13	synth with cache (only 1: intros n; only 1: induction n; only 1: red; only 1: auto with *).	3.13596606255	3693
Coq.QArith.Qcanon.Qcle_antisym	40	2.0.3	synth with cache (only 1: intros n; only 1: intros y; only 1: intuition).	0.0736479759216	40
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	6.2.0.0	synth with cache (only 1: unfold Qclt; only 1: intros a; only 1: unfold Qcle; only 1: intuition).	1.0164539814	530
Coq.QArith.Qcanon.Qcle_lt_trans	40	4.2.1.1.0	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: auto with qarith).	1.9668431282	953
Coq.QArith.Qcanon.Qclt_le_trans	40	4.2.10	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: eauto).	39.1313710213	21757
Coq.QArith.Qcanon.Qclt_trans	40	3.4.1.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: easy).	1.83437395096	1256
Coq.QArith.Qcanon.Qcnot_lt_le	40	1.1.1.0	synth with cache (only 1: unfold Qcle; only 1: intros x; only 1: intros y; only 1: auto with qarith).	0.226213932037	58
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.3.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros H0; only 1: auto with qarith).	0.0417921543121	22
Coq.QArith.Qcanon.Qclt_not_le	40	6.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	0.026829957962	14
Coq.QArith.Qcanon.Qcle_not_lt	40	0.0.4.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.0252261161804	10
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	2.7.2	synth with cache (only 1: intros abs; only 1: fix even_spec 1; only 1: auto with *).	4.44800114632	628
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.0.1.2.4.4	synth with cache (only 1: intros m; only 1: Nat.cases m; only 1: intros; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros; only 1: auto with qarith).	4.09881711006	2942
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.499594926834	181
Coq.QArith.Qreals.IZR_nz	40	0.2.0	synth with cache (only 1: intros H; only 1: apply not_0_IZR; only 1: easy).	0.0383629798889	13
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0270829200745	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1.2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply not_iff_compat; only 1: easy).	0.0529420375824	18
Coq.QArith.QArith_base.Qge_alt	40	2.13.15	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	31.1169099808	19844
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.1	synth with cache (only 1: red; only 1: trivial).	0.0263721942902	5
Coq.QArith.QArith_base.Qeq_sym	40	0.0	synth with cache (only 1: intros H; only 1: auto with qarith).	0.0111560821533	2
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.0.0.0.0.0.0.0.1.57.3.6.181	synth with cache (only 1: constructor 1; only 1: easy; only 1: easy; only 1: intros EQ; only 1: intros y; only 1: intros z; only 1: unfold Qeq; only 1: intros XY; only 1: intros YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: rewrite Z.mul_shuffle0; only 1: rewrite XY; only 1: rewrite Z.mul_shuffle0; only 1: rewrite YZ; only 1: rewrite Z.mul_shuffle0; only 1: easy).	23.5678861141	68191
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	5.2.24	synth with cache (only 1: fix even_spec 1; only 1: intros H; only 1: intuition).	17.2195060253	13795
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0098021030426	1
Coq.QArith.QArith_base.Qeq_bool_neq	40	13.12.12	synth with cache (only 1: rewrite <- negb_true_iff; only 1: fix odd_spec 1; only 1: auto).	6.58263015747	8863
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40
Coq.QArith.QArith_base.Qnot_eq_sym	40	2.0.3	synth with cache (only 1: unfold Qeq; only 1: intros Hn; only 1: Z.order).	0.0465149879456	23
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.0.46	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: easy).	12.6045269966	18481
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	5	synth with cache (only 1: easy).	0.0133690834045	6
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.30.3	synth with cache (only 1: intros ?; only 1: red; only 1: simpl in *; only 1: ring).	5.05873012543	6760
Coq.QArith.QArith_base.Qplus_0_r	40	1.2.11.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_1_r; only 1: easy).	4.65746498108	2905
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.0369341373444	9
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	2.2	synth with cache (only 1: intros; only 1: reflexivity).	0.0132520198822	6
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.0.4	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl; only 1: reflexivity).	0.0912890434265	37
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.078871011734	16
Coq.QArith.QArith_base.Qmult_comm	40	1.0.1.0.1.8	synth with cache (only 1: intros r; only 1: red; only 1: intros; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	13.240334034	2120
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	5.0.0.1.1.7.1	synth with cache (only 1: intros ?; only 1: intros b; only 1: red; only 1: simpl; only 1: intros H; only 1: simpl_mult; only 1: ring).	24.2897870541	9077
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.4.4.1.0.3	synth with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: intros a; only 1: intros Hb; only 1: simpl_mult; only 1: ring).	14.1759409904	7312
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	10	synth with cache (only 1: easy).	0.106392145157	74
Coq.QArith.QArith_base.inject_Z_opp	40	1.0.0.2.2.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy).	0.103754997253	44
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.6.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	1.16316986084	565
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	7.6.5.5	synth with cache (only 1: intros ?; only 1: apply Z.lt_le_incl; only 1: symmetry; only 1: easy).	1.02935504913	1073
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	0.29.0	synth with cache (only 1: intros H; only 1: apply Z.ge_le; only 1: easy).	5.18904018402	5605
Coq.QArith.QArith_base.Qnot_le_lt	40	3.0.1	synth with cache (only 1: intros H; only 1: rewrite Qlt_alt; only 1: Z.order).	0.0211398601532	7
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0078558921814	2
Coq.QArith.QArith_base.Qle_not_lt	40	9.6.0.5	synth with cache (only 1: intros Hxy; only 1: apply Z.nlt_ge; only 1: intros _tmp_tactician0; only 1: easy).	1.44243097305	1500
Coq.QArith.QArith_base.Qle_lt_or_eq	40	5.11.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros b; only 1: apply Z.lt_eq_cases).	3.71885514259	2509
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40	0.1.17.0	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: intros until q; only 1: auto).	13.7954530716	11040
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 d]; only 1: destruct _tmp_tactician2 as [| n| n]; only 1: intros Ha; only 1: assumption; only 1: intros Ha; only 1: assumption; only 1: intros Ha; only 1: assumption).	0.0357279777527	9
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40	2.6.0.1.3	synth with cache (only 1: red; only 1: intros Hp; only 1: intros _tmp_tactician2; only 1: fix gcd_divide 1; only 1: assumption).	37.1257147789	8002
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm _ p); only 1: rewrite (Qplus_comm _ p); only 1: rewrite (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	9.89546298981	2522
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	5.5.1	synth with cache (only 1: intros p; only 1: simpl; only 1: apply Z.div_1_r).	0.497054100037	276
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.3	synth with cache (only 1: intros; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	4.70962619781	1787
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0877990722656	10
Coq.QArith.Qabs.Qabs_nonneg	40	3.0.0.5.7.13	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Qle; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: simpl; only 1: Z.nzsimpl; only 1: apply Z.abs_nonneg).	33.7495629787	25570
Coq.QArith.Qabs.Zabs_Qabs	40	1.0.1.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician4; only 1: red; only 1: simpl; only 1: easy).	0.0469229221344	7
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.0.1.0.1.0.2.0.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (y1, y2); only 1: unfold Qeq; only 1: destruct _tmp_tactician0 as (n, d); only 1: unfold Qmult; only 1: simpl in *; only 1: f_equiv; only 1: rewrite <- Z.abs_mul; only 1: trivial).	16.7945401669	8339
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: reflexivity).	0.00718307495117	2
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00719594955444	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00637197494507	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	2.0.1.2.3.0.0.7.2.0	synth with cache (only 1: intros _tmp_tactician0; only 1: split; only 1: red; only 1: intros P; only 1: intros; only 1: destruct H; only 1: firstorder; only 1: intros H0; only 1: intros h2; only 1: auto).	7.47541618347	10953
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3.3	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.013454914093	12
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0125498771667	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: intros y; only 1: simpl_crelation).	0.0141708850861	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00824499130249	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0	synth with cache (only 1: simpl_crelation).	0.0112869739532	1
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: firstorder).	0.00757789611816	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	6.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0320110321045	24
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0097508430481	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00671601295471	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.00872802734375	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00709104537964	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.0467150211334	39
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	8	synth with cache (only 1: firstorder).	0.120807886124	9
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.398291110992	112
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	1.83265399933	721
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	1.26959609985	518
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	6.57860207558	2664
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0941870212555	20
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.270883083344	153
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	9.50776696205	3265
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	3.1.0.0	synth with cache (only 1: hnf; only 1: intros y; only 1: intros H'; only 1: firstorder).	0.0199239253998	12
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	10	synth with cache (only 1: firstorder).	0.0502350330353	21
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3.0	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0160779953003	5
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.6	synth with cache (only 1: reduce; only 1: auto).	0.0143899917603	8
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	5.2.0	synth with cache (only 1: intros HRR'; only 1: unfold respectful in *; only 1: firstorder).	0.0487129688263	45
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0105419158936	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00676393508911	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	3.1	synth with cache (only 1: hnf; only 1: simpl_crelation).	0.0878140926361	31
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00656509399414	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00706815719604	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros B; only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: simpl_crelation; only 1: firstorder).	0.0346999168396	10
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	8.0	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.0229389667511	10
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.00772714614868	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.1.0	synth with cache (only 1: intros A; only 1: intros R'; only 1: intros; only 1: simpl_crelation).	0.0232870578766	6
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).	15.7112569809	7501
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.0.5.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).	1.85841608047	774
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.011412858963	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.012825012207	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.013995885849	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.41789484024	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	3	synth with cache (only 1: reflexivity).	0.0153830051422	4
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0137321949005	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	3.2.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: hnf; only 1: firstorder).	0.0199608802795	9
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	13	synth with cache (only 1: firstorder).	0.636472940445	614
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0369300842285	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0294559001923	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0498259067535	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0593178272247	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0153388977051	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0149040222168	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.1.0.1.1.3	synth with cache (only 1: intros C; only 1: split; only 1: intros H1; only 1: assumption; only 1: intros H1; only 1: assumption).	0.0809109210968	64
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0110330581665	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0121018886566	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.0156509876251	4
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0192940235138	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0580308437347	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.0.6.1.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: intros C; only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	8.9368159771	5420
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.00912094116211	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00605607032776	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00791501998901	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.255769968033	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: auto).	0.00773596763611	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00830388069153	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0138900279999	6
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).	0.0435080528259	36
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0196812152863	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0218241214752	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0260910987854	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0321049690247	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.00690698623657	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00686597824097	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.2.2.0.0	synth with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: assumption; only 1: intros H2; only 1: firstorder).	0.118723154068	47
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0177049636841	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.036808013916	8
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	4	synth with cache (only 1: firstorder).	0.00993895530701	5
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0114879608154	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: red in poe; only 1: red in poe; only 1: red in poe; only 1: firstorder).	0.0846099853516	6
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0119609832764	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	3	synth with cache (only 1: reflexivity).	0.011164188385	4
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0101749897003	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00990509986877	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.0.3.0.2.2.0.6	synth with cache (only 1: intros Fr; only 1: split; only 1: red; only 1: intros y; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).	1.47739005089	1506
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0154659748077	4
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0157849788666	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	2.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0140550136566	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	3.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0172290802002	5
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).	0.452758789062	154
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	1.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).	0.018012046814	4
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0140590667725	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0136659145355	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0106239318848	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	8	synth with cache (only 1: firstorder).	0.0232701301575	9
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.225740909576	64
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.221143007278	74
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	7.87293291092	4554
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	3.5.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	3.67361402512	1394
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	4.3.0	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	1.31407284737	455
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	13	synth with cache (only 1: firstorder).	3.42791199684	1445
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.57547211647	293
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.3.0	synth with cache (only 1: hnf; only 1: intuition; only 1: firstorder).	0.0258581638336	6
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.018070936203	7
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	4.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0222420692444	9
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: simpl_relation).	0.0264530181885	9
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.3.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0943958759308	10
Coq.Classes.Morphisms.GenericInstances.flip1	40	1.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).	0.0423898696899	6
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0130310058594	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0194389820099	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0116000175476	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.015102148056	1
Coq.Classes.Morphisms.proper_proper	40	4.1.0	synth with cache (only 1: reduce; only 1: simpl_relation; only 1: apply H).	0.040943145752	8
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	3.2	synth with cache (only 1: simpl_relation; only 1: firstorder).	0.0250749588013	7
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0142550468445	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0211939811707	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.6.1.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: unfold respectful; only 1: simpl_relation).	4.01731801033	1420
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.5	synth with cache (only 1: reduce; only 1: simpl_relation).	0.0302910804749	7
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0163052082062	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0479638576508	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0158519744873	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	synth with cache (only 1: firstorder).	0.018737077713	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0278608798981	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.434938907623	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0225780010223	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.0	synth with cache (only 1: intros x; only 1: firstorder).	0.0250689983368	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.0191841125488	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0201411247253	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.1.2	synth with cache (only 1: intros ?; only 1: intros; only 1: firstorder).	0.0438981056213	22
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0199499130249	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.0190680027008	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40	0.4.9.14	synth with cache (only 1: intros y; only 1: intros; only 1: apply H; only 1: assumption).	1.35112714767	3524
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.28	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.4349668026	2830
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	19	synth with cache (only 1: apply Nat.eqb_eq).	0.65374994278	545
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	7	synth with cache (only 1: apply Nat.leb_le).	0.0475471019745	28
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	synth with cache (only 1: apply _).	0.0115580558777	2
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0107908248901	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.00883197784424	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.3.1	synth with cache (only 1: intros x; only 1: compute; only 1: firstorder).	0.106883049011	7
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.484283208847	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2.0.0	synth with cache (only 1: intros x1; only 1: intros x'; only 1: firstorder).	0.139704942703	63
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).	0.015683889389	4
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.00905299186707	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intros ?; only 1: reduce; only 1: firstorder).	0.0181930065155	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.00816297531128	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.1	synth with cache (only 1: unfold to_nat; only 1: easy).	0.0146238803864	4
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id p); only 1: rewrite <- (id q); only 1: rewrite H; only 1: easy; only 1: congruence).	0.680916070938	311
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.0.2.1.9.1	synth with cache (only 1: unfold gt; only 1: rewrite (compare_antisym q); only 1: rewrite inj_compare; only 1: rewrite CompOpp_iff; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	3.9600610733	2601
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	4.3.11.0.1.2.1.1	synth with cache (only 1: induction p using peano_ind; only 1: simpl; only 1: inversion 1; only 1: intros; only 1: rewrite inj_succ; only 1: destruct (is_succ p) as (n, _tmp_tactician0); only 1: rewrite Nat.pred_succ; only 1: auto).	28.6699249744	23295
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	6.2.0.0.4.0.0.1.0.2.38	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: destruct n; only 1: easy; only 1: auto).	35.7256689072	43729
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.1.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: easy; only 1: trivial).	0.0182449817657	5
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.7	synth with cache (only 1: intuition; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite id_succ in H; only 1: rewrite id_succ in H; only 1: injection H; only 1: easy).	4.91646003723	2385
Coq.PArith.Pnat.SuccNat2Pos.inv	40	1.19.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: destruct 1; only 1: apply Pos2Nat.id).	4.54798078537	3939
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	2.2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj; only 1: easy).	0.0282440185547	15
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.2.2.2	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: Nat.nzsimpl; only 1: easy).	0.0558528900146	38
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0162649154663	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	9	synth with cache (only 1: split).	0.0933899879456	15
Coq.PArith.BinPos.Pos.succ_discr	40	1.6.3.1.8.29	synth with cache (only 1: destruct p; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: easy).	3.60703802109	9912
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: easy).	0.00758218765259	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.5.0.0.0.0.1.0.0.0.4.1	synth with cache (only 1: destruct p; only 1: induction p; only 1: simpl; only 1: destruct p; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: easy; only 1: tauto; only 1: easy; only 1: reflexivity).	25.8293790817	17139
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.0165810585022	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	12.3.6.10.19	synth with cache (only 1: inversion 1; only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	3.32527494431	7158
Coq.PArith.BinPos.Pos.succ_not_1	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0286900997162	4
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.1.0.0.2.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: easy).	1.40501403809	728
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.3.5.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	3.19962000847	1642
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.2	synth with cache (only 1: induction p; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	0.0264458656311	7
Coq.PArith.BinPos.Pos.add_1_l	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0212919712067	4
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.5.3.2.14	synth with cache (only 1: split; only 1: apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: auto using add_carry_add).	14.1951980591	7400
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.4.1.1	synth with cache (only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: simpl; only 1: f_equal).	0.0391280651093	20
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	5	synth with cache (only 1: auto).	0.00849509239197	6
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: easy).	0.007817029953	1
Coq.PArith.BinPos.Pos.mul_1_r	40	1.0.0.4.0.1.0.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: easy).	0.645560979843	657
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.1.2.0.0.1.1.0.0.0.0.8	synth with cache (only 1: revert q; only 1: induction p as [p IHp| p IHp| ]; only 1: intros until q; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto; only 1: intros until q; only 1: simpl; only 1: f_equal; only 1: auto; only 1: intros until q; only 1: simpl; only 1: f_equal).	39.4823498726	23795
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.1.1.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: intros _tmp_tactician0; only 1: intros r; only 1: apply mul_reg_r; only 1: congruence).	0.272598981857	81
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.36364197731	146
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.0.0.0.1.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: easy).	4.58210206032	3274
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.703364849091	289
Coq.PArith.BinPos.Pos.square_xO	40	0.1.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: rewrite mul_xO_r; only 1: f_equal).	0.0195219516754	5
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.2.0.0.2.0.0.3.1.26	synth with cache (only 1: apply succ_inj; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: easy).	10.0026450157	14398
Coq.PArith.BinPos.Pos.pow_succ_r	40	1.2.0.6.4	synth with cache (only 1: revert q; only 1: unfold pow; only 1: intros r; only 1: rewrite iter_succ; only 1: trivial).	10.4732618332	6669
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.0422689914703	9
Coq.PArith.BinPos.Pos.sub_mask_add	40	0.3.2.0.0.0.0.0.3.1.0	synth with cache (only 1: revert p q; only 1: intros _tmp_tactician0; only 1: intros until q; only 1: case sub_mask_spec; only 1: congruence; only 1: intros _tmp_tactician2; only 1: intros H; only 1: subst; only 1: congruence; only 1: intros H; only 1: congruence).	8.68319106102	5025
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	8.1.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	0.537221908569	250
Coq.PArith.BinPos.Pos.leb_le	40	13.1.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	5.80007600784	4501
Coq.PArith.BinPos.Pos.compare_cont_spec	40	4.10.2	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	2.15768504143	1703
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	4.0.0.0.1.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy).	0.856948137283	222
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.0.0.1.0.2.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	2.51640605927	970
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	0.7.5	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	2.04175496101	1218
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0386769771576	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	1.0.0.0.1.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy; only 1: split; only 1: trivial; only 1: easy; only 1: easy).	0.618046998978	180
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.1.1.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy; only 1: easy; only 1: easy).	0.508423089981	148
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0372581481934	7
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.1.0.2.2	synth with cache (only 1: unfold compare; only 1: destruct compare_cont; only 1: trivial; only 1: split; only 1: trivial).	0.0448369979858	29
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0063328742981	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	5.6.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: split).	11.925755024	10904
Coq.PArith.BinPos.Pos.compare_xO_xI	40	6.3.11.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	17.1938829422	13932
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40	0.8.4.1	synth with cache (only 1: rewrite <- sub_mask_neg_iff; only 1: revert q; only 1: fix even_spec 1; only 1: auto).	8.05364894867	4982
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.3.3.1.0.2.12	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: easy; only 1: simpl; only 1: reflexivity).	5.4978749752	5348
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.2.0	synth with cache (only 1: unfold lt; only 1: split; only 1: easy; only 1: easy).	0.176925897598	81
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.2.2.0	synth with cache (only 1: apply not_iff_compat; only 1: unfold compare; only 1: split; only 1: easy; only 1: easy).	0.340204000473	158
Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.0.0.2.0	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0290279388428	7
Coq.PArith.BinPos.Pos.gt_lt	40	0.2.0.0.1.0.1.1	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.610936880112	258
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00697994232178	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	0.0.0.1	synth with cache (only 1: apply not_iff_compat; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0195760726929	5
Coq.PArith.BinPos.Pos.ge_le	40	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0230338573456	5
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00576186180115	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	7.0.0.0.0.0.2.1.3	synth with cache (only 1: induction p using peano_rect; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	4.30348515511	4814
Coq.PArith.BinPos.Pos.nlt_1_r	40	6.0.0.1.3.0.1	synth with cache (only 1: rewrite lt_iff_add; only 1: rewrite <- sub_mask_neg_iff; only 1: destruct p; only 1: simpl; only 1: discriminate; only 1: discriminate; only 1: easy).	2.56980681419	1752
Coq.PArith.BinPos.Pos.lt_1_succ	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: rewrite lt_iff_add; only 1: exists 1; only 1: easy).	0.141333818436	62
Coq.PArith.BinPos.Pos.le_nlt	40	0.0.0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0225450992584	6
Coq.PArith.BinPos.Pos.lt_nle	40	0.0.2.0.0.0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: unfold ge; only 1: unfold lt; only 1: unfold compare; only 1: split; only 1: easy; only 1: apply comparison_eq_stable).	0.163493871689	31
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.1.0.3	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.110970973969	43
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0.0.0.1.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_succ_succ; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).	0.0253360271454	9
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	0.0.0.1.1.0	synth with cache (only 1: red; only 1: intros y; only 1: intros y'; only 1: intros Eyy'; only 1: rewrite Eyy'; only 1: easy).	0.407744884491	135
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0.1	synth with cache (only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0334270000458	19
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.0.8.0.2	synth with cache (only 1: rewrite PeanoNat.Nat.lt_eq_cases; only 1: intros H; only 1: intuition; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: easy).	9.94399690628	7229
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	1.0.0.0.9.0	synth with cache (only 1: split; only 1: intros H; only 1: apply lt_eq_cases; only 1: right; only 1: easy; only 1: exact PeanoNat.Nat.le_trans).	0.234177112579	185
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	6.1.8.0.2	synth with cache (only 1: revert p q r; only 1: intros n; only 1: fix gcd_divide 1; only 1: intros _tmp_tactician0; only 1: auto using add_no_neutral).	19.5463700294	9898
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.2.2	synth with cache (only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0706717967987	36
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.0.0.2.0.3	synth with cache (only 1: revert p q r; only 1: intros n; only 1: intros _tmp_tactician0; only 1: intros m; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy).	1.39801192284	705
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0182468891144	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3.3	synth with cache (only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.532911062241	212
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0179009437561	7
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0158040523529	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	2.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: revert q; only 1: congruence).	0.258301019669	67
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2.0.1.0.3	synth with cache (only 1: induction p; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.101694107056	66
Coq.PArith.BinPos.Pos.pred_sub	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0166018009186	4
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.2.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (r, Hr); only 1: exists r; only 1: apply sub_mask_pos_iff; only 1: trivial).	0.0297210216522	8
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: destruct (sub_mask_pos n m H) as (p, _tmp_tactician0); only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.0298840999603	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: destruct (sub_mask_pos n m H) as (p, _tmp_tactician0); only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.0278182029724	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	38.053800106	21163
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.0.6	synth with cache (only 1: unfold lt; only 1: unfold sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy; only 1: easy'; only 1: easy).	0.72575211525	326
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	2.0.3.0.0.0.0.1.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H'; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	15.5838239193	10914
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	1.6	synth with cache (only 1: apply max_r; only 1: apply le_1_l).	0.0288097858429	21
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0338079929352	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0138740539551	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.112318992615	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.0.1.0.0.2	synth with cache (only 1: apply max_monotone; only 1: red; only 1: red; only 1: intros H; only 1: intros Hnm; only 1: apply add_le_mono_l).	0.0276920795441	13
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).	0.0543048381805	17
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0.3.3.3	synth with cache (only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).	0.85009098053	354
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.1.0.1	synth with cache (only 1: apply max_monotone; only 1: intros x; only 1: intros Hnm; only 1: apply mul_le_mono_l).	0.0624339580536	23
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply mul_le_mono_l).	0.0193150043488	8
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0.1.1.1	synth with cache (only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply mul_le_mono_l).	0.0326151847839	10
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.0.1.1.0.4.0.0.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m; only 1: simpl; only 1: auto).	6.37704086304	4669
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.7.0.0.2.0.3.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).	1.771930933	1506
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	4.0.5.5	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros until q; only 1: trivial).	1.95134115219	2007
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.31.4	synth with cache (only 1: intros _tmp_tactician0; only 1: fix le_div2 1; only 1: trivial).	21.2550508976	36115
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	synth with cache (only 1: unfold Pos.gt; only 1: easy).	0.0102028846741	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	3.4.0.16.14	synth with cache (only 1: intros p; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	3.93718910217	5798
Coq.Arith.Le.le_n_0_eq	40	0.6.0.0	synth with cache (only 1: intros H; only 1: Nat.le_elim H; only 1: easy; only 1: easy).	0.0273509025574	10
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	7.0	synth with cache (only 1: fix even_spec 1; only 1: firstorder).	0.0606851577759	45
Coq.Arith.Even.odd_equiv	40	4.0.2	synth with cache (only 1: fix odd_spec 1; only 1: intros until n; only 1: easy).	0.163315057755	35
Coq.Arith.Even.even_or_odd	40	2.3.29.19	synth with cache (only 1: Nat.induct n; only 1: firstorder; only 1: intros p; only 1: intuition).	5.18582391739	11354
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0193138122559	5
Coq.Arith.Even.not_even_and_odd	40	5.6.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	6.21177196503	6670
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.0746071338654	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0421681404114	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0406169891357	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0400409698486	1
Coq.Arith.Even.even_plus_aux	40	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.252863883972	17
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0418801307678	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0429699420929	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0403468608856	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0404028892517	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.177144050598	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0405440330505	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0395560264587	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0872700214386	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.131145954132	1
Coq.Arith.Even.even_mult_l	40	3	synth with cache (only 1: parity_binop).	0.0453290939331	20
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0271520614624	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0766229629517	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0403878688812	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0398600101471	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0283138751984	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0575590133667	1
Coq.Arith.Minus.minus_n_O	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0219798088074	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0.0	synth with cache (only 1: Nat.nzsimpl'; only 1: easy).	0.0234179496765	2
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	3.0.0.0.1	synth with cache (only 1: nzinduct p; only 1: Nat.nzsimpl; only 1: easy; only 1: intros p; only 1: easy).	0.219969987869	13
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	0.24	synth with cache (only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.527601003647	815
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	11.0.4	synth with cache (only 1: intros y; only 1: intros y'; only 1: CRelationClasses.simpl_crelation).	5.72914981842	4315
Coq.Arith.Between.Between.between_le	40	6.0.6.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).	6.38906407356	3690
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	0.0.0.0.2.2.2.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros y; only 1: induction 1 as [| * [| ]]; only 1: intros Ha; only 1: intros H; only 1: auto; only 1: auto with arith; only 1: auto with arith).	10.6750118732	5068
Coq.Arith.Between.Between.exists_le_S	40	5.2.5.3.4	synth with cache (only 1: intros H1; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).	19.2375609875	14844
Coq.Arith.Between.Between.exists_S_le	40	5.0.6.3	synth with cache (only 1: intros H1; only 1: fix le_div2 1; only 1: intros m; only 1: auto with arith).	6.39034891129	4308
Coq.Arith.Between.Between.in_int_intro	40	2.2.2.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros c; only 1: easy).	0.332951068878	104
Coq.Arith.Between.Between.in_int_lt	40	0.1.2.1.2	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	0.745906114578	231
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0.0	synth with cache (only 1: intros p; only 1: induction 1; only 1: auto with arith).	0.02414894104	3
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0.0.0	synth with cache (only 1: intros *; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: auto with arith).	0.0287809371948	4
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0349259376526	15
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	3.1.4.15.14	synth with cache (only 1: destruct 1; only 1: PeanoNat.Nat.le_elim H; only 1: easy; only 1: destruct H; only 1: easy).	2.66023516655	8177
Coq.Arith.Peano_dec.O_or_S	40	6.26.60	synth with cache (only 1: revert n; only 1: fix odd_spec 1; only 1: easy).	14.5592989922	41486
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40	0.0.0.10.0.0.3.0.15	synth with cache (only 1: revert n m; only 1: intros n; only 1: intros b; only 1: intros m; only 1: intros LT; only 1: revert n m; only 1: intros m; only 1: apply Nat.mul_lt_mono_pos_l; only 1: assumption).	29.8267979622	32231
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.18	synth with cache (only 1: fix even_equiv 1; only 1: auto with arith).	3.86714696884	3232
Coq.Arith.Div2.odd_S2n	40	0.1.0.9.2	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: exists (Nat.div2 n); only 1: destruct _tmp_tactician0 as (p, _tmp_tactician2); only 1: auto with arith).	1.83788299561	1895
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.130998134613	55
Coq.Arith.Div2.div2_double_plus_one	40	0.6.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).	0.0606870651245	24
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40
Coq.Arith.Plus.plus_le_compat_r	40	1.0.1.16	synth with cache (only 1: induction 1; only 1: easy; only 1: right; only 1: easy).	7.76845812798	2716
Coq.Arith.Plus.plus_lt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0107598304749	3
Coq.Arith.Plus.plus_lt_compat_r	40	2.1.9.22	synth with cache (only 1: induction 1; only 1: auto; only 1: right; only 1: easy).	5.94134712219	5873
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	2	synth with cache (only 1: apply Nat.add_le_mono).	0.0364918708801	35
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	3.2.0.8.0.9.0.13	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intros Ha; only 1: intros IH; only 1: Nat.nzsimpl; only 1: auto).	14.104886055	10933
Coq.Arith.Plus.le_plus_r	40	0.0.6.5.0.2.13	synth with cache (only 1: revert m; only 1: induction n; only 1: intros ?; only 1: trivial; only 1: fix le_div2 1; only 1: intros until m; only 1: auto).	3.43320608139	2498
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	0.1.3.3.0.0.0.5	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros _tmp_tactician0; only 1: intros a'; only 1: intros H1; only 1: easy).	8.93929886818	3586
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	1.1.4.3.5.11	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros IH; only 1: Nat.nzsimpl; only 1: intros _tmp_tactician2; only 1: auto).	37.0754890442	23474
Coq.Arith.Lt.lt_le_S	40	3.0	synth with cache (only 1: intros IH; only 1: Nat.order).	0.0138058662415	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.00747799873352	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.3.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0212919712067	6
Coq.Arith.Lt.le_not_lt	40	0.3	synth with cache (only 1: intros LT; only 1: Nat.order).	0.197324037552	57
Coq.Arith.Lt.lt_not_le	40	0.1	synth with cache (only 1: intros LT; only 1: Nat.order).	0.0155611038208	3
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intros H; only 1: Nat.auto').	0.0149059295654	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intros H; only 1: intros H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.019387960434	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.00799012184143	1
Coq.Arith.Lt.lt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0189671516418	11
Coq.Arith.Lt.S_pred	40	0.1.5.2.1	synth with cache (only 1: revert m; only 1: intros Hn; only 1: induction 1; only 1: Morphisms.f_equiv; only 1: Morphisms.f_equiv).	1.33742809296	887
Coq.Arith.Lt.S_pred_pos	40	0.0.0.0.0.38	synth with cache (only 1: Nat.induct ltac:(n); only 1: intros H; only 1: exfalso; only 1: false_hyp H Nat.lt_irrefl; only 1: intros p; only 1: auto).	13.8398008347	40373
Coq.Arith.Lt.lt_pred	40	0.3.0.48	synth with cache (only 1: destruct m; only 1: intros H; only 1: easy; only 1: apply Nat.succ_lt_mono).	5.25433897972	12868
Coq.Arith.Lt.lt_pred_n_n	40	2.1.1.0.3	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).	0.742763996124	535
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	1.17190790176	213
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0166459083557	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0177910327911	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0176720619202	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0176558494568	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: intros p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n; only 1: intros H; only 1: intros q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	1.64519906044	519
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.2.0.0.18.3.12	synth with cache (only 1: apply neg_false; only 1: split; only 1: apply Nat.neq_0_lt_0; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: inversion 1).	10.5886280537	14072
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.0.1	synth with cache (only 1: destruct n; only 1: left; only 1: easy; only 1: right; only 1: apply Nat.lt_0_succ).	0.249394893646	82
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.1.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.50567793846	584
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.49314904213	149
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.260259866714	81
Coq.Arith.Compare_dec.le_lt_eq_dec	40	0.0.0.1.0.8.0.0.0.2.1.2	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intros H; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: apply Peano.le_S_n; only 1: trivial).	31.8777480125	19407
Coq.Arith.Compare_dec.le_dec	40	2.0.0.2.0.0.0.0.0.2.0.5.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).	29.8334019184	20552
Coq.Arith.Compare_dec.lt_dec	40	1.0.0.4.0.0.0.1.0.0.2.0.0.0.5.1	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	13.4186348915	11832
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.00745820999146	1
Coq.Arith.Compare_dec.ge_dec	40	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).	1.72654795647	1194
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	5	synth with cache (only 1: apply Nat.le_decidable).	0.0294229984283	22
Coq.Arith.Compare_dec.dec_gt	40	1	synth with cache (only 1: apply Nat.lt_decidable).	0.0080680847168	2
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.00925588607788	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.00862908363342	1
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.00998592376709	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.00940203666687	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.00923800468445	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0104348659515	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.010272026062	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	0.5.8	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.622578859329	387
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	6.0.0.0.0.7.4	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply Nat.leb_le).	5.37599897385	3342
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0184409618378	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.0.5.1.9	synth with cache (only 1: destruct m; only 1: rewrite Nat.leb_nle; only 1: Nat.order; only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	1.25207901001	837
Coq.Arith.Compare_dec.leb_compare	40	11.4.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	24.3606500626	10894
Coq.Arith.EqNat.eq_nat_refl	40	1.0.13	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.0569911003113	112
Coq.Arith.EqNat.eq_nat_is_eq	40	2.10.13	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	4.60742712021	4762
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.02401304245	7
Coq.Arith.EqNat.eq_nat_eq	40	2.1.0.1.0	synth with cache (only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: apply eq_nat_is_eq).	0.440760135651	133
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	1.2.0.11	synth with cache (only 1: fix gcd_divide 1; only 1: intros a; only 1: intros m1; only 1: auto).	2.79929900169	2246
Coq.Arith.EqNat.beq_nat_refl	40	2.0.0.0.5.63	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: easy; only 1: intros n; only 1: intros IH; only 1: easy).	1.37737321854	3853
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.2.6	synth with cache (only 1: Nat.double_induct n m; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).	4.43390393257	2607
Coq.Arith.EqNat.beq_nat_false	40	1.0.0.2.0.0.0.1.0.1.3.19	synth with cache (only 1: Nat.double_induct n m; only 1: intros m; only 1: destruct m; only 1: intros H; only 1: intros ?; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m; only 1: simpl; only 1: easy; only 1: intuition).	13.5123651028	16787
Coq.Arith.EqNat.beq_nat_eq	40	1.0.0.0.0.0.2.1.0.8.4	synth with cache (only 1: intros until m; only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).	19.1858108044	15901
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0124590396881	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0209219455719	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0116031169891	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.0124168395996	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0128650665283	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0159590244293	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0292558670044	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.15	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: auto; only 1: auto).	0.118016004562	149
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.0123748779297	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0190389156342	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: split).	0.105433940887	16
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	2.0	synth with cache (only 1: intros H; only 1: easy).	0.0247910022736	4
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	synth with cache (only 1: easy).	0.0134258270264	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2.2	synth with cache (only 1: simpl; only 1: trivial).	0.192882061005	68
Coq.Arith.PeanoNat.Nat.square_spec	40	11	synth with cache (only 1: reflexivity).	0.0448920726776	33
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	2.0.0.1.29	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: destruct _tmp_tactician2 as [| ]; only 1: discriminate; only 1: discriminate).	15.4382519722	13700
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	4.1	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.216184139252	63
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	3.0	synth with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0205500125885	5
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.2.0.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).	0.0766401290894	8
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0226919651031	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	15	synth with cache (only 1: apply le_0_l).	0.212855100632	134
Coq.Arith.PeanoNat.Nat.div2_double	40	0.2.0.1.4.14	synth with cache (only 1: nzsimpl'; only 1: induction n; only 1: auto; only 1: simpl; only 1: nzsimpl; only 1: auto).	1.97762918472	1293
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.2.0.0.1.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: easy).	1.98190188408	517
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	2.6.0.1.1.0.5	synth with cache (only 1: induct n; only 1: intros ?; only 1: trivial; only 1: intros p; only 1: intros IH; only 1: fix le_div2 1; only 1: trivial).	38.5308229923	14653
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.4.9	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	2.08192396164	868
Coq.Arith.PeanoNat.Nat.double_twice	40	0.1.2.0	synth with cache (only 1: intros n; only 1: simpl; only 1: rewrite add_0_r; only 1: reflexivity).	0.242188930511	51
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: intros m; only 1: easy).	0.189707040787	38
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	2.3.12.0.0.5	synth with cache (only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	19.0049688816	12198
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	0.3.4.1.5.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: unfold odd; only 1: fix odd_spec 1; only 1: easy).	30.2705311775	12388
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40
Coq.Arith.PeanoNat.Nat.lor_spec	40	0.1.0.3.0.0.4.2.16.11.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: intros m; only 1: rewrite <- not_true_iff_false; only 1: simpl; only 1: revert m; only 1: fix odd_spec 1; only 1: intros until m; only 1: easy; only 1: rewrite max_le_iff; only 1: left; only 1: trivial).	40.0058600903	49726
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.1.4.0.28.2	synth with cache (only 1: apply testbit_bitwise_1; only 1: fix odd_spec 1; only 1: easy; only 1: rewrite max_le_iff; only 1: left; only 1: trivial).	37.6235091686	40900
Coq.Arith.PeanoNat.Nat.div2_spec	40	4	synth with cache (only 1: trivial).	0.0218279361725	5
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0155551433563	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.157613039017	57
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0.2.5	synth with cache (only 1: revert m; only 1: intros b; only 1: apply Nat.succ_lt_mono).	0.0600740909576	28
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.00881505012512	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0104031562805	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.00897598266602	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.00969505310059	2
Coq.Arith.Gt.le_S_gt	40	2.3	synth with cache (only 1: intros H; only 1: easy).	0.0136620998383	7
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.00910305976868	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.00912404060364	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.00867390632629	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: apply Nat.succ_le_mono; only 1: easy).	0.4488530159	93
Coq.Arith.Gt.gt_0_eq	40	11.0	synth with cache (only 1: apply Nat.lt_eq_cases; only 1: intuition).	0.237957954407	145
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00986504554749	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00949883460999	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.0.2.3.0.1	synth with cache (only 1: intros A; only 1: intros y; only 1: intros n; only 1: intros B; only 1: destruct 1; only 1: reflexivity).	0.223659992218	166
Coq.Logic.JMeq.JMeq_trans	40	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0248568058014	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0341999530792	8
Coq.Logic.JMeq.JMeq_rect	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0348229408264	8
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0367000102997	9
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0377268791199	9
Coq.Logic.JMeq.JMeq_congr	40	0.0.0.0.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0640108585358	29
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0180549621582	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0144510269165	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.014279127121	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.0.2.0.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).	0.057541847229	30
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	4.0.3.12	synth with cache (only 1: intros x; only 1: intros H; only 1: destruct H; only 1: assumption).	0.838073968887	1712
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).	0.0312919616699	6
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	14.6	synth with cache (only 1: intros P; only 1: tauto).	0.422224998474	739
Coq.Logic.Classical_Prop.not_imply_elim	40	4.1.5	synth with cache (only 1: intros P; only 1: intros x''; only 1: tauto).	1.173350811	1465
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0.0.1	synth with cache (only 1: unfold not; only 1: intros A; only 1: intros x; only 1: intros _tmp_tactician0; only 1: auto).	0.015998840332	7
Coq.Logic.Classical_Prop.imply_to_or	40	1.0.1.3	synth with cache (only 1: unfold not; only 1: intros p; only 1: intros Ext; only 1: tauto).	0.211611032486	79
Coq.Logic.Classical_Prop.imply_to_and	40	2.1.0.4	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intros ?; only 1: tauto).	0.176410913467	123
Coq.Logic.Classical_Prop.or_to_imply	40	1	synth with cache (only 1: tauto).	0.0229489803314	14
Coq.Logic.Classical_Prop.not_and_or	40	0.0.5	synth with cache (only 1: intros A; only 1: intros *; only 1: tauto).	0.0941870212555	77
Coq.Logic.Classical_Prop.or_not_and	40	1	synth with cache (only 1: tauto).	0.0231349468231	24
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0116038322449	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0104119777679	1
Coq.Logic.Classical_Prop.imply_and_or	40	0.0	synth with cache (only 1: intros B; only 1: tauto).	0.0126881599426	2
Coq.Logic.Classical_Prop.imply_and_or2	40	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: tauto).	0.0159230232239	3
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	1.17.7	synth with cache (only 1: intros m; only 1: destruct m; only 1: eauto).	3.55768299103	8592
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.10	synth with cache (only 1: red; only 1: eauto).	0.0562260150909	81
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	10.40.10	synth with cache (only 1: intros Hsnd; only 1: subst; only 1: split).	3.02645921707	14373
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.32.4.1.0	synth with cache (only 1: intros y; only 1: intros z; only 1: intros H0; only 1: subst; only 1: reflexivity).	6.08821511269	18759
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	2.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	5.21198892593	6029
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	7.0.5.2	synth with cache (only 1: split; only 1: split; only 1: intros; only 1: firstorder).	29.1280300617	924
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	16	synth with cache (only 1: firstorder  (subst; auto)).	0.752794981003	941
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	15.0.1.2.0.0.0.0.0	synth with cache (only 1: intros D_iota; only 1: intros H; only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct _tmp_tactician0 as [x y]; only 1: auto; only 1: exists x; only 1: eauto).	3.92732596397	8863
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.7.0.0.1.0	synth with cache (only 1: intros D_epsilon; only 1: intros A; only 1: intros P; only 1: intros Inh; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	2.00186514854	2922
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.4.0.1.0.0.1	synth with cache (only 1: intros AC_depfun; only 1: intros A; only 1: intros B; only 1: intros R; only 1: intros H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	3.43525099754	2332
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0.1.1.1.0	synth with cache (only 1: intros IndefDescr; only 1: intros A; only 1: intros B; only 1: intros R; only 1: intros H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intros x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	5.02470302582	3686
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: intros A; only 1: intros B; only 1: intros GenSetoidFunChoice; only 1: intros R; only 1: intros T; only 1: intros Hequiv; only 1: intros Hcompat; only 1: intros Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	15.7837350368	2317
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.10.26.57	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	3.52752518654	24304
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	9.0.0.0.0.0.2	synth with cache (only 1: intros Ext; only 1: intros A; only 1: intros Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).	1.79663491249	2975
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.2.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.0418431758881	23
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	5.4.3.1.0.2.0.0	synth with cache (only 1: intros EM; only 1: intros A; only 1: destruct (EM A); only 1: right; only 1: exact (fun _ => H); only 1: intros y; only 1: left; only 1: easy).	4.90382695198	8696
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	2.0.0.7.0.0.2	synth with cache (only 1: intros c; only 1: intros notall; only 1: intros n; only 1: intros Streicher_K; only 1: apply notall; only 1: exists n; only 1: apply Streicher_K).	4.5125169754	4998
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.0.4.0.0.2	synth with cache (only 1: intros g; only 1: intros notall; only 1: intros n; only 1: apply NNPP; only 1: intros abs; only 1: apply notall; only 1: exists n; only 1: trivial).	1.91202521324	1651
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.0.0.5	synth with cache (only 1: destruct 1; only 1: intros all; only 1: apply H; only 1: trivial).	0.586772918701	472
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).	1.89608192444	1761
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0275769233704	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	9.4.4.7.2.14	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (l, F); only 1: induction l; only 1: left; only 1: auto; only 1: firstorder).	17.7999501228	21451
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0154640674591	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0107440948486	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0125188827515	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0146920681	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0150661468506	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	6.9.0.0.8.20	synth with cache (only 1: simpl; only 1: unfold f_equal; only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	2.48669505119	6624
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	synth with cache (only 1: reflexivity).	0.00791597366333	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.00666999816895	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality_dep; only 1: intros x; only 1: apply H).	0.0208730697632	8
Coq.Logic.HLevels.false_hprop	40	0.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p).	0.00925016403198	3
Coq.Logic.HLevels.true_hprop	40	4.3.2.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: auto).	0.116863012314	291
Coq.Logic.HLevels.not_hprop	40	1.0.1.0.2.0	synth with cache (only 1: intros p; only 1: intros H; only 1: intros q; only 1: apply functional_extensionality; only 1: intros x; only 1: contradiction).	0.0156960487366	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.1.1.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros x; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: reflexivity).	0.0200929641724	13
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: intros H2; only 1: auto).	0.012542963028	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	11.9594061375	27841
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	10.53	synth with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	24.713435173	80721
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.6	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0409049987793	44
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.4.0.0.12.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.685976028442	1261
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.012531042099	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.021152973175	13
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.10.0.0.13.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.73560786247	3387
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intros ?; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	14.5570390224	27550
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.0.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0355739593506	19
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.406935930252	369
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	27.1.6.17.4	synth with cache (only 1: intros x''; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	22.110129118	62539
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	10.0.0.0	synth with cache (only 1: intros eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.127272129059	294
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.5.0.2.2.8	synth with cache (only 1: intros; only 1: red; only 1: intros UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	2.02784085274	4646
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.12.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.22478890419	366
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	2.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0267150402069	15
Coq.Logic.EqdepFacts.f_eq_dep	40	1.5.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0148439407349	10
Coq.Logic.EqdepFacts.f_eq_dep	40	2	synth with cache (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0131421089172	3
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0352590084076	31
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	2	synth with cache (only 1: trivial).	0.00713706016541	3
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0.0.0	synth with cache (only 1: intros *; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).	0.0156300067902	4
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	1	synth with cache (only 1: reflexivity).	0.00785708427429	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	11.2.0.1.1.0	synth with cache (only 1: intros Ext; only 1: intros A; only 1: intros Q; only 1: intros P; only 1: intros x; only 1: auto).	20.3973250389	18498
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.0729639530182	77
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	1.0.0.1.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.0560641288757	49
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	10.1.2.0.0.1.1.1	synth with cache (only 1: intros A; only 1: unfold not; only 1: intros H1; only 1: intros H; only 1: elim H1; only 1: intros y; only 1: assumption; only 1: contradiction).	10.805325985	28929
Coq.Logic.Decidable.dec_True	40	1.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00846695899963	11
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00778007507324	2
Coq.Logic.Decidable.dec_or	40	1.2.6.0.1	synth with cache (only 1: intros y; only 1: intros z; only 1: red; only 1: unfold decidable; only 1: tauto).	3.64701795578	5161
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0200479030609	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0124349594116	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0147640705109	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0206370353699	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0107209682465	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0094268321991	1
Coq.Logic.Decidable.not_and	40	0.0.1	synth with cache (only 1: intros A; only 1: unfold decidable; only 1: tauto).	0.0194590091705	4
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0170240402222	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0136749744415	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.060389995575	2
Coq.Logic.Decidable.not_true_iff	40	8	synth with cache (only 1: tauto).	0.0233697891235	29
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00672698020935	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0122289657593	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0136020183563	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0155618190765	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0163760185242	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.015496969223	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0432510375977	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.01691198349	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.010931968689	1
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.00982189178467	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.018739938736	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0188629627228	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40	2.5.1.25.8.6	synth with cache (only 1: intros H; only 1: eapply Forall_inv; only 1: apply <- Forall_forall; only 1: intros ?; only 1: left; only 1: eassumption).	20.4698181152	69386
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	7.1	synth with cache (only 1: red; only 1: firstorder).	0.0167129039764	10
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0444729328156	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.0.0.1.1.21	synth with cache (only 1: inversion H; only 1: auto; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.682626962662	542
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0246968269348	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.00955700874329	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.00985312461853	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).	0.037055015564	3
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1	synth with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.117213964462	23
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0101661682129	2
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0132730007172	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: ok; only 1: ok; only 1: ok).	0.0883040428162	8
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2	synth with cache (only 1: easy).	0.0139739513397	3
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.1.0.3.48	synth with cache (only 1: intros n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).	2.86145710945	3591
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.0179350376129	2
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.0127849578857	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	32.10	synth with cache (only 1: destruct 1; only 1: easy).	18.6650578976	23198
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	0.14.0.17	synth with cache (only 1: revert l1 l2; only 1: intros l1; only 1: fix odd_spec 1; only 1: easy).	6.18637895584	6692
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.1.0.0.4	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.43497300148	785
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	10.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: ok).	18.3318669796	9881
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	1.1.3.3.1.8.4.0.4.15.2	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| _tmp_tactician0 ll lx lr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: destruct r as [| _tmp_tactician0 rl rx rr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: auto_tc; only 1: ok; only 1: ok).	23.8922460079	48783
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.3.1.3.0.2.9	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: auto).	2.64992403984	2772
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0365099906921	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	0.0.109	synth with cache (only 1: exists 1; only 1: unfold singleton; only 1: auto).	13.1454148293	72362
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.2.4.1.0	synth with cache (only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.02189993858	399
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).	2.33640408516	607
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.2.2.1.10.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction s; only 1: intuition_in; only 1: descolor; only 1: invrb; only 1: intuition_in).	7.29307699203	6424
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.1.12.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).	3.97514986992	1829
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.0167648792267	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0	synth with cache (only 1: easy).	0.0151069164276	1
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.4.0.2.21.1.5	synth with cache (only 1: intros acc; only 1: simpl; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	20.2364280224	16406
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	79	synth with cache (only 1: ok).	0.703876018524	4540
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.11.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.367358922958	370
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0983808040619	20
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: rewrite fold_spec; only 1: intros; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.786787033081	531
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.506665945053	265
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.4.3.0.0.0.0.0	synth with cache (only 1: intros B1; only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite rev_elements_rev; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.30698108673	2521
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0224370956421	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	1.0.0.7.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.772683858871	844
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.3.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: f_equiv; only 1: trivial).	0.164966821671	53
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: easy; only 1: easy).	0.0225670337677	4
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: easy).	0.0101890563965	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2	synth with cache (only 1: easy).	0.0107500553131	3
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: easy).	0.0475380420685	16
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	3.0	synth with cache (only 1: intros n; only 1: easy).	0.107783794403	5
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	4.9.1.8	synth with cache (only 1: intros Ha; only 1: fix even_spec 1; only 1: intros; only 1: easy).	20.802336216	12481
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	1.1.0.1.0.0.0.0.3.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial).	1.7177798748	1578
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	2.5.4	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	4.27788305283	1565
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0346050262451	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	1.8.16	synth with cache (only 1: intros x; only 1: fix even_spec 1; only 1: auto).	7.23738002777	8430
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	5.12	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.477650880814	688
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0192430019379	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0205459594727	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0177958011627	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0205888748169	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.13	synth with cache (only 1: fix gcd_divide 1; only 1: intros b; only 1: auto).	0.843239068985	623
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0236489772797	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40	4.1.2.6.1.1	synth with cache (only 1: intros n; only 1: intros x; only 1: unfold In; only 1: fix even_spec 1; only 1: intros Eq; only 1: auto).	9.25602388382	7429
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	0.8.1.2.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: intros s; only 1: intros s'; only 1: intros x; only 1: revert x s s'; only 1: intros s'; only 1: intros a; only 1: fix even_spec 1; only 1: intuition congruence).	20.3651950359	11328
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	13.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Eq; only 1: intros s'; only 1: fix even_spec 1; only 1: auto).	5.29494595528	3178
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	0.2.3.6	synth with cache (only 1: intros x; only 1: intros a; only 1: fix even_spec 1; only 1: trivial).	8.86075901985	4029
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	4.1.9.8	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: fix even_spec 1; only 1: firstorder).	10.5737519264	6552
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.6	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.645255088806	245
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	1.2.15.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: intros H; only 1: trivial).	1.02441215515	1517
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0200278759003	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0208659172058	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0178799629211	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0180819034576	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0187418460846	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0166339874268	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.101683855057	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0297510623932	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.15.0	synth with cache (only 1: intros P; only 1: intros H3; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	1.21139478683	1106
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	1.9.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).	0.160778045654	137
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	19	synth with cache (only 1: intuition).	0.462360143661	516
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	10.3	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: intuition).	1.30342006683	705
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	8	synth with cache (only 1: intuition).	0.0253670215607	13
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	11	synth with cache (only 1: intuition).	0.25501203537	123
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	2.1.1.1	synth with cache (only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.0424380302429	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	2.1.1.1	synth with cache (only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.03475689888	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0312960147858	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.0621120929718	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.0428359508514	10
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	8.2.2.5	synth with cache (only 1: red; only 1: intros A; only 1: intros B; only 1: firstorder).	11.5059971809	6039
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.0168030261993	2
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.3.34.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intros ?; only 1: intuition).	3.10824799538	4507
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	1.0.0.1.0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: rewrite Hx  at 1; only 1: intros Hs; only 1: intros a; only 1: auto with relations).	5.76082396507	496
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2.5	synth with cache (only 1: red; only 1: firstorder).	0.224071979523	145
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite Hx; only 1: rewrite Hs; only 1: eauto with set).	16.4402201176	2943
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros x; only 1: intros x2; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite Hx; only 1: intuition).	12.2178981304	2283
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.1.0.0.1.0.1.1.0	synth with cache (only 1: intros s1; only 1: intros x'; only 1: intros Eyy'; only 1: intros s; only 1: intuition; only 1: intros a; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: intuition).	7.70126104355	2905
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0.0.1.1.0.0.2	synth with cache (only 1: intros x; only 1: intros s1'; only 1: intros Hs1; only 1: intros ?; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite diff_spec; only 1: intuition).	5.08732008934	1840
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros f; only 1: intros Hf; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: intuition; only 1: auto; only 1: auto).	1.41792488098	280
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.173804044724	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1.1	synth with cache (only 1: intros P; only 1: intuition).	0.0290720462799	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.2.1	synth with cache (only 1: intros Hs; only 1: rewrite Hs; only 1: fsetdec).	0.0622191429138	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	3.4.0.1	synth with cache (only 1: intros; only 1: intros s2'; only 1: rewrite H; only 1: auto).	0.480715990067	106
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	1.2	synth with cache (only 1: intros a; only 1: auto).	0.0254321098328	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	4.0.1.0	synth with cache (only 1: intros Hs1; only 1: intros Hs; only 1: intros a; only 1: intuition).	0.0458960533142	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.0	synth with cache (only 1: intros Hs; only 1: fsetdec).	0.0600080490112	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0513269901276	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1.1.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intuition; only 1: fsetdec).	0.267317056656	51
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0673542022705	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.1	synth with cache (only 1: intros H1; only 1: fsetdec).	0.119582176208	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0523910522461	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0484018325806	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.9	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.42621088028	50
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0647749900818	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0542471408844	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	1.4.1.0	synth with cache (only 1: intros; only 1: red; only 1: intros m; only 1: fsetdec).	0.129523992538	15
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.17502784729	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.128376960754	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.138451099396	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.141571998596	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.149019002914	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0987968444824	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.301694154739	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0942168235779	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: intuition fsetdec).	0.0827360153198	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.116655111313	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.112491130829	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.172486782074	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.10169506073	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.180262804031	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.6	synth with cache (only 1: intros H0; only 1: fsetdec).	0.335557222366	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.298421859741	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0438709259033	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0421879291534	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0631928443909	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0672628879547	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0679988861084	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0810611248016	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0826280117035	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.5	synth with cache (only 1: intuition; only 1: fsetdec).	0.179961919785	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0939660072327	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0796031951904	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.105440855026	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.105187892914	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.154318094254	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.205564975739	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.222804069519	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.190948963165	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.150130987167	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0593440532684	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0573837757111	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.049211025238	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0449659824371	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0619149208069	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0742468833923	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0795819759369	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0483539104462	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.123318910599	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.127454996109	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.178500890732	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.153618097305	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.0.4.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).	0.17345905304	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.179653167725	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.244753837585	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.41016793251	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0.10	synth with cache (only 1: intros _tmp_tactician0; only 1: expAdd; only 1: fsetdec).	1.3759868145	109
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.30628991127	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.0.1.0.1.0.1.0.3	synth with cache (only 1: intros q2; only 1: intros b; only 1: intros; only 1: apply fold_rec; only 1: intros s'; only 1: intros Hr; only 1: auto with *; only 1: intros; only 1: auto with arith).	3.25958108902	1128
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	3.3.1.0.2.0.5	synth with cache (only 1: intros n; only 1: intros f; only 1: intros; only 1: apply fold_rec; only 1: intuition; only 1: intros x'; only 1: fsetdec).	17.325026989	5434
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	1.1.0.0.1.3.0.1.3	synth with cache (only 1: intros b; only 1: intros a; only 1: intros Pempty; only 1: intros Ha; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pstep; only 1: fsetdec).	25.0978579521	11148
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0476629734039	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.4.0.0.0.2	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: easy; only 1: exists e; only 1: auto with relations).	1.10721111298	532
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0.0	synth with cache (only 1: intros a; only 1: intros; only 1: auto with set).	0.0533049106598	3
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.3.2	synth with cache (only 1: intros s; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.250185012817	39
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.165658950806	43
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0424048900604	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0474081039429	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	12	synth with cache (only 1: intuition_in).	0.115258932114	51
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	2.1.1.1.42	synth with cache (only 1: right; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	7.84887290001	6544
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	1.9	synth with cache (only 1: fix odd_spec 1; only 1: auto).	3.58136796951	923
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0157952308655	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	3.3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl; only 1: rewrite <- Hr; only 1: destruct (partition f l); only 1: destruct (partition f r); only 1: destruct (f x); only 1: split; only 1: eauto using filter_weak_spec).	7.0584821701	2646
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.183513879776	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	3.3.0.4	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	9.10450291634	1485
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.015604019165	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.3.0.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.66156506538	134
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.132405042648	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.079136133194	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.136375904083	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1.1.0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.337113142014	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.0.0.0.2	synth with cache (only 1: apply iff_sym; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0423650741577	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.229588985443	54
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0245189666748	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.10	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto).	0.118911027908	78
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0218920707703	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).	0.0124230384827	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	2.1.0	synth with cache (only 1: intros; only 1: apply equal_spec; only 1: intuition).	0.0353410243988	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	3	synth with cache (only 1: auto with set).	0.277782917023	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: intros a; only 1: auto with set relations).	0.0188338756561	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0118391513824	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0512959957123	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1.1.0.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.523916006088	46
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0323710441589	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0105609893799	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0188980102539	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0124380588531	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0120739936829	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0117750167847	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: auto with set relations).	0.0104918479919	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0100529193878	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0648369789124	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00981497764587	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0659539699554	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0100619792938	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0127129554749	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0126779079437	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0125339031219	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0113718509674	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0101699829102	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0114030838013	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0117928981781	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0130660533905	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0120561122894	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.033607006073	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0103769302368	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0807838439941	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0101900100708	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0101599693298	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.00992393493652	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	3.1.1.7.4.1.3.1.4	synth with cache (only 1: intros Pstep; only 1: intros s'; only 1: intros n; only 1: rewrite <- not_true_iff_false; only 1: rewrite andb_true_iff; only 1: split; only 1: intros H; only 1: intuition; only 1: intuition).	33.3199999332	14592
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0239410400391	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.3.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	5.69285607338	1689
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.0114710330963	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0626962184906	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.586133956909	166
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.7.0.7	synth with cache (only 1: intros b; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set).	14.0021350384	2081
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.1.1.1.2.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	6.55280804634	2797
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0416798591614	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	14	synth with cache (only 1: solve_proper).	0.737478971481	223
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.019110918045	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.3.0	synth with cache (only 1: unfold Add; only 1: red; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a); only 1: apply Comp; only 1: auto; only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	38.1801111698	9885
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	11.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	3.17623305321	1638
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).	5.31619882584	2118
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.0391910076141	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: intros A; only 1: tauto).	1.01561784744	3
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0	synth with cache (only 1: tauto).	0.585443019867	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0172228813171	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.4	synth with cache (only 1: intros q1; only 1: fsetdec).	0.309085130692	78
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0.1.0	synth with cache (only 1: intros b; only 1: intros R1; only 1: fsetdec).	0.177721977234	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	synth with cache (only 1: fsetdec).	0.0144810676575	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.2	synth with cache (only 1: intros a; only 1: fsetdec).	0.0871601104736	24
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4.0.2.1.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros s1'; only 1: intros; only 1: fsetdec).	0.31122303009	174
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0.0	synth with cache (only 1: intros ?; only 1: fsetdec).	0.0617110729218	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.16	synth with cache (only 1: intros y; only 1: fsetdec).	2.7692501545	484
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.0789868831635	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.0529370307922	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.1.0	synth with cache (only 1: red; only 1: intros b; only 1: fsetdec).	0.240479946136	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	6.6	synth with cache (only 1: intros n; only 1: fsetdec).	1.68921709061	436
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.0.0.3.9.0	synth with cache (only 1: intros x; only 1: intros RS; only 1: intros Hn; only 1: intros Hx; only 1: intros s1'; only 1: rewrite singleton_spec; only 1: intuition).	3.08022880554	1648
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0.1	synth with cache (only 1: intros P; only 1: fsetdec).	0.069130897522	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.080913066864	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0528099536896	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	5.1.1	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: trivial).	0.112561941147	34
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	10.2	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.195075035095	142
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.2.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intuition_in).	0.0429480075836	6
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	5.0	synth with cache (only 1: intros H; only 1: easy).	0.0187749862671	7
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.5	synth with cache (only 1: intros z; only 1: easy).	0.0246820449829	13
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0126390457153	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0385148525238	3
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0362339019775	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.10.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	1.67197704315	1128
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	10.1.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros; only 1: eauto).	1.70082402229	825
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.0162110328674	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0111980438232	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	1.0.3.1.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros y; only 1: intros x'; only 1: reduce; only 1: subst; only 1: order).	26.8565819263	11005
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40
Coq.MSets.MSetGenTree.Props.empty_spec	40	3.2	synth with cache (only 1: intros x; only 1: auto).	0.0606491565704	17
Coq.MSets.MSetGenTree.Props.empty_ok	40	1.60	synth with cache (only 1: hnf; only 1: trivial).	0.279875993729	1972
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	7.2	synth with cache (only 1: fix even_spec 1; only 1: easy).	1.01534795761	295
Coq.MSets.MSetGenTree.Props.mem_spec	40	6.1.1.3	synth with cache (only 1: intros until s; only 1: intros a; only 1: fix odd_spec 1; only 1: auto).	2.11888194084	1132
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intros H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.290939092636	99
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.2.0.11	synth with cache (only 1: intros x; only 1: inversion 1; only 1: apply min_elt_spec1; only 1: auto).	0.133483171463	164
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	0.0.31	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	10.8062469959	14659
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	0.0.7	synth with cache (only 1: fix odd_spec 1; only 1: unfold Subset; only 1: intuition).	0.251368045807	97
Coq.MSets.MSetGenTree.Props.eq_equiv	40	1	synth with cache (only 1: firstorder).	0.0155711174011	2
Coq.MSets.MSetGenTree.Props.eq_Leq	40	1.4.0	synth with cache (only 1: intros n; only 1: fix odd_spec 1; only 1: tauto).	0.128535985947	56
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	4.3.5.0.3.4	synth with cache (only 1: intros; only 1: simpl; only 1: unfold elements; only 1: rewrite elements_node; only 1: rewrite app_assoc_reverse; only 1: auto).	11.4706189632	6932
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	1.7.8	synth with cache (only 1: fix odd_spec 1; only 1: intros H; only 1: auto).	5.0360159874	3460
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	93	synth with cache (only 1: firstorder).	4.60323500633	4590
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	0.31.1.2	synth with cache (only 1: intros n; only 1: induction n; only 1: fix le_div2 1; only 1: easy).	35.3454759121	34382
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	0.4.1.0.9.40	synth with cache (only 1: constructor; only 1: easy; only 1: intros B; only 1: intros n; only 1: easy; only 1: firstorder).	3.95120120049	2642
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.2.0.3.0.0.0	synth with cache (only 1: intros ?; only 1: intros x'; only 1: intros Hxx'; only 1: intros Hyy'; only 1: intros y'; only 1: rewrite Hxx'; only 1: easy).	10.6920599937	2067
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	10.2	synth with cache (only 1: intros m; only 1: firstorder).	1.36178708076	728
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.1	synth with cache (only 1: intros n; only 1: intuition).	0.0328059196472	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	8.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).	0.0739600658417	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	19	synth with cache (only 1: firstorder).	39.8734920025	11537
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	9.12.0.8.3.46	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: red; only 1: apply -> Forall_forall; only 1: auto; only 1: apply (empty_spec H); only 1: easy).	5.18132591248	6430
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	11.6.0	synth with cache (only 1: unfold Same_set; only 1: intros m; only 1: firstorder  discriminate).	17.8000562191	10254
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.0.5.7.1.19.8	synth with cache (only 1: intros _tmp_tactician2; only 1: split; only 1: auto with *; only 1: intros f; only 1: compute; only 1: rewrite singleton_spec; only 1: eauto using elements_spec2w, NoDupA_rev with *).	25.5478160381	18976
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0	synth with cache (only 1: solve_proper).	0.0297379493713	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	1.1.1.13.10	synth with cache (only 1: intros b; only 1: intros Hb; only 1: fix odd_spec 1; only 1: intros H; only 1: auto).	29.1419799328	20156
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	5.10	synth with cache (only 1: fix even_spec 1; only 1: auto).	2.08320403099	760
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.23341608047	755
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.4.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.0210621356964	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.2.0.6	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.871519088745	493
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.014594078064	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.5.0	synth with cache (only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: inv).	0.020210981369	9
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.2	synth with cache (only 1: red; only 1: auto).	0.0139639377594	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0328340530396	12
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2	synth with cache (only 1: constructors).	0.0101509094238	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.1.0.7.2.1	synth with cache (only 1: intros; only 1: destruct s; only 1: intros ?; only 1: intros ?; only 1: inv; only 1: inversion H).	2.98648405075	1776
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0177760124207	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	27.3354790211	5120
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	8.1.2	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: eauto).	0.764112949371	547
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	5	synth with cache (only 1: easy).	0.00985980033875	6
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	5.5.2.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: fix even_spec 1; only 1: intros H; only 1: auto).	5.58878803253	2491
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	0.3	synth with cache (only 1: fix gcd_greatest 1; only 1: intuition).	0.283970117569	90
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	10.8475959301	1539
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	6	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0270788669586	18
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.1.9.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	3.595662117	914
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0651640892029	5
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	2.2.0.5	synth with cache (only 1: intros B; only 1: destruct 1; only 1: fix odd_spec 1; only 1: easy).	1.77181196213	543
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	3.6.1	synth with cache (only 1: intros _tmp_tactician0; only 1: fix odd_spec 1; only 1: intuition).	4.68198490143	1985
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0105137825012	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.2.0.10.13	synth with cache (only 1: intros EQ; only 1: rewrite InA_alt; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (p, _tmp_tactician2); only 1: intuition).	0.59659409523	611
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	1.3.4.1	synth with cache (only 1: fix even_spec 1; only 1: intros Hs; only 1: rewrite even_spec; only 1: easy).	0.338044881821	227
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	3.2.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.019021987915	9
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.1.6	synth with cache (only 1: intros x'; only 1: rewrite <- isok_iff; only 1: intuition).	0.115126132965	34
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	2.0.0	synth with cache (only 1: intros s; only 1: rewrite <- isok_iff; only 1: auto).	0.018196105957	5
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.0.0.0.0.12	synth with cache (only 1: intros l; only 1: induction l as [| a l IH]; only 1: intros Eq; only 1: intros x; only 1: intros H; only 1: inv; only 1: easy).	2.10529398918	1738
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.1.2.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros; only 1: auto).	0.0215799808502	8
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: intros Hs'; only 1: auto; only 1: intros Hs; only 1: auto).	0.0314879417419	7
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: congruence; only 1: solve_proper).	0.0896859169006	16
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	6	synth with cache (only 1: easy).	0.0428340435028	11
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0131778717041	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.0.0.1.0.1.1.0.1.1.1.1.6	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros x; only 1: intros y; only 1: intros x''; only 1: intros Hx'; only 1: intros H; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	20.1645269394	18756
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.37841296196	232
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	1.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.800522089005	635
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.0.2.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: right with y; only 1: auto; only 1: left).	0.0673139095306	72
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.0.0.0.15	synth with cache (only 1: intros y; only 1: intros y0; only 1: right with y; only 1: auto; only 1: left).	0.476578950882	825
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.0178771018982	10
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.0994818210602	58
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	13.1327929497	10339
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.0.0.0.1	synth with cache (only 1: intros x; only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.37858581543	192
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	10.1628620625	5271
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.1.0.0.0.0.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: intros x; only 1: intros y; only 1: intros z; only 1: destruct 2; only 1: assumption; only 1: red; only 1: auto).	8.27561593056	6562
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.0150480270386	1
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	0.0426201820374	7
Coq.Sets.Uniset.defs.seq_refl	40	1.1.1	synth with cache (only 1: intros s2; only 1: intros E; only 1: auto).	0.0251829624176	6
Coq.Sets.Uniset.defs.seq_trans	40	1.0.0.1.13.0.2.1	synth with cache (only 1: intros until x; only 1: intros s1; only 1: intros s2; only 1: intros H1; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	31.3339598179	29690
Coq.Sets.Uniset.defs.seq_sym	40	0.0.0.0.0.1	synth with cache (only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	0.0384528636932	7
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0309679508209	4
Coq.Sets.Uniset.defs.union_empty_right	40	0.0.0.2.2.1.0.1.2	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: intros a; only 1: simpl; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	10.850055933	8136
Coq.Sets.Uniset.defs.union_comm	40
Coq.Sets.Uniset.defs.union_ass	40	1.0.0.1.3.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	2.9894258976	1332
Coq.Sets.Uniset.defs.seq_left	40	0.1.2.3.1.0.1.0	synth with cache (only 1: unfold seq; only 1: intros until y; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	8.26802301407	3964
Coq.Sets.Uniset.defs.seq_right	40	0.0.3.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: intros until x; only 1: destruct x; only 1: intros; only 1: elim H; only 1: auto).	1.05542612076	327
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.2.1.1.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	30.0783848763	13894
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.3.0.1	synth with cache (only 1: intuition; only 1: intros _tmp_tactician0; only 1: compute; only 1: apply Equivalence_Reflexive).	0.0483651161194	8
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.1.3.0	synth with cache (only 1: unfold meq; only 1: intros until y; only 1: intros; only 1: auto).	0.0448548793793	8
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0390980243683	4
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0374989509583	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40	7.4.1.0.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: intuition).	11.0530378819	5777
Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.1.0.0.0.0.0.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: unfold meq; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).	1.36376786232	371
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.0.0.0.0.2.0.0.2	synth with cache (only 1: unfold munion; only 1: unfold meq; only 1: intros until x; only 1: unfold multiplicity; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: auto).	4.95520496368	1395
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	2.79494905472	852
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).	1.4349861145	469
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	0.1.1.2.0.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	30.4577929974	15408
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	8	synth with cache (only 1: easy).	0.0100209712982	9
Coq.Sets.Integers.Integers_sect.le_antisym	40	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).	0.0201690196991	6
Coq.Sets.Integers.Integers_sect.le_trans	40	4.0.0	synth with cache (only 1: red; only 1: intros x; only 1: PeanoNat.Nat.order).	0.17599105835	68
Coq.Sets.Integers.Integers_sect.le_Order	40	1.0.0.0.0.0.0.2.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	1.01955509186	602
Coq.Sets.Integers.Integers_sect.triv_nat	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0120511054993	2
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40	5.0.7.0.0.0.0.12	synth with cache (only 1: constructor; only 1: simpl; only 1: intros x; only 1: intros n; only 1: intros m; only 1: destruct (le_gt_dec n m); only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).	17.3468358517	12114
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.9.1.2	synth with cache (only 1: intros; only 1: intros p; only 1: red; only 1: auto).	0.669964790344	956
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.0.1.0.0.0.0	synth with cache (only 1: intros U; only 1: intros R; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros H'0; only 1: auto  10 with sets).	0.0363690853119	17
Coq.Sets.Relations_1_facts.contains_is_preorder	40	9.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).	0.0465950965881	97
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	2.0.2.0.0.2.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros x''; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x y]; only 1: intros Hx''; only 1: auto  10 with sets).	2.94453883171	2597
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0155260562897	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	2.0.2.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: intros; only 1: auto with sets).	0.0293600559235	22
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.0.0.1	synth with cache (only 1: intros U; only 1: intros R'; only 1: intros H'0; only 1: auto  10 with sets).	0.0124368667603	8
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.00609183311462	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0329849720001	17
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0132060050964	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	20.3644688129	9958
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.2.2.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: unfold In in *; only 1: firstorder; only 1: intuition).	0.485898017883	296
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	1.0.0.0.10.1	synth with cache (only 1: intros H'5; only 1: intros Y; only 1: intros x; only 1: destruct 1; only 1: exists x; only 1: auto with sets).	17.6381969452	13334
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	4.2.3	synth with cache (only 1: intros H'; only 1: intros x; only 1: destruct 1).	1.44434094429	1375
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.0.4.0.2.72.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: red; only 1: intros y; only 1: intros H'; only 1: trivial).	6.89949798584	63069
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.12	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.239514827728	95
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0127589702606	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.0192999839783	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	1.2.1.0.0.0.0.6.12.0	synth with cache (only 1: intros X; only 1: split; only 1: split; only 1: red; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).	35.3720960617	30548
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros X; only 1: intros H'; only 1: intros H'0; only 1: red; only 1: intros x; only 1: auto with sets).	0.0517201423645	12
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0150649547577	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.013689994812	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intros X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).	0.042375087738	7
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: red; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.0397729873657	7
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	4.0.1.3	synth with cache (only 1: intros H'0; only 1: intros C; only 1: intros Y; only 1: firstorder).	2.39345192909	1012
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	2.0.0.0.0.3	synth with cache (only 1: intros x; only 1: intros Y; only 1: intros y; only 1: intros H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).	1.16834402084	549
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	0.12.3.2	synth with cache (only 1: intros NI; only 1: intros x; only 1: compute; only 1: tauto).	11.9118618965	9896
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.0.0.0.2	synth with cache (only 1: intros x; only 1: red; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.200770139694	117
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros X; only 1: intros x; only 1: intros H'; only 1: unfold Subtract; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets).	0.13832616806	10
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.1.1.2.0.1.0.0.0	synth with cache (only 1: intros A; only 1: intros B; only 1: intros x; only 1: intros H'2; only 1: red; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	18.2857849598	5449
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	23.0	synth with cache (only 1: intros H'0; only 1: auto  6 with sets).	1.61752200127	2015
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0206129550934	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.8	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0609769821167	33
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.019847869873	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0205218791962	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0221121311188	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	1.0.0	synth with cache (only 1: intros b; only 1: intros H'; only 1: auto  7 with sets).	0.0489151477814	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.0.1.0.0.0.0.1.0.0.0.2	synth with cache (only 1: intros z; only 1: intros y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	25.1785590649	16571
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	4.33763003349	2647
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	8.69551897049	4597
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.0.0.0.0.0.0.3	synth with cache (only 1: unfold Add at 1; only 1: intros x; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: intros t; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).	3.51108193398	2044
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	5.2.0.0.0.0	synth with cache (only 1: intros a; only 1: intros X; only 1: intros b; only 1: intros H'0; only 1: unfold Add; only 1: auto with sets).	6.88223099709	2829
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.1.12	synth with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	15.1332700253	8221
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	6.0.0.0	synth with cache (only 1: intros a; only 1: intros A; only 1: intros b; only 1: auto  7 with sets).	0.047346830368	14
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.019425868988	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0240650177002	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.0.1.4.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	3.01874780655	1762
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0573370456696	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	3.81971096992	1560
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.0.1.0.0.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).	1.62357211113	2532
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	19.0.2	synth with cache (only 1: intros C; only 1: intros h2; only 1: destruct h2).	0.712702989578	1961
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.00689506530762	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0114870071411	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.14.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros ?; only 1: intros x; only 1: exists x; only 1: auto with sets).	2.07709288597	6148
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intros H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	1.59363698959	1599
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.3.1	synth with cache (only 1: intros B; only 1: destruct 1; only 1: auto with sets).	0.0368700027466	43
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	2.3.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.0166251659393	10
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.1.1	synth with cache (only 1: intros X; only 1: intros H'0; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0259599685669	15
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.0199620723724	6
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.0.0.0.0.1	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.279366016388	180
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).	0.0152759552002	4
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros H'; only 1: auto with sets).	0.0145349502563	5
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.0.0.6.0.1	synth with cache (only 1: intros ?; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).	0.310491085052	510
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	6.0.3.0.2.1	synth with cache (only 1: intros X; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: trivial with sets; only 1: auto with sets).	5.56383085251	6084
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.4.1.5.36.0	synth with cache (only 1: intros x; only 1: apply NNPP; only 1: intros H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	6.0805170536	19940
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.1.3.4	synth with cache (only 1: intros n; only 1: inversion 1; only 1: easy; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	1.46404385567	812
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.020810842514	11