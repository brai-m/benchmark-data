
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	19.3.4	synth with cache (only 1: intros until x; only 1: intros Ex; only 1: firstorder).	5.52997994423	4846
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	17.0.19	synth with cache (only 1: intros Q; only 1: intros y; only 1: CRelationClasses.simpl_crelation).	3.82797193527	4265
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	6	synth with cache (only 1: firstorder).	0.0444741249084	21
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	8.0.1.7	synth with cache (only 1: intros y2; only 1: intros H0; only 1: intros y; only 1: intuition).	2.81108498573	1586
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	81	synth with cache (only 1: firstorder).	5.2618200779	14648
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0200061798096	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0203340053558	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	2.1.2	synth with cache (only 1: intros n; only 1: intros ?; only 1: ring).	0.0375120639801	8
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0205810070038	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0183780193329	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: destruct H; only 1: easy).	0.0948169231415	16
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).	4.98563289642	1496
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	0.3.2.0.1.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: rewrite <- (Rplus_0_l n); only 1: apply Rplus_lt_mono; only 1: apply -> (Rplus_lt_mono_l n m (- n - m)) in H; only 1: apply Rlt_0_1; only 1: easy).	6.9093298912	2206
Coq.micromega.Ztac.eq_incl	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros m'; only 1: intros EQ; only 1: rewrite EQ; only 1: easy).	0.0497550964355	5
Coq.micromega.Ztac.elim_concl_eq	40	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).	0.731479167938	139
Coq.micromega.Ztac.elim_concl_le	40	1.5.0	synth with cache (only 1: intros; only 1: apply Z.ge_le; only 1: trivial).	0.0406959056854	15
Coq.micromega.Ztac.elim_concl_lt	40	0.3.0	synth with cache (only 1: intros; only 1: apply Z.nle_gt; only 1: easy).	0.124799966812	39
Coq.micromega.Ztac.Zlt_le_add_1	40	0.3.0.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: easy).	0.10232591629	7
Coq.micromega.Ztac.add_le	40	0.0.3.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0386888980865	7
Coq.micromega.Ztac.mul_le	40	0.0.0.0.0.2.1	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: auto).	1.14177417755	115
Coq.micromega.ZifyInst.PropAnd	40	0.6.31	synth with cache (only 1: split; only 1: intros; only 1: intuition).	1.4764380455	912
Coq.micromega.ZifyInst.PropOr	40	66	synth with cache (only 1: RelationClasses.simpl_relation).	1.63186120987	2233
Coq.micromega.ZifyInst.PropArrow	40	0.4	synth with cache (only 1: split; only 1: tauto).	0.0374879837036	6
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.520691156387	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0.8	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.103138208389	37
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.1.1.0.0.0.2	synth with cache (only 1: intros n; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: destruct n; only 1: trivial; only 1: easy; only 1: trivial).	0.886659860611	359
Coq.micromega.ZifyInst.z_max_spec	40	8.0.6	synth with cache (only 1: intros a; only 1: intros m; only 1: Z.solve_max).	1.99314403534	1291
Coq.micromega.ZifyInst.z_min_spec	40	14.3.0	synth with cache (only 1: intros a; only 1: intros; only 1: Z.solve_min).	6.20140600204	4055
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	2.3.8.3	synth with cache (only 1: intros n; only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _tmp_tactician0, _tmp_tactician2); only 1: intros m; only 1: auto).	11.4704630375	2401
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0259261131287	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0634829998016	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0256860256195	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0282380580902	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0271890163422	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	1	synth with cache (only 1: exact (OrderedRing.rminus_morph sor)).	1.2633869648	247
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	5.1.4.0	synth with cache (only 1: intros; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	8.10391402245	2576
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.157606840134	22
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.4.0.0.0.3	synth with cache (only 1: intros a; only 1: intros y; only 1: intros H; only 1: intros H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	9.17779397964	2704
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.1.1.0.1.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hn; only 1: subst; only 1: easy; only 1: destruct 1; only 1: Z.order).	2.61933517456	984
Coq.micromega.ZMicromega.lt_le_iff	40	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.0268180370331	2
Coq.micromega.ZMicromega.le_0_iff	40	0.0.4.0.5	synth with cache (only 1: intros a; only 1: intros m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	1.13631081581	600
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0446619987488	5
Coq.micromega.ZMicromega.xnormalise_correct	40	8.12.1	synth with cache (only 1: intros env; only 1: fix odd_spec 1; only 1: easy).	24.8247008324	11683
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.0.0.1.0.15.5	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	38.1641869545	15366
Coq.micromega.ZMicromega.isZ0_n0	40	0.1.8	synth with cache (only 1: fix even_spec 1; only 1: intros s2; only 1: easy).	1.07585000992	351
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.3.0.2.10	synth with cache (only 1: intros c; only 1: intros b; only 1: rewrite xnnormalise_correct; only 1: intros Hab; only 1: easy).	23.1517920494	6637
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0578501224518	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.0.1.0.0.1.0.0.0.12	synth with cache (only 1: intros a0; only 1: destruct a0; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: intros n; only 1: easy; only 1: easy).	10.2054278851	7064
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	0.5.0	synth with cache (only 1: rewrite <- jump_add; only 1: rewrite Pos.add_1_l; only 1: f_equal).	0.0323379039764	20
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	5.0.1.1.0.5.2	synth with cache (only 1: unfold jump; only 1: destruct p; only 1: unfold tail; only 1: easy; only 1: easy; only 1: unfold tail; only 1: constructor).	1.52324295044	1366
Coq.micromega.Env.S.nth_pred_double	40	0.3.4.0.4.0.3.3.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: induction p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	17.1804418564	18066
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.0.3	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.0969040393829	56
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	4.2	synth with cache (only 1: intros Ha; only 1: destr_bool).	0.0268278121948	11
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0100209712982	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.00907397270203	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.0.3.8	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: easy).	0.277447938919	221
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	6.30.1	synth with cache (only 1: intros until f1; only 1: fix odd_spec 1; only 1: auto).	31.4934940338	37595
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.0.4.1.5.0.16	synth with cache (only 1: intros l; only 1: unfold cnf_tt; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).	2.54180502892	4457
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.0.1.0.6.0.4.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.823610067368	631
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	0.2.0.2.4.1.7.8.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: intros; only 1: apply H; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: tauto).	7.92732095718	9027
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0.1	synth with cache (only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.0253038406372	5
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	48.4	synth with cache (only 1: intros; only 1: eauto).	1.86453819275	2699
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	5.1.1.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons in *; only 1: unfold eval_clause; only 1: tauto).	2.07571291924	730
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0562899112701	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.0.9.0.33	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: easy; only 1: easy; only 1: easy).	34.8839969635	48035
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	29.0.15	synth with cache (only 1: intros IH; only 1: intros x2; only 1: firstorder).	29.8045618534	28052
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0222299098969	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	54	synth with cache (only 1: firstorder).	3.60963797569	2942
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	74.0	synth with cache (only 1: simpl; only 1: simpl_relation).	3.4848151207	5742
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	16.2694308758	2226
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.0.3.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	27.7058160305	3974
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: jump_simpl; only 1: rewrite jump_pred_double; only 1: easy).	0.13889503479	6
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.16304898262	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	2.1.1.16	synth with cache (only 1: induction M; only 1: easy; only 1: easy; only 1: easy).	1.65057492256	456
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0199699401855	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0227649211884	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0197839736938	1
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0250148773193	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0263078212738	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros x1; only 1: intros x2; only 1: intros H1; only 1: intros y1; only 1: intros y2; only 1: intros H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: rewrite H2; only 1: easy).	1.23554396629	405
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	18.12.0.7	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: easy).	16.9958479404	10539
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.1.1.2	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: firstorder).	0.0874099731445	60
Coq.micromega.Refl.make_impl_map	40	6.2.0.0	synth with cache (only 1: intros g; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder).	1.0923678875	525
Coq.micromega.Refl.make_conj_cons	40
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.1.4.1.1.1	synth with cache (only 1: intros a; only 1: intros c; only 1: intros _tmp_tactician0; only 1: intros n; only 1: intros; only 1: rewrite make_conj_cons; only 1: intuition PeanoNat.Nat.order).	5.19534111023	1403
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0	synth with cache (only 1: intros r; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: reflexivity; only 1: reflexivity).	0.0504100322723	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0282609462738	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.10	synth with cache (only 1: intros n; only 1: field).	1.11418509483	310
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	0.4.19.0.7	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: intros ?; only 1: unfold Q2R; only 1: simpl; only 1: auto with real).	17.0810689926	11836
Coq.micromega.RMicromega.Q2R_1	40	4.16	synth with cache (only 1: unfold Q2R; only 1: auto with real).	0.85609292984	457
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	1.0.0.0.2.32.15.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl; only 1: destruct z; only 1: easy; only 1: easy; only 1: reflexivity; only 1: easy).	36.9239552021	27976
Coq.micromega.RMicromega.is_neg_false	40	0.1.11.0.3.1.0.0.0.0	synth with cache (only 1: intros until z; only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: easy; only 1: easy; only 1: easy; only 1: Z.swap_greater; only 1: intros H'; only 1: apply Nat2Z.is_nonneg).	29.912872076	12219
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: apply Qeq_eqR; only 1: easy).	0.958920001984	147
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (y1, y2); only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	3.16389799118	571
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40	14.7.0	synth with cache (only 1: intros l; only 1: fix odd_spec 1; only 1: easy).	14.9859998226	6974
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.2.0.0.2.2.1.0.0.2.2.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: rewrite IHp; only 1: easy; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: trivial).	13.4352960587	10790
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.118813037872	7
Coq.rtauto.Bintree.length_map	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros Ha; only 1: intros f; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.115818023682	9
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	3.2.1.0.14	synth with cache (only 1: intros n; only 1: induction n; only 1: split; only 1: split; only 1: easy).	1.04246306419	1604
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	3.2.0.4.5	synth with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.321731090546	342
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	8.9.10	synth with cache (only 1: intros x; only 1: fix odd_spec 1; only 1: intuition).	8.6539208889	9935
Coq.rtauto.Rtauto.form_eq_refl	40	0.2.12.9	synth with cache (only 1: intros EQ; only 1: fix even_spec 1; only 1: intros H; only 1: auto).	3.10508704185	3801
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40	1.2.1.2.0.1.15.1	synth with cache (only 1: intros H; only 1: intros l; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros H; only 1: intros x; only 1: firstorder).	32.3066141605	34925
Coq.rtauto.Rtauto.with_env.compose2	40	3.1.1.4.1.1.1.0	synth with cache (only 1: induction F; only 1: intros Y; only 1: auto; only 1: intros e; only 1: intros x; only 1: intros B; only 1: intros A; only 1: firstorder  (subst; auto)).	17.2255949974	11165
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	1.14.0.2.0.3	synth with cache (only 1: intros B; only 1: intros F; only 1: intros C; only 1: intros e; only 1: fix even_spec 1; only 1: auto).	21.6518440247	25127
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	2.4.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: setoid_rewrite H; only 1: cring).	1.67166614532	169
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: intros ?; only 1: trivial).	0.152669906616	3
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).	0.0815989971161	7
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.141451835632	12
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0621900558472	11
Coq.nsatz.Nsatz.Rcri	40	0.23.1.2.8	synth with cache (only 1: cut (exp_in 0 (exp 0)); only 1: intros H2; only 1: red; only 1: apply Rmult_comm; only 1: exact (proj2_sig (exist_exp 0))).	30.427423954	9447
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0423729419708	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.0	synth with cache (only 1: intros EQ; only 1: discriminate).	0.0569250583649	2
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0508091449738	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.0750160217285	2
Coq.omega.OmegaLemmas.Zred_factor1	40	3.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0266001224518	11
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	0.3	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.405912876129	41
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.191971063614	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: easy).	0.0561461448669	5
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	2.0	synth with cache (only 1: intros; only 1: Z.order).	0.0169188976288	4
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: easy).	0.0785059928894	39
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.1.6.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Hx; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.762917995453	480
Coq.omega.OmegaLemmas.OMEGA6	40	0.6.1.0.3	synth with cache (only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: Z.nzsimpl; only 1: easy).	2.04857516289	851
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	11.0.1.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: easy).	0.325406074524	401
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0.0.0.1	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.0655541419983	7
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0.0.0.62.0.1	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: Z.bitwise; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: f_equal; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	19.7444000244	24648
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.0.0.0.0	synth with cache (only 1: intros H; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: Z.nzsimpl; only 1: trivial).	0.097668170929	5
Coq.omega.OmegaLemmas.OMEGA18	40	0.19.0.6.7.0.5	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: intros EQ; only 1: intros y'; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: subst; only 1: easy).	13.4402830601	15039
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros NE; only 1: intros EQ; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.0667929649353	7
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.2.1.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: easy).	0.0665249824524	9
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0370860099792	5
Coq.btauto.Algebra.Decidable_complete	40	0.1.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0345551967621	6
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.106362104416	30
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: intros Hc; only 1: simpl in *; only 1: intuition congruence).	0.100727081299	31
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	2.0.5	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).	1.10504317284	246
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.0.19.0.0	synth with cache (only 1: unfold Pos.ltb; only 1: unfold Pos.lt; only 1: case Pos.compare_spec; only 1: easy; only 1: intros; only 1: easy; only 1: easy).	12.9507360458	9772
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	8.1.7	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: auto).	2.30521297455	1033
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	3.7.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	1.83148097992	630
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.5.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros m; only 1: intros H; only 1: inversion H; only 1: split).	0.0556859970093	10
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0.0	synth with cache (only 1: intros n; only 1: trivial).	0.016793012619	2
Coq.btauto.Reflect.Completeness.list_nth_succ	40	0.0.0.0.0.5.5	synth with cache (only 1: intros y; only 1: intros z; only 1: intros var1; only 1: intros k; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	7.40043187141	4200
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	25.3	synth with cache (only 1: intros H; only 1: intuition).	2.29179096222	1872
Coq.funind.Recdef.Splus_lt	40
Coq.funind.Recdef.SSplus_lt	40	1.16.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: apply Nat.le_add_r).	3.68520498276	3192
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0132908821106	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	6.0	synth with cache (only 1: intros EQ; only 1: Z.order_pos).	0.0200431346893	8
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	18	synth with cache (only 1: assumption).	0.0596978664398	145
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0108799934387	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	12.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	9.99715781212	2005
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.62293195724	71
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.35734415054	452
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0127220153809	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	23.6	synth with cache (only 1: intuition; only 1: firstorder).	2.86413383484	1242
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0229680538177	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0257771015167	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	11	synth with cache (only 1: easy).	0.185206890106	72
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	14	synth with cache (only 1: eauto).	0.450638055801	75
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	4.0.12	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: easy).	5.56323885918	198
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	0.1.0.2.0	synth with cache (only 1: intros H; only 1: rewrite rdiv_def; only 1: intros H0; only 1: rewrite H0; only 1: easy).	6.37481188774	43
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	7.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: easy).	8.66795110703	73
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	2.03751683235	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.3.3.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite rpow_pow; only 1: simpl; only 1: reflexivity).	5.32229804993	54
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	15.9093019962	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: easy).	11.7796528339	13
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	2.2.1	synth with cache (only 1: intros; only 1: simpl; only 1: easy).	5.57415819168	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0231781005859	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0246880054474	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0226540565491	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	7	synth with cache (only 1: intuition).	0.301474809647	78
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	5.7.5.0.3	synth with cache (only 1: intros until x; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	5.37981104851	4076
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.5.7.4.2	synth with cache (only 1: intros y; only 1: intros H7; only 1: intros x; only 1: destruct x; only 1: reflexivity).	33.4222991467	9975
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.0863480567932	12
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	1.14.2.33	synth with cache (only 1: intros H5; only 1: intros y; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).	6.59345698357	2921
Coq.setoid_ring.Rings_R.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0315470695496	11
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	2	synth with cache (only 1: easy).	0.0117800235748	3
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	5.2	synth with cache (only 1: firstorder; only 1: easy).	0.410780906677	9
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	13	synth with cache (only 1: easy).	0.0508589744568	61
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	1.2.0.0.0.25	synth with cache (only 1: split; only 1: easy; only 1: intros H; only 1: intros H0; only 1: congruence; only 1: congruence).	0.479140043259	676
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.0.1.1.61	synth with cache (only 1: split; only 1: red; only 1: easy; only 1: red; only 1: easy).	1.19473099709	2444
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.18	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.360263109207	233
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.9.5	synth with cache (only 1: intros A; only 1: intros n; only 1: firstorder).	5.53899002075	1862
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.2.2.4	synth with cache (only 1: intros n; only 1: intros x; only 1: intros z; only 1: firstorder).	0.772296190262	290
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0	synth with cache (only 1: easy).	0.00995302200317	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	3	synth with cache (only 1: firstorder).	0.0991010665894	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	2.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: easy).	0.0193819999695	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.00876712799072	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.00920701026917	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	1	synth with cache (only 1: easy).	0.0228269100189	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	12	synth with cache (only 1: firstorder).	0.188565969467	46
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	4.1.14	synth with cache (only 1: intros n; only 1: intros; only 1: firstorder).	3.26907300949	1088
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	11.14	synth with cache (only 1: intros x; only 1: firstorder).	4.01681399345	2378
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.1	synth with cache (only 1: intros H; only 1: firstorder).	0.0217962265015	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	48	synth with cache (only 1: firstorder).	10.0751650333	8389
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	21.14	synth with cache (only 1: intros; only 1: firstorder).	2.40124702454	1652
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	17.15	synth with cache (only 1: intros; only 1: firstorder).	2.43514108658	1331
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	6	synth with cache (only 1: auto).	0.0179619789124	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	42	synth with cache (only 1: firstorder).	1.41002178192	901
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	37	synth with cache (only 1: firstorder).	0.54927110672	696
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0164778232574	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0175890922546	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	1.16.7.7	synth with cache (only 1: rewrite (ARmul_comm ARth x); only 1: rewrite (ARmul_comm ARth x); only 1: elim ARth; only 1: easy).	3.5331389904	1461
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00969696044922	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.009840965271	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00944900512695	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros x1; only 1: intros x2; only 1: intros Ex; only 1: intros y1; only 1: intros y2; only 1: intros Ey; only 1: rewrite (ARsub_def ARth); only 1: rewrite (ARsub_def ARth); only 1: rewrite Ex; only 1: rewrite Ey; only 1: easy).	1.2152659893	273
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.6.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: rewrite H; only 1: rrefl).	0.294261932373	74
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	21.18	synth with cache (only 1: intros l; only 1: firstorder).	4.83177113533	3092
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00925898551941	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00949716567993	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00911283493042	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0120289325714	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: intros until n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.870784044266	185
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	3.58	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	13.910007	11700
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.2.4	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0527601242065	24
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0157740116119	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.016618013382	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0191600322723	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	39	synth with cache (only 1: easy).	4.10712409019	775
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	12.0.6.14	synth with cache (only 1: intros a; only 1: intros m; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	14.6538960934	4966
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	7.7.8	synth with cache (only 1: intros n; only 1: intros y; only 1: firstorder).	3.84246206284	1430
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	10.8.14	synth with cache (only 1: intros a; only 1: intros y; only 1: CRelationClasses.simpl_crelation).	3.86855912209	3077
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.3.1	synth with cache (only 1: red; only 1: unfold Pequiv; only 1: CRelationClasses.simpl_crelation).	13.1568248272	2714
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	15.1783840656	1684
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0189690589905	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0601670742035	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.3.6.19.0.1	synth with cache (only 1: intros y; only 1: intros x; only 1: intros n; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm y); only 1: reflexivity).	34.7597570419	12582
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.324846029282	46
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.6.2.2	synth with cache (only 1: intros Hc; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	2.68554496765	889
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.010959148407	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.011027097702	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.4	synth with cache (only 1: unlock; only 1: easy).	0.041836977005	15
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0141749382019	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	3.11	synth with cache (only 1: destruct 1; only 1: auto).	0.472604990005	776
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0133299827576	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0119788646698	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2.2	synth with cache (only 1: intros H0; only 1: intuition).	0.0313148498535	6
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0133519172668	1
Coq.ssr.ssreflect.abstract_context	40	1.47.28	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).	2.20652985573	18677
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0103921890259	1
Coq.ssr.ssrbool.is_true_true	40	15	synth with cache (only 1: easy).	0.0150079727173	91
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: easy).	0.00570797920227	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00625896453857	2
Coq.ssr.ssrbool.negbT	40	0.0.0	synth with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: split).	0.00989890098572	3
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00662016868591	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00793504714966	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0063910484314	1
Coq.ssr.ssrbool.negbK	40	1.11	synth with cache (only 1: intros b; only 1: by case : b ).	0.0255010128021	61
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00636601448059	1
Coq.ssr.ssrbool.negb_inj	40	0.29	synth with cache (only 1: intros A; only 1: Bool.destr_bool).	0.205566167831	556
Coq.ssr.ssrbool.negbLR	40	8	synth with cache (only 1: Bool.destr_bool).	0.0293378829956	31
Coq.ssr.ssrbool.negbRL	40	9	synth with cache (only 1: Bool.destr_bool).	0.0299921035767	24
Coq.ssr.ssrbool.contra	40	0.0.11	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.178344011307	182
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0111079216003	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0101668834686	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0105309486389	1
Coq.ssr.ssrbool.contraT	40	5.13	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.313697099686	270
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.00888204574585	1
Coq.ssr.ssrbool.contraFT	40	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.435909032822	204
Coq.ssr.ssrbool.contraFN	40	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.561278104782	247
Coq.ssr.ssrbool.contraTF	40	3.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.394269943237	154
Coq.ssr.ssrbool.contraNF	40	3.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.463582992554	174
Coq.ssr.ssrbool.contraFF	40	0.2.9	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.201407909393	66
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0.45	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).	17.7902429104	1408
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0127198696136	3
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.00747990608215	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0114729404449	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.00715708732605	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case b).	0.00764894485474	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.00670695304871	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.00652503967285	1
Coq.ssr.ssrbool.BoolIf.ifE	40	12	synth with cache (only 1: trivial).	0.0323429107666	46
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0143120288849	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0131819248199	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.00861096382141	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.30.4.13	synth with cache (only 1: intros p; only 1: intros H0; only 1: destruct p; only 1: by case Hb; auto; only 1: by case Hb; auto).	33.6002950668	14532
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.18.12	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.558081865311	878
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	8	synth with cache (only 1: by case Pb).	0.0129210948944	9
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	9.10.23	synth with cache (only 1: intros H; only 1: destruct H; only 1: auto).	0.672092199326	2475
Coq.ssr.ssrbool.impliesPn	40	0.2.24.12.26	synth with cache (only 1: intros ?; only 1: red; only 1: destruct H; only 1: intros h1; only 1: auto).	10.116822958	33498
Coq.ssr.ssrbool.unlessL	40	7.4.10.3.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros h2; only 1: intros H; only 1: auto).	0.452350139618	1945
Coq.ssr.ssrbool.unlessR	40	0.13.5.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros y; only 1: intuition).	0.195496082306	760
Coq.ssr.ssrbool.unless_sym	40	3.4.4.5.63.5	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	19.4381458759	102399
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	8.11.2	synth with cache (only 1: intros h2; only 1: intros y; only 1: intuition).	0.314815044403	783
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.0.2.0.0.2.6.2	synth with cache (only 1: split; only 1: split; only 1: intros z; only 1: destruct (H z); only 1: auto; only 1: intros z; only 1: destruct (H z); only 1: auto).	0.279582023621	543
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0368621349335	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0124299526215	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0142998695374	1
Coq.ssr.ssrbool.pair_andP	40	6	synth with cache (only 1: intuition).	0.0179998874664	12
Coq.ssr.ssrbool.ReflectConnectives.idP	40	2.2.23	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	1.86346197128	4941
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.00595092773438	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00643181800842	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.00811505317688	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00617384910583	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.00726318359375	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).	0.0338709354401	5
Coq.ssr.ssrbool.ReflectConnectives.and4P	40	0.0.4	synth with cache (only 1: destruct b4; only 1: by case b1; case b2; case b3; constructor; try by case; only 1: by case b1; case b2; case b3; constructor; try by case).	0.0498189926147	17
Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).	0.087217092514	13
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0117211341858	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0114011764526	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00896215438843	1
Coq.ssr.ssrbool.andTb	40	1.2	synth with cache (only 1: intros P; only 1: reflexivity).	0.0087559223175	5
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.00546789169312	1
Coq.ssr.ssrbool.andbT	40	4.3	synth with cache (only 1: intros P; only 1: Bool.destr_bool).	0.00984311103821	9
Coq.ssr.ssrbool.andbF	40	3.20	synth with cache (only 1: intros H; only 1: Bool.destr_bool).	0.123802900314	286
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.00593400001526	1
Coq.ssr.ssrbool.andbC	40	0.24	synth with cache (only 1: intros P; only 1: Bool.destr_bool).	0.10952091217	306
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.00705790519714	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.00874900817871	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0127940177917	2
Coq.ssr.ssrbool.andbACA	40	13	synth with cache (only 1: by do 3!case).	0.0527529716492	60
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.00599193572998	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.00558185577393	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.00734806060791	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.00666618347168	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0060498714447	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.00793409347534	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0102269649506	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0101611614227	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.00993990898132	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0142722129822	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.00812888145447	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.00703406333923	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.00694918632507	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.00646710395813	1
Coq.ssr.ssrbool.andb_orl	40	4	synth with cache (only 1: by do 3!case).	0.014909029007	5
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.00839304924011	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.010538816452	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0693349838257	1
Coq.ssr.ssrbool.andb_idl	40	1.0.9	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: by case : b  => // ->).	0.0956680774689	69
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0114951133728	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.014230966568	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.015487909317	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0112481117249	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0119800567627	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0153770446777	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.058571100235	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.00939583778381	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00936508178711	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00870895385742	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00821995735168	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00840210914612	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00846910476685	1
Coq.ssr.ssrbool.implybT	40	2	synth with cache (only 1: by case : b ).	0.00946712493896	3
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.00684309005737	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.00617003440857	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.00713300704956	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.00622010231018	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00840091705322	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00843000411987	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00843596458435	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00856494903564	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00832009315491	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0127029418945	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0115239620209	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0167820453644	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00666093826294	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.00607299804688	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.00635504722595	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.00699090957642	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0087730884552	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.010272026062	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.00996017456055	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0150451660156	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0107989311218	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.0105040073395	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0107939243317	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.00783491134644	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.0128309726715	2
Coq.ssr.ssrbool.addbI	40	2	synth with cache (only 1: by do 3!case).	0.0142588615417	3
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.00776290893555	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.00808191299438	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00879597663879	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00916910171509	1
Coq.ssr.ssrbool.addbP	40	0.0.0.18.0.0.0.22.3	synth with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: intuition; only 1: constructor; only 1: easy; only 1: Bool.destr_bool; only 1: constructor; only 1: easy; only 1: intuition).	4.03874087334	9362
Coq.ssr.ssrbool.subrelUl	40	11.5.1.0.41	synth with cache (only 1: intros B; only 1: intros ?; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	3.85224294662	10553
Coq.ssr.ssrbool.subrelUr	40	11.5.0.28.16	synth with cache (only 1: intros Hx''; only 1: intros ?; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	3.36469197273	9139
Coq.ssr.ssrbool.sub_refl	40	3.12	synth with cache (only 1: red; only 1: auto).	0.0423319339752	114
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.00752401351929	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.00918292999268	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0094678401947	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.00641703605652	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.00654196739197	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.00787687301636	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	3	synth with cache (only 1: reflexivity).	0.00650501251221	4
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.5	synth with cache (only 1: intros x0; only 1: by [  ]).	0.0208718776703	7
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.00911283493042	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0100030899048	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	18	synth with cache (only 1: auto).	0.183920145035	184
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0145668983459	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0108649730682	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.00884795188904	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.092502117157	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0123608112335	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.00958704948425	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.00834202766418	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0096709728241	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.012451171875	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0131080150604	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0103659629822	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0136179924011	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0116291046143	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0190091133118	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	34.33.15.30	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct 2; only 1: symmetry; only 1: auto).	36.0182499886	80325
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0149991512299	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0127398967743	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0131099224091	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0124719142914	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0150310993195	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0156900882721	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.46	synth with cache (only 1: intros ?; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.08213496208	1621
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0182819366455	1
Coq.ssr.ssrbool.sub_in2	40	6.4.6	synth with cache (only 1: intros; only 1: intros ?; only 1: auto).	0.546766996384	854
Coq.ssr.ssrbool.sub_in3	40	8.4.3.0.2.9	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H0; only 1: intros H2; only 1: intros ?; only 1: auto).	4.00043106079	5042
Coq.ssr.ssrbool.sub_in12	40	1.18	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.248872995377	187
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0103280544281	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0173010826111	13
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.00929999351501	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0106999874115	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0109009742737	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.017548084259	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.0.0	synth with cache (only 1: intros A; only 1: intros Hx'; only 1: tauto).	0.0176191329956	3
Coq.ssr.ssrfun.unitE	40	0.2.10.46	synth with cache (only 1: red; only 1: intros p; only 1: destruct p; only 1: tauto).	0.94184589386	6968
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: split).	0.00628900527954	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: by [  ]).	0.0113399028778	2
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.26.2.2.24	synth with cache (only 1: intros Hsnd; only 1: intros ?; only 1: intros ?; only 1: rewrite Hsnd; only 1: trivial).	9.63385105133	46904
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: split).	0.00576186180115	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0166521072388	1
Coq.ssr.ssrfun.Sig.svalP	40	0.1	synth with cache (only 1: destruct u; only 1: assumption).	0.0117509365082	3
Coq.ssr.ssrfun.Sig.s2valP	40	1.2.1	synth with cache (only 1: destruct u; only 1: simpl in *; only 1: trivial).	0.0136799812317	7
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.00857520103455	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0128779411316	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0165419578552	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0113759040833	2
Coq.ssr.ssrfun.Injections.canLR	40	3.6.3.2	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.438137054443	672
Coq.ssr.ssrfun.Injections.canRL	40	8.3	synth with cache (only 1: destruct 2; only 1: auto).	0.0812478065491	89
Coq.ssr.ssrfun.Some_inj	40	0.1.28	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	1.11559820175	1993
Coq.ssr.ssrfun.of_voidK	40	14.8	synth with cache (only 1: intros P; only 1: intuition).	0.250509023666	449
Coq.ssr.ssrfun.esymK	40	0.15.3	synth with cache (only 1: intros z; only 1: subst; only 1: reflexivity).	0.179990053177	416
Coq.ssr.ssrfun.etrans_id	40	0.19	synth with cache (only 1: subst; only 1: reflexivity).	0.0743339061737	186
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1.0.1.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).	0.034471988678	30
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	12.20.1.6	synth with cache (only 1: intros Fr; only 1: intros _tmp_tactician0; only 1: intros ?; only 1: auto).	2.02630805969	5507
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	1.0.13.10.8.5	synth with cache (only 1: intros Hl; only 1: intros _tmp_tactician2; only 1: intros _tmp_tactician0; only 1: intros x''; only 1: intros Hx''; only 1: auto).	3.71428418159	9585
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	2.22.34	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	8.91531300545	28746
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	1.8.1.8.21	synth with cache (only 1: exists f; only 1: intros H; only 1: trivial; only 1: intros H; only 1: trivial).	0.517930984497	1632
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.00797390937805	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	4	synth with cache (only 1: auto).	0.00753808021545	5
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: trivial).	0.0064549446106	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: trivial).	0.00744390487671	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: easy).	0.00590300559998	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	9	synth with cache (only 1: congruence).	0.271557092667	146
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2.1.0	synth with cache (only 1: intros b; only 1: intros; only 1: easy).	0.0195150375366	6
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	1	synth with cache (only 1: easy).	0.0103209018707	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1.0.0	synth with cache (only 1: intros; only 1: destruct v; only 1: reflexivity; only 1: reflexivity).	0.0229661464691	5
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.0.0.4.0.2	synth with cache (only 1: intros x; only 1: intros H; only 1: intros n'; only 1: intros EQ; only 1: subst n'; only 1: auto with arith).	0.648535966873	391
Coq.Setoids.Setoid.Seq_refl	40	1.0	synth with cache (only 1: intros x'; only 1: firstorder).	0.0107779502869	3
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0113360881805	2
Coq.Setoids.Setoid.Seq_trans	40	6.0	synth with cache (only 1: intros x; only 1: firstorder).	0.488212108612	239
Coq.Setoids.Setoid.gen_st	40	4.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).	0.0172810554504	14
Coq.Bool.IfProp.Iftrue_inv	40	1.0.1.16	synth with cache (only 1: intros H; only 1: destruct 1; only 1: intuition; only 1: easy).	0.495640039444	1218
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.019031047821	6
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0364937782288	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0183370113373	17
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.3.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: easy).	0.0421669483185	25
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0217950344086	4
Coq.Bool.Zerob.zerob_false_intro	40	0.0.1.1.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: intros H; only 1: easy; only 1: intros b; only 1: trivial).	0.106469869614	59
Coq.Bool.Zerob.zerob_false_elim	40	3.0.3.0	synth with cache (only 1: intros; only 1: intros H1; only 1: rewrite H1 in H; only 1: easy).	0.0657641887665	21
Coq.Bool.DecBool.ifdec_left	40	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).	3.53282690048	3380
Coq.Bool.DecBool.ifdec_right	40	1.5.0.3	synth with cache (only 1: intros until H; only 1: case H; only 1: contradiction; only 1: auto).	2.14979314804	1634
Coq.Bool.Sumbool.sumbool_of_bool	40	23.27.7.11	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).	2.61263489723	18494
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.2.2.1	synth with cache (only 1: intros H; only 1: intros P; only 1: destruct H; only 1: auto; only 1: auto).	0.0164840221405	10
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).	0.0134179592133	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0251321792603	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0192129611969	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.0107169151306	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.0105268955231	1
Coq.Bool.Bool.eq_true_false_abs	40	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros z; only 1: discriminate; only 1: intros z; only 1: discriminate).	0.812860965729	1332
Coq.Bool.Bool.not_true_is_false	40	0.9.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: split).	0.0645079612732	81
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0170500278473	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.4.4	synth with cache (only 1: intros A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.491129159927	420
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0350289344788	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0.0.0.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: split; only 1: split; only 1: split; only 1: intuition; only 1: split; only 1: split; only 1: split).	0.700651884079	444
Coq.Bool.Bool.eqb_subst	40	3.1.0	synth with cache (only 1: intros H; only 1: intros z; only 1: destr_bool).	0.0215358734131	7
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.0146079063416	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0139920711517	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0300061702728	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0348348617554	6
Coq.Bool.Bool.negb_orb	40	1	synth with cache (only 1: destr_bool).	0.0695641040802	65
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0137910842896	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.012060880661	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0120928287506	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0140020847321	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0125901699066	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.0131890773773	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0130848884583	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.0132548809052	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0214469432831	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0219080448151	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0377368927002	8
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0335779190063	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0278780460358	5
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.1	synth with cache (only 1: intros until a; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0285580158234	7
Coq.Bool.Bool.orb_true_intro	40	2.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.414679050446	223
Coq.Bool.Bool.orb_false_intro	40	0	synth with cache (only 1: destr_bool).	0.0140597820282	1
Coq.Bool.Bool.orb_false_elim	40	2.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.134026765823	64
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0114860534668	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0124619007111	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0125651359558	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0128679275513	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0126039981842	1
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.0122208595276	2
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.0132348537445	1
Coq.Bool.Bool.orb_assoc	40	0.2.1.0	synth with cache (only 1: intros; only 1: destruct b1; only 1: trivial; only 1: reflexivity).	0.0226340293884	7
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0636429786682	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0392007827759	5
Coq.Bool.Bool.andb_true_eq	40	0.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.398797988892	177
Coq.Bool.Bool.andb_false_intro1	40	6.0	synth with cache (only 1: intros until b1; only 1: destr_bool).	0.13471198082	74
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0207250118256	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0170049667358	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0128509998322	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.0132269859314	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0128910541534	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0128359794617	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0400609970093	14
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0133278369904	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0147378444672	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0179800987244	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0354390144348	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0259239673615	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0188300609589	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0195939540863	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.047431230545	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0135910511017	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.011570930481	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0116989612579	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0130498409271	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0117781162262	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0123310089111	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.0137529373169	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0181801319122	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.015074968338	1
Coq.Bool.Bool.xorb_move_l_r_1	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0273630619049	12
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0282070636749	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0189869403839	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0375990867615	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0304770469666	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros until b'; only 1: destruct b'; only 1: trivial; only 1: trivial; only 1: intros until b'; only 1: destruct b'; only 1: trivial; only 1: trivial).	0.040097951889	10
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0136930942535	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.070160150528	5
Coq.Bool.Bool.eq_true_iff_eq	40	3.3.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.438997030258	249
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0179738998413	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0178339481354	2
Coq.Bool.Bool.absurd_eq_bool	40	4.1	synth with cache (only 1: intros; only 1: intuition).	0.0242600440979	16
Coq.Bool.Bool.absurd_eq_true	40	8.2	synth with cache (only 1: intros H; only 1: intuition).	0.113645076752	131
Coq.Bool.Bool.trans_eq_bool	40	1.4.0.0	synth with cache (only 1: intros x; only 1: intros; only 1: subst; only 1: intuition).	0.0218889713287	9
Coq.Bool.Bool.Is_true_eq_true	40	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).	0.118192911148	72
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0130228996277	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0179269313812	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0112018585205	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0213861465454	3
Coq.Bool.Bool.orb_prop_elim	40	3.0.2.0.0.3	synth with cache (only 1: intros until a; only 1: destruct a; only 1: simpl; only 1: auto with bool; only 1: simpl; only 1: auto).	0.757120847702	763
Coq.Bool.Bool.orb_prop_intro	40	8.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0185880661011	10
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0232670307159	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0301420688629	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0470790863037	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0411059856415	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0245549678802	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0172588825226	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0171780586243	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0202732086182	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.0146059989929	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.03116106987	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0183329582214	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.01118683815	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	3.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0355679988861	22
Coq.Bool.Bool.reflect_dec	40	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).	0.0252430438995	9
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0.1.7	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: intuition; only 1: intuition; only 1: destruct b'; only 1: intuition; only 1: intuition).	0.497765779495	350
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0165898799896	7
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40	1.65.18	synth with cache (only 1: intros H; only 1: fix even_spec 1; only 1: auto).	37.26197505	85986
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	1.0.0.0.0.5.0.2.1.3.1.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros a0; only 1: easy; only 1: intros a0; only 1: intros Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros eq; only 1: auto; only 1: auto).	23.7649979591	13112
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	5	synth with cache (only 1: intuition).	0.391448020935	177
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.0.0.2.2.0.1.4.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: intros a0; only 1: simpl; only 1: intros H0; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	19.2217128277	10109
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.0920140743256	20
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1| H1]; only 1: auto with datatypes; only 1: tauto).	0.794144153595	217
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros H; only 1: case (set_union_elim _ _ _ H); only 1: auto; only 1: contradiction).	0.0298099517822	6
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.3.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.314594984055	90
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	0.6.0.0.0.0.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intros Hl'; only 1: simpl; only 1: constructor; only 1: intros Hl'; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: apply set_add_nodup; only 1: auto).	13.979172945	6425
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	5.0.3.13	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).	13.3914318085	905
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.15.18	synth with cache (only 1: intros p; only 1: destruct p; only 1: reflexivity).	0.464730978012	2558
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.1.8.0	synth with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: auto).	1.15708684921	1371
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	0.0.1.2.0.6.4.3.1.3	synth with cache (only 1: intros x; only 1: case x; only 1: intros; only 1: case x; only 1: intros ?; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: trivial with datatypes; only 1: auto with datatypes).	4.73691892624	9190
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	10.7.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.87454199791	1907
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0204169750214	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0186479091644	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.0.3.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros s1; only 1: intros s; only 1: apply IHn).	0.684143066406	378
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0396230220795	10
Coq.Lists.List.Facts.nil_cons	40	0.0	synth with cache (only 1: intros m; only 1: discriminate).	0.0121989250183	2
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40	1.8.7.5	synth with cache (only 1: intros b; only 1: intros a'; only 1: fix even_spec 1; only 1: tauto).	38.0451290607	28388
Coq.Lists.List.Facts.hd_error_some_nil	40	0.1.3.0.0.5	synth with cache (only 1: intros p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).	1.28707289696	972
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.1.0.4.1.0.1.10	synth with cache (only 1: split; only 1: destruct l; only 1: firstorder  discriminate; only 1: intros Hc; only 1: simpl in *; only 1: discriminate; only 1: destruct l; only 1: auto; only 1: discriminate).	1.25714302063	1034
Coq.Lists.List.Facts.hd_error_nil	40	4	synth with cache (only 1: reflexivity).	0.00881099700928	5
Coq.Lists.List.Facts.hd_error_cons	40	1.2	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).	0.0125150680542	5
Coq.Lists.List.Facts.in_eq	40	0.6.0	synth with cache (only 1: intros a; only 1: intros y; only 1: firstorder  discriminate).	0.0194370746613	9
Coq.Lists.List.Facts.in_cons	40	0.0.1.1	synth with cache (only 1: intros y; only 1: intros R3; only 1: simpl; only 1: auto).	0.0606009960175	36
Coq.Lists.List.Facts.not_in_cons	40	7.4	synth with cache (only 1: simpl in *; only 1: intuition).	0.756119966507	444
Coq.Lists.List.Facts.in_nil	40	2.2.0.2	synth with cache (only 1: intros n; only 1: simpl; only 1: intros H1; only 1: tauto).	0.0170910358429	10
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.00991582870483	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	3	synth with cache (only 1: auto).	0.00998902320862	4
Coq.Lists.List.Facts.app_nil_r	40	0.0.7.2.0.2.1.20.16	synth with cache (only 1: intros H; only 1: elim H; only 1: easy; only 1: induction l; only 1: easy; only 1: simpl; only 1: destruct l; only 1: apply f_equal; only 1: apply f_equal).	15.2623040676	34985
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0930981636047	7
Coq.Lists.List.Facts.app_assoc	40	0.0.3.7.3.1	synth with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	9.61650705338	6100
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros m; only 1: intros n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0405979156494	9
Coq.Lists.List.Facts.app_comm_cons	40	2.0	synth with cache (only 1: intros l; only 1: auto).	0.0131289958954	4
Coq.Lists.List.Facts.app_eq_nil	40	0.4.4.0.2.1	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros m; only 1: intros; only 1: firstorder  discriminate).	1.45095610619	1217
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	0.1.0.1.2.4	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros H; only 1: auto).	1.65700793266	1107
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	4.0.3.0.0.0.0.1	synth with cache (only 1: induction l; only 1: intros m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros H; only 1: intros H0; only 1: intuition).	6.99697589874	5401
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.0.0.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: intros l; only 1: intros m; only 1: revert n; only 1: auto).	0.0271489620209	8
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.0.0.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros d'; only 1: intros d; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.07511210442	441
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	3.0	synth with cache (only 1: simpl; only 1: easy).	0.0123200416565	5
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	3.1.0.5.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: simpl; only 1: destruct eq_dec as [_tmp_tactician0| Hneq]; only 1: easy; only 1: easy).	0.83275103569	596
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: destruct (eq_dec x y); only 1: easy; only 1: easy).	0.0285379886627	5
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.2.11.3	synth with cache (only 1: intros a; only 1: induction l; only 1: auto; only 1: auto).	1.47180819511	1862
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: split).	0.00913596153259	1
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intros y; only 1: simpl; only 1: trivial).	0.0295040607452	7
Coq.Lists.List.ListOps.concat_app	40	0.3.9.0.1.0.1.3.10	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite <- app_assoc; only 1: trivial).	26.5046861172	24233
Coq.Lists.List.ListOps.list_eq_dec	40	14	synth with cache (only 1: decide equality).	0.648774147034	433
Coq.Lists.List.Map.map_cons	40	2.4	synth with cache (only 1: simpl; only 1: f_equal).	0.0143940448761	8
Coq.Lists.List.Map.in_map	40	1.0.1.0.2.1.0.0.2.0	synth with cache (only 1: intros until l; only 1: induction l as [| a l IH]; only 1: intros a; only 1: intros H; only 1: auto; only 1: intuition; only 1: simpl; only 1: firstorder; only 1: subst; only 1: intuition).	7.02270579338	4636
Coq.Lists.List.Map.in_map_iff	40	3.0.0.0.4.0.0.0.0.0.1	synth with cache (only 1: intros l; only 1: split; only 1: induction l as [| a l IH]; only 1: intros _tmp_tactician0; only 1: easy; only 1: firstorder  (subst; auto); only 1: induction l as [| a l IH]; only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	14.383605957	11054
Coq.Lists.List.Map.map_length	40	0.0.0.2.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).	0.0521020889282	17
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	1.5.2.1.2.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros l2; only 1: f_equal; only 1: trivial).	4.71528887749	3290
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros H; only 1: auto; only 1: generalize (app_nil_r (A:=l)); only 1: intros d; only 1: easy).	0.0584449768066	22
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.1.0.0.0.3.0.5	synth with cache (only 1: intros b; only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	4.74812912941	3475
Coq.Lists.List.concat_map	40	0.0.0.0.1.5.4.2.5	synth with cache (only 1: intros b; only 1: intros l2; only 1: intros _tmp_tactician0; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	27.1849730015	27248
Coq.Lists.List.map_id	40	1.0.7.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.741533994675	690
Coq.Lists.List.map_map	40	1.0.0.0.0.8.2	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	3.52902197838	2297
Coq.Lists.List.map_ext_in	40	0.0.2.0.2.0.2.2.1.1	synth with cache (only 1: intros A; only 1: intros R1; only 1: intros n; only 1: induction l; only 1: auto; only 1: intros _tmp_tactician0; only 1: simpl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder).	30.3316140175	20128
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	2.3.1.0.4.1	synth with cache (only 1: intros R; only 1: intros a; only 1: intros _tmp_tactician0; only 1: intros R'; only 1: fix even_spec 1; only 1: auto  4).	4.1972849369	3535
Coq.Lists.List.map_ext	40	0.0.1.0.1.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H; only 1: auto).	0.031571149826	8
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	4.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0233039855957	9
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.0.0.0.1.1.4	synth with cache (only 1: intros R2; only 1: induction l; only 1: auto; only 1: intros; only 1: simpl in *; only 1: rewrite IHl; only 1: auto).	0.895811796188	546
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	2.4.1.0.0.0.10.4	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros l2; only 1: rewrite IHl; only 1: intuition).	24.7044739723	19283
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: auto; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.283918142319	153
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	0.0.0.0.0.2.0.0.0.1.38	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: case_eq (f a); only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: rewrite IHl; only 1: auto).	23.162984848	36256
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: intropattern subst -> _tmp_tactician2; only 1: easy).	0.0285799503326	6
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.0.1.1.0.0.0.0.0.0.5	synth with cache (only 1: intros _tmp_tactician0; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite IHl; only 1: auto; only 1: auto; only 1: intuition).	21.8200860023	14404
Coq.Lists.List.Filtering.ext_in_filter	40	0.2.0.5.6	synth with cache (only 1: intros x0; only 1: intros H; only 1: intros f; only 1: rewrite filter_map; only 1: apply ext_in_map).	8.14676499367	4549
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.0.0.0.0.0.3.2.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros r; only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	3.82600784302	2852
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.3.0.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros l; only 1: intros; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0290069580078	10
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	3.58629083633	1720
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0494458675385	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.1.8	synth with cache (only 1: induction l as [| v l IHl]; only 1: easy; only 1: firstorder  (subst; auto)).	0.270956039429	194
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	35	synth with cache (only 1: RelationClasses.simpl_relation).	0.952226161957	1695
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	1.5.0.0	synth with cache (only 1: unfold lel; only 1: intros H1; only 1: simpl; only 1: auto with arith).	0.0297689437866	11
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0140650272369	3
Coq.Lists.List.length_order.lel_tail	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0149939060211	4
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.0070219039917	2
Coq.Lists.List.SetIncl.incl_tl	40	1.0.0.0.3.7	synth with cache (only 1: intros n; only 1: induction l; only 1: intros l'; only 1: firstorder  discriminate; only 1: intros l2; only 1: firstorder  (subst; auto)).	2.37555193901	1647
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0092339515686	2
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0107810497284	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0102491378784	1
Coq.Lists.List.SetIncl.incl_cons	40	0.0.1.10.1.1	synth with cache (only 1: intros a; only 1: induction l; only 1: intros a'; only 1: firstorder  (subst; auto); only 1: intros Eq; only 1: firstorder  (subst; auto)).	6.92407202721	5287
Coq.Lists.List.SetIncl.incl_app	40	3.1.1.0.4.1.4	synth with cache (only 1: intros l; only 1: intros m; only 1: intros n; only 1: elim l; only 1: auto; only 1: intros H; only 1: firstorder).	33.9669241905	21815
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.35	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.294301986694	786
Coq.Lists.List.Cutting.firstn_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0122270584106	3
Coq.Lists.List.Cutting.firstn_all	40	5.0.0.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: auto).	0.49515414238	332
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0116930007935	2
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as []; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.0242450237274	6
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.054759979248	35
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0128629207611	2
Coq.Lists.List.Cutting.skipn_none	40	2.0.0.2.4	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: easy; only 1: easy).	0.671012878418	342
Coq.Lists.List.Cutting.skipn_all2	40
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40	2.0.0.0.0.0.0.0.1.5	synth with cache (only 1: induction n; only 1: intros _tmp_tactician0; only 1: simpl; only 1: auto with arith; only 1: intros until l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.57924795151	6236
Coq.Lists.List.Cutting.skipn_all	40	0.0.4	synth with cache (only 1: induction l as [| ? ? H]; only 1: easy; only 1: easy).	0.0201680660248	7
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1; only 1: intros l2; only 1: simpl; only 1: f_equal; only 1: intros l1; only 1: intros l2; only 1: destruct l1 as [| x xs]; only 1: unfold length; only 1: rewrite app_nil_l; only 1: rewrite app_nil_l; only 1: rewrite <- minus_n_O; only 1: easy; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	18.5090858936	8406
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.2.12.3	synth with cache (only 1: induction l; only 1: split; only 1: simpl; only 1: auto).	0.752366065979	796
Coq.Lists.List.Combining.combine_firstn_l	40	4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros until l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: firstorder).	5.79769897461	2785
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.0.1.0.0.0.1.2.3.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: intros; only 1: simpl; only 1: destruct l'; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	11.6773409843	7545
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	10.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: firstorder).	4.46618580818	2027
Coq.Lists.List.Add.Add_length	40	0.0.0.1.1.0	synth with cache (only 1: induction 1; only 1: destruct l; only 1: auto; only 1: auto with arith; only 1: simpl in *; only 1: auto).	0.0348989963531	8
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0.10.8	synth with cache (only 1: revert l; only 1: intros d; only 1: apply NoDup_Add; only 1: apply Add_app).	2.06508088112	1667
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: easy; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	0.043576002121	8
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	3.1.0.0.0.4.11	synth with cache (only 1: intros l; only 1: induction l as [| a l' Hrec]; only 1: intros; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	9.57687282562	10911
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40	0.27.1	synth with cache (only 1: intros l1; only 1: fix le_div2 1; only 1: easy).	26.3736078739	21266
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.2.0.1	synth with cache (only 1: split; only 1: intros H; only 1: inversion H; only 1: firstorder).	0.0188739299774	7
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.0.11	synth with cache (only 1: intros y; only 1: intros l; only 1: inversion 1; only 1: easy).	0.445336103439	358
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3	synth with cache (only 1: inversion 1; only 1: trivial).	0.0480649471283	32
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.0.0.0.1.2.0.1.1	synth with cache (only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: induction H0; only 1: constructor; only 1: right; only 1: auto; only 1: auto).	5.74329209328	5540
Coq.Lists.List.Forall2.Forall2_refl	40	7	synth with cache (only 1: auto).	0.00826287269592	8
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	5.11.0.3.5	synth with cache (only 1: revert n; only 1: induction n as [| k iHk]; only 1: easy; only 1: simpl; only 1: auto).	1.56333613396	2784
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros E1; only 1: intros ?; only 1: intros ?; only 1: auto).	0.133496999741	16
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.1.0.1.2.4	synth with cache (only 1: induction l; only 1: intros l2; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	5.67881703377	889
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.13.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).	14.3353450298	4769
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.0.1.1.3.0.2.68	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).	4.9384701252	5028
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.0.0.0.2.1.10.5	synth with cache (only 1: etransitivity; only 1: constructor; only 1: easy; only 1: eassumption; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	8.14475798607	5229
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.0.0.0	synth with cache (only 1: rewrite app_comm_cons; only 1: rewrite (PermutationA_cons_append l₁ x); only 1: rewrite <- app_assoc; only 1: easy).	0.0291149616241	4
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0172901153564	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.1.0.0.0.1.2	synth with cache (only 1: intros P; only 1: intros Pdec; only 1: intros l; only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	1.8305118084	570
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	2.0.3.1	synth with cache (only 1: split; only 1: intros H; only 1: inversion_clear H; only 1: easy).	0.094025850296	32
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.5.0.0.0.0.9.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	39.7231080532	26951
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	15	synth with cache (only 1: easy).	0.0681579113007	91
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	3.0.2.3.2.2.0.5	synth with cache (only 1: intros H; only 1: split; only 1: induction 1; only 1: easy; only 1: auto; only 1: induction 1; only 1: easy; only 1: auto).	32.7931668758	23303
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	40	synth with cache (only 1: firstorder).	1.000467062	858
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).	4.058355093	1024
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.1.0.1.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros H; only 1: rewrite InA_alt; only 1: firstorder).	0.104938983917	36
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.4	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.0432639122009	7
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	1.0.6	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	3.63436698914	78
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.2.0.2.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder).	1.17184185982	25
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	1.1.0.1.0.3.9.0	synth with cache (only 1: constructor; only 1: rewrite InA_alt; only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (y, _tmp_tactician2); only 1: destruct _tmp_tactician2 as (H4, H5); only 1: intuition; only 1: constructor).	1.65686702728	850
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.1	synth with cache (only 1: intros E; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.0674338340759	5
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.0.0.0.2	synth with cache (only 1: intros l'; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.107997179031	8
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.1	synth with cache (only 1: intros l'; only 1: rewrite InA_app_iff; only 1: tauto).	0.034411907196	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	0.7.0.0.0.8.0.4.1.1	synth with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto with relations; only 1: auto with relations).	37.6941659451	13586
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.1.5.8.9.6.1	synth with cache (only 1: intros Hrec; only 1: intros x; only 1: intros N'; only 1: intros y; only 1: intros y'; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	14.5624580383	19542
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	3.7.0.0	synth with cache (only 1: intros Hxx'; only 1: intros l'; only 1: rewrite Hxx'; only 1: intuition).	5.68264102936	1533
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	5.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.263045072556	33
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0495841503143	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.3.0.19.5	synth with cache (only 1: intros until l; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	34.4228608608	30972
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intros Hll'; only 1: simpl; only 1: auto).	0.130326032639	28
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0428340435028	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.16.6	synth with cache (only 1: intros A; only 1: fix even_spec 1; only 1: auto).	27.3560781479	28071
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	2.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: reflexivity).	0.054792881012	15
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0102219581604	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.peano_rect_succ; only 1: easy).	0.0279638767242	6
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.011167049408	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	1	synth with cache (only 1: trivial).	0.00816917419434	2
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0121929645538	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.00848507881165	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.026417016983	6
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.7	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).	0.0179891586304	10
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.1.0.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	38.5595040321	22413
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: reflexivity).	7.05780100822	3231
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0161409378052	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0.9.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.329024076462	428
Coq.NArith.BinNat.N.succ_0_discr	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.022313117981	3
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: easy).	0.0160539150238	3
Coq.NArith.BinNat.N.add_succ_l	40	0.1.25.66	synth with cache (only 1: revert m; only 1: fix le_div2 1; only 1: intros until m; only 1: trivial).	9.10074615479	23618
Coq.NArith.BinNat.N.sub_0_r	40	0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0168900489807	5
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: trivial).	0.0265400409698	8
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40	1.2.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.190232992172	91
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.0.1.1	synth with cache (only 1: destruct n; only 1: unfold lt; only 1: easy; only 1: unfold lt; only 1: easy).	0.19718003273	89
Coq.NArith.BinNat.N.compare_le_iff	40	0.0	synth with cache (only 1: unfold le; only 1: easy).	0.0122170448303	2
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.0.2.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: unfold le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: trivial).	0.0387609004974	10
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	13	synth with cache (only 1: easy).	0.797469854355	189
Coq.NArith.BinNat.N.succ_double_spec	40	0.0.1.5	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).	0.144520998001	44
Coq.NArith.BinNat.N.double_add	40	0.0.0.2.0.0.0.1	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: unfold add; only 1: simpl; only 1: easy).	0.245845079422	68
Coq.NArith.BinNat.N.succ_double_add	40	0.0.1.9.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: easy).	11.9735951424	6112
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: easy).	0.0364010334015	9
Coq.NArith.BinNat.N.succ_double_mul	40	0.7.0.0.0.0.0.1	synth with cache (only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: rewrite <- mul_succ_l; only 1: easy).	10.3638679981	4814
Coq.NArith.BinNat.N.div2_double	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.019061088562	5
Coq.NArith.BinNat.N.div2_succ_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0150439739227	3
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	0.0.0.2.0.0.0.0.0.9	synth with cache (only 1: destruct n; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H2; only 1: destruct m as [| q]; only 1: easy; only 1: trivial).	5.30880308151	2207
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	12.6632089615	7361
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.576236009598	194
Coq.NArith.BinNat.N.compare_0_r	40	0.0.0.4	synth with cache (only 1: destruct n; only 1: rewrite compare_refl; only 1: easy; only 1: easy).	0.0273067951202	8
Coq.NArith.BinNat.N.pow_0_r	40	0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0151000022888	6
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	12.16.0	synth with cache (only 1: intros ?; only 1: rewrite <- (mul_0_r n)  at 1; only 1: false_hyp H nlt_0_r).	17.2812738419	14766
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.2.1.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).	0.0966291427612	8
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0.0.0	synth with cache (only 1: intros IH; only 1: generalize (div_eucl_spec a b); only 1: unfold div; only 1: unfold modulo; only 1: destruct div_eucl; only 1: easy).	0.025269985199	6
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intros H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0121629238129	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.1.0.5.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: exists bb; only 1: clear _tmp_tactician2; only 1: rewrite Pos.mul_comm; only 1: easy).	9.10433697701	6247
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	synth with cache (only 1: apply le_0_l).	0.329288959503	173
Coq.NArith.BinNat.N.testbit_even_0	40	0.5.17	synth with cache (only 1: induction a; only 1: easy; only 1: easy).	0.16467499733	302
Coq.NArith.BinNat.N.testbit_odd_0	40	0.0.0.15.6	synth with cache (only 1: simpl; only 1: unfold add; only 1: destruct a; only 1: split; only 1: easy').	0.877503871918	752
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40	0.1.0.0.0.2.0.0.0.0.0.0.0.1	synth with cache (only 1: nzsimpl; only 1: intros _tmp_tactician0; only 1: destruct a; only 1: destruct n as [| n]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).	21.6150050163	12903
Coq.NArith.BinNat.N.testbit_even_succ	40	1.5.1.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros H; only 1: destruct n; only 1: destruct a; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct a; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).	21.8253109455	13871
Coq.NArith.BinNat.N.testbit_neg_r	40	0.0.2	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.123809099197	39
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40	1.3.0.0.0.1.1.2.4	synth with cache (only 1: destruct a; only 1: easy; only 1: simpl; only 1: f_equal; only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	2.25041294098	1540
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0107588768005	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40	1.9.4.0.0.0.1.2	synth with cache (only 1: unfold lt; only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	34.3692889214	19268
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00706577301025	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0.0.0.1	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy').	0.20247387886	84
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00675797462463	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.2.1.1.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.645739078522	349
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.0123450756073	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	0.0703639984131	32
Coq.NArith.Ndec.Pcompare_Peqb	40	0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).	0.0204889774323	2
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0.0.1.1.0.26.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: destruct n as [| n]; only 1: intros; only 1: subst; only 1: trivial; only 1: rewrite <- N.eqb_eq; only 1: easy).	11.1100161076	15735
Coq.NArith.Ndec.Neqb_complete	40	0.0	synth with cache (only 1: rewrite <- N.eqb_eq; only 1: easy).	0.0205612182617	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	0.2.0.5	synth with cache (only 1: intros H0; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.166054964066	34
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: apply H; only 1: trivial).	0.0442419052124	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0.3.0.1.0.5.29	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: easy).	33.7690200806	47608
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.0.1.1.0.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intros H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_succ_double; only 1: intros ?; only 1: assumption).	8.95267295837	4686
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	4.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0633940696716	16
Coq.NArith.Ndec.Nmin_le_5	40	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.105901956558	4
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0504839420319	7
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.0.0.0.2	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| p']; only 1: intros ?; only 1: easy; only 1: easy).	0.124118804932	46
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.13.4.2.6.11	synth with cache (only 1: intros p; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	13.1138050556	19291
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.6.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	1.10294985771	754
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.059947013855	15
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0269598960876	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.7.6	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: trivial).	0.60086107254	380
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.190179109573	35
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	3.12.5	synth with cache (only 1: intros z; only 1: fix le_div2 1; only 1: easy).	23.0959329605	12648
Coq.NArith.Ndist.ni_le_le	40	4.9.2	synth with cache (only 1: intros a; only 1: fix le_div2 1; only 1: trivial).	7.70177507401	4143
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	1.0.0.2.0.0.1.1.2.12	synth with cache (only 1: intros n; only 1: intros _tmp_tactician2; only 1: destruct n; only 1: destruct _tmp_tactician2 as [| n]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: f_equal; only 1: Nat2N.nat2N).	17.9411859512	16073
Coq.NArith.Ndigits.Nshiftr_nat_S	40	4.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: simpl; only 1: trivial).	0.0971419811249	16
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: easy).	0.0205729007721	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0156030654907	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	5.0.0	synth with cache (only 1: intros q; only 1: intros H; only 1: split).	0.0253148078918	8
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.0.0.0.1.4.0.2.0.0.1.2.6	synth with cache (only 1: destruct a'; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite xorb_false_r; only 1: trivial; only 1: destruct a; only 1: rewrite xorb_false_l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	15.8924260139	9836
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.0.0.0.0.2.0.0.0.8	synth with cache (only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: rewrite orb_false_r; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	1.78713488579	837
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.0.0.0.0.0.1.0.1.0.1	synth with cache (only 1: destruct a; only 1: rewrite <- Ntestbit_Nbit; only 1: simpl; only 1: trivial; only 1: rewrite <- Ntestbit_Nbit; only 1: destruct a'; only 1: simpl; only 1: rewrite andb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	6.37954306602	3073
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.4.1.0.3.0.27	synth with cache (only 1: revert a; only 1: intros _tmp_tactician2; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite N.ldiff_spec; only 1: rewrite <- Ntestbit_Nbit; only 1: easy).	1.78923106194	3046
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40	0.1.0.1.5.3	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: intros m; only 1: destruct m; only 1: easy; only 1: easy).	3.26438212395	1742
Coq.NArith.Ndigits.Nbit0_correct	40	2.0.3.9.3.0.10.0	synth with cache (only 1: intros; only 1: destruct n as [| n]; only 1: trivial; only 1: rewrite <- Ntestbit_Nbit; only 1: destruct n; only 1: trivial; only 1: apply Ptestbit_Pbit; only 1: trivial).	15.4414420128	13709
Coq.NArith.Ndigits.Ndouble_bit0	40	0.3.20.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: easy).	1.11521887779	1858
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: easy; only 1: trivial).	0.0288269519806	4
Coq.NArith.Ndigits.Ndiv2_double	40	0.0.0.0.0.3.5.0.0.0.0	synth with cache (only 1: intros until n; only 1: intros H; only 1: destruct n; only 1: easy; only 1: vm_compute in H; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).	17.1389398575	7670
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.0.2.0.1.0.0.0.1.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: intros Ha; only 1: easy; only 1: destruct p; only 1: intros H; only 1: reflexivity; only 1: intros; only 1: vm_compute in H; only 1: simpl; only 1: easy; only 1: trivial).	13.2847669125	5156
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.1.0.2.3	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: induction p; only 1: trivial; only 1: intros _tmp_tactician0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	4.50496101379	1836
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	8.12.3	synth with cache (only 1: intros c; only 1: fix odd_spec 1; only 1: trivial).	12.2764091492	9427
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.2.0	synth with cache (only 1: intros n; only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.133754014969	24
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: intros until a'; only 1: destruct a'; only 1: easy; only 1: trivial; only 1: intros until a'; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	5.23608899117	2468
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	0.0.11.0.0.6.1.3.0.1	synth with cache (only 1: intros n; only 1: unfold Nless; only 1: destruct n; only 1: easy; only 1: induction p; only 1: simpl; only 1: solve [ auto ]; only 1: easy; only 1: simpl; only 1: trivial).	18.4848048687	17483
Coq.NArith.Ndigits.N0_less_1	40	0.0.7.2.27.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: easy; only 1: destruct 1; only 1: exists p; only 1: trivial).	5.47800993919	9354
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40	1.0.0.29	synth with cache (only 1: intros l1; only 1: fix le_div2 1; only 1: intros _tmp_tactician0; only 1: auto with arith).	16.1659109592	27493
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	0.2.2.1.0	synth with cache (only 1: intros x; only 1: intros m; only 1: intros EQ; only 1: intros _tmp_tactician2; only 1: intuition N.Private_Tac.order).	0.0643990039825	25
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.3.1.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id a); only 1: rewrite <- (id a'); only 1: f_equal; only 1: easy; only 1: intros Ha; only 1: rewrite Ha; only 1: easy).	2.92552900314	980
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	0.0.1.1.0.2.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pmult_nat_mult; only 1: easy).	0.448462963104	292
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.1.0.8	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0678939819336	55
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.3.1.1.0	synth with cache (only 1: split; only 1: apply Nat2Pos.inj; only 1: intros Hn; only 1: rewrite Hn; only 1: easy).	0.220092058182	68
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0217049121857	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0186138153076	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).	0.0292370319366	5
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0200810432434	1
Coq.NArith.Nnat.Nat2N.inj_sub	40
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0189759731293	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0169658660889	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0185811519623	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0197329521179	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).	0.240813970566	109
Coq.Strings.Ascii.eqb_neq	40	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite Nat.eqb_eq; only 1: easy).	0.0203680992126	3
Coq.Strings.Ascii.eqb_compat	40	2.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: intros y; only 1: t_eqb).	0.192565202713	43
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40	5.3.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: destr_bool).	3.47104716301	1325
Coq.Strings.String.eqb_neq	40	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite BinInt.Z.eqb_eq; only 1: easy).	0.0284099578857	3
Coq.Strings.String.eqb_compat	40	0.3.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: Morphisms.f_equiv; only 1: easy).	0.170851945877	40
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40	0.16.3.3	synth with cache (only 1: intros l; only 1: intros s1; only 1: fix le_div2 1; only 1: easy).	24.9169719219	16167
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.3.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros b'; only 1: t_eqb).	4.61925005913	2215
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	6	synth with cache (only 1: trivial).	0.025251865387	7
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	5	synth with cache (only 1: trivial).	0.0232801437378	6
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	8	synth with cache (only 1: easy).	0.54031085968	50
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	214	synth with cache (only 1: constructor).	21.331952095	120482
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: unfold Rdiv; only 1: ring).	0.0971310138702	4
Coq.Reals.Ratan.pos_half_prf	40	1.1.0.0.0.0	synth with cache (only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: generalize (sqrt_positivity 2 (Rlt_le 0 2 Hyp)); only 1: intros H1; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.49143910408	29
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	0.0.2.10	synth with cache (only 1: intros _tmp_tactician0; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	21.0922720432	4419
Coq.Reals.Ratan.pow2_abs	40	0.0.22.1	synth with cache (only 1: intros n; only 1: split_Rabs; only 1: ring; only 1: ring).	13.5930299759	5328
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	1.0.2	synth with cache (only 1: intros H1; only 1: intros pr; only 1: lra).	0.217125892639	39
Coq.Reals.Ratan.pos_opp_lt	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0554530620575	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.2.0.4	synth with cache (only 1: intros a; only 1: intros; only 1: apply pow_lt; only 1: auto).	1.25908279419	185
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	1.0.0.1.0.0.3	synth with cache (only 1: intros H16; only 1: unfold Ratan_seq; only 1: unfold PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: ring).	5.4192969799	901
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	2.0.2.2.1.2.0	synth with cache (only 1: intros m; only 1: simpl; only 1: case m; only 1: intros H0; only 1: easy; only 1: intros a; only 1: auto).	7.82942700386	2465
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.5.0.6	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	3.77165007591	1883
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.1.1.0.0.1.7	synth with cache (only 1: intros n; only 1: induction n; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: auto).	2.54101991653	1390
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.2.0.0.1.1	synth with cache (only 1: intros r1; only 1: intros n2; only 1: intros; only 1: Morphisms.f_equiv; only 1: rewrite H; only 1: reflexivity).	0.107105016708	46
Coq.Reals.RList.RList_P22	40	6.4.0.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	2.03938508034	730
Coq.Reals.RList.RList_P23	40	7.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intros ?; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	3.25067305565	996
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	0.0.4.5.1.0.4.2.2	synth with cache (only 1: intros n; only 1: intros b; only 1: induction n; only 1: intros n; only 1: reflexivity; only 1: intros m; only 1: simpl; only 1: destruct (IHn m); only 1: reflexivity).	27.8096370697	16790
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low; only 1: intros high; only 1: intros k; only 1: intros H1; only 1: intros H2; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.161776065826	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	2.0.0.0.3	synth with cache (only 1: intros Eq; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).	0.104572057724	19
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	4.0.0.5.0.0.0.0.1	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros P; only 1: intros H1; only 1: unfold Rmin; only 1: intros Hnotz; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	17.5105319023	8887
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.2.0.0.0.5.5	synth with cache (only 1: intros r1; only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intros ?; only 1: assumption; only 1: auto).	16.5066518784	8125
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H1; only 1: auto with real; only 1: intros _tmp_tactician0; only 1: auto with real).	0.0670628547668	8
Coq.Reals.Rbasic_fun.Rmin_left	40	1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros H1; only 1: pattern x at 1; only 1: contradiction).	0.0808079242706	10
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0563530921936	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	8.9103178978	1855
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.0.0.0.2.1.2.2	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H1; only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	32.8543491364	11263
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.132915019989	6
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros ?; only 1: auto; only 1: intros Eq0; only 1: auto).	0.159101009369	8
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros P; only 1: intros H1; only 1: intros H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0799839496613	10
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros H1; only 1: auto with real; only 1: intros H1; only 1: auto with real).	0.0724351406097	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.100321054459	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0528721809387	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	7.33607387543	2255
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.0559771060944	7
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.0616569519043	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.0.0.3.0.1.10.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros H; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).	26.7945170403	16828
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	1.3.1.0.0.0.0.2	synth with cache (only 1: intros r; only 1: intros H; only 1: unfold Rabs; only 1: destruct (Rcase_abs r) as [Hlt| Hge]; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 Hlt); only 1: auto with real; only 1: trivial).	9.06640315056	3188
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	1.1.1.0.1.0.3.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmax_case_strong; only 1: intros H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	26.8704800606	6168
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.873965024948	161
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	0.1.13.0.0.3.0.0.6.64	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: intros r2; only 1: eapply Rlt_asym; only 1: apply Rplus_lt_compat_l; only 1: eauto; only 1: auto with real; only 1: intros H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	35.8787050247	15852
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	3.0	synth with cache (only 1: red; only 1: solve_proper).	1.27599096298	247
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	4.0	synth with cache (only 1: intros; only 1: intuition).	0.130134105682	32
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.0.7.0.7.0	synth with cache (only 1: intros ?; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	9.4390630722	2407
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.3.1.9.0.3	synth with cache (only 1: intros p; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: apply Rmult_0_l).	5.72808289528	1979
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intros ?; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.753739833832	127
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.9.0	synth with cache (only 1: intros ?; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.79024100304	398
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	3.1.2.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros _tmp_tactician0; only 1: auto with real).	0.145927906036	39
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	5.4	synth with cache (only 1: intros f; only 1: firstorder).	11.7538850307	1201
Coq.Reals.NewtonInt.NewtonInt_P4	40	0.1.0.1.0.0.6.1.6	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: elim H1; only 1: intros Hb; only 1: simpl; only 1: intros; only 1: ring).	34.2517449856	9196
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.0.3.3	synth with cache (only 1: intros lpe; only 1: intros; only 1: injection H; only 1: auto).	0.660335063934	135
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	1.0.43.4	synth with cache (only 1: intros ?; only 1: fix le_div2 1; only 1: intros; only 1: auto).	10.5821130276	22288
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	0.2.0.2.26	synth with cache (only 1: intros z; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	39.8751330376	15409
Coq.Reals.Rfunctions.fact_simpl	40	2.0.0	synth with cache (only 1: simpl; only 1: intros m; only 1: trivial).	0.0202870368958	5
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros p0; only 1: auto with real).	0.018590927124	2
Coq.Reals.Rfunctions.pow_1	40	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0332441329956	6
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros m; only 1: rewrite H'; only 1: auto with real).	0.972951889038	258
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40	7.0.0.4.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros r; only 1: rewrite Rdef_pow_add; only 1: intros; only 1: field; only 1: auto with real).	24.2359890938	8306
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0.1.0.0	synth with cache (only 1: intros r2; only 1: intros n; only 1: induction n; only 1: auto with real; only 1: auto with real).	0.0312647819519	6
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.2.4.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros H1; only 1: rewrite S_INR; only 1: ring).	1.09706807137	388
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	0.2.0.3.0.2	synth with cache (only 1: simple induction n; only 1: intros ?; only 1: easy; only 1: simpl; only 1: intros a; only 1: auto with real).	2.83725190163	731
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	9.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.453150987625	167
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	2.2.0.0.5.2	synth with cache (only 1: intros m; only 1: intros n; only 1: intros H2; only 1: rewrite Zpower_nat_Z; only 1: rewrite <- nat_N_Z; only 1: Z.order_pos).	9.56054019928	5170
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0107910633087	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.5.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: auto with real).	0.0235269069672	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.107167005539	9
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	0.2.0.13	synth with cache (only 1: intros a; only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	1.37708997726	791
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.1.0.1	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	0.184221982956	53
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0764620304108	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.1.1	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	0.078784942627	5
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).	0.0238590240479	2
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	0.0257911682129	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.0.0.1.0.3	synth with cache (only 1: intros a; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto with real).	4.62159705162	817
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.0.1.0.0.4.0	synth with cache (only 1: intros f; only 1: intros expr; only 1: intros Dg; only 1: intros x; only 1: intros x0; only 1: intros _tmp_tactician0; only 1: firstorder).	16.8381829262	2722
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.129760026932	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	3.0.3.0.0.0.0	synth with cache (only 1: intros f; only 1: intros D; only 1: intros X; only 1: intros cvp; only 1: intros H0; only 1: intros H; only 1: firstorder).	12.4255690575	2312
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.1.1.0	synth with cache (only 1: intros; only 1: intros abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: eauto).	0.626601934433	282
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	27.13.1.5	synth with cache (only 1: destruct (CRltLinear R); only 1: intros ?; only 1: destruct (CRisRingExt R); only 1: apply R).	10.1103448868	13837
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	2.0.22	synth with cache (only 1: intros _tmp_tactician0; only 1: right; only 1: trivial).	1.64636015892	1873
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: reflexivity).	0.0369980335236	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.7.0	synth with cache (only 1: intros r; only 1: intros Ey; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.248712062836	104
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.0.0.0.3	synth with cache (only 1: intros r; only 1: intros y; only 1: intros _tmp_tactician0; only 1: intros abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.821191072464	200
Coq.Reals.RIneq.Rgt_not_eq	40	0.0.2.1.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros _tmp_tactician0; only 1: intros abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	2.17326211929	905
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.521165847778	163
Coq.Reals.RIneq.Rlt_le	40	0.3.0	synth with cache (only 1: red; only 1: intros n; only 1: auto with arith).	0.0962729454041	38
Coq.Reals.RIneq.Rgt_ge	40	2.1.10	synth with cache (only 1: intros Hb; only 1: left; only 1: tauto).	2.01656007767	697
Coq.Reals.RIneq.Rle_ge	40	15.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).	3.95236897469	1989
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0500221252441	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0282580852509	2
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0203821659088	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0873520374298	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0368211269379	3
Coq.Reals.RIneq.Rnot_lt_le	40	5.1.3.1.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros b; only 1: intros H2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	18.8500750065	7416
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0542109012604	6
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	2.28245782852	876
Coq.Reals.RIneq.Rnot_lt_ge	40	0.2.1.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.150078058243	37
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	synth with cache (only 1: intros; only 1: auto with real).	0.0460350513458	13
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.047749042511	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0485649108887	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.3.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros EQ; only 1: intros abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.243956804276	39
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.5	synth with cache (only 1: red; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).	0.278736114502	57
Coq.Reals.RIneq.Rge_not_gt	40	0.0.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros EQ; only 1: apply Rle_not_lt; only 1: auto with real).	0.213433980942	31
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0373458862305	3
Coq.Reals.RIneq.Req_ge	40	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0945999622345	18
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0867960453033	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0792138576508	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0949079990387	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0546870231628	5
Coq.Reals.RIneq.Rle_le_eq	40	2.0.1	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition).	0.166328907013	39
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0438899993896	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.1.1	synth with cache (only 1: intros IH; only 1: intros m; only 1: congruence).	0.0603001117706	22
Coq.Reals.RIneq.Rgt_eq_compat	40	2.5.0	synth with cache (only 1: intros x; only 1: intros m; only 1: congruence).	0.765124797821	176
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	2.9645781517	68
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.0.1.0.1.7	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	3.49689388275	1007
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.150556087494	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0.0.1	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.108901977539	6
Coq.Reals.RIneq.Rge_dec	40	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.185773134232	16
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.2.0.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold not; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros a; only 1: intuition).	0.259770154953	10
Coq.Reals.RIneq.Rgt_ge_dec	40	1.5.3	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.448877811432	147
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0962858200073	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.555485010147	101
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0643999576569	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.511233091354	86
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.396288156509	56
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.462960004807	111
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	2.14617300034	36
Coq.Reals.RIneq.Rplus_opp_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	4.93455696106	48
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.3.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).	0.0848650932312	16
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.3.1.0	synth with cache (only 1: intros r; only 1: intros; only 1: rewrite H; only 1: tauto).	0.214773893356	54
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	1.5.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	37.4299240112	1779
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0540060997009	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0743279457092	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros ?; only 1: field).	0.0891191959381	18
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0588839054108	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.7.13	synth with cache (only 1: intros H; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	5.76020979881	2025
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.136023044586	19
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0.0.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: apply f_equal).	0.0447039604187	4
Coq.Reals.RIneq.Rmult_eq_compat_r	40	7.3	synth with cache (only 1: intros n; only 1: congruence).	1.31874084473	395
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	4.0	synth with cache (only 1: intros r2; only 1: auto with real).	0.0364010334015	6
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0224649906158	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	7.0.2.0	synth with cache (only 1: intros r1; only 1: intros Hnotz; only 1: intros H; only 1: intuition).	2.21046900749	523
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.3.1.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros Hn; only 1: auto with real).	0.226583957672	13
Coq.Reals.RIneq.Rmult_plus_distr_r	40	6.1.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	10.9983990192	130
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros _tmp_tactician0; only 1: auto with real).	0.0413990020752	6
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.0491650104523	11
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.2.3.2.7	synth with cache (only 1: intros j; only 1: intros ?; only 1: unfold IZR; only 1: rewrite H; only 1: ring).	2.47197198868	1077
Coq.Reals.RIneq.Ropp_involutive	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.396512985229	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: ring).	0.0449590682983	3
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.7.2	synth with cache (only 1: intros n; only 1: intros y; only 1: ring).	0.891622066498	171
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0381429195404	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.3.3	synth with cache (only 1: intros n; only 1: intros m; only 1: ring).	0.788364887238	149
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0.3	synth with cache (only 1: intros n; only 1: intros p; only 1: ring).	0.233485937119	39
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0392401218414	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros ?; only 1: ring).	0.0742909908295	11
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0618848800659	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0356659889221	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0354490280151	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.4.2.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: inversion 1; only 1: ring).	5.60513091087	1489
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0369820594788	3
Coq.Reals.RIneq.Rminus_eq_contra	40	3.1.1.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: auto with real).	0.105304002762	9
Coq.Reals.RIneq.Rminus_not_eq	40	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.351189136505	66
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0488338470459	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.061075925827	18
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0447521209717	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0480880737305	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0.0.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: field; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.823323965073	137
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.2.5.0.1	synth with cache (only 1: intros a; only 1: intros; only 1: rewrite <- (Ropp_involutive r2); only 1: field; only 1: auto with real).	4.26453185081	807
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.3.0.0.1	synth with cache (only 1: intros a; only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.664930820465	115
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	3.0.1	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).	0.316138982773	29
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.0.2	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).	0.0773501396179	26
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	1.15503501892	126
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.0.3.14	synth with cache (only 1: intros abs; only 1: unfold Rge; only 1: intros y; only 1: intuition).	33.0793619156	12581
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intros ?; only 1: left; only 1: auto with zarith real; only 1: intros ?; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	3.33039712906	682
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.1.0.2.2	synth with cache (only 1: intros ?; only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.908305883408	417
Coq.Reals.RIneq.Rplus_lt_compat	40	8.0.1.2	synth with cache (only 1: intros r; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: eauto with real).	4.8475420475	2448
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0368151664734	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.2.8	synth with cache (only 1: red; only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	1.69093799591	783
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1.1.5	synth with cache (only 1: intros Ha'; only 1: intros m; only 1: intuition).	0.082957983017	13
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.237281084061	65
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.100807905197	9
Coq.Reals.RIneq.Ropp_gt_contravar	40	6.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.863653898239	56
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.48339390755	382
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0.4.0	synth with cache (only 1: unfold Rge; only 1: intros n; only 1: intros _tmp_tactician0; only 1: intuition).	0.813993930817	70
Coq.Reals.RIneq.Ropp_le_contravar	40	1.1.0.0.2.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intros ?; only 1: auto with real; only 1: auto with real).	0.155611038208	16
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.1.0.2.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1; only 1: intros x; only 1: destruct 1; only 1: auto with real; only 1: auto with real).	0.372788190842	47
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0339241027832	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.2	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.149197101593	44
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0343849658966	3
Coq.Reals.RIneq.Ropp_lt_cancel	40	1.0.1.3.0.0.4	synth with cache (only 1: intros a; only 1: intros; only 1: apply Rnot_le_lt; only 1: intros abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	3.72922897339	1617
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).	0.348829984665	117
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.0427701473236	1
Coq.Reals.RIneq.Rmult_gt_compat_l	40	7.3	synth with cache (only 1: intros a; only 1: intuition).	1.21028494835	312
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.2.7	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).	6.49291396141	3548
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.2.8	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).	15.7160539627	10034
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	11.3.0	synth with cache (only 1: intros x; only 1: intros; only 1: auto with *).	12.205384016	5285
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	2.7.0.0.1	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition).	3.18299794197	1559
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: easy).	0.040421962738	4
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1; only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: ring).	0.0589210987091	6
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40
Coq.Reals.RIneq.Rle_0_1	40	1	synth with cache (only 1: auto with real).	0.0243299007416	2
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	1.0.3.0.0.11.4	synth with cache (only 1: intros x; only 1: unfold Rminus; only 1: intros m; only 1: intros H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: auto with real).	35.8585038185	28022
Coq.Reals.RIneq.S_INR	40	0.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).	2.89385795593	841
Coq.Reals.RIneq.S_O_plus_INR	40	4.0.7.0.0.2.2	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).	9.26406002045	3164
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.19	synth with cache (only 1: fix even_spec 1; only 1: auto with real).	5.72023391724	3384
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	6.1.4.2	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: tauto; only 1: intuition).	26.6517789364	10720
Coq.Reals.RIneq.INR_not_0	40	4.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).	0.211415052414	44
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40	1.0.3.14.1	synth with cache (only 1: intros x; only 1: fix le_div2 1; only 1: intros n; only 1: intros HR; only 1: auto with arith).	36.1055998802	26325
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.0.1.0.0.9	synth with cache (only 1: intros x; only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: auto using Z.lt_pred_l).	1.49904799461	1244
Coq.Reals.RIneq.INR_IPR	40	5.1.11	synth with cache (only 1: fix even_spec 1; only 1: intros ?; only 1: easy).	3.20880699158	2311
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	1.0.9.1.1.20.5	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	23.6241500378	13708
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.1.1.0.4	synth with cache (only 1: intros a; only 1: intros z; only 1: intros Ha; only 1: contradict Ha; only 1: apply eq_IZR; only 1: auto).	8.96531200409	2262
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	5.2.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: ring).	0.0919439792633	16
Coq.Reals.RIneq.double_var	40	2.16.32	synth with cache (only 1: intros p; only 1: ring_simplify; only 1: field).	25.1281189919	13305
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40	1.2.3.0	synth with cache (only 1: intros H; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.064465045929	14
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.184381008148	40
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	4.3.0.9.1	synth with cache (only 1: intros n; only 1: intros r1; only 1: intros p; only 1: unfold Rdiv; only 1: ring).	17.1659290791	6250
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.0.3.3.3.1	synth with cache (only 1: intros x; only 1: intros ?; only 1: intros y; only 1: pattern x at 1; only 1: unfold Rdiv; only 1: ring).	6.20137500763	2847
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0519800186157	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: apply Nat.mul_le_mono_pos_l; only 1: Nat.order').	0.0478129386902	4
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.2.1	synth with cache (only 1: intros n; only 1: intros IH; only 1: auto with arith).	0.143671989441	29
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	3	synth with cache (only 1: auto with real).	0.0202360153198	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0509119033813	11
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	0.1.2.0.7	synth with cache (only 1: intros Hn; only 1: intros Dg; only 1: intros x; only 1: intros H1; only 1: auto using Rplus_lt_compat with rorders).	3.44590902328	717
Coq.Reals.Ranalysis2.quadruple	40	4.0	synth with cache (only 1: intros ?; only 1: field).	0.0733878612518	6
Coq.Reals.Ranalysis2.quadruple_var	40	2.17	synth with cache (only 1: intros Hm; only 1: field).	1.39268493652	821
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	1.0	synth with cache (only 1: unfold interior; only 1: trivial).	0.027626991272	3
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.11.0	synth with cache (only 1: intros; only 1: intros ?; only 1: eauto).	2.39814901352	907
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	0.1.6.28.6.0.3	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: apply (Rlt_irrefl 0); only 1: destruct _tmp_tactician0 as (a, H); only 1: exfalso; only 1: inversion_clear H; only 1: auto).	22.7554590702	32551
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	1.0.1.2.4.1.4	synth with cache (only 1: intros n; only 1: intros y; only 1: intros m; only 1: intuition; only 1: unfold included in H; only 1: induction H0; only 1: firstorder).	20.2627968788	8646
Coq.Reals.Rtopology.open_set_P2	40	7.1.1.4	synth with cache (only 1: intros a; only 1: intros y; only 1: intros H1; only 1: firstorder).	8.77588200569	3140
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	1.1.1.0	synth with cache (only 1: unfold open_set; only 1: intros ?; only 1: unfold neighbourhood; only 1: easy).	0.0421369075775	7
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40	8.7.8	synth with cache (only 1: intros _tmp_tactician0; only 1: fix sqrtrem_spec 1; only 1: auto).	22.1916980743	12514
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	10.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: firstorder).	2.09171104431	810
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	1.0.8	synth with cache (only 1: intros x0; only 1: intros; only 1: firstorder).	1.18034601212	466
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.35.11	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).	2.95195698738	7620
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	1.0.2.0.1.3	synth with cache (only 1: intros n; only 1: intros a; only 1: intros m; only 1: intros cvfk; only 1: Nat.nzsimpl; only 1: auto with arith).	8.59773492813	1452
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	9.0.0.0.0.2.4	synth with cache (only 1: intros n; only 1: intros LT; only 1: intros ?; only 1: intros x'; only 1: intros ?; only 1: unfold opp_fct; only 1: auto with real).	10.4150779247	3683
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0961151123047	3
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.169825077057	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.3.1	synth with cache (only 1: intros a; only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.567865848541	107
Coq.Reals.Ranalysis1.derive_pt_D_in	40	3.3.1.1.7	synth with cache (only 1: intros Dg; only 1: intros H'; only 1: intros r2; only 1: fix odd_spec 1; only 1: easy).	4.72425103188	2151
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	7.5.5.4	synth with cache (only 1: intros m; only 1: intros r2; only 1: intros _tmp_tactician0; only 1: eauto).	10.9460589886	6078
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.3.0	synth with cache (only 1: intros l; only 1: intros r2; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0257909297943	8
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.4.36	synth with cache (only 1: intros t; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).	1.00838899612	1583
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intros ?; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0385599136353	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.2.3.5	synth with cache (only 1: intros q; only 1: intros H1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	3.60892701149	1264
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.3.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.163920164108	14
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.264664173126	32
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	2.22	synth with cache (only 1: fix odd_spec 1; only 1: auto with real).	2.12262296677	2177
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	4.0.2.5	synth with cache (only 1: intros f; only 1: intros _tmp_tactician0; only 1: intros P; only 1: firstorder  (subst; auto)).	3.15024995804	1621
Coq.Reals.SeqProp.Wn_decreasing	40	0.2.29.1	synth with cache (only 1: intros a; only 1: fix even_equiv 1; only 1: intros n; only 1: trivial).	33.0106611252	24760
Coq.Reals.SeqProp.Vn_growing	40	2.1.4.13.10	synth with cache (only 1: intros y; only 1: intros a; only 1: red; only 1: fix le_div2 1; only 1: easy).	34.2738649845	19742
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	2.0.3.0.0	synth with cache (only 1: intros x; only 1: intros Heub; only 1: fix gcd_divide 1; only 1: intros _tmp_tactician0; only 1: easy).	0.0833768844604	29
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0134711265564	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	0.0.7.3.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: easy).	2.71113801003	585
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40	5.6.2.0.7.0.20.6	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: rewrite double; only 1: unfold tan; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_plus; only 1: unfold Rdiv; only 1: ring).	14.6446669102	9747
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.236558914185	22
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.109932899475	3
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	1.11.0.38	synth with cache (only 1: apply Rgt_not_eq; only 1: destruct pi2_int; only 1: apply sqrt_lt_R0; only 1: Lra.lra).	8.78748893738	5587
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0925180912018	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.8	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.141210079193	34
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_0_2; only 1: apply PI_RGT_0).	0.0786681175232	3
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.374230146408	121
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	12.0.5.1.0.0.0.0.13	synth with cache (only 1: rewrite double; only 1: generalize PI2_RGT_0; only 1: intros H1; only 1: generalize (Rplus_lt_compat_l PI 0 (PI / 2) H1); only 1: rewrite Rplus_0_r; only 1: intros H2; only 1: pattern PI at 2; only 1: rewrite double_var; only 1: Lra.lra).	38.8833749294	16780
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.0.15.0.0.0	synth with cache (only 1: intros ?; only 1: unfold toRad; only 1: unfold toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).	4.53469109535	2497
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.10.0	synth with cache (only 1: intros; only 1: intros x; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	4.64331388474	2024
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0389750003815	5
Coq.Reals.Ranalysis4.derivable_cosh	40
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0339620113373	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.1.7	synth with cache (only 1: intros p; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.525059938431	294
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.6	synth with cache (only 1: intros eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.0998368263245	22
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.183052062988	38
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	3.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.0441641807556	9
Coq.Reals.DiscrR.IZR_eq	40	0.3.0.1.1	synth with cache (only 1: intros n; only 1: intros z; only 1: intros ?; only 1: Morphisms.f_equiv; only 1: easy).	0.497258901596	126
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R); only 1: destruct p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R); only 1: destruct p; only 1: exact (f x x H H)).	1.67352700233	527
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.0.1.2	synth with cache (only 1: intros n; only 1: intros A; only 1: intros y; only 1: intros H; only 1: firstorder).	0.5395860672	106
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	19	synth with cache (only 1: eauto with arith).	0.75177693367	590
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	9	synth with cache (only 1: trivial).	0.0265629291534	34
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	0.1.4	synth with cache (only 1: intros EQ; only 1: intros t; only 1: apply CReal_isRingExt).	5.75320792198	482
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	29.9747121334	478
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	2.1.0	synth with cache (only 1: intros x; only 1: intros t; only 1: apply (Ropp_ext CReal_isRingExt)).	13.3144948483	237
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros z; only 1: intros y0; only 1: intros H0; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	10.4205360413	697
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	10.1	synth with cache (only 1: intros _tmp_tactician0; only 1: ring).	0.374143123627	209
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0175890922546	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0192198753357	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	2	synth with cache (only 1: assumption).	0.00990009307861	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.0.0.2	synth with cache (only 1: intros n; only 1: intros y; only 1: intros y0; only 1: apply CReal_mult_proper_l).	1.9899289608	110
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0180788040161	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	4.20.3	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: ring).	6.85621285439	5285
Coq.Reals.R_sqr.Rsqr_mult	40	1.6.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).	0.0675439834595	14
Coq.Reals.R_sqr.Rsqr_plus	40	4.4.5.6	synth with cache (only 1: intros ?; only 1: intros n; only 1: unfold Rsqr; only 1: ring).	3.98617005348	1614
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0458209514618	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	12.2.3	synth with cache (only 1: intros a; only 1: intros p; only 1: ring_Rsqr).	4.17204189301	2158
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0285511016846	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.0.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	0.122196912766	12
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).	0.0526938438416	9
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.1.1	synth with cache (only 1: intros n; only 1: intros; only 1: ring_Rsqr).	0.101602077484	23
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0425770282745	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.0.0.4.2.1	synth with cache (only 1: intros y; only 1: intros r2; only 1: unfold Rsqr; only 1: intros t; only 1: intros H'; only 1: intros ?; only 1: auto with real).	9.17661118507	2968
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.33.0.1.1	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: unfold Rabs; only 1: compute; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: auto with real; only 1: auto with real).	33.5192010403	29051
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	0.0.16.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: intropattern subst -> H; only 1: rewrite <- Rsqr_abs; only 1: ring_Rsqr).	23.3235359192	11128
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.4.0.4	synth with cache (only 1: intros r; only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	2.29517102242	897
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.0.1.0.0.8	synth with cache (only 1: intros x; only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: auto using Z.lt_pred_l).	2.63911390305	1069
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0.0.1	synth with cache (only 1: intros c; only 1: intros X1; only 1: intros; only 1: apply derivable_pt_id).	0.0816030502319	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.0.0.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros ub; only 1: intros a; only 1: intuition).	0.928363084793	52
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_0_2).	0.125772953033	7
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).	3.45898389816	1959
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.14470410347	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0604197978973	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0593709945679	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0689737796783	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.2.0.0.0.1.0.1.2	synth with cache (only 1: intros a; only 1: intros x; only 1: intros ?; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros n1; only 1: auto with real).	20.3786590099	4002
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.5.2.1	synth with cache (only 1: intros m; only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros y; only 1: apply Rplus_le_compat_l).	5.27194499969	1503
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.0.2.2.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm _ p); only 1: rewrite (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros y; only 1: apply Rplus_le_compat_l).	2.80145812035	830
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmax_case_strong; only 1: intros w; only 1: rewrite Rmin_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy; only 1: intros w; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy).	19.2213160992	4192
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: apply Rmin_case_strong; only 1: intros w; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy; only 1: intros w; only 1: rewrite Rmax_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: easy).	26.3024938107	5130
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	1.0.1.6.8.1	synth with cache (only 1: intros a; only 1: unfold Rgt; only 1: intros H1; only 1: apply Rmult_lt_0_compat with (1 := H1); only 1: apply Rinv_0_lt_compat; only 1: auto with real).	20.6776809692	9665
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0.9	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	0.679014205933	234
Coq.Reals.Rlimit.eps4	40	5.13	synth with cache (only 1: intros _tmp_tactician2; only 1: field).	3.24321603775	2159
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0221190452576	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0.1.6	synth with cache (only 1: intros r2; only 1: rewrite <- double; only 1: intros; only 1: lra).	0.228587150574	74
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	6.0.2	synth with cache (only 1: intros x; only 1: intros; only 1: firstorder).	1.35262489319	291
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0889830589294	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0731158256531	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.4.0.3.2	synth with cache (only 1: simpl; only 1: intros r2; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	6.70378398895	2098
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0491948127747	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	6.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	16.4176700115	4088
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	1.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.0998339653015	8
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	1.59528803825	231
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.0.0.1.1.0.1.0.2.0	synth with cache (only 1: intros x; only 1: intros H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: apply Rmult_lt_compat_r; only 1: easy; only 1: easy; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	28.2329940796	10074
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.736514091492	74
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.138962984085	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0895280838013	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	0.0.15.5.12	synth with cache (only 1: unfold Rminus; only 1: intros Hn; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	24.7710330486	14760
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intros x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intros H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).	4.55506587029	1055
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40	7.1.11	synth with cache (only 1: intros l; only 1: rewrite <- cos_sym; only 1: reflexivity).	9.98999214172	4767
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.3.0	synth with cache (only 1: intros x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.475661039352	63
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.0.0.5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).	6.21660399437	1239
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.4.0	synth with cache (only 1: intros x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.180882930756	19
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.1883020401	9
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	1.2.8.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).	11.7629220486	3564
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2); only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2); only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr; only 1: field; only 1: field).	6.94453501701	1228
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.020220041275	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0194118022919	2
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0811228752136	9
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: rewrite tech5; only 1: rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.38762998581	1998
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	1.0.0.1.0.1.6.3	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: destruct _tmp_tactician0 as [| | ]; only 1: reflexivity; only 1: auto; only 1: ring).	7.09340500832	3207
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intros abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	7.5999121666	3834
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	4.19	synth with cache (only 1: fix le_div2 1; only 1: solve [ auto ]).	0.606189966202	1106
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.0.12	synth with cache (only 1: intros ?; only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs)).	0.107213020325	105
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0317399501801	8
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	0.0.0.0.6.2	synth with cache (only 1: intros a; only 1: intros l; only 1: intros H; only 1: split; only 1: apply H; only 1: apply H).	6.80137705803	1148
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	3.1.1.5.0.3.0	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intros y0; only 1: destruct H0; only 1: apply H; only 1: assumption).	22.8210401535	8031
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	0.0.10.7.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intros H1; only 1: apply CRealLe_morph; only 1: apply CRealEq_refl).	38.5889749527	17290
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	2.0.5.9	synth with cache (only 1: red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto with *).	8.87862491608	7471
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.2.2.6	synth with cache (only 1: intros EQ; only 1: intros x'; only 1: intros Hx; only 1: rewrite Hx; only 1: reflexivity).	2.48729109764	1615
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	4	synth with cache (only 1: trivial).	0.00693297386169	5
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	10	synth with cache (only 1: auto).	0.0160481929779	34
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: clear H; only 1: rewrite <- (CReal_plus_comm x); only 1: rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.177298069	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intros abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.88225293159	704
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	4	synth with cache (only 1: easy').	0.0464060306549	5
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.00708985328674	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.0	synth with cache (only 1: intros ?; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0441958904266	6
Coq.Reals.Rtrigo_reg.derivable_cos	40
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.1.0.0.0.0.0.0.2.12.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: cut (forall h : R, sin (h + PI / 2) = cos h); only 1: intros ?; only 1: generalize (derivable_pt_lim_comp (id + fct_cte (PI / 2))%F sin); only 1: intros; only 1: apply derivable_pt_lim_sin; only 1: intros ?; only 1: rewrite cos_sin; only 1: rewrite Rplus_comm; only 1: reflexivity).	36.2687499523	10846
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.3.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.3184030056	60
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Hx; only 1: split; only 1: eauto with real; only 1: auto with real).	0.08660197258	23
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.5.0.12	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).	7.79351305962	2765
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	2.4.13.19	synth with cache (only 1: constructor; only 1: revert n; only 1: fix even_spec 1; only 1: trivial).	2.26072883606	2037
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.0	synth with cache (only 1: intros r; only 1: auto).	0.0195560455322	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: constructor).	0.014251947403	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.105928182602	27
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0126750469208	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.4.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).	0.0276670455933	8
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0470938682556	6
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	7.21	synth with cache (only 1: intros P; only 1: inversion 1).	0.799504041672	637
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	1.14	synth with cache (only 1: fix even_spec 1; only 1: easy).	1.6091940403	1263
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	8.16	synth with cache (only 1: fix odd_spec 1; only 1: easy).	12.7285721302	8508
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	1.3.2.7.0	synth with cache (only 1: intros m; only 1: intros y; only 1: intros; only 1: apply find_2; only 1: auto).	2.48843097687	1707
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	1.3.0.0.0.2.0.23	synth with cache (only 1: intros EQ; only 1: unfold elements; only 1: intros e; only 1: intros e'; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: intros y; only 1: auto).	13.7011940479	10184
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	4.5.5.6	synth with cache (only 1: intros x; only 1: intros n; only 1: fix even_spec 1; only 1: easy).	8.07797002792	3798
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	3.0	synth with cache (only 1: intros; only 1: tauto).	0.0160758495331	5
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: intros; only 1: trivial).	0.037556886673	14
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	2.2.2.2.2.1.1.12	synth with cache (only 1: intros n; only 1: intros sorted; only 1: pattern n; only 1: intros x; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	25.1596009731	24986
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	0.11.1.2	synth with cache (only 1: intros Eq; only 1: intros m; only 1: intros until r; only 1: intuition_in).	1.64446020126	567
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	15	synth with cache (only 1: easy).	0.433250904083	290
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.0.1	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.0195300579071	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.4.5.4	synth with cache (only 1: intros sorted; only 1: intuition; only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	6.54930114746	844
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.4.3.2	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: Tactics.program_simpl; only 1: intuition_in; only 1: order).	9.57103896141	245
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: intros; only 1: eauto with *).	0.0206921100616	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0135159492493	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0131611824036	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0132758617401	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.2.0	synth with cache (only 1: intros m; only 1: intros p; only 1: eauto with ordered_type).	0.0265891551971	5
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: generalize (H _ H0); only 1: order).	0.0206439495087	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0591750144958	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	3	synth with cache (only 1: intuition).	0.0111918449402	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.1.3.0.9	synth with cache (only 1: intros IN; only 1: unfold empty; only 1: intros x; only 1: intros _tmp_tactician2; only 1: intuition_in).	0.388096094131	208
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	0.10	synth with cache (only 1: fix odd_spec 1; only 1: easy).	3.79127120972	318
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	8.3.0.1	synth with cache (only 1: intros until m; only 1: case m; only 1: easy; only 1: easy).	3.25563001633	1939
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	1.0.0.0.3.0.0	synth with cache (only 1: intros m; only 1: intuition_in; only 1: constructor; only 1: auto; only 1: auto; only 1: intuition_in; only 1: intuition_in).	0.402628183365	165
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	5.0.2.0	synth with cache (only 1: unfold create; only 1: intros m; only 1: intros m'; only 1: intuition_in).	0.468961000443	163
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	9.13.4	synth with cache (only 1: red; only 1: fix gcd_divide 1; only 1: auto).	14.6260049343	17581
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	0.3.0.5.1.0.0.8	synth with cache (only 1: intros c; only 1: induction s as [| l Hl y e r Hr h]; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: rewrite Hl; only 1: simpl; only 1: apply Hr).	7.06330394745	6005
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	24.19.13.24	synth with cache (only 1: intros a; only 1: destruct a; only 1: easy; only 1: easy).	10.6300649643	34309
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.0.0.2.3.5.2.8.0	synth with cache (only 1: intros l; only 1: intros m1; only 1: intros y; only 1: induction l; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: inversion H; only 1: intuition; only 1: intuition; only 1: intuition).	36.4496412277	34067
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0586500167847	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	0.18.7.2	synth with cache (only 1: intros until m; only 1: intros sorted; only 1: fix even_spec 1; only 1: trivial).	36.4620049	53628
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	2	synth with cache (only 1: easy).	0.014132976532	3
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	0.2.0.0.0.4.2.0.0	synth with cache (only 1: intros m; only 1: intros x; only 1: red; only 1: simpl; only 1: intros y; only 1: intros e; only 1: intros e'; only 1: intros ?; only 1: eauto using add_2, add_3).	4.2662088871	3230
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.19.0.0	synth with cache (only 1: intros m; only 1: intros x; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: auto).	3.35074901581	4283
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.0.19.0.0.0.8	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: intros RS; only 1: rewrite elements_mapsto; only 1: eauto using Raw.Proofs.add_2, Raw.Proofs.add_3).	20.7017729282	27921
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	6.10.22.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| _tmp_tactician2]; only 1: easy; only 1: exact I).	1.85910487175	4971
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.0135428905487	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: easy).	0.0160839557648	4
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	31	synth with cache (only 1: intuition).	20.2759768963	12286
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	7	synth with cache (only 1: intuition).	0.165791988373	54
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intros EQ; only 1: intuition).	0.0605521202087	8
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	10	synth with cache (only 1: intuition).	0.0983798503876	44
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.12.4	synth with cache (only 1: intros ?; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	1.48934698105	1072
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	5	synth with cache (only 1: intuition).	0.215125083923	20
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	5.2	synth with cache (only 1: intros Ha; only 1: intuition).	0.0600230693817	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4.3	synth with cache (only 1: intros Ha; only 1: intuition).	0.0931711196899	27
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	9.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.570564985275	334
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: intros H; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.28758883476	301
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.10	synth with cache (only 1: intros A; only 1: firstorder  (subst; auto)).	2.43788695335	790
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	6.4.0.2	synth with cache (only 1: red; only 1: red; only 1: intros x2; only 1: firstorder  (subst; auto)).	25.3323190212	9287
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.0.3.1	synth with cache (only 1: intros ?; only 1: intros H; only 1: apply equal_2; only 1: intuition).	0.0554430484772	9
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.1.1.0	synth with cache (only 1: intros x; only 1: intros m; only 1: red; only 1: auto).	0.130260944366	52
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.6	synth with cache (only 1: intros A; only 1: firstorder  (subst; auto)).	0.637506008148	199
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.0.0.9.0.7	synth with cache (only 1: intros p; only 1: intros; only 1: intros s'; only 1: rewrite add_iff; only 1: intuition; only 1: eauto with set).	35.0165178776	13078
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.0.1.0.5	synth with cache (only 1: intros; only 1: intros a; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	3.10264992714	1197
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	3.0.0.0.1.4.0.1.2	synth with cache (only 1: intros a; only 1: intros m; only 1: intros n'; only 1: intros ?; only 1: intros ?; only 1: intros Hpq; only 1: intros H0; only 1: rewrite inter_iff; only 1: intuition).	27.1681580544	15784
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.1.0.0.3.3	synth with cache (only 1: intros s'; only 1: intros; only 1: intros x; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).	2.71636390686	1001
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.0.2.1	synth with cache (only 1: intros x; only 1: intros q; only 1: intros r; only 1: congruence).	0.220264911652	89
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.1	synth with cache (only 1: intros ?; only 1: trivial).	0.0127460956573	3
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	3.0	synth with cache (only 1: intros ?; only 1: easy).	0.0233609676361	5
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.0	synth with cache (only 1: intros; only 1: easy).	0.0263090133667	5
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	1.0.6	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x; only 1: eauto).	0.298560857773	96
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.0482330322266	22
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0123801231384	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.1.0.0.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: easy; only 1: easy'; only 1: trivial).	0.0393528938293	7
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	5	synth with cache (only 1: easy).	0.0171041488647	11
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	4.2.0	synth with cache (only 1: fix odd_spec 1; only 1: intros s2; only 1: easy).	0.0974860191345	11
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.26	synth with cache (only 1: intros m; only 1: rewrite is_empty_spec; only 1: trivial).	14.6961481571	9834
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	5.0.1.0	synth with cache (only 1: intros q; only 1: intros _tmp_tactician0; only 1: intros y; only 1: easy).	0.0279629230499	14
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.0.2.3	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.415810108185	134
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40	3.13.8	synth with cache (only 1: intros H1; only 1: fix odd_spec 1; only 1: easy).	12.3577971458	7455
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	7.2.1	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: easy).	1.56888604164	666
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.22	synth with cache (only 1: fix odd_spec 1; only 1: easy).	32.8990778923	24284
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.7.0.3.1.11	synth with cache (only 1: intros IH; only 1: intros n; only 1: unfold Equal; only 1: rewrite equal_subset; only 1: fix even_spec 1; only 1: trivial).	34.5221281052	19130
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	1.1.0.1.1.0.0.12.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: auto; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: reflexivity).	6.32626605034	5860
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	2.5.4	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	3.29799604416	1309
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0392050743103	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	5.11.4	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: auto).	11.5808551311	5438
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0243408679962	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	6.12.16.13.25	synth with cache (only 1: intros H; only 1: elim H; only 1: constructor; only 1: constructor; only 1: constructor).	10.6888051033	39754
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0235838890076	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0244359970093	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	0.241357088089	100
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	3.0.1.6.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.479620933533	416
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.0.7	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.287970066071	123
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	4.0.0.1.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: intros b; only 1: rewrite remove_spec; only 1: intros Hb; only 1: tauto).	0.618721961975	228
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.0.1.1.3	synth with cache (only 1: intros n; only 1: intros Hi; only 1: intros m; only 1: rewrite remove_spec; only 1: unfold In; only 1: intuition congruence).	0.491540908813	264
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.1.0.0.3	synth with cache (only 1: red; only 1: unfold singleton; only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.113472938538	40
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	1.14769601822	494
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).	0.0268239974976	5
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0.0.3	synth with cache (only 1: intros b; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).	0.343476772308	149
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0.4.0	synth with cache (only 1: intros s; only 1: intros n; only 1: intros m; only 1: rewrite diff_spec; only 1: tauto).	0.121425151825	51
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: intros ?; only 1: tauto).	0.525050878525	185
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	2.8.1.3.5	synth with cache (only 1: intros H; only 1: intros s'; only 1: intros x; only 1: fix odd_spec 1; only 1: easy).	30.5788989067	14934
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0.1.0.0	synth with cache (only 1: intros b; only 1: unfold filter; only 1: intros a0; only 1: intros _tmp_tactician0; only 1: intros x; only 1: rewrite xfilter_spec; only 1: tauto).	0.115998029709	32
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	0.14.0.6.2.0	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: intros _tmp_tactician0; only 1: intuition; only 1: firstorder; only 1: fix even_spec 1; only 1: trivial).	28.2547900677	15514
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0.0.4.11	synth with cache (only 1: intros H; only 1: intros f; only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: tauto).	17.524682045	11315
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	1.1.0.2.1	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold exists_; only 1: intros f; only 1: rewrite xexists_spec; only 1: trivial).	0.234376907349	92
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.4	synth with cache (only 1: destr_bool; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.415983915329	173
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	1.12.0	synth with cache (only 1: unfold In; only 1: fix even_spec 1; only 1: auto).	2.60520887375	1836
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40	0.16	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.364526987076	420
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).	0.0405471324921	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.0.0.0.0.17.16.4.3	synth with cache (only 1: intros H; only 1: generalize H; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [q| q| ]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: firstorder  discriminate).	16.1838009357	27560
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0.6	synth with cache (only 1: intros ?; only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.677805900574	210
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	2.0.3.0.7	synth with cache (only 1: intros n; only 1: induction n; only 1: auto with arith; only 1: auto; only 1: easy).	0.644062042236	558
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intros H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intros H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	12.1557149887	4714
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.0.0.0.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	0.904671192169	341
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	7.8.0	synth with cache (only 1: intros H; only 1: symmetry; only 1: congruence).	0.894380092621	957
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	8	synth with cache (only 1: congruence).	0.139734983444	44
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0137429237366	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.76958608627	5140
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0380070209503	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	0.2.0.3.0.3	synth with cache (only 1: intros a; only 1: split; only 1: intros ?; only 1: apply (MapsTo_1 H H0); only 1: firstorder; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	2.58432197571	1312
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	13.0	synth with cache (only 1: intros; only 1: intuition).	0.961293935776	536
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	9.2.0	synth with cache (only 1: destr_bool; only 1: rewrite <- not_true_iff_false; only 1: intuition).	0.848690986633	377
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	0.1.5.7	synth with cache (only 1: intros s2; only 1: intros Ha; only 1: intros; only 1: intuition).	3.32118606567	1780
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.2.14	synth with cache (only 1: red; only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	1.62771916389	1357
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0	synth with cache (only 1: intros until m; only 1: intuition).	0.0259549617767	2
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros _tmp_tactician0; only 1: apply add_2; only 1: auto; only 1: auto).	0.0598328113556	9
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0555238723755	8
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.1.0.1.0.5.0.1.0.1	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	26.5718269348	18377
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	2.1.6.1.0.0.0.4.0.4	synth with cache (only 1: intros n; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: easy; only 1: intros Eq; only 1: discriminate).	20.7899692059	16767
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	5.2	synth with cache (only 1: intros s; only 1: intuition).	0.0261311531067	13
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	0.0.0.0.0.0.8.2.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	2.75778388977	1671
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition).	0.0573809146881	12
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.2.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.291772127151	48
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	4.0	synth with cache (only 1: intros; only 1: split).	0.0235960483551	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.0.5.0	synth with cache (only 1: intros; only 1: intros e; only 1: elim H; only 1: auto with map).	0.152710914612	9
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	3.0.0.2.2.2	synth with cache (only 1: intros c; only 1: intros ?; only 1: intros p; only 1: intros q; only 1: intros Hc; only 1: congruence).	3.24229598045	1908
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	5.0	synth with cache (only 1: intros; only 1: auto with map).	0.0474460124969	24
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	4.1.2.0.2.2.5	synth with cache (only 1: intros Hrec; only 1: intros a; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pempty; only 1: auto).	7.29365921021	5314
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	0.5.1.0.0.27	synth with cache (only 1: intros Hc; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: intuition).	29.0184328556	44378
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.12.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: easy; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	8.22234416008	7715
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	1.2.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Hk; only 1: firstorder).	0.193557977676	80
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	1.1.8.0.0.0.7	synth with cache (only 1: intros s; only 1: intros; only 1: intros k; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, _tmp_tactician4); only 1: apply H with k; only 1: auto).	12.0470168591	11547
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	6.4	synth with cache (only 1: compute; only 1: firstorder).	1.8900141716	929
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.1.0.1.0.1	synth with cache (only 1: intros m; only 1: intros m'; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	3.44441390038	1297
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	3.0.2	synth with cache (only 1: intros m'; only 1: fix even_spec 1; only 1: auto).	0.11635518074	56
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	3.20	synth with cache (only 1: fix odd_spec 1; only 1: auto with *).	17.8552620411	7280
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	4.0.0	synth with cache (only 1: intros x; only 1: intros H; only 1: easy).	0.0226709842682	7
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	2.52	synth with cache (only 1: compute; only 1: auto).	0.409149885178	1554
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.1.0.5	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: intuition; only 1: easy).	0.490069150925	365
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	2.1	synth with cache (only 1: intros inlist; only 1: auto).	0.0154428482056	5
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0084171295166	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	2.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: auto; only 1: auto).	0.137353897095	19
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	0.0.4.2.1.3.8	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).	9.83355998993	7687
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	38.6661231518	20297
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	1.29.1.0	synth with cache (only 1: intros m; only 1: intros x; only 1: fix odd_spec 1; only 1: intuition).	31.1867549419	39198
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	2	synth with cache (only 1: easy).	0.0127267837524	3
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	1.9	synth with cache (only 1: fix odd_spec 1; only 1: easy).	0.189054012299	130
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	3.18	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.27977204323	1223
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.5.0	synth with cache (only 1: intros m; only 1: induction m; only 1: intuition).	0.02228307724	8
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0131759643555	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	3.0.34	synth with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	0.991368055344	3649
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	10	synth with cache (only 1: auto).	0.1456990242	71
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0	synth with cache (only 1: red; only 1: intros y; only 1: intuition).	0.0210428237915	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: Dec.fsetdec).	0.0217199325562	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	0.6.9	synth with cache (only 1: intros H; only 1: compute; only 1: firstorder).	5.77875089645	3162
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	10.0.4	synth with cache (only 1: intros x'; only 1: intros Hxx'; only 1: firstorder).	2.56945514679	1948
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0816669464111	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.8.1	synth with cache (only 1: rewrite <- mem_iff; only 1: rewrite FM.elements_iff; only 1: intuition).	9.90798997879	1926
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.012974023819	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	9	synth with cache (only 1: auto with set).	0.121057987213	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.184257984161	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	14.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.69726395607	366
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0841479301453	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0119659900665	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.5	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0228710174561	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	2.6.2.1	synth with cache (only 1: rewrite mem_iff; only 1: intros; only 1: rewrite H; only 1: intuition).	0.750166893005	417
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.0117449760437	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0226378440857	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0220708847046	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	2.5.0	synth with cache (only 1: apply subset_1; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0826778411865	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	3.2.0	synth with cache (only 1: intros; only 1: rewrite <- equal_iff; only 1: auto with set).	0.0265431404114	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	4.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).	0.0238590240479	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0382070541382	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0119180679321	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	4.0.7.2	synth with cache (only 1: intros; only 1: rewrite <- mem_iff; only 1: apply remove_3 with x; only 1: auto with set).	9.18024110794	1700
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	2.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.154173135757	39
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0361371040344	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	3.3.1.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: apply singleton_1; only 1: intuition).	1.77521800995	514
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	6.0	synth with cache (only 1: rewrite <- equal_iff; only 1: Dec.fsetdec).	0.0893859863281	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.014496088028	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0108199119568	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0100991725922	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0102438926697	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set).	0.0106470584869	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0108828544617	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0106770992279	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00898504257202	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: auto with set).	0.053699016571	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0106558799744	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0116550922394	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0111269950867	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0103979110718	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.00984787940979	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.00906300544739	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.00974917411804	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.137204885483	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.00998210906982	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0089418888092	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.028128862381	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0102479457855	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0124340057373	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0103211402893	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.00901412963867	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.00974798202515	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0159640312195	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	12.5025029182	3778
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	2.2.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.8517999649	1622
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0442771911621	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.06325507164	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.191624164581	88
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	0.1.2.15	synth with cache (only 1: intros h; only 1: intros n; only 1: rewrite <- not_mem_iff; only 1: intuition).	5.84759807587	3598
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.1.0.0.5.0.0.0.0.0.0.7.7	synth with cache (only 1: intros a; only 1: intros s'; only 1: rewrite cardinal_fold; only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: intros Hm; only 1: auto).	18.5618019104	11816
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.6.16	synth with cache (only 1: intros H; only 1: intros s'; only 1: auto with set fset).	0.500957965851	487
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	4	synth with cache (only 1: solve_proper).	0.0808880329132	53
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	8.4	synth with cache (only 1: intros; only 1: auto with set).	0.246828079224	159
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0122618675232	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.0.4.17	synth with cache (only 1: intros x; only 1: intros; only 1: f_equal; only 1: auto).	1.38485002518	1161
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.1.0.5.1	synth with cache (only 1: simpl; only 1: intros _tmp_tactician0; only 1: intros l; only 1: intros a0; only 1: eauto with set).	1.22351408005	606
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	3.4.1	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).	0.0791869163513	79
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	3.26.0.1	synth with cache (only 1: intros Eq; only 1: intros s; only 1: fix odd_spec 1; only 1: assumption).	7.40014696121	12989
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.0.1.0.1.1.16	synth with cache (only 1: intros a; only 1: unfold equal; only 1: intros; only 1: destruct eq_dec as [_tmp_tactician0| NEQ]; only 1: intuition; only 1: intuition; only 1: discriminate).	1.95180106163	1630
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.20.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros s'; only 1: fix odd_spec 1; only 1: intuition).	30.2735350132	27265
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.0.2.0.0.0.0.1	synth with cache (only 1: intros s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	0.224498987198	113
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.127	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).	15.2086191177	111754
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	6.0	synth with cache (only 1: intros; only 1: intuition).	0.0505938529968	36
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0409080982208	9
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	31.2600460052	2775
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	1.1.0.0.0.1.0.1.2.2.0	synth with cache (only 1: intros s; only 1: case (M.min_elt s); only 1: unfold For_all; only 1: unfold max_elt; only 1: intros s'; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto; only 1: auto).	34.1558389664	2138
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0273540019989	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0302748680115	5
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0.4	synth with cache (only 1: intros x; only 1: intros y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.131884098053	94
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.1.1.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: intuition; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0681569576263	21
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0325269699097	6
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.031614780426	6
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.0.3	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.765645027161	225
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0329439640045	6
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.1.0.0.0.0.1.1.0	synth with cache (only 1: intros s; only 1: firstorder; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	4.29664993286	1552
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0144062042236	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.12.0.0.14.2	synth with cache (only 1: intros; only 1: intros ?; only 1: intros x'; only 1: intros; only 1: inversion 1; only 1: auto with ordered_type).	38.5738880634	46594
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.0.0.0.1.1.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: unfold compat_bool; only 1: intros f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.945116996765	258
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intros; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.455415010452	10
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0455000400543	7
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.2	synth with cache (only 1: red; only 1: solve_proper).	2.03426098824	280
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	5.0.3.19.0	synth with cache (only 1: split; only 1: fix odd_spec 1; only 1: auto; only 1: intros H; only 1: intuition).	3.26181697845	3166
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0631229877472	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.0.2.0.0	synth with cache (only 1: red; only 1: intros a; only 1: split; only 1: intuition; only 1: intuition).	0.0223479270935	7
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.0298819541931	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0593731403351	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0154759883881	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0340929031372	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0352640151978	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0241119861603	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0153861045837	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.034040927887	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.16	synth with cache (only 1: red; only 1: fsetdec).	0.776521921158	509
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0523829460144	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0946071147919	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0291111469269	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.10	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.420855998993	124
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0391800403595	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	4.1.5	synth with cache (only 1: intuition; only 1: intros g_eq; only 1: fsetdec).	0.192831039429	82
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.042023897171	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.130575895309	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0624680519104	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.0752282142639	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.132292032242	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.109934091568	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	12	synth with cache (only 1: fsetdec).	0.078262090683	47
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.249934911728	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.262697935104	44
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0510158538818	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.119247198105	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	1.0	synth with cache (only 1: intros H0; only 1: fsetdec).	0.0870041847229	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.150032997131	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	3.9	synth with cache (only 1: intros y; only 1: fsetdec).	0.099858045578	68
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.122189998627	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.231985807419	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.24186205864	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0212588310242	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0192229747772	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0428578853607	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0386509895325	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0330018997192	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.044548034668	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0651459693909	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.0492761135101	11
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0730929374695	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0651190280914	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0601210594177	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0554277896881	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.127617120743	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.158950090408	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.170288085938	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.158571958542	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	1.6.0	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.170857906342	11
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0325739383698	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0290009975433	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0414309501648	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0272879600525	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0410780906677	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0883660316467	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0435090065002	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0520279407501	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.131846904755	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0858981609344	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.0941491127014	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.136875867844	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.0.0.0.0.1.2.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	0.610207080841	234
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.5.1.8	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: fsetdec).	2.71749210358	1115
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.29317688942	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.250706195831	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.182870864868	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.2.1	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.12527084351	372
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.020751953125	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.2.1.15	synth with cache (only 1: intros l1; only 1: intros s'; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	12.9788849354	9213
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	7.0.2	synth with cache (only 1: intros a; only 1: intros n; only 1: intuition).	0.619588136673	248
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.5	synth with cache (only 1: intros Pstep; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.246315956116	93
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.0.6.2	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.71860003471	1507
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.0772299766541	22
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0198750495911	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0175130367279	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: intros A; only 1: tauto).	1.13494610786	3
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0	synth with cache (only 1: tauto).	0.602715969086	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	4	synth with cache (only 1: easy).	0.0637199878693	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	0.6.1	synth with cache (only 1: intros y; only 1: intros b; only 1: fsetdec).	0.776515007019	119
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.1.0	synth with cache (only 1: intros s'''; only 1: intros n'; only 1: fsetdec).	0.0969319343567	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.2.0.0.4	synth with cache (only 1: intros s2'; only 1: intros n; only 1: intros s'; only 1: intros m; only 1: fsetdec).	0.62802696228	99
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.0.4	synth with cache (only 1: intros; only 1: apply singleton_2; only 1: auto).	0.0409579277039	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1.0.4	synth with cache (only 1: intros a; only 1: intros y; only 1: fsetdec).	0.124792098999	15
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.2.6.2	synth with cache (only 1: intros s'''; only 1: intros b; only 1: intros s''; only 1: fsetdec).	1.40496110916	744
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0946929454803	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.134215116501	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.0.9	synth with cache (only 1: intros n; only 1: intros x; only 1: fsetdec).	1.66406083107	226
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.4.3	synth with cache (only 1: intros H; only 1: intros Hf; only 1: fsetdec).	0.563299894333	78
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.2.3.0	synth with cache (only 1: intros s'; only 1: intros b; only 1: intros a; only 1: fsetdec).	0.303963899612	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.291059970856	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.4.2.3	synth with cache (only 1: intros y; only 1: unfold Subset; only 1: intros m; only 1: firstorder).	0.569688081741	145
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.0.0	synth with cache (only 1: intros Sym2; only 1: intros s2'; only 1: fsetdec).	0.101053953171	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	3.0.2	synth with cache (only 1: intros s; only 1: intros s'; only 1: fsetdec).	0.440788984299	58
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	1.9	synth with cache (only 1: intros _tmp_tactician0; only 1: fsetdec).	0.793210029602	306
Coq.FSets.FMapList.Raw.Elt.empty_1	40	1	synth with cache (only 1: easy).	0.013326883316	2
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.0112428665161	5
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.7.3.0.22	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: easy; only 1: simpl; only 1: easy).	12.2945449352	11382
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.2.3	synth with cache (only 1: intros m; only 1: intros Hm; only 1: auto with ordered_type).	1.06534981728	24
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0110149383545	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	6.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: auto).	0.0525100231171	22
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.0.0.0.1.3.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: destruct a as (x', e'); only 1: simpl; only 1: intros; only 1: inversion H; only 1: inversion_clear H; only 1: auto).	1.37570309639	548
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	6.1.0.0.0.2.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: intuition).	13.6922979355	4932
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0543110370636	8
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40	0.1.22.6.0.3.0	synth with cache (only 1: intros m; only 1: intros sorted; only 1: case m; only 1: intros _tmp_tactician4; only 1: fix even_spec 1; only 1: intros Hm; only 1: auto).	18.7574660778	30874
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.17	synth with cache (only 1: intros H1; only 1: inversion_clear 1).	0.0491011142731	145
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.00890588760376	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0114579200745	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.4.3	synth with cache (only 1: induction m; only 1: simpl; only 1: auto).	0.0222280025482	19
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: reflexivity).	0.0149939060211	8
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.0.1	synth with cache (only 1: intros m; only 1: fix even_spec 1; only 1: easy).	0.0214619636536	14
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	0.5.18.2	synth with cache (only 1: unfold eq; only 1: fix even_spec 1; only 1: intros H'; only 1: auto).	1.79178190231	2898
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.7	synth with cache (only 1: split; only 1: auto with sets).	0.0252678394318	25
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.0.6.0	synth with cache (only 1: intros; only 1: intros x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.0526671409607	42
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.15	synth with cache (only 1: left; only 1: assumption).	0.179730892181	195
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.3.0.1.1.8.2	synth with cache (only 1: intros y; only 1: intros H; only 1: intros H2; only 1: induction H2; only 1: intros H2; only 1: induction H2; only 1: auto with sets; only 1: auto with sets).	3.05706906319	3172
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	2.0.0.1.1	synth with cache (only 1: red; only 1: intros y; only 1: intros H2; only 1: apply Acc_intro; only 1: auto with sets).	0.0259110927582	9
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: easy).	0.877352952957	534
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.97718477249	1048
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.55751395226	689
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	1.0.0.5.0.0.2.0.0.2.0.0.2.14	synth with cache (only 1: induction d; only 1: N.bitwise; only 1: trivial; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: simpl; only 1: N.order'; only 1: easy; only 1: easy; only 1: split).	32.2852258682	15009
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	0.0291199684143	5
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0112237930298	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	6.1	synth with cache (only 1: simpl; only 1: trivial).	0.0175969600677	9
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0144400596619	4
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3.1.1	synth with cache (only 1: revert n; only 1: intros a; only 1: split).	0.0244917869568	11
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	0.5.0.0.8.1.1	synth with cache (only 1: unfold N.to_uint; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: easy; only 1: unfold Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: trivial).	6.38857102394	3649
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.0.1.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: unfold unorm; only 1: split; only 1: easy; only 1: easy).	12.2040560246	6136
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.3.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: easy).	0.0912449359894	24
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.1.1.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm; only 1: rewrite E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.6196808815	114
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	8.0	synth with cache (only 1: intros m; only 1: split).	0.02792096138	22
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	3.2.0.8.2.8	synth with cache (only 1: intros x1; only 1: intros y; only 1: compute; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	32.6279459	31487
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0.1.0	synth with cache (only 1: unfold Z.pred; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl in *; only 1: nzsimpl; only 1: easy).	0.117374897003	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.4.0.1.28.83	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.eq; only 1: simpl; only 1: intros IH; only 1: nzsimpl; only 1: reflexivity).	5.75959801674	15982
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	5.0.143	synth with cache (only 1: compute; only 1: nzsimpl'; only 1: easy).	3.10292005539	11477
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	5	synth with cache (only 1: easy).	0.0232970714569	21
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).	0.0165860652924	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.0.0.0.8	synth with cache (only 1: intros a; only 1: unfold Z.eq; only 1: simpl in *; only 1: nzsimpl; only 1: easy).	0.437935113907	285
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.2.0.0.3	synth with cache (only 1: intros f; only 1: unfold Z.eq; only 1: simpl; only 1: intros n; only 1: nzsimpl; only 1: easy).	1.66003799438	318
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	1.0.3.11	synth with cache (only 1: compute; only 1: intros _tmp_tactician0; only 1: nzsimpl; only 1: easy).	0.874521970749	771
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.1.0.1.0.0	synth with cache (only 1: unfold Z.succ; only 1: unfold Z.eq; only 1: simpl; only 1: intros IH; only 1: intros m; only 1: nzsimpl; only 1: easy).	0.288415908813	26
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0.0.0	synth with cache (only 1: unfold Z.mul; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl; only 1: easy).	0.113049030304	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	7.4	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intuition).	0.316920995712	278
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	4.0.0.4.6	synth with cache (only 1: intros m; only 1: intros q; only 1: unfold Z.lt; only 1: unfold Z.le; only 1: intuition order).	4.69324588776	1862
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_mono; only 1: easy; only 1: easy).	0.0356740951538	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).	0.0341079235077	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).	0.0356509685516	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.0318222045898	8
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.0.0.0.5.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_lt_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).	1.61701011658	915
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.0.0.0.6.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_le_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).	4.12377285957	2020
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	1.0.2.4.1.1.0	synth with cache (only 1: intros m; only 1: rewrite <- (mul_0_l m)  at 1; only 1: symmetry; only 1: nzsimpl; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_0_l; only 1: easy).	2.86041402817	1505
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	2.0.0.4.1	synth with cache (only 1: intros m; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_opp_r; only 1: nzsimpl; only 1: easy).	0.479333877563	231
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	0.0.0.2.5.1	synth with cache (only 1: intros m; only 1: symmetry; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite <- le_0_sub; only 1: easy).	0.773447036743	460
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	0.1.1.4.1	synth with cache (only 1: intros m; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).	0.292073011398	150
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.1.0.0.0.6	synth with cache (only 1: rewrite succ_lt_mono; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: apply lt_succ_diag_r).	0.229901075363	110
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	0.0.0.0.0.0.0.0.0.0.2.0.1.1	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	15.484153986	7929
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.0.1.0.3.3	synth with cache (only 1: intros p; only 1: intros; only 1: rewrite (sub_lt_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	4.16032314301	1415
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	0.1.0.0.1.9.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite (add_lt_mono_r _ _ p); only 1: rewrite sub_simpl_r; only 1: rewrite (add_comm m p); only 1: easy).	36.0599551201	13294
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	0.0.1.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite (add_lt_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite (sub_lt_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	1.26259183884	527
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	0.0.1.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite (sub_le_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).	1.54580211639	578
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	0.2.0.0.1.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	22.312071085	12082
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	0.2.0.0.1.1.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	21.4555301666	12813
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.0.9.0.0.1.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite Even_succ; only 1: easy).	8.01426506042	3062
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	1.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite odd_succ; only 1: easy).	0.112759113312	16
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	0.0.8.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: nzsimpl'; only 1: rewrite add_simpl_r; only 1: easy).	11.6264531612	3583
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.3.0.1.0	synth with cache (only 1: intros n; only 1: intros p; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: easy).	0.0851550102234	49
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: easy; only 1: easy).	0.0286169052124	5
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	19.3122801781	5459
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	3.3.0	synth with cache (only 1: destr_bool; only 1: order'; only 1: order').	0.0225601196289	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.0.0.1.0.0.0.1.0.0.2.5.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: simpl; only 1: apply le_refl; only 1: simpl; only 1: order').	15.4074568748	12981
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.2.4.3	synth with cache (only 1: intros n; only 1: rewrite testbit_spec'; only 1: f_equiv; only 1: nzsimpl; only 1: easy; only 1: apply le_refl).	2.98422884941	1411
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	0.0.7.1.1.1	synth with cache (only 1: intros Hn; only 1: rewrite lt_nge; only 1: rewrite <- not_false_iff_true; only 1: apply imp_iff_compat_r; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).	2.42261099815	1484
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	0.3.0.0.5.1.4	synth with cache (only 1: intros x; only 1: intros x'; only 1: compute; only 1: intros EQ; only 1: intros m; only 1: f_equiv; only 1: easy).	20.3425328732	4119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	0.0.0.0.0.0.4.0.0.0.4	synth with cache (only 1: intros a0; only 1: intros n; only 1: intros Hn; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftr_spec; only 1: rewrite sub_opp_r; only 1: easy; only 1: easy; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	26.0289931297	12821
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.3.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftl_spec; only 1: easy; only 1: trivial; only 1: easy).	3.75545597076	1586
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	0.0.0.1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).	3.0573220253	1562
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	0.0.1.2.0	synth with cache (only 1: intros n; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl'; only 1: easy; only 1: apply le_refl).	0.142112016678	53
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	0.2.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy; only 1: rewrite opp_nonneg_nonpos; only 1: apply le_refl).	0.0956342220306	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	0.0.2.3.3.5	synth with cache (only 1: intros H; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).	38.6108210087	20684
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	0.0.0.0.5.0.3	synth with cache (only 1: intros a0; only 1: rewrite <- shiftl_opp_r; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).	12.0919721127	5183
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.64946603775	674
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.53918814659	639
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.50742411613	594
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0178182125092	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	6.1.1	synth with cache (only 1: intros m; only 1: bitwise; only 1: split).	0.119274139404	86
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0178229808807	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	5.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: easy).	0.124737977982	165
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.8.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	1.48571705818	1785
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0174679756165	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0165050029755	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: unfold setbit; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	31.5576951504	14283
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.12	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	15.6441910267	6745
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	0.2.0.5.0.2.2	synth with cache (only 1: intros; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite clearbit_eqb; only 1: rewrite H; only 1: rewrite andb_true_r; only 1: easy).	19.4833128452	12680
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0378360748291	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite <- lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.45810604095	2401
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.102775096893	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	0.0.0.0.1.1.1.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite ldiff_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.62462997437	2566
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	1.0.0.5.0.32	synth with cache (only 1: apply add_move_0_r; only 1: nzsimpl'; only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).	0.728343963623	1114
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	1.0.0.0.1.0.0.1	synth with cache (only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: unfold lnot; only 1: rewrite opp_pred; only 1: rewrite opp_0; only 1: rewrite pred_succ; only 1: easy).	0.259312868118	122
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: easy).	0.0230650901794	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: easy).	0.0250329971313	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: easy).	0.022696018219	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	0.0.5.1.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: trivial; only 1: easy; only 1: easy).	1.25995898247	919
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: rewrite orb_negb_r; only 1: easy; only 1: easy; only 1: easy).	0.0327661037445	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	0.0.4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: easy; only 1: easy).	0.0824298858643	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: apply andb_negb_r; only 1: trivial).	0.105480909348	44
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.4.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: trivial; only 1: trivial).	0.405286073685	272
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	2.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (lxor_0_r (lnot a)); only 1: rewrite <- lnot_m1; only 1: rewrite lxor_lnot_lnot; only 1: bitwise; only 1: apply xorb_comm).	0.0363969802856	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	0.0.4.6.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: compute; only 1: intros H; only 1: rewrite H; only 1: f_equiv).	6.95357394218	5018
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: rewrite <- shiftl_opp_r; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftl_nonneg; only 1: easy).	0.0898110866547	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	0.0.8.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).	0.710978984833	466
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftr_nonneg; only 1: easy).	0.0254719257355	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	0.0.7.3.1.0.1	synth with cache (only 1: intros ?; only 1: rewrite lt_nge; only 1: unfold lnot; only 1: rewrite <- lt_le_pred; only 1: rewrite opp_pos_neg; only 1: rewrite lt_nge; only 1: easy).	14.381155014	10436
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	0.0.0.2.1.1.3.0.0.0	synth with cache (only 1: intros a; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite lt_nge; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: split; only 1: order; only 1: intros Ha; only 1: order_pos).	5.44433903694	3760
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	5.1.0.0.5.1.1	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite lt_nge; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: intuition order).	20.217236042	12018
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	2.0.0.2.0.0.0.0.0.2.2	synth with cache (only 1: intros m; only 1: intros ?; only 1: split; only 1: intros H; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	18.1748058796	10617
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.050705909729	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	2.4.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: rewrite gcd_opp_l; only 1: easy).	18.5428340435	8469
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	0.0.2.1.0.2.0.1.1.1	synth with cache (only 1: intros Hn; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_0_r; only 1: apply divide_abs_l; only 1: easy; only 1: intros; only 1: apply divide_abs_r; only 1: easy).	14.55803895	8301
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	1.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_0_l_nonneg; only 1: apply abs_nonneg).	0.317363977432	103
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.2.0.1.0.1.1.3.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_r; only 1: easy; only 1: intros; only 1: apply divide_abs_r; only 1: easy).	13.8755800724	7806
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.0.1.4.3.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: rewrite gcd_mul_mono_l; only 1: rewrite mul_comm; only 1: easy; only 1: trivial).	33.231320858	17379
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	0.1.4.0.1	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_abs_r; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.358806848526	151
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.3.1.0	synth with cache (only 1: unfold lcm; only 1: intros m; only 1: intros p; only 1: apply abs_nonneg).	0.0922830104828	51
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.0.5.10.1	synth with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite gcd_0_l; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: easy; only 1: auto using eq_refl, le_refl).	2.42803287506	1872
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.101064920425	21
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.4.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial).	2.97822809219	1390
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0698578357697	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0358910560608	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros Hp; only 1: intros H; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: easy; only 1: trivial).	0.0501849651337	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0396740436554	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	0.334365844727	61
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.1.1.5.1.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: assert (LE : 0 <= abs n); only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: easy; only 1: easy; only 1: trivial using divide_refl).	34.4567940235	21468
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.1.0.0.0.0.0.1.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy).	27.2449150085	15542
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy; only 1: rewrite max_l; only 1: rewrite max_l; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).	26.8825910091	15410
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy).	9.24414992332	4435
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.0.0.0.2.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial; only 1: rewrite max_l; only 1: rewrite min_l; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial).	36.7455210686	19404
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial).	12.6615660191	7586
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0.0.0.1	synth with cache (only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0574390888214	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	2.4.3	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.265661001205	185
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.5.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0210361480713	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.0.5.0.0.3	synth with cache (only 1: intros AP; only 1: intros m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: rewrite <- lt_succ_r; only 1: easy).	4.12244105339	2466
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	1.3.16	synth with cache (only 1: intros LS; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	8.53987789154	11353
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	1.7.8.0	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: order).	13.161012888	9582
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0555930137634	20
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.0.9.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	9.38761687279	7066
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.1.0.5.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).	1.72697496414	1323
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	1.0.0.1.4.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: symmetry; only 1: apply lt_succ_r).	26.4556589127	13310
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0272979736328	13
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.70782494545	278
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.4.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	1.55075597763	726
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.0.0.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: rewrite <- lt_pred_le; only 1: easy).	1.3429889679	646
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	1.2.6.2	synth with cache (only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).	1.90299701691	1644
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	2.2.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: easy; only 1: order').	0.992549180984	851
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.024099111557	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.2.2	synth with cache (only 1: intros H2; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.223680973053	155
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0305709838867	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	1.0.2.2.0.0.1	synth with cache (only 1: intros m; only 1: split; only 1: intros EQ; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- EQ; only 1: apply abs_nonneg; only 1: apply abs_neq).	0.545639038086	395
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	0.0.0.8.0.2.0.8.3.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: easy; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	4.6198618412	7653
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	12.0.0	synth with cache (only 1: rewrite abs_eq; only 1: easy; only 1: easy).	0.97874212265	624
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	13.0.5.0.1	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: left; only 1: reflexivity; only 1: auto with relations).	7.9234290123	7736
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.5.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).	0.162312030792	73
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: easy; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: easy).	0.627960205078	294
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.026820898056	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: easy; only 1: easy).	0.0127890110016	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0826730728149	10
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	0.0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: intros r; only 1: intros b; only 1: intros _tmp_tactician0; only 1: symmetry; only 1: apply NZQuot.div_unique with r; only 1: destruct _tmp_tactician0 as (Hb, Hr); only 1: trivial; only 1: easy; only 1: intuition; only 1: nzsimpl; only 1: easy).	24.1351571083	12933
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.8.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	2.9381248951	934
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b); only 1: apply quot_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.133504867554	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0208201408386	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).	26.4567520618	12484
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0244619846344	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.0405068397522	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.136957883835	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	0.0.0.0.0.4.9.1.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	33.2595860958	23322
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.537422895432	263
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0208251476288	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0190501213074	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: intuition order; only 1: easy; only 1: nzsimpl; only 1: easy).	10.785736084	4735
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.35597205162	120
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.414345979691	69
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.112033128738	34
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial; only 1: order).	0.84929895401	321
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: easy; only 1: easy; only 1: order).	0.0907590389252	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).	0.0319888591766	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0298969745636	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0325701236725	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.138859033585	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.0.0.0.1.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: easy; only 1: rewrite mul_add_distr_l; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.mod_add; only 1: rewrite add_shuffle0; only 1: rewrite <- div_mod; only 1: rewrite mul_comm; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	31.2856211662	13026
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.3.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	9.33703899384	2882
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.0.0.2.1.1.1.1.2	synth with cache (only 1: intros b; only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite Private_NZDiv.mul_mod_distr_l; only 1: easy; only 1: trivial; only 1: trivial).	22.350924015	9787
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	1.1.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: apply mod_bound_or; only 1: easy; only 1: easy).	0.891854047775	509
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.0.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros p; only 1: intros Hn; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).	7.33107185364	2523
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.3.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: rewrite (mul_comm a); only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: trivial; only 1: trivial).	10.3249878883	4210
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.2.1.1.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	8.19360804558	2892
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.0.3.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: apply add_mod_idemp_l; only 1: trivial; only 1: trivial).	6.44764304161	2689
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.15257382393	377
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	0.6.0.3.1	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: easy).	13.1569540501	4178
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	0.0.0.0.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: rewrite opp_succ; only 1: rewrite sub_succ_r; only 1: rewrite pred_inj_wd; only 1: easy).	0.0540220737457	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite add_succ_l; only 1: rewrite pred_succ; only 1: easy).	0.0348660945892	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.0.0.1.0.1.0.3.0.1	synth with cache (only 1: intros m; only 1: rewrite <- add_opp_r; only 1: nzinduct m; only 1: rewrite add_0_l; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite opp_succ; only 1: rewrite add_pred_r; only 1: nzsimpl; only 1: easy).	3.8553788662	1825
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.0612978935242	20
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.1.2.1.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: easy).	0.33243894577	117
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.1.0.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: easy).	0.391243934631	93
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.2.0.0.0.0.0.1.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	10.4901280403	5819
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (opp_inj_wd (- n) m); only 1: rewrite opp_involutive; only 1: easy).	0.0654139518738	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: easy).	0.107334852219	21
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.3.0.0.2.0.1.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).	33.8032991886	11577
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.2.0.3.1	synth with cache (only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	1.67147302628	682
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: easy).	0.0958960056305	11
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	4.3.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: apply add_shuffle0).	2.66363692284	1208
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	1.3.0.1.0.1.1.0.2.0	synth with cache (only 1: intros n; only 1: intros n'; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: nzsimpl; only 1: rewrite pred_inj_wd; only 1: easy).	12.2614049911	6033
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	0.9.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).	2.62513184547	1880
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	0.6.2.4.1.2.0	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite add_comm; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_0_l; only 1: easy).	10.7128200531	8460
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.0.0.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite add_comm; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.0803480148315	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.0.0.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.298983097076	153
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	0.0.0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).	0.0719211101532	29
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.3.2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite <- add_sub_assoc; only 1: apply add_move_l; only 1: easy).	0.0398850440979	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.0.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_sub_swap; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: easy).	0.0294101238251	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.1.0.0.0.2.0.1	synth with cache (only 1: nzinduct m; only 1: nzsimpl; only 1: apply add_opp_diag_l; only 1: intros m; only 1: rewrite opp_succ; only 1: rewrite sub_succ_r; only 1: rewrite add_pred_l; only 1: rewrite pred_inj_wd; only 1: easy).	4.42994904518	1710
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.0.2.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: easy).	0.0266370773315	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	0.213230848312	48
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	0.0.0.2.3.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: rewrite add_opp_r; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy).	38.965970993	16066
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (add_comm n m); only 1: apply add_add_simpl_l_l).	0.0305280685425	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	0.0.0.0.0.2.0.0.2.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite (add_comm p n); only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite add_opp_r; only 1: easy).	3.70585083961	1984
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	1.4.0.4.0.0.3.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite add_assoc; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	38.2083859444	18874
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).	1.39969706535	925
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.315689086914	111
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.147134780884	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: order).	0.0431561470032	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.1.0.0.0.0.0.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).	0.880509853363	316
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0199358463287	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0191118717194	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: apply mul_comm).	1.23659682274	564
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: easy; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).	0.723690032959	231
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.409109830856	70
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.136531114578	34
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).	0.0305690765381	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.3.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.774682998657	287
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: order).	0.0369789600372	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).	0.0372190475464	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.1.0.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_always_pos; only 1: easy; only 1: rewrite mul_add_distr_l; only 1: rewrite add_shuffle0; only 1: rewrite <- div_mod; only 1: rewrite mul_comm; only 1: easy; only 1: easy).	23.6753230095	9897
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.4.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: easy; only 1: trivial).	13.0718450546	4058
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.1.2.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite Private_NZDiv.mul_mod_distr_l; only 1: easy; only 1: trivial; only 1: trivial).	10.3997938633	3518
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	1.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: apply mod_always_pos; only 1: easy; only 1: easy).	0.0549211502075	20
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.0.1.1.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hb; only 1: intros Hn; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).	3.08600187302	661
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.3.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: rewrite (mul_comm a); only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: trivial; only 1: trivial).	19.0233929157	5486
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.1.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	27.5276389122	6607
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.1.3.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: apply add_mod_idemp_l; only 1: trivial; only 1: trivial).	4.49335002899	1439
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	5.9698779583	2430
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1.0	synth with cache (only 1: intros x; only 1: BinInt.Z.order).	0.0318641662598	13
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	2.0.4.1.3	synth with cache (only 1: intros A; only 1: intros R; only 1: intros b; only 1: intros x; only 1: firstorder).	1.41738414764	607
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.5.11	synth with cache (only 1: intros IH; only 1: intros y; only 1: intros ?; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	18.1475419998	10495
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	0.34	synth with cache (only 1: fix even_spec 1; only 1: easy).	19.9549639225	12229
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	0.4.19	synth with cache (only 1: intros p; only 1: <Coq.Strings.String.t_eqb>; only 1: discriminate).	7.11283183098	5291
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	4.0.2	synth with cache (only 1: intros; only 1: destruct x; only 1: apply Z.eq_refl).	0.181386947632	31
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: auto).	0.0682649612427	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.2.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: intros p; only 1: easy).	0.0513269901276	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	5.1.1.0.2.1.2	synth with cache (only 1: intros n; only 1: intros h; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: intuition).	7.82228899002	3030
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	5.3.5.1.1.0.0.0.1	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: intros H; only 1: rewrite H; only 1: trivial).	39.0539779663	14130
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	5.2.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: trivial).	5.24064397812	63
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0221118927002	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	4.1.2.1.2.2.2	synth with cache (only 1: intros n; only 1: intros IH; only 1: induction n; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	10.3410799503	4379
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.17.1	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [e' z]; only 1: simpl; only 1: auto).	13.1545798779	1001
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	1.0.4.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl in *; only 1: trivial).	5.1425049305	63
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: simpl; only 1: auto).	0.0532281398773	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.0.0.1.0.2	synth with cache (only 1: intros Ha; only 1: simpl in *; only 1: intros m; only 1: firstorder; only 1: rewrite H; only 1: trivial).	0.141814947128	29
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	7.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).	0.0433888435364	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	3.0.2	synth with cache (only 1: simpl; only 1: intros ?; only 1: reflexivity).	0.0499639511108	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	3.1.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: auto).	0.0433897972107	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.1.4	synth with cache (only 1: intros l; only 1: destruct l; only 1: compute; only 1: auto).	6.20690798759	37
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	1.2.0.0.1.1.2.2.2	synth with cache (only 1: intros; only 1: destruct z; only 1: apply incr_inv; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: rewrite incr_twice_plus_one; only 1: trivial).	3.33880805969	1146
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.022528886795	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	1	synth with cache (only 1: reflexivity).	0.0232300758362	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	1	synth with cache (only 1: reflexivity).	0.0237090587616	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	3	synth with cache (only 1: auto).	0.0229890346527	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.020534992218	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	2.0	synth with cache (only 1: simpl; only 1: trivial).	0.0381700992584	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1	synth with cache (only 1: trivial).	0.0260128974915	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0381050109863	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.032897233963	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.6.1	synth with cache (only 1: intros; only 1: unfold sub31; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.350780963898	119
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0377790927887	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0357341766357	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0950829982758	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0406382083893	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0721669197083	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	2.15	synth with cache (only 1: intros r; only 1: apply Zeq_is_eq_bool).	25.5541188717	8000
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	33.4.0	synth with cache (only 1: red; only 1: apply Pos.le_succ_l; only 1: lia).	5.39994001389	5888
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	43.6.29	synth with cache (only 1: intuition; only 1: apply Z.lt_gt; only 1: Z.order_pos).	32.5937929153	39769
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0566329956055	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0659079551697	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0787379741669	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.3.1.0	synth with cache (only 1: unfold to_Z; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.251950979233	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	6	synth with cache (only 1: auto with zarith).	0.0696759223938	14
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	2.4.0.0	synth with cache (only 1: intros; only 1: unfold to_Z; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0715358257294	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	1.30.1.0	synth with cache (only 1: intros; only 1: unfold to_Z; only 1: rewrite <- Zminus_mod; only 1: auto).	37.9821798801	14298
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	3.3	synth with cache (only 1: unfold to_Z; only 1: auto with zarith).	0.194664001465	38
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.3.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0773718357086	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	synth with cache (only 1: RelationClasses.simpl_relation).	0.0194661617279	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.6.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.0596339702606	9
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: Z.order_nz).	0.0463581085205	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	2	synth with cache (only 1: easy).	0.0404918193817	3
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	1	synth with cache (only 1: easy).	0.02392578125	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: tauto).	0.0253140926361	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0236840248108	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	343	synth with cache (only 1: congruence).	13.8571069241	73660
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: trivial).	0.0710639953613	5
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0509741306305	4
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.13.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: reflexivity).	2.52306485176	1954
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0369100570679	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.0.0	synth with cache (only 1: intros h; only 1: rewrite (to_Z_inj _ 0 h); only 1: easy).	0.039412021637	3
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.2.2	synth with cache (only 1: intros EQ; only 1: subst; only 1: split).	0.0428471565247	8
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	1.4.0.9.13.0	synth with cache (only 1: apply to_Z_inj; only 1: pose proof (to_Z_bounded x); only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: trivial).	31.879956007	13255
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite add_spec in h; only 1: rewrite add_spec in h; only 1: apply eqm_mod in h; only 1: apply eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI; only 1: apply h; only 1: lia).	0.438752174377	98
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	1.6.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).	0.265251874924	48
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.0387859344482	3
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: easy).	0.022763967514	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.3.2.0.0.4.22	synth with cache (only 1: destruct a; only 1: destruct b; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct b; only 1: intuition; only 1: intuition).	29.1821191311	7048
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0.0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: destruct Z.odd; only 1: easy; only 1: easy).	0.0717821121216	5
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: destruct Z.even; only 1: apply Z.eqb_eq; only 1: constructor; only 1: reflexivity).	0.0591478347778	6
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	1.0.0.0.17.0	synth with cache (only 1: apply bit_ext; only 1: intros Hb; only 1: rewrite land_spec; only 1: unfold bit; only 1: rewrite lsr0; only 1: easy).	5.04960298538	3962
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.2.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: rewrite andb_false_r; only 1: trivial).	0.0615060329437	8
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	3.0.0.3.0	synth with cache (only 1: apply bit_ext; only 1: intros Hn; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: apply orb_false_r).	0.448137998581	140
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	0.5.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_r; only 1: auto).	0.458117961884	114
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	3.0.0.4.1.3	synth with cache (only 1: intros A; only 1: intros R; only 1: intros x; only 1: intros z; only 1: intros B; only 1: firstorder).	3.60289502144	1585
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: auto using eqb_correct, eqb_complete).	0.0329341888428	3
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	8.0.2	synth with cache (only 1: intros x; only 1: intros H; only 1: ring).	0.827262878418	323
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.4.0.0	synth with cache (only 1: intros n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.215651035309	16
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	8.1.0.1.6.3	synth with cache (only 1: intros n; only 1: intros q; only 1: pattern q; only 1: zify; only 1: Morphisms.f_equiv; only 1: ring).	5.12891197205	4097
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.9.7.3	synth with cache (only 1: intros x; only 1: intros m; only 1: rewrite N.eqb_eq; only 1: easy).	9.37485790253	5654
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	4.0.0.2.2.51.127	synth with cache (only 1: compute; only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: intros; only 1: firstorder).	20.1450109482	27656
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.2.0.19	synth with cache (only 1: intros Ha; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).	11.8079209328	3794
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: split).	0.00900197029114	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	6	synth with cache (only 1: easy).	0.0123159885406	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.12	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).	0.438313007355	414
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.11.0.11	synth with cache (only 1: intros m; only 1: zify; only 1: Z.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	10.6672198772	6028
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.1.0.4	synth with cache (only 1: intros Q0; only 1: zify; only 1: simpl; only 1: split).	0.0643320083618	36
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.3	synth with cache (only 1: simpl; only 1: auto).	0.0180480480194	5
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: easy).	0.0106198787689	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0110201835632	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.1	synth with cache (only 1: rewrite <- even_equiv; only 1: easy).	0.54999089241	134
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	0.1.2.13.1	synth with cache (only 1: split; only 1: parity_binop; only 1: intros H; only 1: rewrite <- odd_equiv; only 1: easy).	4.84436392784	3753
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	4.8.4	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).	3.29277014732	3662
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.2.7.0	synth with cache (only 1: intros n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.825634002686	612
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	7.0.3.4.0.1.1.1.1	synth with cache (only 1: intros n; only 1: rewrite lt_eq_cases; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: false_hyp H nlt_0_r; only 1: rewrite H; only 1: easy; only 1: intuition).	37.2325720787	35872
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.2.0	synth with cache (only 1: intros n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0281989574432	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.7.1.2	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: right; only 1: apply lt_0_succ).	1.19055104256	990
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	1.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: false_hyp H lt_irrefl; only 1: intros; only 1: rewrite pred_succ; only 1: easy).	0.365980148315	190
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	5.0.0.0.0.0.0.0.1	synth with cache (only 1: cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	3.89579105377	2324
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.1.1.6.0.0.0.0.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).	32.6045689583	24157
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.0.0.3.0.0.0.3.1.1.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: induct n; only 1: intros H; only 1: rewrite pred_0; only 1: easy; only 1: intros n; only 1: intros IH; only 1: rewrite pred_succ; only 1: intros H; only 1: apply lt_succ_l; only 1: easy).	26.1997270584	17888
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.1.0.0.3.0.7.1	synth with cache (only 1: intros z; only 1: intros AP; only 1: intros H; only 1: destruct (lt_exists_pred _ _ H) as (n', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (EQ, LE); only 1: rewrite EQ; only 1: rewrite pred_succ; only 1: easy).	27.4836599827	23047
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.0.0.0.1.0.0.1.3	synth with cache (only 1: intros z; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m; only 1: intros IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	6.47085499763	4004
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.3.0.0.1.0.0.1.1	synth with cache (only 1: intros H1; only 1: intros n; only 1: cases n; only 1: rewrite pred_0; only 1: intros H; only 1: easy; only 1: intros n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	6.25810408592	4387
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.4.0.0.0.0.0.1.0.1.1	synth with cache (only 1: intros H2; only 1: cases ltac:(m); only 1: intros H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_r; only 1: apply le_succ_l; only 1: easy).	19.2096748352	12353
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.2.0.0.0.1.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: cases n; only 1: rewrite pred_0; only 1: intros H2; only 1: apply lt_0_succ; only 1: intros n; only 1: intros IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: order).	8.05758500099	4618
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.0.0.0.0.2.3.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).	8.94996595383	4045
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: nzsimpl; only 1: easy).	0.0321710109711	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.461138010025	313
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.0387580394745	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).	0.0349860191345	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0163531303406	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0176589488983	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.1.4.1.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.541631937027	372
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.1.1.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.185653924942	82
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0147490501404	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0138628482819	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: apply mul_comm).	0.349673986435	135
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0850751399994	26
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0276710987091	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.3.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.129286050797	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.4.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0761828422546	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: easy).	0.0521190166473	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: easy).	0.376282930374	117
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').	0.0404770374298	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').	0.0414578914642	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	1.0.0.0.0.0.1.3	synth with cache (only 1: intros a; only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	4.55879402161	1756
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.118171930313	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').	2.82457900047	1106
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').	0.671508073807	214
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: easy; only 1: easy).	0.677790164948	275
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0834791660309	32
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').	0.0347020626068	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.4.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_r; only 1: easy; only 1: easy).	0.0665709972382	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0515677928925	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).	0.037281036377	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_r; only 1: easy; only 1: easy).	3.16464400291	1503
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: easy; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: easy).	1.46469783783	552
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: rewrite Hc; only 1: rewrite mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	12.8718619347	6605
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: apply neq_sym; only 1: intros EQ; only 1: pose proof (pred_succ n) as EQ'; only 1: rewrite EQ in EQ'; only 1: rewrite pred_0 in EQ'; only 1: rewrite <- EQ' in EQ; only 1: apply (neq_succ_diag_l 0); only 1: easy).	0.391176939011	213
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: easy; only 1: easy; only 1: intros; only 1: auto; only 1: apply le_0_l).	1.28232002258	426
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.0.7.6.0.11.4.9	synth with cache (only 1: intros n; only 1: cases ltac:(n); only 1: left; only 1: easy; only 1: intros n; only 1: right; only 1: exists n; only 1: easy).	4.57457184792	10978
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.1.0.1.9.1	synth with cache (only 1: cases ltac:(n); only 1: order; only 1: intros H1; only 1: intros H; only 1: rewrite pred_succ; only 1: easy).	2.02057313919	2458
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.0.0.15	synth with cache (only 1: unfold def_add; only 1: intros n; only 1: rewrite recursion_0; only 1: easy).	0.403563022614	675
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	0.0.0.0.1.0.0.1.7.3	synth with cache (only 1: intros n; only 1: intros y; only 1: compute; only 1: intros LT; only 1: f_equiv; only 1: intros Hx; only 1: intros y'; only 1: intros Hm; only 1: intuition; only 1: auto).	19.051543951	12742
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.0.123	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: easy).	1.81775808334	7957
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.0.3.12	synth with cache (only 1: unfold pow; only 1: intros H; only 1: rewrite recursion_0; only 1: easy).	4.02054810524	1871
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.4.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	1.11792397499	475
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm m p); only 1: rewrite (mul_comm n p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	4.02328681946	2542
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0.0.0.1.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto).	0.0880770683289	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).	5.31835103035	1893
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.1.0.0.2.4.7	synth with cache (only 1: intros a0; only 1: destruct a0; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: nzsimpl; only 1: easy; only 1: order').	1.10469007492	1127
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order').	0.486332178116	90
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.2.2.5.4.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: simpl; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order'; only 1: order_nz).	3.92809796333	2830
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: nzsimpl; only 1: easy).	0.0998771190643	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.435761928558	134
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	0.0.0.0.0.0.0.1.0.3.3.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: easy).	27.5254998207	17933
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	0.0.1.0.1.0.0.0.0.4.0.3.0.1	synth with cache (only 1: intros IH; only 1: intros a; only 1: rewrite testbit_eqb; only 1: apply eq_true_iff_eq; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: f_equiv; only 1: rewrite pow_succ_r'; only 1: rewrite <- div_div; only 1: f_equiv; only 1: order_nz; only 1: order_nz).	22.8374841213	8801
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.0238540172577	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.6.3.0.0.5	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros y; only 1: setoid_rewrite Hx; only 1: easy).	33.5207769871	5463
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_spec; only 1: easy; only 1: apply le_0_l).	0.0291390419006	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	0.0.1.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.477636098862	103
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	0.0.2.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec_high'; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.209797143936	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.0705168247223	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.0404920578003	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order_nz).	0.0457351207733	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	1.0.0.1.0.1.5.1.2.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	31.3753130436	15470
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	5.10697484016	1728
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	3.58306217194	1304
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	1.95897603035	609
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	1.2.1.1.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros Ha; only 1: bitwise; only 1: rewrite Ha; only 1: apply xorb_nilpotent).	16.9274291992	12542
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0339372158051	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	8.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.302451133728	150
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0285379886627	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.12.3	synth with cache (only 1: intros H; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.697930812836	883
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0344250202179	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.4.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0452041625977	14
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0322518348694	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	21.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).	12.4675710201	11427
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	1.1.0.0.1.2.5	synth with cache (only 1: intros a; only 1: intros IH; only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite (pow2_bits_false _ _ H); only 1: apply orb_false_r).	22.5917100906	6798
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	0.2.0.0.2.2.1	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: rewrite andb_true_r; only 1: easy).	7.22138690948	2854
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).	0.0923390388489	23
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lor_spec; only 1: easy).	0.0478279590607	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	0.0.4.2.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite ldiff_spec; only 1: easy).	19.9133899212	6134
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.7.0.0.1.5	synth with cache (only 1: intros a; only 1: bitwise; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite bits_0; only 1: apply xorb_false_r).	1.8055460453	1379
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	1.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0287439823151	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.4.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: unfold lnot; only 1: bitwise; only 1: destruct a.[m]; only 1: easy; only 1: easy).	2.5789129734	1340
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.2.1.1.4	synth with cache (only 1: intros x; only 1: intros a; only 1: intros b; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	11.8034350872	5404
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	1.0.0.0.0.0.0.1.2.1	synth with cache (only 1: intros n; only 1: intros a; only 1: intros b; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: rewrite odd_add; only 1: easy).	4.82658982277	2803
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.1.0.0.0.1.0.0.0.14	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_0; only 1: easy; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	1.16501808167	1284
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	3.6.0.1	synth with cache (only 1: intros a; only 1: apply sqrt_spec; only 1: rewrite <- lt_succ_r; only 1: apply lt_0_succ).	0.378877878189	386
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	7.1.0	synth with cache (only 1: intros Ha; only 1: apply sqrt_square; only 1: apply le_0_l).	0.500467061996	332
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	1.2.0.0.0.3.1.0.4	synth with cache (only 1: intros H; only 1: intros n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intros ?; only 1: rewrite succ_inj_wd; only 1: nzsimpl; only 1: easy).	14.3656117916	11072
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	1.0.0.0.0.1.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: nzsimpl; only 1: easy).	9.47901988029	6613
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.5.2.0.0.0.0.1.1	synth with cache (only 1: intros IH; only 1: intros n; only 1: cases n; only 1: intros H; only 1: elim H; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy).	24.3640010357	14801
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros; only 1: rewrite pred_succ; only 1: rewrite even_succ; only 1: easy).	0.118551015854	13
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.3.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite odd_succ; only 1: trivial; only 1: trivial).	1.77547812462	828
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	1.3.0.1.2.2.1.0.2	synth with cache (only 1: intros Ha; only 1: induct ltac:(m); only 1: nzsimpl; only 1: apply le_refl; only 1: intros n; only 1: nzsimpl; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).	22.7432641983	13242
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.0.1.1.0.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: apply le_0_l).	0.0692610740662	18
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: apply le_0_l; only 1: easy).	0.0600490570068	12
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).	0.0564169883728	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros Ha; only 1: destruct (lt_trichotomy a 0) as [LT| _tmp_tactician0]; only 1: rewrite pow_neg_r; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [EQ| GT]; only 1: order; only 1: apply pow_0_l; only 1: easy).	0.974822998047	434
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	2.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: apply le_0_l).	0.0530450344086	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	0.1.0.7.4.0.0	synth with cache (only 1: intros a; only 1: intros Hb; only 1: intros p; only 1: rewrite pow_add_r; only 1: easy; only 1: apply le_0_l; only 1: apply le_0_l).	12.7824511528	7213
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	2.4.3.1.3	synth with cache (only 1: intros c; only 1: intros m; only 1: intros; only 1: rewrite pow_mul_l; only 1: easy).	13.8473591805	6788
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.5.0.1.0.1	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Ha; only 1: intros LE; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	15.4147350788	8301
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: easy; only 1: order').	0.144309997559	12
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.311606884003	91
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy).	31.4033820629	12478
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: easy; only 1: apply mul_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: easy; only 1: apply mul_le_mono_r; only 1: easy).	28.6362190247	11566
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	0.0.0.0.1.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial).	21.8413529396	12699
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	4.0	synth with cache (only 1: symmetry; only 1: eauto).	0.0196628570557	6
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m; only 1: intros Hm; only 1: destruct (nlt_0_r _ Hm)).	0.659080028534	164
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.022579908371	12
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	5.8.0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: apply divide_antisym; only 1: apply divide_0_r; only 1: apply divide_lcm_l).	3.06769108772	2407
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0617220401764	23
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.1.1.1.5	synth with cache (only 1: intros p; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	5.85607099533	3621
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.1.1.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.577288866043	236
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.3.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.465124845505	267
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.0.1.1.2.0.0.1	synth with cache (only 1: intros c; only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: apply divide_refl; only 1: trivial).	1.8945479393	1069
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	0.0.0.0.0.3.1.3.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite add_comm; only 1: intros LT; only 1: rewrite (add_lt_mono_r _ _ p) in LT; only 1: apply le_lt_trans with (n - p + p); only 1: auto using sub_add_le; only 1: auto using sub_add_le).	23.0900020599	12391
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	0.3.3.2.0	synth with cache (only 1: intros n; only 1: intros; only 1: rewrite (add_le_mono_r _ _ p); only 1: rewrite H; only 1: auto using sub_add_le).	9.99831795692	3024
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	0.6.4.0.1.1.0.4	synth with cache (only 1: revert d'; only 1: intros p; only 1: intros; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: unfold Z.to_int; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: rewrite H; only 1: easy).	7.70355200768	5649
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.0.7.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.584271192551	451
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.1.0.0.0.0.1.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: easy; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: nzsimpl'; only 1: easy).	2.77004003525	1212
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.0.0.0.1.12	synth with cache (only 1: intros H1; only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	6.51382803917	6244
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.4.1.2.1.0.0.1	synth with cache (only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: apply le_le_succ_r; only 1: apply sqrt_nonneg; only 1: order).	6.71186900139	6718
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0157041549683	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.0.0.0.0.9	synth with cache (only 1: nzsimpl'; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: f_equiv; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: apply sqrt_square; only 1: easy; only 1: apply lt_succ_diag_r).	0.399314880371	383
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.5.0.0	synth with cache (only 1: intros m; only 1: intros Hb; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition order; only 1: nzsimpl; only 1: order).	1.35958003998	901
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: easy).	0.359496116638	92
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).	1.5174639225	701
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.0.1.6.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: symmetry; only 1: apply div_unique_exact; only 1: easy; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: easy).	2.74170398712	1144
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	6.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	1.0383708477	586
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.144870996475	55
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.0501139163971	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.0524079799652	3
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.6.0.0.1.0.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	13.4085791111	7555
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.0809779167175	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	2.12844204903	799
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.662764072418	240
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.0248470306396	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	4.11.4.16	synth with cache (only 1: intros R'; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).	22.2674438953	21540
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	1.0.14.2.0	synth with cache (only 1: intros n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply le_refl).	2.74708890915	3387
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.0.0.1.0	synth with cache (only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: easy).	0.03484582901	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.0.1.0.0.6.0.0.0.5.0.18	synth with cache (only 1: split; only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).	15.7077889442	12200
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0373089313507	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	6.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0363187789917	16
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.032567024231	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0364801883698	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	3.1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H1; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0721380710602	18
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.036404132843	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	8.0	synth with cache (only 1: intros x; only 1: order).	0.234586954117	99
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	4.0	synth with cache (only 1: intros x; only 1: order).	0.252988100052	94
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	synth with cache (only 1: order).	0.368333816528	121
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.0.1.2.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	1.57450509071	430
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.0.3.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: apply le_succ_l; only 1: apply lt_le_incl; only 1: easy).	0.032369852066	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.5.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LE; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: easy).	2.10051989555	1297
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	1.4.0.0.1	synth with cache (only 1: intros x; only 1: intros m; only 1: intros LE; only 1: rewrite lt_succ_r; only 1: order).	0.887570142746	490
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	1.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.569399118423	203
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0277290344238	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.0566079616547	17
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.0.0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.0396518707275	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.0.6.4.6	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	10.4308819771	10672
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.123664140701	45
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.2.6.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	1.46755194664	826
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.0.3.0.1.0	synth with cache (only 1: intros n; only 1: intros m; only 1: symmetry; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.206951856613	80
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.017993927002	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	1.5.0.6.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: easy; only 1: right; only 1: intuition order).	35.7425570488	15943
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.285336017609	60
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0183300971985	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0185399055481	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.0.0.1.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: order; only 1: destruct _tmp_tactician0 as [| ]; only 1: left; only 1: order; only 1: right; only 1: order).	10.502959013	6240
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.280963897705	66
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: split; only 1: intros H; only 1: apply le_succ_l; only 1: order; only 1: intros H1; only 1: rewrite lt_succ_r; only 1: order).	0.777832984924	319
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	2.1.4.0.2.0.0.2.6	synth with cache (only 1: intros x; only 1: intros Ha; only 1: intros H; only 1: intros H2; only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	28.7571909428	21562
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	1	synth with cache (only 1: easy).	0.0136070251465	2
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0193800926208	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.3.1.0.0.6.0.3.0	synth with cache (only 1: unfold ofnat; only 1: simpl; only 1: intros n; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: rewrite lt_succ_r; only 1: simpl; only 1: apply lt_le_incl; only 1: easy).	11.452848196	9488
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	0.4.1.13	synth with cache (only 1: fix gcd_divide 1; only 1: intros x; only 1: simpl; only 1: easy).	3.46426296234	4000
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	0.6.1.6	synth with cache (only 1: intros m; only 1: simpl; only 1: fix le_div2 1; only 1: easy).	2.78536915779	1853
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	2.0.0.3	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy; only 1: easy).	0.165289878845	60
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.1.0.3.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: easy; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0912070274353	24
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	0.2.1.15.4.2.6	synth with cache (only 1: intros y; only 1: symmetry; only 1: destruct H; only 1: rewrite H; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r in H; only 1: easy).	27.3363859653	24189
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.4.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (q, Hq); only 1: exists q; only 1: rewrite Hq; only 1: rewrite mul_assoc; only 1: easy).	6.61277484894	3609
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	2.1.6.0	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: easy).	0.629184961319	475
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.1.2.6.1	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: rewrite mul_comm; only 1: apply divide_mul_l; only 1: apply divide_refl).	1.8133649826	1586
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	0.0.0.2.0.4.0.0.1.6	synth with cache (only 1: intros y; only 1: intros n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: apply gcd_greatest; only 1: easy; only 1: easy).	23.1193230152	22325
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.1.1.0.1.0.0.0.0	synth with cache (only 1: intros p; only 1: intros Hp; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: rewrite mul_0_l; only 1: easy; only 1: easy; only 1: trivial).	1.48931217194	1008
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.033282995224	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.3.0.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply divide_refl; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial).	4.2018020153	3264
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0458109378815	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.031800031662	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.3.0.3.0.2.0.1.1.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: easy; only 1: trivial using gcd_divide_r).	27.9506738186	19557
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.1.0.2.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: easy; only 1: trivial using divide_refl; only 1: apply divide_mul_l; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	8.07902908325	5593
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite le_succ_l; only 1: easy; only 1: order').	0.202825069427	9
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	11.7129487991	3125
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.0317680835724	4
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	0.1.3.14.1.16	synth with cache (only 1: nzsimpl'; only 1: rewrite odd_spec; only 1: unfold Odd; only 1: exists 0; only 1: nzsimpl'; only 1: easy).	4.24839496613	4444
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	0.0.0.23.1	synth with cache (only 1: intros; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: apply Odd_succ).	35.7226948738	31013
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	0.0.0.0.4.7	synth with cache (only 1: intros p; only 1: rewrite Odd_succ; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).	3.34993481636	2029
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: rewrite Even_succ; only 1: apply Odd_succ).	0.313163042068	54
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.0344219207764	6
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros Hm; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite Hm; only 1: destruct (even n); only 1: easy; only 1: easy).	1.32406187057	599
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	1.0.0.0.2.1.0.1.4.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros Hm; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: rewrite Hm; only 1: destruct (even n); only 1: easy; only 1: easy).	39.1141278744	28368
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.0.0.12.0.5.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: f_equiv; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	32.4069440365	20859
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).	0.1463971138	10
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	0.143360853195	10
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	0.0.0.0.0.0.0.1.4.2.1	synth with cache (only 1: intros m; only 1: intros x; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_mono_l; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).	36.8643870354	24755
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.0571508407593	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.0515058040619	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.0.0.0.0.15.1	synth with cache (only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: easy).	1.0491528511	1411
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).	0.68484711647	160
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	1.0.2.0.0.2.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).	16.4848480225	5890
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	0.0.1.0.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intros n; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).	25.6474151611	7687
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: nzsimpl'; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.0764570236206	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).	0.0421969890594	3
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).	4.95624899864	1557
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	0.1.0.2.2.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: easy).	5.14600205421	2235
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	0.1.1.3.0.0.2.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: rewrite mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: easy).	20.4811019897	9003
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	0.0.3.3.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (mul_comm m); only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: easy).	4.06649899483	1167
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.6.0.3	synth with cache (only 1: apply log2_unique; only 1: easy; only 1: nzsimpl; only 1: split; only 1: easy; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: easy).	1.41180086136	1215
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.1.0.1.0.0.1.0.1.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: order'; only 1: split; only 1: easy; only 1: nzsimpl; only 1: apply lt_0_2; only 1: nzsimpl; only 1: easy).	3.76550388336	2196
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.38060593605	135
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.2.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order_pos; only 1: order).	1.14480304718	797
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order_pos; only 1: order).	0.259725093842	153
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0	synth with cache (only 1: rewrite log2_up_eqn0; only 1: easy; only 1: order).	0.0125529766083	3
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.1.1.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order'; only 1: nzsimpl'; only 1: apply lt_succ_diag_r; only 1: order).	4.61053800583	2291
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).	0.0124990940094	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	17	synth with cache (only 1: intuition).	0.364801883698	531
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).	0.514548778534	365
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	2.0.0.1.0.1.0.2	synth with cache (only 1: intros m; only 1: intros n2; only 1: f_equiv; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: f_equiv; only 1: easy).	2.11095190048	1764
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_neg_r; only 1: easy; only 1: easy).	0.0698230266571	17
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_pos_r; only 1: easy; only 1: easy).	0.0370020866394	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	0.0.6.1.1	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	13.5535719395	4014
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0271410942078	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	1.1.1.1.2.0.0.2.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H3; only 1: intros H4; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	13.0885961056	10954
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0286362171173	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.00912404060364	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: easy).	0.0216500759125	11
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.00868892669678	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.00902199745178	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.336157083511	191
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite P.le_lteq; only 1: intuition).	0.0188360214233	5
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1.2.0.0.1	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: trivial).	0.772541999817	225
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2	synth with cache (only 1: Nat.order).	0.519644021988	235
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	4.2.1.1	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LT; only 1: Nat.order).	0.723047971725	361
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0224621295929	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0128529071808	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	1.5.6.1.5	synth with cache (only 1: intros; only 1: intros _tmp_tactician0; only 1: contradict H; only 1: destruct _tmp_tactician0 as []; only 1: apply StrictOrder_Irreflexive).	14.20144701	9597
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	2.4	synth with cache (only 1: intros l'; only 1: easy).	0.020574092865	8
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	0	synth with cache (only 1: firstorder).	0.0120160579681	1
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	2.13.0	synth with cache (only 1: intros _tmp_tactician2; only 1: fix le_div2 1; only 1: auto).	0.760535955429	1080
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	1.3.5.1	synth with cache (only 1: intros Hp1; only 1: fix sqrtrem_spec 1; only 1: intros Exx'; only 1: easy).	0.693120002747	338
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0179078578949	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.1.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct 1; only 1: auto; only 1: auto; only 1: compute; only 1: intros z; only 1: eauto).	0.0222060680389	9
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.5	synth with cache (only 1: intros p; only 1: easy).	0.0415699481964	32
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0140829086304	5
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	0.10.13.4	synth with cache (only 1: intros H; only 1: unfold not; only 1: fix even_spec 1; only 1: easy).	8.36087989807	8085
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	0.0.2.1.0.0.1.26	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x; only 1: intros B; only 1: intros x'; only 1: intros Hxx'; only 1: eauto).	1.11063885689	1117
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	4.0.1.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: easy).	0.0345039367676	20
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.1.7	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0808291435242	63
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0115339756012	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0140099525452	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0121428966522	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.00917816162109	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.0112640857697	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0100629329681	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0102679729462	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	7.0	synth with cache (only 1: intros Hx; only 1: intuition).	0.019914150238	13
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.00962090492249	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	9	synth with cache (only 1: order).	0.139007091522	61
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0107400417328	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0109648704529	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.00963377952576	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.683487176895	346
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.3.0	synth with cache (only 1: intros l; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.111930131912	51
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	0.0.0.2.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	1.46546888351	633
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	0.1.4.0.0.1.14	synth with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto with ordered_type).	21.4521808624	20110
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.0.0.0.2.0.1.4.3.0.6	synth with cache (only 1: intros n; only 1: intros m; only 1: intros IH; only 1: destruct n; only 1: intros; only 1: auto; only 1: intros q; only 1: intros H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	31.1782569885	29112
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.1.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros l1; only 1: intuition).	0.0454590320587	11
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	1.12	synth with cache (only 1: apply InA_InfA; only 1: auto with *).	1.03381204605	856
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: easy).	0.0142071247101	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0110900402069	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.00761604309082	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.0	synth with cache (only 1: intros l'; only 1: auto with ordered_type).	0.00938010215759	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.00758409500122	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk; only 1: intuition).	0.0131380558014	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.1.0.4.6	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros H; only 1: induction H; only 1: easy).	0.543698072433	381
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.0.3.0.5	synth with cache (only 1: intros n; only 1: unfold eqk; only 1: intros x; only 1: intros z; only 1: order).	1.43766498566	832
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.011088848114	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2.11	synth with cache (only 1: intros a; only 1: eauto with ordered_type).	0.444846153259	272
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.1	synth with cache (only 1: unfold ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	0.029000043869	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.13.5.2.0.12.13	synth with cache (only 1: constructor; only 1: firstorder; only 1: unfold eqk; only 1: auto with ordered_type; only 1: intros f; only 1: intros j; only 1: eauto with ordered_type).	16.7734508514	14530
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0938558578491	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.0858509540558	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.010822057724	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0095009803772	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	2.2.1.2.7	synth with cache (only 1: induction 1; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).	0.903746843338	675
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	2.2.0.1.5.0.2.0.7	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician2; only 1: intros l'; only 1: intros H; only 1: destruct l; only 1: intros Hll'; only 1: intuition; only 1: rewrite H; only 1: easy).	31.7636289597	24634
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	8.6.0.2.9	synth with cache (only 1: simple induction l; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	35.7778148651	26089
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.1.5.0.3.7.2	synth with cache (only 1: intros x; only 1: intros a; only 1: intros _tmp_tactician2; only 1: intros _tmp_tactician0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	36.6003789902	17189
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	0.3.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).	26.2970888615	7785
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.0.3.1.0.4	synth with cache (only 1: intros l'; only 1: inversion 1; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	0.949370145798	525
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.0.1.2.0.6	synth with cache (only 1: intros _tmp_tactician10; only 1: unfold eqke; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).	1.98789691925	902
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0378739833832	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	17.9315500259	6739
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	22.6567211151	10047
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.0169448852539	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.1	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.026074886322	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	8.1.6	synth with cache (only 1: red; only 1: intros y; only 1: order).	1.18062591553	1212
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.4.16	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).	5.81127405167	6737
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0188291072845	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.5.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.827122926712	256
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0596330165863	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0262939929962	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0303840637207	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.1.2.0	synth with cache (only 1: intros H; only 1: intros EQ; only 1: contradict ltac:(H); only 1: order).	0.029107093811	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0244328975677	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0212049484253	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	synth with cache (only 1: order).	1.01291298866	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.014760017395	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.0144150257111	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0147469043732	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0710570812225	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0735340118408	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.0148642063141	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.0149111747742	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0150351524353	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0137670040131	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intros H; only 1: order).	0.0189990997314	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0155351161957	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0157959461212	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0157318115234	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0139331817627	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	2.2.0.1.0.1.0.1.0.4.2	synth with cache (only 1: split; only 1: intros EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).	11.9943089485	9381
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0.0	synth with cache (only 1: intros H; only 1: apply compare_eq_iff; only 1: easy).	0.0200080871582	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.0157551765442	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0272998809814	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).	0.0382061004639	9
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	1.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: easy).	29.2672889233	14561
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.2.0.5	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	2.65245008469	1259
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.0.0.0.1.4	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.576947927475	263
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.17.2	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: apply imp_iff_compat_r; only 1: apply ltb_lt).	4.47886180878	3306
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.0.0.3.1	synth with cache (only 1: symmetry; only 1: rewrite <- not_true_iff_false; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite ltb_lt; only 1: easy).	0.0902280807495	25
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.0.3.0	synth with cache (only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy).	0.0328159332275	7
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.1.3.0.0.1.0.11	synth with cache (only 1: case ltb_spec0; only 1: rewrite leb_nle; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).	9.93203091621	5844
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.0.0.1	synth with cache (only 1: rewrite ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0232839584351	5
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	0.1.0.0.7.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	1.48214888573	812
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	0.0.0.0.3.4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.517621994019	279
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.2.0.0.0.4.11.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).	4.09810304642	3813
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.1	synth with cache (only 1: induction 1; only 1: intros; only 1: auto).	0.163228988647	97
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.1.1.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst a; only 1: eapply InA_cons_hd; only 1: intuition).	0.935233831406	578
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.4.3.5.3.4	synth with cache (only 1: intros Q; only 1: intros _tmp_tactician0; only 1: intros l; only 1: intros H; only 1: rewrite <- H; only 1: easy).	11.0927259922	8083
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.1.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: easy; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0391089916229	9
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.1.1.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: intros H; only 1: intuition).	0.0285820960999	9
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	5.18	synth with cache (only 1: fix gcd_greatest 1; only 1: eauto).	23.6638650894	13498
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	2.1.1.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: solve_proper).	0.0603978633881	14
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	5.1	synth with cache (only 1: unfold ltk; only 1: solve_proper).	0.947902917862	21
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.0	synth with cache (only 1: reduce; only 1: intuition).	0.0152170658112	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.0	synth with cache (only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0923829078674	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.4.3.0.0.10.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction l; only 1: intros Hl; only 1: firstorder; only 1: intropattern subst <- _tmp_tactician0; only 1: intros _tmp_tactician0; only 1: firstorder).	15.1874940395	8236
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.1.5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).	0.853445053101	228
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	0.0.0.0.8.0.4.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	10.6545701027	3810
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2.5.4	synth with cache (only 1: intros x; only 1: intros _tmp_tactician0; only 1: firstorder).	0.470407962799	336
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	1	synth with cache (only 1: trivial).	0.00764298439026	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	synth with cache (only 1: split).	0.00929403305054	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	19.8	synth with cache (only 1: intuition; only 1: apply H).	0.430890798569	947
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	15	synth with cache (only 1: firstorder  (subst; auto)).	0.141853094101	225
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: firstorder).	0.00952506065369	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: reflexivity).	0.00944995880127	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.0106129646301	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.2.0.1	synth with cache (only 1: rewrite InA_alt; only 1: intros _tmp_tactician0; only 1: rewrite InA_alt; only 1: destruct _tmp_tactician0 as (y, H); only 1: firstorder).	0.0440998077393	11
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	6.3.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	1.08365702629	603
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.0.4.1.0.9	synth with cache (only 1: red; only 1: rewrite In_alt; only 1: split; only 1: firstorder; only 1: easy; only 1: easy).	1.82863616943	1652
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	5.0.7.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: intros l'; only 1: auto).	9.76471805573	5341
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	2.0.2.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros l'; only 1: intropattern subst <- _tmp_tactician0; only 1: unfold In; only 1: unfold MapsTo; only 1: intuition).	0.0484011173248	16
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	1.1.1.1.0.0	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: inversion 1; only 1: setoid_rewrite Exists_exists; only 1: firstorder; only 1: auto).	0.060478925705	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	10.0.11.0	synth with cache (only 1: firstorder; only 1: intuition; only 1: rewrite InA_cons in H; only 1: intuition).	9.30293297768	5797
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.2.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).	0.547872066498	141
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	0.4.19	synth with cache (only 1: fix gcd_divide 1; only 1: intros ?; only 1: easy).	4.25645089149	4483
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	3.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: firstorder).	0.0497190952301	23
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	1	synth with cache (only 1: auto).	0.0179719924927	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0188682079315	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	1.0	synth with cache (only 1: unfold eqk; only 1: auto).	0.0230960845947	3
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	6.2	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.167065858841	31
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.0.6.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros Hxy; only 1: eauto).	0.405030965805	132
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	1.3.7.0.0.4	synth with cache (only 1: split; only 1: easy; only 1: auto; only 1: intros Eq; only 1: intros P; only 1: eauto).	3.25047707558	1180
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0562410354614	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	3.3.1.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: left; only 1: intuition; only 1: auto).	2.46945285797	1446
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	1.5.0.1.2.2	synth with cache (only 1: intros ?; only 1: intros x; only 1: intros z; only 1: intuition; only 1: rewrite <- H; only 1: auto).	2.64035892487	1683
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	3.27	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	29.6253647804	26343
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.1.2.7.4.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: induction l; only 1: intuition; only 1: auto using eqke_equiv; only 1: auto using eqke_equiv).	4.56561207771	2531
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	3.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: auto).	0.182116985321	53
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	20	synth with cache (only 1: intuition).	0.185308218002	186
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.0.3.7	synth with cache (only 1: intros n; only 1: unfold eq; only 1: intros y; only 1: decide equality).	1.05275011063	645
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x; only 1: intros y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	29.2566540241	9377
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min; only 1: unfold gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0335729122162	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: easy; only 1: apply max_l; only 1: easy).	8.58765292168	5902
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	5.1	synth with cache (only 1: apply max_r; only 1: order).	0.0137400627136	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.6.0.4.0.1.0.2.4	synth with cache (only 1: destruct (max_spec m n) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: apply max_l; only 1: order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: apply max_r; only 1: order).	9.19114089012	7585
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.3.1.7	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.708995103836	533
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.013044834137	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2.2.0.8.1	synth with cache (only 1: split; only 1: revert m; only 1: intros y; only 1: solve_max; only 1: apply max_l).	2.24640703201	1841
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	synth with cache (only 1: solve_max).	0.0356719493866	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	6.92809891701	4639
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0588970184326	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0252368450165	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0139629840851	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0255119800568	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0517890453339	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0139949321747	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.0468280315399	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0242412090302	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0429770946503	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: apply min_r; only 1: order).	10.0351350307	5431
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.00886297225952	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.8.9	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).	8.01392197609	6891
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0120739936829	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: easy).	0.255905866623	188
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0349099636078	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	8.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	5.9721031189	3977
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.7869579792	803
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.2.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0267097949982	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.012512922287	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0278010368347	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0643589496613	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0137329101562	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.047749042511	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0232100486755	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.1.0.0.0.0	synth with cache (only 1: intros Hnm; only 1: intros Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.03586602211	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_l; only 1: solve_min).	0.0305678844452	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.9	synth with cache (only 1: apply min_l; only 1: solve_max).	0.121248006821	84
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.2.2.0.0.0.0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: revert m; only 1: intros; only 1: auto with relations).	16.600039959	17899
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.1.0.5.0.5.0	synth with cache (only 1: intros Compat; only 1: intros x; only 1: intros Hl; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	18.1032919884	18876
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0137979984283	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.017452955246	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.10.0.1	synth with cache (only 1: intros Compat; only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	4.15839195251	4212
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0137560367584	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0170130729675	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	6.0.6.0.5.0.3	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros; only 1: red; only 1: unfold eq; only 1: rewrite H; only 1: easy).	39.2482600212	39649
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	5.15.6.3.0	synth with cache (only 1: unfold eq; only 1: intros H; only 1: intros m; only 1: rewrite compare_sym; only 1: decide equality).	23.3148901463	32557
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.3.1	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	0.0370559692383	8
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	0.0540189743042	6
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.0168371200562	1
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: reflexivity).	0.0174598693848	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	0.0534801483154	7
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.4.13	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	1.06528401375	558
Coq.ZArith.Znat.Z_nat_N	40	0.4.0.24	synth with cache (only 1: destruct n; only 1: easy; only 1: Nat2N.nat2N; only 1: easy).	1.31812000275	668
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.2.18	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).	0.826080799103	266
Coq.ZArith.Znat.Zabs_nat_N	40	2.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).	0.049910068512	9
Coq.ZArith.Znat.N2Z.id	40	0.3.0	synth with cache (only 1: destruct n; only 1: easy; only 1: trivial).	0.0460929870605	6
Coq.ZArith.Znat.N2Z.inj	40	1.0.3.0.3.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: N.order'; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).	3.20323491096	1665
Coq.ZArith.Znat.N2Z.inj_iff	40	0.1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: Morphisms.f_equiv; only 1: N.order).	3.27593493462	988
Coq.ZArith.Znat.N2Z.is_nonneg	40	3.1.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy).	0.110653877258	8
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0925161838531	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0164520740509	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.2.0.0.1.1.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	1.48627018929	470
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40	0.2.8	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: reflexivity).	2.16597819328	935
Coq.ZArith.Znat.N2Z.inj_ge	40	1.0.0.0.1.9.8.0	synth with cache (only 1: unfold N.ge; only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	21.494038105	12352
Coq.ZArith.Znat.N2Z.inj_gt	40	0.5.10.21	synth with cache (only 1: revert n m; only 1: intros IH; only 1: fix odd_spec 1; only 1: easy).	15.2716319561	12634
Coq.ZArith.Znat.N2Z.inj_abs_N	40	5.2.0.114.21	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy; only 1: easy; only 1: trivial).	15.1788039207	46630
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial).	0.050253868103	9
Coq.ZArith.Znat.N2Z.inj_mul	40	0.0.0.0.7.0	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: reflexivity; only 1: destruct m; only 1: easy; only 1: easy).	1.12950897217	206
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40
Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.0.3.13.0.0.1.45.5	synth with cache (only 1: unfold Z.max; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: induction p; only 1: trivial; only 1: easy; only 1: easy).	33.8842139244	62233
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.2.5.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	3.16611218452	2092
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.19.3.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	2.66106581688	3536
Coq.ZArith.Znat.N2Z.inj_quot2	40	0.0.0.1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0449771881104	7
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a]; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	4.59735703468	2533
Coq.ZArith.Znat.Z2N.id	40	0.1.0.0.0.0	synth with cache (only 1: intros Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct Hn; only 1: easy).	0.0465030670166	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.023894071579	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.0424790382385	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0231399536133	2
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	0.2.0.0.0.0.1.3.0	synth with cache (only 1: destruct n; only 1: intros Hm; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	14.5062658787	4789
Coq.ZArith.Znat.Z2N.inj_succ	40	0.1.1.0.2.2.1.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: rewrite Pos.add_1_r; only 1: trivial; only 1: destruct 1; only 1: easy).	4.63710618019	2562
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: trivial).	0.716217041016	176
Coq.ZArith.Znat.Z2N.inj_compare	40	0.1.0.0.1.1.0.0.0.0.2.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: easy; only 1: intros; only 1: destruct m as [| m| m]; only 1: trivial; only 1: simpl; only 1: easy; only 1: trivial; only 1: easy).	8.05387496948	3689
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1.0.2.2.6.3.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: easy; only 1: easy; only 1: reflexivity; only 1: trivial).	2.43480587006	2361
Coq.ZArith.Znat.Z2N.inj_quot2	40
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0381188392639	6
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	0.0436131954193	8
Coq.ZArith.Znat.Zabs2N.id_abs	40	0.0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0357789993286	6
Coq.ZArith.Znat.Zabs2N.id	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).	0.0311210155487	4
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0242249965668	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0210421085358	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0159170627594	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.1.1	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.0940458774567	8
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.1.1.0.2.8.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: rewrite Pos.add_1_r; only 1: trivial; only 1: destruct 1; only 1: easy).	4.92444014549	3378
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.2.0.1.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct 1; only 1: easy).	6.13221216202	2230
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.1.0.0.3.2.1	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	4.69457387924	2322
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0726010799408	8
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0692410469055	8
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.1.2.0.1.2.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	8.21766209602	4066
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	1.5938179493	445
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: easy).	0.0172970294952	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.2.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.0344090461731	5
Coq.ZArith.Znat.Nat2Z.id	40	5.0.0.21	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	3.77760100365	2023
Coq.ZArith.Znat.Nat2Z.inj	40	0.0.0.0.1.7.8	synth with cache (only 1: revert m; only 1: intros n'; only 1: intros H; only 1: rewrite <- (Nat2N.id n); only 1: rewrite <- (Nat2N.id n'); only 1: f_equal; only 1: easy).	15.3837471008	7022
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.0.1.1	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros H; only 1: subst; only 1: easy).	0.227176189423	49
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40	0.7.4.1	synth with cache (only 1: symmetry; only 1: unfold Z.gt; only 1: rewrite N2Z.inj_compare; only 1: apply Nat.compare_gt_iff).	3.1139061451	1360
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.0.2.3.4.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Ha; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy; only 1: destruct 1; only 1: easy).	14.2979931831	9513
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z2N.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: subst; only 1: easy).	0.105859994888	13
Coq.ZArith.Znat.Z2Nat.inj_0	40	1	synth with cache (only 1: trivial).	0.0171880722046	2
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: easy).	0.0185310840607	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: easy).	0.0162220001221	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	0.0.0.0.12.1.2.1.1.1	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct n; only 1: trivial; only 1: clear _tmp_tactician0; only 1: simpl; only 1: rewrite <- Pos2Nat.inj_succ; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: easy).	25.741122961	26482
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40	0.0.0.0.10.2.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite Zabs2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	37.8667709827	21464
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.21519613266	6
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.216336965561	5
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.21	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).	12.9811022282	12796
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0879518985748	18
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: easy).	0.0176689624786	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: easy).	0.0162789821625	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.015928030014	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.1.2.1.2.4.4.1.0.1	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: easy; only 1: intros Hm; only 1: simpl Z.succ; only 1: rewrite Pos.add_1_r; only 1: simpl; only 1: apply Pos2Nat.inj_succ; only 1: destruct 1; only 1: easy).	19.1633172035	15288
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	0.0.0.1.0.0.1.0.1.2.0.0.0.3.10.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: destruct m; only 1: Z.nzsimpl; only 1: easy; only 1: destruct n; only 1: easy; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	29.1720228195	13726
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite Z2Nat.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0743789672852	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite Z2Nat.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).	0.0718610286713	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	3.0.0.1.0.1.2.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: destruct n; only 1: trivial; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: apply Z.abs_nonneg).	2.67131400108	1312
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: easy).	0.0429379940033	6
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.5.5.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Zlt_0_rec; only 1: intros; only 1: apply Hrec; only 1: trivial).	10.9106521606	5205
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0351190567017	4
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	0.1.0.0.0.0.2	synth with cache (only 1: intros EQ; only 1: intros n; only 1: intros H3; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.100792169571	51
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0343580245972	14
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0265300273895	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: rewrite H; only 1: easy).	0.0282089710236	5
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0.0.0.15	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.21556711197	825
Coq.ZArith.Zquot.Zrem_0_l	40	0.0.0.1	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.0292239189148	5
Coq.ZArith.Zquot.Zquot_0_l	40	0.0.0.1	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.028697013855	5
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0.0	synth with cache (only 1: intros Ha; only 1: intros Hb; only 1: apply Z.rem_bound_pos; only 1: easy; only 1: trivial).	0.189467906952	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.121156930923	25
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.229027032852	52
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.269323825836	51
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros EQ; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.26193189621	78
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.2.3.0.2.3	synth with cache (only 1: intros m; only 1: intros c; only 1: intros Hb; only 1: rewrite Z.rem_divide; only 1: rewrite Z.mod_divide; only 1: easy; only 1: easy; only 1: easy).	10.9072070122	5052
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	32.13	synth with cache (only 1: intros _tmp_tactician0; only 1: constructor).	9.43882608414	14136
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.1.25	synth with cache (only 1: intros LS; only 1: intros H; only 1: exact 0%Z).	5.62102293968	4536
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	3.0.1.0	synth with cache (only 1: intros b; only 1: intros _tmp_tactician0; only 1: intros Hb; only 1: easy).	0.0453770160675	8
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	2.1.1.0.1	synth with cache (only 1: simpl; only 1: intros m; only 1: intros n; only 1: intros p; only 1: easy).	0.152948141098	14
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0157899856567	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: simpl; only 1: trivial; only 1: auto; only 1: auto).	0.0778751373291	10
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.10	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.108393907547	153
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.0.2.0.3.12	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.297357797623	345
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.0.1.0.42	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	1.43219995499	2968
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.0.1.36	synth with cache (only 1: induction n; only 1: easy; only 1: easy; only 1: easy).	1.14702010155	1607
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.4.0.0.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy).	2.36915922165	1426
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m as [| m| m]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	31.9983429909	13263
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0115358829498	4
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0109510421753	2
Coq.ZArith.BinInt.Z.add_0_l	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0198390483856	4
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.011442899704	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.0.4.2.0.0.0.16	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.9616291523	3379
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0348551273346	8
Coq.ZArith.BinInt.Z.sub_0_r	40	0.0.0.76	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	7.07902002335	30550
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0194041728973	4
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	2.4.0	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	0.156541109085	87
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	1.2.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.040431022644	20
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1.1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite N.compare_antisym; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.0258460044861	9
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.0	synth with cache (only 1: unfold le; only 1: easy).	0.0119249820709	2
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.1.2.2.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: easy; only 1: intuition).	11.6078498363	7027
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.2.0.1.1.0.0	synth with cache (only 1: unfold le; only 1: unfold min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: intuition).	1.4183819294	573
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	0.0.0.2.2	synth with cache (only 1: intros H; only 1: destruct n; only 1: reflexivity; only 1: easy; only 1: easy).	0.0852689743042	43
Coq.ZArith.BinInt.Z.abs_neq	40	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: induction p; only 1: easy; only 1: easy; only 1: trivial).	0.0331971645355	9
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: easy; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).	0.0337951183319	17
Coq.ZArith.BinInt.Z.sgn_pos	40	1.5.1.29.1	synth with cache (only 1: intros Hp; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	2.12284111977	3798
Coq.ZArith.BinInt.Z.sgn_neg	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0223240852356	4
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: easy).	0.00770211219788	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: easy).	0.00961995124817	1
Coq.ZArith.BinInt.Z.square_spec	40	0.0.2.0.0.3.0.0.15	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	2.23456501961	1052
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.0.0.0.4	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).	0.0452589988708	30
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).	0.021232843399	4
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: easy).	0.00797891616821	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.0.10.0	synth with cache (only 1: simpl; only 1: destruct n; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	0.95305109024	358
Coq.ZArith.BinInt.Z.pred_double_spec	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.0155749320984	4
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot; only 1: unfold rem; only 1: destruct quotrem; only 1: easy).	0.3591401577	39
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	0.1.0.1.3.0.0.0.0.0.2.0.12.0.0.0.0	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (m, H); only 1: exists (- m); only 1: destruct m; only 1: easy; only 1: easy; only 1: rewrite mul_opp_l; only 1: easy; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (m, H); only 1: exists (- m); only 1: destruct m; only 1: easy; only 1: simpl in *; only 1: trivial; only 1: easy).	26.9850330353	26803
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.3.4.0.2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: clear _tmp_tactician2; only 1: exists bb; only 1: rewrite H; only 1: rewrite mul_comm; only 1: easy).	11.1861498356	10352
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.1.0.0.0.1.0.0.2	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.555171966553	340
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	2	synth with cache (only 1: easy).	0.00862193107605	3
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.1.0.1.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.385488986969	530
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.1.1.0.0.13	synth with cache (only 1: rewrite <- le_succ_l; only 1: intros Hn; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.982473134995	790
Coq.ZArith.BinInt.Z.testbit_odd_0	40	0.0.0.0.1.0.0.7.9.28.58	synth with cache (only 1: rewrite <- (mul_0_r a); only 1: revert a; only 1: intros m; only 1: rewrite Private_BootStrap.mul_0_r; only 1: destruct m as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	16.3109240532	28376
Coq.ZArith.BinInt.Z.testbit_even_0	40
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0.1.0.10.21.0	synth with cache (only 1: intros H; only 1: rewrite <- le_succ_l; only 1: destruct (le_gt_cases n m); only 1: apply le_succ_l; only 1: easy; only 1: apply le_succ_l; only 1: easy).	10.662252903	11603
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00825309753418	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	2.4.4.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite <- compare_lt_iff; only 1: reflexivity).	10.5344119072	5127
Coq.ZArith.BinInt.Z.ge_le	40	0.1.0.0.0.0.2	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: case compare; only 1: easy'; only 1: easy; only 1: easy).	0.255115032196	102
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00765109062195	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	5.0.9.0.0.0	synth with cache (only 1: intros Hp; only 1: intros H; only 1: apply lt_gt_cases in Hp; only 1: apply mul_cancel_l in H; only 1: easy; only 1: intuition order).	11.1760661602	6866
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.0.1.0.0.4.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: trivial).	1.05533695221	464
Coq.ZArith.BinInt.Z.add_diag	40	2.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: easy).	0.114458799362	6
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ones_spec_low; only 1: trivial; only 1: auto; only 1: rewrite ones_spec_high; only 1: trivial; only 1: auto).	0.0354428291321	7
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0222170352936	8
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.00627398490906	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: congruence).	0.0153629779816	4
Coq.ZArith.BinInt.Pos2Z.is_pos	40	3	synth with cache (only 1: easy).	0.00904488563538	4
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	11	synth with cache (only 1: easy).	0.187654972076	127
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.00636792182922	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	synth with cache (only 1: easy).	0.0642290115356	16
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0	synth with cache (only 1: easy).	0.00779891014099	1
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: reflexivity).	0.00955295562744	4
Coq.ZArith.BinInt.Pos2Z.inj_add	40	6.2	synth with cache (only 1: symmetry; only 1: easy).	0.0719690322876	16
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.1.0.0.0.0.7	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: intros H; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.803419113159	866
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	synth with cache (only 1: easy).	0.00723099708557	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.0.13.3	synth with cache (only 1: revert q; only 1: intros r; only 1: apply Pos.iter_swap_gen; only 1: easy).	0.99519610405	1067
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.0102469921112	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.00898194313049	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.00570607185364	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.00489497184753	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	synth with cache (only 1: unfold Pos.ltb; only 1: reflexivity).	0.00794005393982	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.00612282752991	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	synth with cache (only 1: reflexivity).	0.00718688964844	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.00624012947083	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.1.0.0.0.1.1.0.5	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.883366823196	726
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.00694799423218	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: congruence).	0.0152521133423	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: apply inj).	0.00604200363159	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).	0.0197448730469	5
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: easy).	0.00747680664062	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1.4.1	synth with cache (only 1: induction p using Pos.peano_ind; only 1: easy; only 1: easy).	0.0144300460815	9
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.00732088088989	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.00921988487244	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.00993609428406	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.00623798370361	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.0	synth with cache (only 1: unfold Pos.le; only 1: easy').	0.011617898941	6
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	6.0	synth with cache (only 1: intros; only 1: auto).	0.00790596008301	8
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: easy).	0.0055878162384	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: easy).	0.00575304031372	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.005450963974	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.00617504119873	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00815105438232	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.00478482246399	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00563478469849	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	synth with cache (only 1: split).	0.0807399749756	60
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.00704908370972	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.00592589378357	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.2.0	synth with cache (only 1: intros Hn; only 1: apply Z.testbit_Zpos; only 1: trivial).	0.0155019760132	5
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0087468624115	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.0.1.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.019788980484	5
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.0.0.4.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.16538310051	96
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.1.0.0.0.2.4.3.0.0.18.19.1	synth with cache (only 1: destruct 1; only 1: apply Pos.eqb_eq; only 1: unfold Z.pred; only 1: destruct x; only 1: apply Pos.eqb_eq; only 1: split; only 1: rewrite Pos.eqb_eq; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: split).	12.3095340729	24353
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0391530990601	7
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1.0.1.3.0.0.3	synth with cache (only 1: intros Ha; only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: trivial; only 1: intros; only 1: simpl; only 1: destr_eq H; only 1: easy).	1.61334490776	1146
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.0.2.0.0	synth with cache (only 1: destruct x; only 1: intros m; only 1: Z.order; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.231516838074	81
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0396060943604	7
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0372829437256	7
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.1.3.64	synth with cache (only 1: apply Pos2Nat.inj; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	1.13782310486	2922
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0541269779205	20
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0.0	synth with cache (only 1: intros n; only 1: intros x'; only 1: congruence).	0.0130171775818	3
Coq.ZArith.BinInt.ZL0	40	0.0	synth with cache (only 1: PeanoNat.Nat.nzsimpl'; only 1: easy).	0.101801872253	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.10	synth with cache (only 1: Z.nzsimpl'; only 1: easy).	0.549186944962	188
Coq.ZArith.BinInt.Z_eq_mult	40	0.5.1.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: Z.nzsimpl; only 1: easy).	0.756584882736	255
Coq.ZArith.Zcomplements.floor_gt0	40	0.0.1	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: easy).	0.018944978714	4
Coq.ZArith.Zcomplements.floor_ok	40	1.6.6.11.3	synth with cache (only 1: intros; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial).	12.2433152199	12338
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0.0.3.16	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.756953954697	555
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: trivial).	0.0097451210022	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	22.2171139717	9605
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.15.4.0.0.0.15.4.10.60	synth with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy).	19.2626950741	47302
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40	2.0.0.1.1.2.0.0.1.4.2.0.24	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).	4.80110192299	7787
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0300240516663	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	1.0.0.0.1.0.0.0.2.2.0.1	synth with cache (only 1: rewrite Zodd_equiv; only 1: intros _tmp_tactician0; only 1: unfold Z.pred; only 1: destruct _tmp_tactician0 as (m, _tmp_tactician2); only 1: intropattern subst -> _tmp_tactician2; only 1: destruct m as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [a| a| ]; only 1: easy; only 1: easy; only 1: easy).	2.32115983963	1896
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: intros a0; only 1: easy; only 1: intros Ha; only 1: easy; only 1: intros Hn; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	6.47815394402	1889
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.2.3.0.0.0.4.4.3.27	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	33.9649670124	10300
Coq.ZArith.Zeven.Zeven_quot2	40	0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	12.8248410225	2934
Coq.ZArith.Zeven.Zodd_quot2	40	2.0.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros Ha; only 1: intros Hn; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: simpl; only 1: easy; only 1: destruct _tmp_tactician0 as [p| p| ]; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	25.7366111279	8490
Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.0.0.0.0.0.0.1.0.0.0.2.0.0	synth with cache (only 1: intros Hn; only 1: intros Hn'; only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: apply Zodd_bool_iff in Hn'; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	26.39103508	8365
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: boolify_even_odd; only 1: intros H; only 1: exists (Z.div2 n); only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).	6.10391116142	2390
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.0.0.0.0.0.0.0.0.2.0.1.1.11	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	15.7040679455	10503
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.3.8.1.0.11.7.7.3.9.31	synth with cache (only 1: Z.nzsimpl; only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	34.8837120533	43036
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: rewrite Z.odd_add; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	0.0575919151306	9
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: rewrite Z.odd_add; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).	0.0550010204315	9
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	37.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros Ha; only 1: rewrite Z.even_mul; only 1: rewrite Ha; only 1: intuition).	8.31468510628	13320
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0285339355469	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0190079212189	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	0.1.0.3.1.32	synth with cache (only 1: destruct a; only 1: intros Hb; only 1: trivial; only 1: intros Hn; only 1: easy; only 1: apply Z.divide_opp_l).	24.759303093	24344
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.018571138382	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.3.0.4.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	5.12872505188	2391
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	21.0	synth with cache (only 1: intros H; only 1: Z.order).	17.7049741745	9203
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	1.4.0.8.5.2.0	synth with cache (only 1: intros Ha; only 1: intros _tmp_tactician0; only 1: rewrite Z.div_exact; only 1: destruct _tmp_tactician0 as (c, Hc); only 1: rewrite Hc; only 1: apply Z_mod_mult; only 1: Z.order).	15.449090004	8476
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	8.8.1	synth with cache (only 1: intros n; only 1: intros q; only 1: firstorder).	18.9726128578	7649
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.1.18.12.2	synth with cache (only 1: intros Hn; only 1: constructor; only 1: intuition; only 1: easy; only 1: trivial).	4.79115509987	4040
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.0	synth with cache (only 1: intros p; only 1: easy).	0.0261549949646	3
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.066025018692	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.5.2	synth with cache (only 1: intros a; only 1: destruct 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	1.98066902161	907
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.1.0.0.1.0	synth with cache (only 1: intros a; only 1: induction 1; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.519727945328	132
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	18.3	synth with cache (only 1: intros a; only 1: firstorder).	20.0367679596	12366
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.1.0.21.3	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	2.78394985199	2604
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.0.0.0.1.4	synth with cache (only 1: intros z; only 1: intros r; only 1: intros _tmp_tactician0; only 1: intros Ha; only 1: destruct _tmp_tactician0 as (Hy', _tmp_tactician2); only 1: intuition).	1.95597600937	541
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.32.56	synth with cache (only 1: intros n; only 1: induction n; only 1: easy).	11.855877161	12673
Coq.ZArith.Znumtheory.not_prime_1	40	6.11	synth with cache (only 1: Z.nzsimpl'; only 1: easy').	0.506334066391	306
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	2.15.0.8.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: apply (Zlt_le_succ 1); only 1: red; only 1: simpl in *; only 1: destruct _tmp_tactician0 as (m, H); only 1: auto with zarith).	6.24223995209	5699
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	1.1.8.6	synth with cache (only 1: intros a0; only 1: fix sqrtrem_spec 1; only 1: intros d; only 1: trivial).	10.5864329338	6972
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	4.6.0	synth with cache (only 1: intros n; only 1: fix even_spec 1; only 1: easy).	2.28163504601	902
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.0.3.0.0.8.0.58.0	synth with cache (only 1: intros Hb; only 1: revert a; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0); only 1: Z.order; only 1: unfold Z.div; only 1: symmetry; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	31.6167440414	53159
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_eq; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.0939321517944	18
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5.3	synth with cache (only 1: intros EQ; only 1: easy).	0.264137983322	35
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.1.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0445210933685	6
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.9.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: easy).	0.272222995758	117
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.126082897186	6
Coq.ZArith.Zdiv.Zmod_1_r	40	0.11.2	synth with cache (only 1: intros n; only 1: Z.nzsimpl; only 1: easy).	1.25920891762	883
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.7.0	synth with cache (only 1: intros; only 1: Z.nzsimpl'; only 1: easy).	0.117717981339	21
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.2.0.1.0.0.2	synth with cache (only 1: intros n; only 1: intros b; only 1: Z.swap_greater; only 1: intros Ha; only 1: intros H; only 1: apply Z.div_pos; only 1: trivial; only 1: trivial).	2.6771569252	812
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0432081222534	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.2.2	synth with cache (only 1: intros b; only 1: intros m; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.471634864807	117
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: trivial).	0.0655381679535	12
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0.0.0.0.4	synth with cache (only 1: intros Ha; only 1: intros b; only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.994050979614	388
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: trivial).	0.197645187378	35
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	4.0	synth with cache (only 1: intros b; only 1: easy).	0.0264499187469	6
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	1.0.0	synth with cache (only 1: intros m; only 1: intros; only 1: easy).	0.0364520549774	4
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.0.0.10	synth with cache (only 1: intros Hrec; only 1: unfold eqm; only 1: intros; only 1: Z.order).	7.765583992	3192
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	3.0.0.0.0.0.9.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: intros b; only 1: intros n; only 1: easy; only 1: intros b; only 1: congruence).	1.3640499115	560
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: trivial).	0.3629322052	117
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.220278024673	37
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.1.1.1	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hc; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.203609228134	31
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.0.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.div_exact; only 1: easy; only 1: easy).	0.0847480297089	9
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: easy; only 1: easy).	0.0742280483246	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.4.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: f_equiv; only 1: easy).	0.27265381813	79
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.017853975296	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.0.4.5.0.1.0.0	synth with cache (only 1: intros Ha; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: discriminate Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: discriminate Hb).	21.9028499126	10356
Coq.ZArith.Zabs.Zabs_ind	40	0.2.11.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	8.93087387085	8269
Coq.ZArith.Zabs.Zabs_intro	40	0.3.1.0.10.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct m; only 1: intros; only 1: trivial; only 1: easy; only 1: trivial).	6.50488996506	7535
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	5.2	synth with cache (only 1: intros H; only 1: easy).	0.0215950012207	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: easy).	0.0149211883545	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0157351493835	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0154190063477	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0150518417358	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.1.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: simpl; only 1: trivial; only 1: intros n; only 1: Z.nzsimpl; only 1: easy).	0.557896137238	82
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	2	synth with cache (only 1: easy).	0.020427942276	3
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0196738243103	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0190000534058	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0177140235901	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.0172729492188	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0178601741791	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0184779167175	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0117089748383	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.6.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.667454004288	37
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	8.9	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).	0.790389060974	246
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.1.0.0.1	synth with cache (only 1: intros Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: easy).	0.757491827011	82
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	5	synth with cache (only 1: easy).	0.440462112427	6
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	6.0	synth with cache (only 1: simpl; only 1: trivial).	0.0179488658905	8
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0	synth with cache (only 1: easy).	0.0141019821167	1
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.7.2.1.1	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros r; only 1: simpl; only 1: congruence).	5.40237283707	1862
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	10.3	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, _tmp_tactician0); only 1: apply Pos2Nat.inj_iter).	0.372625827789	197
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	8	synth with cache (only 1: apply two_power_pos_equiv).	0.0568118095398	11
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.0.0.12.3.1	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	2.49867296219	2018
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0.1	synth with cache (only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	0.0294470787048	3
Coq.ZArith.auxiliary.Zle_left	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0279018878937	11
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0180251598358	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0183081626892	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.018826007843	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: apply Z.le_0_sub; only 1: apply Z.le_succ_l; only 1: apply Z.lt_0_sub; only 1: Z.swap_greater; only 1: easy).	0.0652229785919	9
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0370349884033	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0378060340881	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.0.0.0.2.1	synth with cache (only 1: unfold Z.max; only 1: intros H; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.185946941376	41
Coq.ZArith.Zmax.Zpos_max_1	40	0.7.8.6	synth with cache (only 1: induction p; only 1: easy; only 1: trivial; only 1: easy).	2.20848202705	993
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	7.0.1.0.1.16.0	synth with cache (only 1: unfold Z.min; only 1: induction p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: auto with relations).	12.3192398548	8031
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40	0.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.00148391724	917
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.59	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	1.34068799019	3101
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order).	0.0281579494476	2
Coq.ZArith.Zorder.Zlt_not_le	40	0.1	synth with cache (only 1: intros LT; only 1: Z.order).	0.0320382118225	3
Coq.ZArith.Zorder.Zle_not_gt	40	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).	0.0409588813782	5
Coq.ZArith.Zorder.Zgt_not_le	40	0.1.4	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).	0.128756046295	32
Coq.ZArith.Zorder.Znot_ge_lt	40	1.27	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	1.78060102463	1433
Coq.ZArith.Zorder.Znot_lt_ge	40	1.4.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.0465998649597	8
Coq.ZArith.Zorder.Znot_gt_le	40	1.5.1	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.0476949214935	10
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0365130901337	4
Coq.ZArith.Zorder.not_Zne	40	1.0.35.6	synth with cache (only 1: intros H; only 1: destruct (Z.eq_decidable n m); only 1: easy; only 1: intuition).	3.91336011887	4438
Coq.ZArith.Zorder.Zgt_asym	40	2.3.1	synth with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).	0.231271982193	30
Coq.ZArith.Zorder.Zgt_irrefl	40	11	synth with cache (only 1: easy).	0.0726149082184	57
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	0.487767934799	99
Coq.ZArith.Zorder.Zle_gt_trans	40	0.0.3.2	synth with cache (only 1: intros H1; only 1: Z.swap_greater; only 1: intros H2; only 1: Z.Private_Tac.order).	0.0797998905182	19
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0375180244446	2
Coq.ZArith.Zorder.Zge_trans	40	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	4.37276601791	1734
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.0.0.2.58	synth with cache (only 1: unfold Z.lt; only 1: destruct 1; only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	21.6931829453	29001
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0369880199432	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0164568424225	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0189690589905	1
Coq.ZArith.Zorder.Zgt_succ	40
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0197649002075	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0181968212128	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0341219902039	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0206029415131	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0441839694977	11
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0195288658142	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.0.1.0.7.4.11.0	synth with cache (only 1: destruct n; only 1: Z.order'; only 1: simpl; only 1: destruct p; only 1: easy; only 1: destruct 1; only 1: easy; only 1: Z.order; only 1: easy).	7.85438919067	7714
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.0.0.0.1.11.1.5.9	synth with cache (only 1: destruct n as [| n| n]; only 1: easy; only 1: destruct 1; only 1: intros H; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	39.5392439365	38967
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2	synth with cache (only 1: intros a; only 1: easy).	0.0305440425873	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intros n; only 1: reflexivity).	0.0192921161652	2
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0234811306	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	synth with cache (only 1: easy).	0.0163588523865	1
Coq.ZArith.Zorder.Zle_0_nat	40	0.1.30	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	2.00143504143	3372
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0176351070404	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0196611881256	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0187621116638	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0188050270081	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0204119682312	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0223309993744	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0415360927582	6
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.038633108139	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0576109886169	12
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.030326128006	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.7.4.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_le_mono_nonneg_r; only 1: Z.Private_Tac.order; only 1: easy).	3.67421197891	1546
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0199949741364	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0189578533173	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0671000480652	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.0.2.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: trivial).	0.0832591056824	19
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: trivial).	0.0739090442657	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0304090976715	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.017254114151	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0318140983582	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0175421237946	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0471448898315	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0471460819244	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	0.0.1.2.0.3.0.5.2.0	synth with cache (only 1: intros H1; only 1: destruct m; only 1: easy; only 1: intros Hn; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).	28.5435819626	16034
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	4.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.259407997131	67
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	0.1.1.0.0.5.1.0.21.1	synth with cache (only 1: intros H1; only 1: destruct n; only 1: intros IH; only 1: easy; only 1: destruct m; only 1: intros Hb; only 1: easy; only 1: split; only 1: easy; only 1: easy).	21.2244939804	16496
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.16841506958	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.107595920563	34
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0166599750519	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.4	synth with cache (only 1: intros EQ; only 1: apply Z.leb_le; only 1: trivial).	0.051255941391	18
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	synth with cache (only 1: easy).	0.00997090339661	3
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.5	synth with cache (only 1: rewrite Z.leb_le; only 1: easy).	0.083988904953	43
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.12.3	synth with cache (only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.leb_le).	1.0359749794	774
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.14.18	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto; only 1: auto).	15.1593940258	17476
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros H1; only 1: intros H2; only 1: intros H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0494730472565	7
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.4.25	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).	4.12415599823	841
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).	0.0648589134216	22
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.1.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: easy).	0.0767149925232	25
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt; only 1: unfold Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: intuition).	7.05964899063	3647
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.2	synth with cache (only 1: intros ?; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.352879047394	110
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.00996208190918	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.2.1.1.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: intros; only 1: induction (Rwf x); only 1: auto).	0.051285982132	9
Coq.Program.Wf.Well_founded.Fix_F_inv	40
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0507051944733	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0238330364227	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.6.8.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	0.592941045761	464
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	5.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0210819244385	7
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.1.8.1.0.2.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros f; only 1: intros y; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).	6.26442909241	8658
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.0082790851593	3
Coq.Program.Equality.UIP_refl_refl	40	17	synth with cache (only 1: apply UIP).	0.0335459709167	126
Coq.Program.Equality.inj_pairT2_refl	40	8	synth with cache (only 1: apply UIP).	0.00871300697327	9
Coq.Program.Equality.solution_left	40	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0190238952637	6
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.012403011322	5
Coq.Program.Equality.deletion	40	3.0	synth with cache (only 1: intros y; only 1: trivial).	0.00951409339905	5
Coq.Program.Equality.simplification_heq	40	0.2.6.1.1	synth with cache (only 1: intros H; only 1: intros H'; only 1: subst; only 1: apply H; only 1: trivial).	0.415642023087	659
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.4.1	synth with cache (only 1: intros H; only 1: intros J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.208867073059	322
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0168120861053	3
Coq.Program.Combinators.compose_id_left	40	1.0	synth with cache (only 1: intros A; only 1: auto).	0.0102958679199	3
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00948786735535	2
Coq.Program.Combinators.compose_assoc	40	0.5	synth with cache (only 1: intros; only 1: reflexivity).	0.0150430202484	12
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00926208496094	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0106320381165	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros a; only 1: intros H; only 1: eapply In_InA in H; only 1: eapply multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0580050945282	8
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40	0.23.1.1.5.2	synth with cache (only 1: unfold PermutSetoid.permutation; only 1: intros i; only 1: unfold meq; only 1: intros l1; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).	30.2263410091	40753
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.0.0.8.0.2.0.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	5.17990708351	5293
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	4.1.10	synth with cache (only 1: induction l; only 1: easy; only 1: firstorder).	0.736755847931	687
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).	8.521889925	3430
Coq.Sorting.Permutation.Permutation_cons	40	3	synth with cache (only 1: simpl_relation).	0.160514831543	48
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.0.1.0.1.2.1.0.0	synth with cache (only 1: induction 1; only 1: intros Hx; only 1: easy; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intuition; only 1: auto).	15.5845701694	6470
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0172989368439	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.1.3.1.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).	1.37753891945	413
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros ?; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: transitivity (length l'); only 1: easy; only 1: easy).	5.0004389286	1684
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros l; only 1: intros tl; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	14.4293761253	157
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	27	synth with cache (only 1: split).	0.167166948318	362
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	1.2	synth with cache (only 1: unfold permutation; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.0189940929413	5
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	1.0.13.0.1	synth with cache (only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).	4.47445702553	2726
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0269150733948	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros l; only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	13.8275899887	3987
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	2.23.0.2.6	synth with cache (only 1: intros H; only 1: intros; only 1: destruct eqA_dec as [_tmp_tactician0| NEQ]; only 1: easy; only 1: auto).	21.9421420097	25873
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0472769737244	6
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.1.1.0	synth with cache (only 1: intros P; only 1: intros; only 1: inversion H; only 1: auto).	0.103297948837	61
Coq.Sorting.Sorted.defs.Sorted_inv	40	3.1	synth with cache (only 1: inversion 1; only 1: easy).	0.109688043594	46
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	0.0.39	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: firstorder using Sorted_inv).	20.4821820259	39394
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.0.0	synth with cache (only 1: intros a; only 1: intros l; only 1: inversion_clear 1; only 1: auto).	0.0232570171356	4
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0242199897766	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	2.0.2.0.0.1.1	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	0.802575111389	579
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	3	synth with cache (only 1: constructor).	0.0233261585236	15
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0151209831238	2
Coq.Sorting.Heap.defs.invert_heap	40	0.13.2	synth with cache (only 1: intros l1; only 1: inversion 1; only 1: auto with datatypes).	0.794731140137	452
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	0.2.0.12.0.0.13.10	synth with cache (only 1: unfold meq in *; only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros y; only 1: intros; only 1: rewrite H; only 1: auto with datatypes).	5.51948285103	3214
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.0548419952393	12
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	1.7	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0623409748077	39
Coq.Sorting.Heap.defs.list_to_heap	40	3.1.2	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.0338981151581	17
Coq.Sorting.Heap.defs.heap_to_list	40	3.13	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	1.15942883492	912
Coq.Sorting.Heap.defs.treesort	40	4.0.4	synth with cache (only 1: fix merge 1; only 1: intros l2; only 1: auto with datatypes).	0.1587870121	85
Coq.Init.Wf.Well_founded.Acc_inv	40	10.2.0.0.2	synth with cache (only 1: intros ?; only 1: intros H; only 1: intros y; only 1: destruct H; only 1: auto).	3.21221613884	7710
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0134589672089	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.015252828598	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.32.3	synth with cache (only 1: intros; only 1: destruct r; only 1: trivial).	0.680533885956	2078
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0153939723969	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00593400001526	2
Coq.Init.Peano.not_eq_S	40	0.9	synth with cache (only 1: intros ?; only 1: auto).	0.0194299221039	43
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.016125202179	17
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0171480178833	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0154209136963	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0194969177246	7
Coq.Init.Peano.mult_n_O	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0158979892731	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00950813293457	5
Coq.Init.Peano.le_n_S	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0306861400604	33
Coq.Init.Peano.nat_case	40	1.0.3.6	synth with cache (only 1: induction n; only 1: intros ?; only 1: trivial; only 1: trivial).	0.158077001572	255
Coq.Init.Peano.nat_double_ind	40	1.1.4.3.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).	0.3402531147	608
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40
Coq.Init.Peano.nat_rect_succ_r	40	0.3.2.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.660341978073	884
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.2	synth with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.809095859528	833
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.1.2.13.30	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	10.7914748192	34145
Coq.Init.Datatypes.eq_true_ind_r	40	0.1.2.7	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).	0.632518053055	1046
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).	0.0199298858643	6
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).	0.0191550254822	6
Coq.Init.Datatypes.surjective_pairing	40	1.0.7.3.0	synth with cache (only 1: intros x''; only 1: intros Hx'; only 1: intros ?; only 1: destruct p; only 1: reflexivity).	0.555824995041	645
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0185079574585	6
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.1.5	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0471701622009	32
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00458097457886	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0090479850769	10
Coq.Init.Logic.Equivalence.iff_sym	40	1.1.1.0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.00692105293274	14
Coq.Init.Logic.and_iff_compat_l	40	2.0.2.2.2.0.2.0.1.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros C; only 1: intros B; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	17.5558049679	157125
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	7.51559495926	27102
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40	0.0.1.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: auto).	1.02587413788	1884
Coq.Init.Logic.imp_iff_compat_r	40	1.1.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	2.13725805283	3724
Coq.Init.Logic.not_iff_compat	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: intros _tmp_tactician2; only 1: auto).	0.0170941352844	8
Coq.Init.Logic.neg_false	40	3.1.1.17.0.0.1.1	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: auto).	7.5169210434	40398
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.816819906235	1320
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	1.71097111702	3027
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0.2.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0153269767761	9
Coq.Init.Logic.iff_to_and	40	4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: split; only 1: trivial; only 1: trivial; only 1: intros _tmp_tactician0; only 1: assumption).	1.91506385803	2515
Coq.Init.Logic.universal_quantification.inst	40	14.0	synth with cache (only 1: intros B; only 1: auto).	0.279917955399	872
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00905394554138	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.0.2.0.3.1.5	synth with cache (only 1: intros Fr; only 1: intros A; only 1: unfold not; only 1: intros H; only 1: intros H1; only 1: elim H1; only 1: exact H).	2.19130897522	6681
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.4	synth with cache (only 1: destruct 1; only 1: trivial).	0.0110349655151	14
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.010153055191	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00924587249756	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00978803634644	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.27.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct 1; only 1: destruct _tmp_tactician0 as []; only 1: trivial).	1.0378780365	5524
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.2.2.0.0.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: auto).	0.365537166595	441
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0182900428772	8
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.01930809021	8
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.020779132843	8
Coq.Init.Logic.equality_dep.f_equal_dep	40	0.9.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? _tmp_tactician2]; only 1: trivial).	0.229038000107	387
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	1.1.1.2	synth with cache (only 1: intros until H; only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.017333984375	9
Coq.Init.Logic.rew_opp_r	40	1.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0118761062622	5
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0112721920013	3
Coq.Init.Logic.f_equal2	40	0.0.1.0.1.1	synth with cache (only 1: intros A; only 1: intros B; only 1: intros x; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.028204202652	17
Coq.Init.Logic.f_equal3	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0123438835144	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0158290863037	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0236160755157	6
Coq.Init.Logic.f_equal_compose	40	0.0.6.0.3.5.1.2.2.3	synth with cache (only 1: intros A; only 1: intros P; only 1: intros Hl; only 1: intros C; only 1: intros x; only 1: intros H0; only 1: intros y; only 1: intros H; only 1: destruct H; only 1: reflexivity).	27.7626550198	54165
Coq.Init.Logic.eq_trans_refl_l	40	0.0.2	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0149581432343	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.014799118042	3
Coq.Init.Logic.eq_sym_involutive	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0113019943237	3
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0124108791351	3
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0128231048584	3
Coq.Init.Logic.eq_trans_assoc	40	0.0.2.1.0.1.0	synth with cache (only 1: intros until e; only 1: intros h2; only 1: destruct h2; only 1: intros h2; only 1: destruct h2; only 1: destruct e; only 1: reflexivity).	0.286264181137	214
Coq.Init.Logic.rew_map	40	1.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0128259658813	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.01145195961	4
Coq.Init.Logic.map_subst_map	40	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).	0.0122420787811	3
Coq.Init.Logic.rew_swap	40	6.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0120599269867	10
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0113670825958	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00886511802673	2
Coq.Init.Logic.eq_trans_map_distr	40	0.0.0.4.3.0	synth with cache (only 1: intros until e; only 1: intros h2; only 1: destruct h2; only 1: destruct e; only 1: simpl; only 1: reflexivity).	0.215368032455	193
Coq.Init.Logic.eq_sym_map_distr	40	0.2.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).	0.0124549865723	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0.1	synth with cache (only 1: intros until e'; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0274519920349	27
Coq.Init.Logic.eq_trans_rew_distr	40	0.0.1	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	0.0141229629517	4
Coq.Init.Logic.rew_const	40	0.2.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	0.0114569664001	5
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	6.2.4.5.2	synth with cache (only 1: intros P; only 1: intros y; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, Huni); only 1: auto).	1.61075592041	5182
Coq.Init.Logic.inhabited_covariant	40	0.0.0	synth with cache (only 1: intros H; only 1: destruct 1; only 1: auto).	0.00967001914978	3
Coq.Init.Logic.eq_stepl	40	0.0.6	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0172080993652	18
Coq.Init.Logic.iff_stepl	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros y; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.979535102844	751
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.1.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0903429985046	72
Coq.Init.Logic.ex2.rew_ex2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0191161632538	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00834918022156	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00914692878723	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00958895683289	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1; only 1: intros h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0174889564514	6
Coq.Init.Logic_Type.identity_ind_r	40	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).	0.0241050720215	17
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0221648216248	8
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0222549438477	8
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0116930007935	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0137979984283	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0117590427399	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.6.7.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x, _tmp_tactician4); only 1: split; only 1: exists x; only 1: trivial).	0.177681922913	589
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.3.64.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).	2.20252108574	19840
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0172550678253	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0157051086426	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.5.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0299549102783	12
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.37.0.7.0	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: destruct q; only 1: subst; only 1: reflexivity).	5.84155988693	18212
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	2.15.6	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	4.48963499069	6229
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0191650390625	4
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.110986948013	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0322141647339	8
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	5.2.0.0.0.0.0.3	synth with cache (only 1: destruct u as [u1 u2]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct v as [v1 v2]; only 1: apply eq_exist_uncurried).	8.03044199944	6031
Coq.Init.Specif.sig.rew_sig	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0213708877563	3
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.0.0.4.2.2.0.3	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).	3.18459582329	3623
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	3.0.1.0.0.0.1.1.0.0.1	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	6.61951494217	5002
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0219080448151	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0.0.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0274858474731	7
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).	0.0482671260834	10
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	20.8035070896	12100
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.0230901241302	3
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros A; only 1: intros C; only 1: intros h1; only 1: intros h2; only 1: destruct (h2 h1)).	0.0133969783783	6
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	4	synth with cache (only 1: solve_proper).	2.33076095581	411
Coq.QArith.Qreduction.Qred_correct	40	1.0.1.12	synth with cache (only 1: fix le_div2 1; only 1: fix sqrtrem_spec 1; only 1: intros ?; only 1: auto with *).	0.974682092667	820
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0.7.1.3.0	synth with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: revert q; only 1: intros _tmp_tactician2; only 1: apply Qeq_bool_iff; only 1: apply Qred_correct).	6.06153702736	1844
Coq.QArith.Qreduction.Qminus'_correct	40	1.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.150288105011	65
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40	0.0.1.0.14.11	synth with cache (only 1: revert q; only 1: intros b; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: rewrite Qlt_alt; only 1: easy).	6.35264801979	5025
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	4.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).	0.737656116486	146
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.0.0.0.9.3.0	synth with cache (only 1: intros _tmp_tactician0; only 1: simpl in *; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	4.44558811188	2214
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.0.0.1.8.2.0.6.57	synth with cache (only 1: constructor; only 1: intros q; only 1: destruct q as [a b]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| n]; only 1: unfold Qeq; only 1: simpl in *; only 1: trivial; only 1: easy).	8.1175429821	8298
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.00739192962646	1
Coq.QArith.Qfield.Examples.ex2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0680260658264	11
Coq.QArith.Qfield.Examples.ex3	40	0.3.0.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros b; only 1: intros p; only 1: destruct _tmp_tactician0 as (aa, bb); only 1: ring).	0.618588924408	280
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: split).	0.0111010074615	2
Coq.QArith.Qfield.Examples.ex5	40	1	synth with cache (only 1: trivial).	0.0168449878693	2
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0152280330658	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	0.054044008255	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0192859172821	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.0187330245972	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: intros H0; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.111690044403	21
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0338227748871	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.0198760032654	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.7	synth with cache (only 1: unfold N.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.599080085754	284
Coq.QArith.Qcanon.Qcle_alt	40	1.2.2	synth with cache (only 1: intros n; only 1: intros m; only 1: reflexivity).	0.0862669944763	36
Coq.QArith.Qcanon.Qcge_alt	40	1.0.8.4.8	synth with cache (only 1: simpl; only 1: intros n; only 1: induction n; only 1: symmetry; only 1: apply Z.ge_le_iff).	10.0282361507	6588
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	2	synth with cache (only 1: easy).	0.0164039134979	12
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.1.10.0.1	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	6.02828717232	2904
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.0541009902954	10
Coq.QArith.Qcanon.Qcmult_assoc	40	0.0.9.1.5	synth with cache (only 1: intros _tmp_tactician0; only 1: intros n; only 1: fix even_spec 1; only 1: intros m; only 1: trivial).	12.1029038429	6433
Coq.QArith.Qcanon.Qcmult_0_l	40	2.1	synth with cache (only 1: intros _tmp_tactician0; only 1: auto with qarith).	0.0239360332489	14
Coq.QArith.Qcanon.Qcmult_0_r	40	1.0.8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.649999141693	372
Coq.QArith.Qcanon.Qcmult_1_l	40	9.1.1.8.19	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (q', hq'); only 1: qc; only 1: field).	20.6320748329	21419
Coq.QArith.Qcanon.Qcmult_1_r	40	9.1.1.8.19	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (q', hq'); only 1: qc; only 1: field).	21.9094970226	21968
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.3.0.3.6	synth with cache (only 1: intros b; only 1: intros m; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.35624504089	2570
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.0.4.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.8469171524	832
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	8.4.3.13	synth with cache (only 1: intros n; only 1: induction n; only 1: red; only 1: auto with *).	2.98425602913	3693
Coq.QArith.Qcanon.Qcle_antisym	40	2.0.3	synth with cache (only 1: intros n; only 1: intros y; only 1: intuition).	0.0707159042358	40
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	6.2.0.0	synth with cache (only 1: unfold Qclt; only 1: intros a; only 1: unfold Qcle; only 1: intuition).	0.944875001907	530
Coq.QArith.Qcanon.Qcle_lt_trans	40	4.2.1.1.0	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: auto with qarith).	1.82318997383	953
Coq.QArith.Qcanon.Qclt_le_trans	40	4.2.10	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: eauto).	36.5595419407	21757
Coq.QArith.Qcanon.Qclt_trans	40	3.4.1.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: easy).	1.69236207008	1256
Coq.QArith.Qcanon.Qcnot_lt_le	40	1.1.1.0	synth with cache (only 1: unfold Qcle; only 1: intros x; only 1: intros y; only 1: auto with qarith).	0.21461391449	58
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.3.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros H0; only 1: auto with qarith).	0.0387768745422	22
Coq.QArith.Qcanon.Qclt_not_le	40	6.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	0.0243248939514	14
Coq.QArith.Qcanon.Qcle_not_lt	40	0.0.4.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.0235590934753	10
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	2.7.2	synth with cache (only 1: intros abs; only 1: fix even_spec 1; only 1: auto with *).	4.20148491859	628
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.0.1.2.4.4	synth with cache (only 1: intros m; only 1: Nat.cases m; only 1: intros; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros; only 1: auto with qarith).	3.48168206215	2942
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.465667963028	181
Coq.QArith.Qreals.IZR_nz	40	0.2.0	synth with cache (only 1: intros H; only 1: apply not_0_IZR; only 1: easy).	0.0547420978546	13
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0483200550079	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1.2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply not_iff_compat; only 1: easy).	0.0848889350891	18
Coq.QArith.QArith_base.Qge_alt	40	2.13.15	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	35.0631201267	19844
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.1	synth with cache (only 1: red; only 1: trivial).	0.0524301528931	5
Coq.QArith.QArith_base.Qeq_sym	40	0.0	synth with cache (only 1: intros H; only 1: auto with qarith).	0.0255081653595	2
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.0.0.0.0.0.0.0.1.57.3.6.181	synth with cache (only 1: constructor 1; only 1: easy; only 1: easy; only 1: intros EQ; only 1: intros y; only 1: intros z; only 1: unfold Qeq; only 1: intros XY; only 1: intros YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: rewrite Z.mul_shuffle0; only 1: rewrite XY; only 1: rewrite Z.mul_shuffle0; only 1: rewrite YZ; only 1: rewrite Z.mul_shuffle0; only 1: easy).	26.0490231514	68191
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	5.2.24	synth with cache (only 1: fix even_spec 1; only 1: intros H; only 1: intuition).	19.3621201515	13795
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0213348865509	1
Coq.QArith.QArith_base.Qeq_bool_neq	40	13.12.12	synth with cache (only 1: rewrite <- negb_true_iff; only 1: fix odd_spec 1; only 1: auto).	7.57656216621	8863
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40
Coq.QArith.QArith_base.Qnot_eq_sym	40	2.0.3	synth with cache (only 1: unfold Qeq; only 1: intros Hn; only 1: Z.order).	0.0741360187531	23
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.0.46	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: easy).	14.3168821335	18481
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	5	synth with cache (only 1: easy).	0.0301361083984	6
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.30.3	synth with cache (only 1: intros ?; only 1: red; only 1: simpl in *; only 1: ring).	5.16917991638	6760
Coq.QArith.QArith_base.Qplus_0_r	40	1.2.11.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_1_r; only 1: easy).	5.09231686592	2905
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.0648670196533	9
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	2.2	synth with cache (only 1: intros; only 1: reflexivity).	0.0285181999207	6
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.0.4	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl; only 1: reflexivity).	0.148501157761	37
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.108467102051	16
Coq.QArith.QArith_base.Qmult_comm	40	1.0.1.0.1.8	synth with cache (only 1: intros r; only 1: red; only 1: intros; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	12.8027060032	2120
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	5.0.0.1.1.7.1	synth with cache (only 1: intros ?; only 1: intros b; only 1: red; only 1: simpl; only 1: intros H; only 1: simpl_mult; only 1: ring).	22.8969368935	9077
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.4.4.1.0.3	synth with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: intros a; only 1: intros Hb; only 1: simpl_mult; only 1: ring).	13.9007978439	7312
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	10	synth with cache (only 1: easy).	0.171634912491	74
Coq.QArith.QArith_base.inject_Z_opp	40	1.0.0.2.2.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy).	0.179715871811	44
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.6.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	1.44810509682	565
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	7.6.5.5	synth with cache (only 1: intros ?; only 1: apply Z.lt_le_incl; only 1: symmetry; only 1: easy).	1.25320601463	1073
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	0.29.0	synth with cache (only 1: intros H; only 1: apply Z.ge_le; only 1: easy).	6.11942505836	5605
Coq.QArith.QArith_base.Qnot_le_lt	40	3.0.1	synth with cache (only 1: intros H; only 1: rewrite Qlt_alt; only 1: Z.order).	0.042112827301	7
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.020161151886	2
Coq.QArith.QArith_base.Qle_not_lt	40	9.6.0.5	synth with cache (only 1: intros Hxy; only 1: apply Z.nlt_ge; only 1: intros _tmp_tactician0; only 1: easy).	1.80257892609	1500
Coq.QArith.QArith_base.Qle_lt_or_eq	40	5.11.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros b; only 1: apply Z.lt_eq_cases).	4.48688197136	2509
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40	0.1.17.0	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: intros until q; only 1: auto).	16.5145111084	11040
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 d]; only 1: destruct _tmp_tactician2 as [| n| n]; only 1: intros Ha; only 1: assumption; only 1: intros Ha; only 1: assumption; only 1: intros Ha; only 1: assumption).	0.0622980594635	9
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm _ p); only 1: rewrite (Qplus_comm _ p); only 1: rewrite (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	9.81611800194	2522
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	5.5.1	synth with cache (only 1: intros p; only 1: simpl; only 1: apply Z.div_1_r).	0.63081908226	276
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.3	synth with cache (only 1: intros; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	5.36852502823	1787
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0539510250092	10
Coq.QArith.Qabs.Qabs_nonneg	40	3.0.0.5.7.13	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Qle; only 1: destruct _tmp_tactician0 as (x1, x2); only 1: simpl; only 1: Z.nzsimpl; only 1: apply Z.abs_nonneg).	30.6428101063	25570
Coq.QArith.Qabs.Zabs_Qabs	40	1.0.1.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician4; only 1: red; only 1: simpl; only 1: easy).	0.0261209011078	7
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.0.1.0.1.0.2.0.4.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (y1, y2); only 1: unfold Qeq; only 1: destruct _tmp_tactician0 as (n, d); only 1: unfold Qmult; only 1: simpl in *; only 1: f_equiv; only 1: rewrite <- Z.abs_mul; only 1: trivial).	15.611759901	8339
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: reflexivity).	0.00669598579407	2
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00537014007568	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00501585006714	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	2.0.1.2.3.0.0.7.2.0	synth with cache (only 1: intros _tmp_tactician0; only 1: split; only 1: red; only 1: intros P; only 1: intros; only 1: destruct H; only 1: firstorder; only 1: intros H0; only 1: intros h2; only 1: auto).	6.79545688629	10953
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3.3	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0124089717865	12
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0110960006714	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: intros y; only 1: simpl_crelation).	0.0123388767242	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0073881149292	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0	synth with cache (only 1: simpl_crelation).	0.0100750923157	1
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: firstorder).	0.00674796104431	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	6.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).	0.0296771526337	24
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.00785779953003	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00568294525146	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.00754189491272	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00615191459656	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.0476109981537	39
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	8	synth with cache (only 1: firstorder).	0.122589826584	9
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.415139913559	112
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	1.84502291679	721
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	1.47296214104	518
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	6.54949688911	2664
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0973539352417	20
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.26805305481	153
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	9.53274607658	3265
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	3.1.0.0	synth with cache (only 1: hnf; only 1: intros y; only 1: intros H'; only 1: firstorder).	0.0199558734894	12
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	10	synth with cache (only 1: firstorder).	0.0513660907745	21
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3.0	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0159890651703	5
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.6	synth with cache (only 1: reduce; only 1: auto).	0.0141839981079	8
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	5.2.0	synth with cache (only 1: intros HRR'; only 1: unfold respectful in *; only 1: firstorder).	0.0491759777069	45
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0108659267426	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00677394866943	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	3.1	synth with cache (only 1: hnf; only 1: simpl_crelation).	0.0918900966644	31
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00659608840942	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00719118118286	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros B; only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: simpl_crelation; only 1: firstorder).	0.0371458530426	10
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	8.0	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.0234661102295	10
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0073390007019	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.1.0	synth with cache (only 1: intros A; only 1: intros R'; only 1: intros; only 1: simpl_crelation).	0.0221261978149	6
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).	15.8680758476	7501
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.0.5.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).	1.65321183205	774
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.00725197792053	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00775384902954	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00937390327454	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.293960094452	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	3	synth with cache (only 1: reflexivity).	0.00780701637268	4
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0074520111084	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	3.2.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: hnf; only 1: firstorder).	0.0120720863342	9
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	13	synth with cache (only 1: firstorder).	0.460701942444	614
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0194711685181	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0153639316559	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0275158882141	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.033744096756	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.00676298141479	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0069739818573	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.1.0.1.1.3	synth with cache (only 1: intros C; only 1: split; only 1: intros H1; only 1: assumption; only 1: intros H1; only 1: assumption).	0.0464081764221	64
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0065701007843	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.00713896751404	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.0109930038452	4
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0132241249084	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0360968112946	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.0.6.1.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: intros C; only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	10.1550970078	5420
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.00947403907776	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00735998153687	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00942087173462	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.274514198303	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: auto).	0.0123379230499	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0131630897522	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0213079452515	6
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).	0.0597200393677	36
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.028825044632	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0290699005127	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0404450893402	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0427868366241	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0122520923615	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0122330188751	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.2.2.0.0	synth with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: assumption; only 1: intros H2; only 1: firstorder).	0.109225988388	47
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0261900424957	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0495500564575	8
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	4	synth with cache (only 1: firstorder).	0.0169589519501	5
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0201258659363	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: red in poe; only 1: red in poe; only 1: red in poe; only 1: firstorder).	0.113634109497	6
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0203659534454	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	3	synth with cache (only 1: reflexivity).	0.0110280513763	4
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0100340843201	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00947093963623	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.0.3.0.2.2.0.6	synth with cache (only 1: intros Fr; only 1: split; only 1: red; only 1: intros y; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).	1.34646701813	1506
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0147879123688	4
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0145480632782	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	2.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0133819580078	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	3.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0164408683777	5
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).	0.426059961319	154
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	1.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).	0.017431974411	4
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0132348537445	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0130031108856	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.010311126709	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	8	synth with cache (only 1: firstorder).	0.0204668045044	9
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.2068400383	64
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.195904970169	74
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	6.83021879196	4554
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	3.5.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	3.26979994774	1394
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	4.3.0	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	1.19241690636	455
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	13	synth with cache (only 1: firstorder).	3.01632118225	1445
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.513324022293	293
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.3.0	synth with cache (only 1: hnf; only 1: intuition; only 1: firstorder).	0.0243971347809	6
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0173799991608	7
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	4.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0216619968414	9
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: simpl_relation).	0.0252618789673	9
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.3.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0879290103912	10
Coq.Classes.Morphisms.GenericInstances.flip1	40	1.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).	0.0399408340454	6
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0126948356628	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0190718173981	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0111529827118	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.0146539211273	1
Coq.Classes.Morphisms.proper_proper	40	4.1.0	synth with cache (only 1: reduce; only 1: simpl_relation; only 1: apply H).	0.0393631458282	8
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	3.2	synth with cache (only 1: simpl_relation; only 1: firstorder).	0.0240910053253	7
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0141220092773	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0207581520081	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.6.1.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: unfold respectful; only 1: simpl_relation).	3.72213411331	1420
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.5	synth with cache (only 1: reduce; only 1: simpl_relation).	0.0182268619537	7
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00828313827515	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0326409339905	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.008131980896	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	synth with cache (only 1: firstorder).	0.00955581665039	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.019336938858	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.27539896965	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0125269889832	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.0	synth with cache (only 1: intros x; only 1: firstorder).	0.0139248371124	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.0114469528198	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0112061500549	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.1.2	synth with cache (only 1: intros ?; only 1: intros; only 1: firstorder).	0.029944896698	22
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0111529827118	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.0113229751587	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40	0.4.9.14	synth with cache (only 1: intros y; only 1: intros; only 1: apply H; only 1: assumption).	1.38247799873	3524
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.28	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.58884596825	2830
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	19	synth with cache (only 1: apply Nat.eqb_eq).	0.695648908615	545
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	7	synth with cache (only 1: apply Nat.leb_le).	0.0514581203461	28
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	synth with cache (only 1: apply _).	0.0188119411469	2
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0179760456085	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0151188373566	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.3.1	synth with cache (only 1: intros x; only 1: compute; only 1: firstorder).	0.115567922592	7
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.498963117599	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2.0.0	synth with cache (only 1: intros x1; only 1: intros x'; only 1: firstorder).	0.147181987762	63
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).	0.0159740447998	4
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.00958108901978	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intros ?; only 1: reduce; only 1: firstorder).	0.01948595047	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.00855898857117	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.1	synth with cache (only 1: unfold to_nat; only 1: easy).	0.023873090744	4
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id p); only 1: rewrite <- (id q); only 1: rewrite H; only 1: easy; only 1: congruence).	0.864490032196	311
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.0.2.1.9.1	synth with cache (only 1: unfold gt; only 1: rewrite (compare_antisym q); only 1: rewrite inj_compare; only 1: rewrite CompOpp_iff; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	4.7475399971	2601
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40	4.3.11.0.1.2.1.1	synth with cache (only 1: induction p using peano_ind; only 1: simpl; only 1: inversion 1; only 1: intros; only 1: rewrite inj_succ; only 1: destruct (is_succ p) as (n, _tmp_tactician0); only 1: rewrite Nat.pred_succ; only 1: auto).	31.3074400425	23295
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	6.2.0.0.4.0.0.1.0.2.38	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: destruct n; only 1: easy; only 1: auto).	38.6097609997	43729
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.1.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: easy; only 1: trivial).	0.0285758972168	5
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.7	synth with cache (only 1: intuition; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite id_succ in H; only 1: rewrite id_succ in H; only 1: injection H; only 1: easy).	5.30704116821	2385
Coq.PArith.Pnat.SuccNat2Pos.inv	40	1.19.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: destruct 1; only 1: apply Pos2Nat.id).	4.87688279152	3939
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	2.2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj; only 1: easy).	0.0419449806213	15
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.2.2.2	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: Nat.nzsimpl; only 1: easy).	0.0927538871765	38
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0269680023193	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	9	synth with cache (only 1: split).	0.110564947128	15
Coq.PArith.BinPos.Pos.succ_discr	40	1.6.3.1.8.29	synth with cache (only 1: destruct p; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: easy).	3.91569304466	9912
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: easy).	0.0144140720367	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.5.0.0.0.0.1.0.0.0.4.1	synth with cache (only 1: destruct p; only 1: induction p; only 1: simpl; only 1: destruct p; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: easy; only 1: tauto; only 1: easy; only 1: reflexivity).	26.8254680634	17139
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.0234730243683	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	12.3.6.10.19	synth with cache (only 1: inversion 1; only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	3.15584301949	7158
Coq.PArith.BinPos.Pos.succ_not_1	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0475859642029	4
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.1.0.0.2.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: easy).	1.68707704544	728
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.3.5.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	3.2084710598	1642
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.2	synth with cache (only 1: induction p; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	0.0347549915314	7
Coq.PArith.BinPos.Pos.add_1_l	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0302498340607	4
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.5.3.2.14	synth with cache (only 1: split; only 1: apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: auto using add_carry_add).	15.4180099964	7400
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.4.1.1	synth with cache (only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: simpl; only 1: f_equal).	0.0599758625031	20
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	5	synth with cache (only 1: auto).	0.0149219036102	6
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: easy).	0.0149230957031	1
Coq.PArith.BinPos.Pos.mul_1_r	40	1.0.0.4.0.1.0.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: easy).	0.854986906052	657
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.1.1.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: intros _tmp_tactician0; only 1: intros r; only 1: apply mul_reg_r; only 1: congruence).	0.308803081512	81
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.440040111542	146
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.0.0.0.1.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: easy).	4.90188789368	3274
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.851799964905	289
Coq.PArith.BinPos.Pos.square_xO	40	0.1.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: rewrite mul_xO_r; only 1: f_equal).	0.0311601161957	5
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.2.0.0.2.0.0.3.1.26	synth with cache (only 1: apply succ_inj; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: easy).	10.2523269653	14398
Coq.PArith.BinPos.Pos.pow_succ_r	40	1.2.0.6.4	synth with cache (only 1: revert q; only 1: unfold pow; only 1: intros r; only 1: rewrite iter_succ; only 1: trivial).	10.6867711544	6669
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.0531740188599	9
Coq.PArith.BinPos.Pos.sub_mask_add	40	0.3.2.0.0.0.0.0.3.1.0	synth with cache (only 1: revert p q; only 1: intros _tmp_tactician0; only 1: intros until q; only 1: case sub_mask_spec; only 1: congruence; only 1: intros _tmp_tactician2; only 1: intros H; only 1: subst; only 1: congruence; only 1: intros H; only 1: congruence).	8.86041212082	5025
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	8.1.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	0.740581989288	250
Coq.PArith.BinPos.Pos.leb_le	40	13.1.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	7.02231907845	4501
Coq.PArith.BinPos.Pos.compare_cont_spec	40	4.10.2	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	2.60374403	1703
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	4.0.0.0.1.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy).	1.05549097061	222
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.0.0.1.0.2.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	3.03309679031	970
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	0.7.5	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	2.44305515289	1218
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0615739822388	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	1.0.0.0.1.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy; only 1: split; only 1: trivial; only 1: easy; only 1: easy).	0.790247917175	180
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.1.1.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy; only 1: easy; only 1: easy).	0.683188915253	148
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0637679100037	7
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.1.0.2.2	synth with cache (only 1: unfold compare; only 1: destruct compare_cont; only 1: trivial; only 1: split; only 1: trivial).	0.06977891922	29
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0135810375214	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	5.6.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: split).	13.4957418442	10904
Coq.PArith.BinPos.Pos.compare_xO_xI	40	6.3.11.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	19.5313959122	13932
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40	0.8.4.1	synth with cache (only 1: rewrite <- sub_mask_neg_iff; only 1: revert q; only 1: fix even_spec 1; only 1: auto).	9.22177791595	4982
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.3.3.1.0.2.12	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: easy; only 1: simpl; only 1: reflexivity).	6.3939011097	5348
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.2.0	synth with cache (only 1: unfold lt; only 1: split; only 1: easy; only 1: easy).	0.266392946243	81
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.2.2.0	synth with cache (only 1: apply not_iff_compat; only 1: unfold compare; only 1: split; only 1: easy; only 1: easy).	0.495800971985	158
Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.0.0.2.0	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0387530326843	7
Coq.PArith.BinPos.Pos.gt_lt	40	0.2.0.0.1.0.1.1	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.800977945328	258
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0146942138672	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	0.0.0.1	synth with cache (only 1: apply not_iff_compat; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0340330600739	5
Coq.PArith.BinPos.Pos.ge_le	40	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0379378795624	5
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0143039226532	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	7.0.0.0.0.0.2.1.3	synth with cache (only 1: induction p using peano_rect; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).	5.04825520515	4814
Coq.PArith.BinPos.Pos.nlt_1_r	40	6.0.0.1.3.0.1	synth with cache (only 1: rewrite lt_iff_add; only 1: rewrite <- sub_mask_neg_iff; only 1: destruct p; only 1: simpl; only 1: discriminate; only 1: discriminate; only 1: easy).	3.07147407532	1752
Coq.PArith.BinPos.Pos.lt_1_succ	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: rewrite lt_iff_add; only 1: exists 1; only 1: easy).	0.169321060181	62
Coq.PArith.BinPos.Pos.le_nlt	40	0.0.0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.0365278720856	6
Coq.PArith.BinPos.Pos.lt_nle	40	0.0.2.0.0.0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: unfold ge; only 1: unfold lt; only 1: unfold compare; only 1: split; only 1: easy; only 1: apply comparison_eq_stable).	0.204298019409	31
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.1.0.3	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.172930002213	43
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0.0.0.1.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_succ_succ; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).	0.0415780544281	9
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	0.0.0.1.1.0	synth with cache (only 1: red; only 1: intros y; only 1: intros y'; only 1: intros Eyy'; only 1: rewrite Eyy'; only 1: easy).	0.563172101974	135
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0.1	synth with cache (only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.0510108470917	19
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.0.8.0.2	synth with cache (only 1: rewrite PeanoNat.Nat.lt_eq_cases; only 1: intros H; only 1: intuition; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: easy).	10.7411060333	7229
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	1.0.0.0.9.0	synth with cache (only 1: split; only 1: intros H; only 1: apply lt_eq_cases; only 1: right; only 1: easy; only 1: exact PeanoNat.Nat.le_trans).	0.337846040726	185
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	6.1.8.0.2	synth with cache (only 1: revert p q r; only 1: intros n; only 1: fix gcd_divide 1; only 1: intros _tmp_tactician0; only 1: auto using add_no_neutral).	19.0034389496	9898
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.2.2	synth with cache (only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.110162973404	36
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.0.0.2.0.3	synth with cache (only 1: revert p q r; only 1: intros n; only 1: intros _tmp_tactician0; only 1: intros m; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy).	1.45270800591	705
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0279901027679	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3.3	synth with cache (only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.716886997223	212
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0274670124054	7
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0257711410522	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	2.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: revert q; only 1: congruence).	0.307620048523	67
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2.0.1.0.3	synth with cache (only 1: induction p; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).	0.138880968094	66
Coq.PArith.BinPos.Pos.pred_sub	40	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0285439491272	4
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.2.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (r, Hr); only 1: exists r; only 1: apply sub_mask_pos_iff; only 1: trivial).	0.0454380512238	8
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: destruct (sub_mask_pos n m H) as (p, _tmp_tactician0); only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.0447728633881	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: destruct (sub_mask_pos n m H) as (p, _tmp_tactician0); only 1: intropattern subst -> _tmp_tactician0; only 1: easy).	0.0423760414124	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	39.2453730106	21163
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.0.6	synth with cache (only 1: unfold lt; only 1: unfold sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy; only 1: easy'; only 1: easy).	0.918658971786	326
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	2.0.3.0.0.0.0.1.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H'; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	16.1611909866	10914
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	1.6	synth with cache (only 1: apply max_r; only 1: apply le_1_l).	0.0482070446014	21
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0425908565521	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0195279121399	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.107926130295	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.0.1.0.0.2	synth with cache (only 1: apply max_monotone; only 1: red; only 1: red; only 1: intros H; only 1: intros Hnm; only 1: apply add_le_mono_l).	0.047297000885	13
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).	0.0656640529633	17
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0.3.3.3	synth with cache (only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: rewrite (add_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).	0.83073091507	354
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.1.0.1	synth with cache (only 1: apply max_monotone; only 1: intros x; only 1: intros Hnm; only 1: apply mul_le_mono_l).	0.0742511749268	23
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply mul_le_mono_l).	0.0305569171906	8
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0.1.1.1	synth with cache (only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: rewrite (mul_comm _ p); only 1: apply min_monotone; only 1: intros x; only 1: intros x'; only 1: apply mul_le_mono_l).	0.0464839935303	10
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.0.1.1.0.4.0.0.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m; only 1: simpl; only 1: auto).	6.39857006073	4669
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.7.0.0.2.0.3.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).	2.09252595901	1506
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	4.0.5.5	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros until q; only 1: trivial).	2.38692498207	2007
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.31.4	synth with cache (only 1: intros _tmp_tactician0; only 1: fix le_div2 1; only 1: trivial).	22.7780439854	36115
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	synth with cache (only 1: unfold Pos.gt; only 1: easy).	0.0196950435638	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	3.4.0.16.14	synth with cache (only 1: intros p; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	4.26559782028	5798
Coq.Arith.Le.le_n_0_eq	40	0.6.0.0	synth with cache (only 1: intros H; only 1: Nat.le_elim H; only 1: easy; only 1: easy).	0.027172088623	10
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	7.0	synth with cache (only 1: fix even_spec 1; only 1: firstorder).	0.0611228942871	45
Coq.Arith.Even.odd_equiv	40	4.0.2	synth with cache (only 1: fix odd_spec 1; only 1: intros until n; only 1: easy).	0.162896156311	35
Coq.Arith.Even.even_or_odd	40	2.3.29.19	synth with cache (only 1: Nat.induct n; only 1: firstorder; only 1: intros p; only 1: intuition).	5.26437282562	11354
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0206229686737	5
Coq.Arith.Even.not_even_and_odd	40	5.6.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	6.29107284546	6670
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.0925760269165	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0429360866547	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.041323184967	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0404241085052	1
Coq.Arith.Even.even_plus_aux	40	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.253384828568	17
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0409181118011	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0411958694458	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0404767990112	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0413820743561	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.17923116684	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0416560173035	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0408310890198	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0874488353729	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.131572008133	1
Coq.Arith.Even.even_mult_l	40	3	synth with cache (only 1: parity_binop).	0.0454790592194	20
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0274119377136	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0740718841553	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0406188964844	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0399639606476	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0283811092377	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0584127902985	1
Coq.Arith.Minus.minus_n_O	40	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019721031189	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0.0	synth with cache (only 1: Nat.nzsimpl'; only 1: easy).	0.0241792201996	2
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	3.0.0.0.1	synth with cache (only 1: nzinduct p; only 1: Nat.nzsimpl; only 1: easy; only 1: intros p; only 1: easy).	0.220659971237	13
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	0.24	synth with cache (only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.532876014709	815
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	11.0.4	synth with cache (only 1: intros y; only 1: intros y'; only 1: CRelationClasses.simpl_crelation).	4.46163392067	4315
Coq.Arith.Between.Between.between_le	40	6.0.6.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).	5.21857380867	3690
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	0.0.0.0.2.2.2.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros y; only 1: induction 1 as [| * [| ]]; only 1: intros Ha; only 1: intros H; only 1: auto; only 1: auto with arith; only 1: auto with arith).	9.43826389313	5068
Coq.Arith.Between.Between.exists_le_S	40	5.2.5.3.4	synth with cache (only 1: intros H1; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).	16.8156030178	14844
Coq.Arith.Between.Between.exists_S_le	40	5.0.6.3	synth with cache (only 1: intros H1; only 1: fix le_div2 1; only 1: intros m; only 1: auto with arith).	5.50557804108	4308
Coq.Arith.Between.Between.in_int_intro	40	2.2.2.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros c; only 1: easy).	0.248003005981	104
Coq.Arith.Between.Between.in_int_lt	40	0.1.2.1.2	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	0.57234287262	231
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0.0	synth with cache (only 1: intros p; only 1: induction 1; only 1: auto with arith).	0.0159530639648	3
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0.0.0	synth with cache (only 1: intros *; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: auto with arith).	0.0181231498718	4
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0284061431885	15
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	3.1.4.15.14	synth with cache (only 1: destruct 1; only 1: PeanoNat.Nat.le_elim H; only 1: easy; only 1: destruct H; only 1: easy).	2.18545007706	8177
Coq.Arith.Peano_dec.O_or_S	40	6.26.60	synth with cache (only 1: revert n; only 1: fix odd_spec 1; only 1: easy).	14.2510831356	41486
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40	0.0.0.10.0.0.3.0.15	synth with cache (only 1: revert n m; only 1: intros n; only 1: intros b; only 1: intros m; only 1: intros LT; only 1: revert n m; only 1: intros m; only 1: apply Nat.mul_lt_mono_pos_l; only 1: assumption).	29.7072181702	32231
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.18	synth with cache (only 1: fix even_equiv 1; only 1: auto with arith).	3.38463401794	3232
Coq.Arith.Div2.odd_S2n	40	0.1.0.9.2	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: exists (Nat.div2 n); only 1: destruct _tmp_tactician0 as (p, _tmp_tactician2); only 1: auto with arith).	1.76167821884	1895
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.170931816101	55
Coq.Arith.Div2.div2_double_plus_one	40	0.6.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).	0.0837368965149	24
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40
Coq.Arith.Plus.plus_le_compat_r	40	1.0.1.16	synth with cache (only 1: induction 1; only 1: easy; only 1: right; only 1: easy).	7.75289392471	2716
Coq.Arith.Plus.plus_lt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0101099014282	3
Coq.Arith.Plus.plus_lt_compat_r	40	2.1.9.22	synth with cache (only 1: induction 1; only 1: auto; only 1: right; only 1: easy).	5.85217094421	5873
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	2	synth with cache (only 1: apply Nat.add_le_mono).	0.0363230705261	35
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	3.2.0.8.0.9.0.13	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intros Ha; only 1: intros IH; only 1: Nat.nzsimpl; only 1: auto).	13.9386279583	10933
Coq.Arith.Plus.le_plus_r	40	0.0.6.5.0.2.13	synth with cache (only 1: revert m; only 1: induction n; only 1: intros ?; only 1: trivial; only 1: fix le_div2 1; only 1: intros until m; only 1: auto).	3.38822889328	2498
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	0.1.3.3.0.0.0.5	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros _tmp_tactician0; only 1: intros a'; only 1: intros H1; only 1: easy).	8.7381939888	3586
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	1.1.4.3.5.11	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros IH; only 1: Nat.nzsimpl; only 1: intros _tmp_tactician2; only 1: auto).	36.0337741375	23474
Coq.Arith.Lt.lt_le_S	40	3.0	synth with cache (only 1: intros IH; only 1: Nat.order).	0.0120329856873	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0068690776825	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.3.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0191650390625	6
Coq.Arith.Lt.le_not_lt	40	0.3	synth with cache (only 1: intros LT; only 1: Nat.order).	0.188549995422	57
Coq.Arith.Lt.lt_not_le	40	0.1	synth with cache (only 1: intros LT; only 1: Nat.order).	0.0143101215363	3
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intros H; only 1: Nat.auto').	0.0139088630676	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intros H; only 1: intros H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0184288024902	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.00703692436218	1
Coq.Arith.Lt.lt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0172049999237	11
Coq.Arith.Lt.S_pred	40	0.1.5.2.1	synth with cache (only 1: revert m; only 1: intros Hn; only 1: induction 1; only 1: Morphisms.f_equiv; only 1: Morphisms.f_equiv).	1.27853894234	887
Coq.Arith.Lt.S_pred_pos	40	0.0.0.0.0.38	synth with cache (only 1: Nat.induct ltac:(n); only 1: intros H; only 1: exfalso; only 1: false_hyp H Nat.lt_irrefl; only 1: intros p; only 1: auto).	13.6821448803	40373
Coq.Arith.Lt.lt_pred	40	0.3.0.48	synth with cache (only 1: destruct m; only 1: intros H; only 1: easy; only 1: apply Nat.succ_lt_mono).	5.17688393593	12868
Coq.Arith.Lt.lt_pred_n_n	40	2.1.1.0.3	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).	0.763456106186	535
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.740563869476	213
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0077850818634	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00812101364136	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00888681411743	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00839495658875	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: intros p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n; only 1: intros H; only 1: intros q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	1.08201813698	519
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.2.0.0.18.3.12	synth with cache (only 1: apply neg_false; only 1: split; only 1: apply Nat.neq_0_lt_0; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: inversion 1).	10.8068699837	14072
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.0.1	synth with cache (only 1: destruct n; only 1: left; only 1: easy; only 1: right; only 1: apply Nat.lt_0_succ).	0.240350961685	82
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.1.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.52878904343	584
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.487621068954	149
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.256968975067	81
Coq.Arith.Compare_dec.le_lt_eq_dec	40	0.0.0.1.0.8.0.0.0.2.1.2	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intros H; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: apply Peano.le_S_n; only 1: trivial).	32.0688900948	19407
Coq.Arith.Compare_dec.le_dec	40	2.0.0.2.0.0.0.0.0.2.0.5.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).	30.0881590843	20552
Coq.Arith.Compare_dec.lt_dec	40	1.0.0.4.0.0.0.1.0.0.2.0.0.0.5.1	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	13.4429221153	11832
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.00733804702759	1
Coq.Arith.Compare_dec.ge_dec	40	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).	1.73325991631	1194
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	5	synth with cache (only 1: apply Nat.le_decidable).	0.0285038948059	22
Coq.Arith.Compare_dec.dec_gt	40	1	synth with cache (only 1: apply Nat.lt_decidable).	0.00738406181335	2
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.00870084762573	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.00885105133057	1
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.00983691215515	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.00917911529541	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.00908184051514	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0106470584869	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0103631019592	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	0.5.8	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.617407083511	387
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	6.0.0.0.0.7.4	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply Nat.leb_le).	5.33773112297	3342
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0184051990509	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.0.5.1.9	synth with cache (only 1: destruct m; only 1: rewrite Nat.leb_nle; only 1: Nat.order; only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	1.25062084198	837
Coq.Arith.Compare_dec.leb_compare	40	11.4.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	24.404282093	10894
Coq.Arith.EqNat.eq_nat_refl	40	1.0.13	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.0576920509338	112
Coq.Arith.EqNat.eq_nat_is_eq	40	2.10.13	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	4.57840490341	4762
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0239899158478	7
Coq.Arith.EqNat.eq_nat_eq	40	2.1.0.1.0	synth with cache (only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: apply eq_nat_is_eq).	0.432847976685	133
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	1.2.0.11	synth with cache (only 1: fix gcd_divide 1; only 1: intros a; only 1: intros m1; only 1: auto).	2.70344901085	2246
Coq.Arith.EqNat.beq_nat_refl	40	2.0.0.0.5.63	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: easy; only 1: intros n; only 1: intros IH; only 1: easy).	1.34483718872	3853
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.2.6	synth with cache (only 1: Nat.double_induct n m; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).	4.38257288933	2607
Coq.Arith.EqNat.beq_nat_false	40	1.0.0.2.0.0.0.1.0.1.3.19	synth with cache (only 1: Nat.double_induct n m; only 1: intros m; only 1: destruct m; only 1: intros H; only 1: intros ?; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m; only 1: simpl; only 1: easy; only 1: intuition).	13.2948360443	16787
Coq.Arith.EqNat.beq_nat_eq	40	1.0.0.0.0.0.2.1.0.8.4	synth with cache (only 1: intros until m; only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).	18.6100878716	15901
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.00893092155457	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0143308639526	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.00753808021545	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00798296928406	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.00834989547729	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0101690292358	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0197870731354	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.15	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: auto; only 1: auto).	0.0734658241272	149
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.00890398025513	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0133740901947	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: revert m; only 1: intros until m; only 1: split).	0.089583158493	16
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	2.0	synth with cache (only 1: intros H; only 1: easy).	0.0159900188446	4
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	synth with cache (only 1: easy).	0.0084011554718	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2.2	synth with cache (only 1: simpl; only 1: trivial).	0.11773109436	68
Coq.Arith.PeanoNat.Nat.square_spec	40	11	synth with cache (only 1: reflexivity).	0.0245509147644	33
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	2.0.0.1.29	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: destruct _tmp_tactician2 as [| ]; only 1: discriminate; only 1: discriminate).	12.0838239193	13700
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	4.1	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.167350053787	63
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	3.0	synth with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0129749774933	5
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.2.0.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).	0.0263829231262	8
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0096230506897	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	15	synth with cache (only 1: apply le_0_l).	0.106641054153	134
Coq.Arith.PeanoNat.Nat.div2_double	40	0.2.0.1.4.14	synth with cache (only 1: nzsimpl'; only 1: induction n; only 1: auto; only 1: simpl; only 1: nzsimpl; only 1: auto).	1.35643315315	1293
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.2.0.0.1.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: easy).	1.11493587494	517
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	2.6.0.1.1.0.5	synth with cache (only 1: induct n; only 1: intros ?; only 1: trivial; only 1: intros p; only 1: intros IH; only 1: fix le_div2 1; only 1: trivial).	25.7240450382	14653
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.4.9	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	1.23248791695	868
Coq.Arith.PeanoNat.Nat.double_twice	40	0.1.2.0	synth with cache (only 1: intros n; only 1: simpl; only 1: rewrite add_0_r; only 1: reflexivity).	0.105911016464	51
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: intros m; only 1: easy).	0.0839071273804	38
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	2.3.12.0.0.5	synth with cache (only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	12.1848020554	12198
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	0.3.4.1.5.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: unfold odd; only 1: fix odd_spec 1; only 1: easy).	23.0521459579	12388
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40
Coq.Arith.PeanoNat.Nat.lor_spec	40	0.1.0.3.0.0.4.2.16.11.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: intros m; only 1: rewrite <- not_true_iff_false; only 1: simpl; only 1: revert m; only 1: fix odd_spec 1; only 1: intros until m; only 1: easy; only 1: rewrite max_le_iff; only 1: left; only 1: trivial).	29.6948339939	49726
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.1.4.0.28.2	synth with cache (only 1: apply testbit_bitwise_1; only 1: fix odd_spec 1; only 1: easy; only 1: rewrite max_le_iff; only 1: left; only 1: trivial).	28.0732629299	40900
Coq.Arith.PeanoNat.Nat.div2_spec	40	4	synth with cache (only 1: trivial).	0.0130648612976	5
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0090229511261	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.0807409286499	57
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0.2.5	synth with cache (only 1: revert m; only 1: intros b; only 1: apply Nat.succ_lt_mono).	0.0523450374603	28
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.00735902786255	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0120270252228	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.00896000862122	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.00963091850281	2
Coq.Arith.Gt.le_S_gt	40	2.3	synth with cache (only 1: intros H; only 1: easy).	0.0134370326996	7
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.00894498825073	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.00909805297852	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.0079460144043	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: apply Nat.succ_le_mono; only 1: easy).	0.454044103622	93
Coq.Arith.Gt.gt_0_eq	40	11.0	synth with cache (only 1: apply Nat.lt_eq_cases; only 1: intuition).	0.24219083786	145
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00997495651245	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00942301750183	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.0.2.3.0.1	synth with cache (only 1: intros A; only 1: intros y; only 1: intros n; only 1: intros B; only 1: destruct 1; only 1: reflexivity).	0.116188049316	166
Coq.Logic.JMeq.JMeq_trans	40	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0110969543457	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0239040851593	8
Coq.Logic.JMeq.JMeq_rect	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0242559909821	8
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0264310836792	9
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0271370410919	9
Coq.Logic.JMeq.JMeq_congr	40	0.0.0.0.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0478949546814	29
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0172419548035	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00893616676331	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.00888586044312	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.0.2.0.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).	0.0495090484619	30
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	4.0.3.12	synth with cache (only 1: intros x; only 1: intros H; only 1: destruct H; only 1: assumption).	0.835415840149	1712
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).	0.0301148891449	6
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	14.6	synth with cache (only 1: intros P; only 1: tauto).	0.559113025665	739
Coq.Logic.Classical_Prop.not_imply_elim	40	4.1.5	synth with cache (only 1: intros P; only 1: intros x''; only 1: tauto).	1.3688659668	1465
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0.0.1	synth with cache (only 1: unfold not; only 1: intros A; only 1: intros x; only 1: intros _tmp_tactician0; only 1: auto).	0.0259900093079	7
Coq.Logic.Classical_Prop.imply_to_or	40	1.0.1.3	synth with cache (only 1: unfold not; only 1: intros p; only 1: intros Ext; only 1: tauto).	0.305124044418	79
Coq.Logic.Classical_Prop.imply_to_and	40	2.1.0.4	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intros ?; only 1: tauto).	0.246969938278	123
Coq.Logic.Classical_Prop.or_to_imply	40	1	synth with cache (only 1: tauto).	0.0368309020996	14
Coq.Logic.Classical_Prop.not_and_or	40	0.0.5	synth with cache (only 1: intros A; only 1: intros *; only 1: tauto).	0.135623931885	77
Coq.Logic.Classical_Prop.or_not_and	40	1	synth with cache (only 1: tauto).	0.0359690189362	24
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0216550827026	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0191910266876	1
Coq.Logic.Classical_Prop.imply_and_or	40	0.0	synth with cache (only 1: intros B; only 1: tauto).	0.0222699642181	2
Coq.Logic.Classical_Prop.imply_and_or2	40	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: tauto).	0.0275270938873	3
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	1.17.7	synth with cache (only 1: intros m; only 1: destruct m; only 1: eauto).	3.53270483017	8592
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.10	synth with cache (only 1: red; only 1: eauto).	0.0421869754791	81
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	10.40.10	synth with cache (only 1: intros Hsnd; only 1: subst; only 1: split).	2.94687199593	14373
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.32.4.1.0	synth with cache (only 1: intros y; only 1: intros z; only 1: intros H0; only 1: subst; only 1: reflexivity).	6.38709998131	18759
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	2.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	5.49640893936	6029
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	7.0.5.2	synth with cache (only 1: split; only 1: split; only 1: intros; only 1: firstorder).	29.1441001892	924
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	16	synth with cache (only 1: firstorder  (subst; auto)).	0.78326010704	941
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	15.0.1.2.0.0.0.0.0	synth with cache (only 1: intros D_iota; only 1: intros H; only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct _tmp_tactician0 as [x y]; only 1: auto; only 1: exists x; only 1: eauto).	3.58710598946	8863
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.7.0.0.1.0	synth with cache (only 1: intros D_epsilon; only 1: intros A; only 1: intros P; only 1: intros Inh; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	1.6984629631	2922
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.4.0.1.0.0.1	synth with cache (only 1: intros AC_depfun; only 1: intros A; only 1: intros B; only 1: intros R; only 1: intros H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	2.71318721771	2332
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0.1.1.1.0	synth with cache (only 1: intros IndefDescr; only 1: intros A; only 1: intros B; only 1: intros R; only 1: intros H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intros x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	4.38587999344	3686
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: intros A; only 1: intros B; only 1: intros GenSetoidFunChoice; only 1: intros R; only 1: intros T; only 1: intros Hequiv; only 1: intros Hcompat; only 1: intros Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	14.9471640587	2317
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.10.26.57	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	3.20304989815	24304
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	9.0.0.0.0.0.2	synth with cache (only 1: intros Ext; only 1: intros A; only 1: intros Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).	1.50459694862	2975
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.2.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.0310440063477	23
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	5.4.3.1.0.2.0.0	synth with cache (only 1: intros EM; only 1: intros A; only 1: destruct (EM A); only 1: right; only 1: exact (fun _ => H); only 1: intros y; only 1: left; only 1: easy).	4.37623405457	8696
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	2.0.0.7.0.0.2	synth with cache (only 1: intros c; only 1: intros notall; only 1: intros n; only 1: intros Streicher_K; only 1: apply notall; only 1: exists n; only 1: apply Streicher_K).	4.46740198135	4998
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.0.4.0.0.2	synth with cache (only 1: intros g; only 1: intros notall; only 1: intros n; only 1: apply NNPP; only 1: intros abs; only 1: apply notall; only 1: exists n; only 1: trivial).	1.88438391685	1651
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.0.0.5	synth with cache (only 1: destruct 1; only 1: intros all; only 1: apply H; only 1: trivial).	0.570103168488	472
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).	1.86886501312	1761
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0182950496674	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	9.4.4.7.2.14	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (l, F); only 1: induction l; only 1: left; only 1: auto; only 1: firstorder).	14.2642800808	21451
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0139470100403	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0185220241547	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.019476890564	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0200128555298	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0205571651459	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	6.9.0.0.8.20	synth with cache (only 1: simpl; only 1: unfold f_equal; only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	2.38427400589	6624
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	synth with cache (only 1: reflexivity).	0.0121479034424	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.0110051631927	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality_dep; only 1: intros x; only 1: apply H).	0.0219662189484	8
Coq.Logic.HLevels.false_hprop	40	0.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p).	0.00928997993469	3
Coq.Logic.HLevels.true_hprop	40	4.3.2.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: auto).	0.123725891113	291
Coq.Logic.HLevels.not_hprop	40	1.0.1.0.2.0	synth with cache (only 1: intros p; only 1: intros H; only 1: intros q; only 1: apply functional_extensionality; only 1: intros x; only 1: contradiction).	0.0169801712036	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.1.1.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros x; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: reflexivity).	0.0188591480255	13
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: intros H2; only 1: auto).	0.0109570026398	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	11.1088161469	27841
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	10.53	synth with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	24.0998241901	80721
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.6	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0397582054138	44
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.4.0.0.12.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.677582025528	1261
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0124020576477	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0205020904541	13
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.10.0.0.13.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.74974703789	3387
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intros ?; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	14.5019509792	27550
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.0.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0359151363373	19
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.405440092087	369
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	27.1.6.17.4	synth with cache (only 1: intros x''; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	21.9562559128	62539
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	10.0.0.0	synth with cache (only 1: intros eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.124515771866	294
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.5.0.2.2.8	synth with cache (only 1: intros; only 1: red; only 1: intros UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	2.08971619606	4646
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.12.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.225276947021	366
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	2.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0265560150146	15
Coq.Logic.EqdepFacts.f_eq_dep	40	1.5.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0144789218903	10
Coq.Logic.EqdepFacts.f_eq_dep	40	2	synth with cache (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0128059387207	3
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.033910036087	31
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	2	synth with cache (only 1: trivial).	0.00667691230774	3
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0.0.0	synth with cache (only 1: intros *; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).	0.0153799057007	4
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	1	synth with cache (only 1: reflexivity).	0.00726199150085	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	11.2.0.1.1.0	synth with cache (only 1: intros Ext; only 1: intros A; only 1: intros Q; only 1: intros P; only 1: intros x; only 1: auto).	21.1586289406	18498
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.103627204895	77
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	1.0.0.1.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).	0.0815269947052	49
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	10.1.2.0.0.1.1.1	synth with cache (only 1: intros A; only 1: unfold not; only 1: intros H1; only 1: intros H; only 1: elim H1; only 1: intros y; only 1: assumption; only 1: contradiction).	9.36135292053	28929
Coq.Logic.Decidable.dec_True	40	1.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00798082351685	11
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00683093070984	2
Coq.Logic.Decidable.dec_or	40	1.2.6.0.1	synth with cache (only 1: intros y; only 1: intros z; only 1: red; only 1: unfold decidable; only 1: tauto).	3.1446249485	5161
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0184330940247	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0111639499664	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0137650966644	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.01859998703	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00987887382507	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.00846195220947	1
Coq.Logic.Decidable.not_and	40	0.0.1	synth with cache (only 1: intros A; only 1: unfold decidable; only 1: tauto).	0.018012046814	4
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0154478549957	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0119361877441	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0560438632965	2
Coq.Logic.Decidable.not_true_iff	40	8	synth with cache (only 1: tauto).	0.0209789276123	29
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00612211227417	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0112910270691	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0125269889832	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0145349502563	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0145020484924	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.014582157135	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0399558544159	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0159239768982	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.0102999210358	1
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.00933599472046	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0174360275269	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0180099010468	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40	2.5.1.25.8.6	synth with cache (only 1: intros H; only 1: eapply Forall_inv; only 1: apply <- Forall_forall; only 1: intros ?; only 1: left; only 1: eassumption).	20.3972620964	69386
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	7.1	synth with cache (only 1: red; only 1: firstorder).	0.0169610977173	10
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0449810028076	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.0.0.1.1.21	synth with cache (only 1: inversion H; only 1: auto; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.688571929932	542
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0241670608521	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.00815296173096	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.00900101661682	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).	0.0372099876404	3
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1	synth with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.11948299408	23
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0085301399231	2
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0123310089111	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: ok; only 1: ok; only 1: ok).	0.0851650238037	8
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2	synth with cache (only 1: easy).	0.012256860733	3
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.1.0.3.48	synth with cache (only 1: intros n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).	2.66577100754	3591
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.0182180404663	2
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.0129940509796	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	32.10	synth with cache (only 1: destruct 1; only 1: easy).	19.2184591293	23198
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	0.14.0.17	synth with cache (only 1: revert l1 l2; only 1: intros l1; only 1: fix odd_spec 1; only 1: easy).	6.40918397903	6692
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.1.0.0.4	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.50382995605	785
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	10.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: ok).	19.3720810413	9881
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	1.1.3.3.1.8.4.0.4.15.2	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| _tmp_tactician0 ll lx lr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: destruct r as [| _tmp_tactician0 rl rx rr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: auto_tc; only 1: ok; only 1: ok).	24.5578961372	48783
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.3.1.3.0.2.9	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: auto).	2.77419900894	2772
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0348098278046	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	0.0.109	synth with cache (only 1: exists 1; only 1: unfold singleton; only 1: auto).	13.1958289146	72362
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.2.4.1.0	synth with cache (only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.02938985825	399
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).	2.34603500366	607
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.2.2.1.10.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction s; only 1: intuition_in; only 1: descolor; only 1: invrb; only 1: intuition_in).	7.30814504623	6424
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.1.12.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).	4.01112413406	1829
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.0168681144714	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0	synth with cache (only 1: easy).	0.0133628845215	1
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.4.0.2.21.1.5	synth with cache (only 1: intros acc; only 1: simpl; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	20.3211300373	16406
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	79	synth with cache (only 1: ok).	0.707187175751	4540
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.11.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.369719982147	370
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.101797103882	20
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: rewrite fold_spec; only 1: intros; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.788501024246	531
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.507901906967	265
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.4.3.0.0.0.0.0	synth with cache (only 1: intros B1; only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite rev_elements_rev; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.31084084511	2521
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0229620933533	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	1.0.0.7.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.775146961212	844
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.3.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: f_equiv; only 1: trivial).	0.161911010742	53
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: easy; only 1: easy).	0.0215530395508	4
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: easy).	0.00897288322449	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2	synth with cache (only 1: easy).	0.00969386100769	3
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: easy).	0.0466020107269	16
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	3.0	synth with cache (only 1: intros n; only 1: easy).	0.103939056396	5
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	4.9.1.8	synth with cache (only 1: intros Ha; only 1: fix even_spec 1; only 1: intros; only 1: easy).	20.8449480534	12481
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	1.1.0.1.0.0.0.0.3.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial).	1.7174270153	1578
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	2.5.4	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	4.25166201591	1565
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0339169502258	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	1.8.16	synth with cache (only 1: intros x; only 1: fix even_spec 1; only 1: auto).	7.15535783768	8430
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	5.12	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.47723197937	688
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0182328224182	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0192601680756	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0176680088043	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0195090770721	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.13	synth with cache (only 1: fix gcd_divide 1; only 1: intros b; only 1: auto).	0.816344022751	623
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0230350494385	5
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40	4.1.2.6.1.1	synth with cache (only 1: intros n; only 1: intros x; only 1: unfold In; only 1: fix even_spec 1; only 1: intros Eq; only 1: auto).	8.51543998718	7429
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	5.7.2.0.0	synth with cache (only 1: unfold In; only 1: intros s; only 1: intros x; only 1: fix even_spec 1; only 1: intuition congruence).	37.8662230968	17862
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	0.8.1.2.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: intros s; only 1: intros s'; only 1: intros x; only 1: revert x s s'; only 1: intros s'; only 1: intros a; only 1: fix even_spec 1; only 1: intuition congruence).	19.0007250309	11328
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	13.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Eq; only 1: intros s'; only 1: fix even_spec 1; only 1: auto).	4.89460897446	3178
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	0.2.3.6	synth with cache (only 1: intros x; only 1: intros a; only 1: fix even_spec 1; only 1: trivial).	7.98580598831	4029
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	4.1.9.8	synth with cache (only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: fix even_spec 1; only 1: firstorder).	9.61378598213	6552
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.6	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.565790891647	245
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	1.2.15.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: intros H; only 1: trivial).	1.05869698524	1517
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0212879180908	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0199978351593	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0221018791199	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0188820362091	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0200181007385	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0184659957886	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0996730327606	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0320348739624	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.15.0	synth with cache (only 1: intros P; only 1: intros H3; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	1.21685194969	1106
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	1.9.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).	0.148841142654	137
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	19	synth with cache (only 1: intuition).	0.443796873093	516
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	10.3	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: intuition).	1.25951814651	705
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	8	synth with cache (only 1: intuition).	0.0256428718567	13
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	11	synth with cache (only 1: intuition).	0.246313095093	123
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	2.1.1.1	synth with cache (only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.0421569347382	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	2.1.1.1	synth with cache (only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.0337748527527	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0274999141693	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply iff_sym; only 1: apply iff_sym; only 1: intuition).	0.0535819530487	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.03498005867	10
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	8.2.2.5	synth with cache (only 1: red; only 1: intros A; only 1: intros B; only 1: firstorder).	11.5088279247	6039
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.0177638530731	2
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.3.34.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intros ?; only 1: intuition).	3.10588598251	4507
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	1.0.0.1.0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: rewrite Hx  at 1; only 1: intros Hs; only 1: intros a; only 1: auto with relations).	5.78589606285	496
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2.5	synth with cache (only 1: red; only 1: firstorder).	0.227718830109	145
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite Hx; only 1: rewrite Hs; only 1: eauto with set).	16.6364920139	2943
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros x; only 1: intros x2; only 1: intros Hx; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite Hx; only 1: intuition).	12.4018099308	2283
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.1.0.0.1.0.1.1.0	synth with cache (only 1: intros s1; only 1: intros x'; only 1: intros Eyy'; only 1: intros s; only 1: intuition; only 1: intros a; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: intuition).	7.94252204895	2905
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0.0.1.1.0.0.2	synth with cache (only 1: intros x; only 1: intros s1'; only 1: intros Hs1; only 1: intros ?; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite diff_spec; only 1: intuition).	5.19534087181	1840
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros f; only 1: intros Hf; only 1: intros s; only 1: intros s'; only 1: intros Hs; only 1: intros a; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: intuition; only 1: auto; only 1: auto).	1.45552206039	280
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.168446063995	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1.1	synth with cache (only 1: intros P; only 1: intuition).	0.0297570228577	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.2.1	synth with cache (only 1: intros Hs; only 1: rewrite Hs; only 1: fsetdec).	0.062469959259	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	3.4.0.1	synth with cache (only 1: intros; only 1: intros s2'; only 1: rewrite H; only 1: auto).	0.480336904526	106
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	1.2	synth with cache (only 1: intros a; only 1: auto).	0.0253791809082	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	4.0.1.0	synth with cache (only 1: intros Hs1; only 1: intros Hs; only 1: intros a; only 1: intuition).	0.0453050136566	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.0	synth with cache (only 1: intros Hs; only 1: fsetdec).	0.0595140457153	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0511939525604	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1.1.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intuition; only 1: fsetdec).	0.265596151352	51
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0645780563354	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.1	synth with cache (only 1: intros H1; only 1: fsetdec).	0.120110034943	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0519418716431	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0483269691467	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.9	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.422474145889	50
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.064385175705	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0538630485535	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	1.4.1.0	synth with cache (only 1: intros; only 1: red; only 1: intros m; only 1: fsetdec).	0.128446102142	15
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.175983905792	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.128756999969	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.137515068054	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.141824007034	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.148859977722	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0979897975922	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.306072950363	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0927259922028	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: intuition fsetdec).	0.0836379528046	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.113612890244	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.111394166946	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.170375108719	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.10117816925	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.179419994354	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.6	synth with cache (only 1: intros H0; only 1: fsetdec).	0.330541849136	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.294985055923	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0422999858856	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0417900085449	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0632989406586	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0655760765076	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.065299987793	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0798370838165	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0815279483795	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.5	synth with cache (only 1: intuition; only 1: fsetdec).	0.177846908569	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0918030738831	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0772547721863	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.102400064468	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.102827072144	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.15016579628	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.201073884964	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.212745904922	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.187100887299	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.148370027542	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0583779811859	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0565528869629	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.049201965332	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0437369346619	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0621168613434	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0736799240112	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0797080993652	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0479671955109	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.120142936707	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.116908073425	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.177041053772	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.151256084442	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.0.4.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).	0.173332929611	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.1781270504	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.243932008743	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.405999183655	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0.10	synth with cache (only 1: intros _tmp_tactician0; only 1: expAdd; only 1: fsetdec).	1.34567689896	109
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.294415950775	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.0.1.0.1.0.1.0.3	synth with cache (only 1: intros q2; only 1: intros b; only 1: intros; only 1: apply fold_rec; only 1: intros s'; only 1: intros Hr; only 1: auto with *; only 1: intros; only 1: auto with arith).	3.21923303604	1128
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	3.3.1.0.2.0.5	synth with cache (only 1: intros n; only 1: intros f; only 1: intros; only 1: apply fold_rec; only 1: intuition; only 1: intros x'; only 1: fsetdec).	16.3817548752	5434
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	1.1.0.0.1.3.0.1.3	synth with cache (only 1: intros b; only 1: intros a; only 1: intros Pempty; only 1: intros Ha; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pstep; only 1: fsetdec).	23.4671161175	11148
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0446381568909	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.4.0.0.0.2	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: easy; only 1: exists e; only 1: auto with relations).	0.939119100571	532
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0.0	synth with cache (only 1: intros a; only 1: intros; only 1: auto with set).	0.0514140129089	3
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.3.2	synth with cache (only 1: intros s; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.23671412468	39
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.154840946198	43
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0398700237274	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0428750514984	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	12	synth with cache (only 1: intuition_in).	0.11189198494	51
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	2.1.1.1.42	synth with cache (only 1: right; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	8.82252597809	6544
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	1.9	synth with cache (only 1: fix odd_spec 1; only 1: auto).	3.89297699928	923
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0293710231781	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	3.3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl; only 1: rewrite <- Hr; only 1: destruct (partition f l); only 1: destruct (partition f r); only 1: destruct (f x); only 1: split; only 1: eauto using filter_weak_spec).	6.47035813332	2646
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.20325088501	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	3.3.0.4	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	9.33383488655	1485
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0160291194916	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.3.0.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.74086999893	134
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.134329080582	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0794658660889	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.137872934341	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1.1.0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.350853919983	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.0.0.0.2	synth with cache (only 1: apply iff_sym; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0437259674072	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.24566411972	54
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.026223897934	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.10	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto).	0.126116037369	78
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0228559970856	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).	0.0126600265503	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	2.1.0	synth with cache (only 1: intros; only 1: apply equal_spec; only 1: intuition).	0.0380880832672	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	3	synth with cache (only 1: auto with set).	0.29797410965	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: intros a; only 1: auto with set relations).	0.0204119682312	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.012885093689	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0535018444061	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1.1.0.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.531283140182	46
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0333750247955	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.010678768158	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0185899734497	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0126619338989	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0117380619049	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0119128227234	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: auto with set relations).	0.0104830265045	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0102789402008	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.066577911377	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00952482223511	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0676329135895	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0106918811798	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.012836933136	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0123660564423	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0123689174652	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0109219551086	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0101861953735	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.011344909668	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.011626958847	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0123071670532	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.012512922287	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0334708690643	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.00999402999878	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0799520015717	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0102789402008	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0101499557495	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0100178718567	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	3.1.1.7.4.1.3.1.4	synth with cache (only 1: intros Pstep; only 1: intros s'; only 1: intros n; only 1: rewrite <- not_true_iff_false; only 1: rewrite andb_true_iff; only 1: split; only 1: intros H; only 1: intuition; only 1: intuition).	32.2394781113	14592
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0229399204254	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.3.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	5.39423894882	1689
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.0101320743561	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0539488792419	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.53716301918	166
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.7.0.7	synth with cache (only 1: intros b; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set).	13.3432660103	2081
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.1.1.1.2.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	5.79535007477	2797
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0374789237976	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	14	synth with cache (only 1: solve_proper).	0.654876947403	223
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0168330669403	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.3.0	synth with cache (only 1: unfold Add; only 1: red; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a); only 1: apply Comp; only 1: auto; only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	32.4892132282	9885
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	11.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	2.76592516899	1638
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).	4.71874594688	2118
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.03635597229	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: intros A; only 1: tauto).	0.845504999161	3
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0	synth with cache (only 1: tauto).	0.455252885818	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0111808776855	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.4	synth with cache (only 1: intros q1; only 1: fsetdec).	0.325891971588	78
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0.1.0	synth with cache (only 1: intros b; only 1: intros R1; only 1: fsetdec).	0.184364080429	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	synth with cache (only 1: fsetdec).	0.0144040584564	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.2	synth with cache (only 1: intros a; only 1: fsetdec).	0.0897068977356	24
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4.0.2.1.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros s1'; only 1: intros; only 1: fsetdec).	0.329180002213	174
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0.0	synth with cache (only 1: intros ?; only 1: fsetdec).	0.0635349750519	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.16	synth with cache (only 1: intros y; only 1: fsetdec).	2.32636284828	484
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.0788149833679	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.0430860519409	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.1.0	synth with cache (only 1: red; only 1: intros b; only 1: fsetdec).	0.16277217865	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	6.6	synth with cache (only 1: intros n; only 1: fsetdec).	1.50899600983	436
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.0.0.3.9.0	synth with cache (only 1: intros x; only 1: intros RS; only 1: intros Hn; only 1: intros Hx; only 1: intros s1'; only 1: rewrite singleton_spec; only 1: intuition).	2.95842218399	1648
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0.1	synth with cache (only 1: intros P; only 1: fsetdec).	0.0600798130035	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.0679700374603	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0457739830017	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	5.1.1	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: trivial).	0.190230846405	34
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	10.2	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.250743150711	142
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.2.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intuition_in).	0.0728089809418	6
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	5.0	synth with cache (only 1: intros H; only 1: easy).	0.0303900241852	7
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.5	synth with cache (only 1: intros z; only 1: easy).	0.0426211357117	13
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0204570293427	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0600128173828	3
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0574550628662	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.10.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	1.95769691467	1128
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	10.1.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros; only 1: eauto).	1.99163413048	825
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.0279140472412	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0205380916595	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	1.0.3.1.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros y; only 1: intros x'; only 1: reduce; only 1: subst; only 1: order).	28.9253540039	11005
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40
Coq.MSets.MSetGenTree.Props.empty_spec	40	3.2	synth with cache (only 1: intros x; only 1: auto).	0.0504639148712	17
Coq.MSets.MSetGenTree.Props.empty_ok	40	1.60	synth with cache (only 1: hnf; only 1: trivial).	0.415045976639	1972
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	7.2	synth with cache (only 1: fix even_spec 1; only 1: easy).	1.25500011444	295
Coq.MSets.MSetGenTree.Props.mem_spec	40	6.1.1.3	synth with cache (only 1: intros until s; only 1: intros a; only 1: fix odd_spec 1; only 1: auto).	2.44756603241	1132
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intros H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.357552051544	99
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.2.0.11	synth with cache (only 1: intros x; only 1: inversion 1; only 1: apply min_elt_spec1; only 1: auto).	0.181699037552	164
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	0.0.31	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	11.426887989	14659
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	0.0.7	synth with cache (only 1: fix odd_spec 1; only 1: unfold Subset; only 1: intuition).	0.325541973114	97
Coq.MSets.MSetGenTree.Props.eq_equiv	40	1	synth with cache (only 1: firstorder).	0.0261900424957	2
Coq.MSets.MSetGenTree.Props.eq_Leq	40	1.4.0	synth with cache (only 1: intros n; only 1: fix odd_spec 1; only 1: tauto).	0.176934957504	56
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	4.3.5.0.3.4	synth with cache (only 1: intros; only 1: simpl; only 1: unfold elements; only 1: rewrite elements_node; only 1: rewrite app_assoc_reverse; only 1: auto).	11.860049963	6932
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	1.7.8	synth with cache (only 1: fix odd_spec 1; only 1: intros H; only 1: auto).	5.5736489296	3460
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	93	synth with cache (only 1: firstorder).	3.17195796967	4590
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	0.31.1.2	synth with cache (only 1: intros n; only 1: induction n; only 1: fix le_div2 1; only 1: easy).	24.0040299892	34382
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	0.4.1.0.9.40	synth with cache (only 1: constructor; only 1: easy; only 1: intros B; only 1: intros n; only 1: easy; only 1: firstorder).	2.77269601822	2642
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.2.0.3.0.0.0	synth with cache (only 1: intros ?; only 1: intros x'; only 1: intros Hxx'; only 1: intros Hyy'; only 1: intros y'; only 1: rewrite Hxx'; only 1: easy).	8.62002396584	2067
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	10.2	synth with cache (only 1: intros m; only 1: firstorder).	1.30568289757	728
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	1.1.0.1.6.4.3	synth with cache (only 1: intros; only 1: intros s2; only 1: rewrite <- H0; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite H; only 1: easy).	24.2126569748	13456
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.1	synth with cache (only 1: intros n; only 1: intuition).	0.0154638290405	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	8.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).	0.0434720516205	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	19	synth with cache (only 1: firstorder).	36.5293421745	11537
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	9.12.0.8.3.46	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: red; only 1: apply -> Forall_forall; only 1: auto; only 1: apply (empty_spec H); only 1: easy).	4.61298894882	6430
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	11.6.0	synth with cache (only 1: unfold Same_set; only 1: intros m; only 1: firstorder  discriminate).	15.9467601776	10254
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.0.5.7.1.19.8	synth with cache (only 1: intros _tmp_tactician2; only 1: split; only 1: auto with *; only 1: intros f; only 1: compute; only 1: rewrite singleton_spec; only 1: eauto using elements_spec2w, NoDupA_rev with *).	23.8585340977	18976
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0	synth with cache (only 1: solve_proper).	0.036288022995	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	1.1.1.13.10	synth with cache (only 1: intros b; only 1: intros Hb; only 1: fix odd_spec 1; only 1: intros H; only 1: auto).	29.519297123	20156
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	5.10	synth with cache (only 1: fix even_spec 1; only 1: auto).	2.05489182472	760
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.21447491646	755
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.4.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.0205478668213	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.2.0.6	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.877038002014	493
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0150220394135	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.5.0	synth with cache (only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: inv).	0.0219650268555	9
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.2	synth with cache (only 1: red; only 1: auto).	0.0146770477295	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0349819660187	12
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2	synth with cache (only 1: constructors).	0.0103220939636	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.1.0.7.2.1	synth with cache (only 1: intros; only 1: destruct s; only 1: intros ?; only 1: intros ?; only 1: inv; only 1: inversion H).	2.96364712715	1776
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0185618400574	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	26.4660048485	5120
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	8.1.2	synth with cache (only 1: intros a; only 1: fix odd_spec 1; only 1: eauto).	0.717355966568	547
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	5	synth with cache (only 1: easy).	0.00936508178711	6
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	5.5.2.0.0	synth with cache (only 1: intros a; only 1: intros x; only 1: fix even_spec 1; only 1: intros H; only 1: auto).	5.60077309608	2491
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	0.3	synth with cache (only 1: fix gcd_greatest 1; only 1: intuition).	0.29948091507	90
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	11.059720993	1539
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	6	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.027074098587	18
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.1.9.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	3.816229105	914
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0664200782776	5
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	2.2.0.5	synth with cache (only 1: intros B; only 1: destruct 1; only 1: fix odd_spec 1; only 1: easy).	1.93517518044	543
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	3.6.1	synth with cache (only 1: intros _tmp_tactician0; only 1: fix odd_spec 1; only 1: intuition).	5.05521988869	1985
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0105330944061	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.2.0.10.13	synth with cache (only 1: intros EQ; only 1: rewrite InA_alt; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (p, _tmp_tactician2); only 1: intuition).	0.650588989258	611
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	1.3.4.1	synth with cache (only 1: fix even_spec 1; only 1: intros Hs; only 1: rewrite even_spec; only 1: easy).	0.382350921631	227
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	3.2.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0188999176025	9
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.1.6	synth with cache (only 1: intros x'; only 1: rewrite <- isok_iff; only 1: intuition).	0.140697002411	34
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	2.0.0	synth with cache (only 1: intros s; only 1: rewrite <- isok_iff; only 1: auto).	0.0180439949036	5
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.0.0.0.0.12	synth with cache (only 1: intros l; only 1: induction l as [| a l IH]; only 1: intros Eq; only 1: intros x; only 1: intros H; only 1: inv; only 1: easy).	2.21751999855	1738
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.1.2.0	synth with cache (only 1: intros s; only 1: intros x; only 1: intros; only 1: auto).	0.0205268859863	8
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: intros Hs'; only 1: auto; only 1: intros Hs; only 1: auto).	0.0289239883423	7
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: congruence; only 1: solve_proper).	0.0993299484253	16
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	6	synth with cache (only 1: easy).	0.0429439544678	11
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0128061771393	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.0.0.1.0.1.1.0.1.1.1.1.6	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros x; only 1: intros y; only 1: intros x''; only 1: intros Hx'; only 1: intros H; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	20.2397489548	18756
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.369756937027	232
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	1.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.794337034225	635
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.0.2.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: right with y; only 1: auto; only 1: left).	0.06760597229	72
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.0.0.0.15	synth with cache (only 1: intros y; only 1: intros y0; only 1: right with y; only 1: auto; only 1: left).	0.480690002441	825
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.017333984375	10
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.0990030765533	58
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	13.0948560238	10339
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.0.0.0.1	synth with cache (only 1: intros x; only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.369043111801	192
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	9.02711606026	5271
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.1.0.0.0.0.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: intros x; only 1: intros y; only 1: intros z; only 1: destruct 2; only 1: assumption; only 1: red; only 1: auto).	7.7549071312	6562
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.00859093666077	1
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	0.0285007953644	7
Coq.Sets.Uniset.defs.seq_refl	40	1.1.1	synth with cache (only 1: intros s2; only 1: intros E; only 1: auto).	0.0151841640472	6
Coq.Sets.Uniset.defs.seq_trans	40	1.0.0.1.13.0.2.1	synth with cache (only 1: intros until x; only 1: intros s1; only 1: intros s2; only 1: intros H1; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	28.5101070404	29690
Coq.Sets.Uniset.defs.seq_sym	40	0.0.0.0.0.1	synth with cache (only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).	0.0264530181885	7
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0216009616852	4
Coq.Sets.Uniset.defs.union_empty_right	40	0.0.0.2.2.1.0.1.2	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: intros a; only 1: simpl; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	9.69195699692	8136
Coq.Sets.Uniset.defs.union_comm	40
Coq.Sets.Uniset.defs.union_ass	40	1.0.0.1.3.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	2.58739304543	1332
Coq.Sets.Uniset.defs.seq_left	40	0.1.2.3.1.0.1.0	synth with cache (only 1: unfold seq; only 1: intros until y; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	7.4581580162	3964
Coq.Sets.Uniset.defs.seq_right	40	0.0.3.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: intros until x; only 1: destruct x; only 1: intros; only 1: elim H; only 1: auto).	0.864970207214	327
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.2.1.1.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	26.3401107788	13894
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.3.0.1	synth with cache (only 1: intuition; only 1: intros _tmp_tactician0; only 1: compute; only 1: apply Equivalence_Reflexive).	0.0398778915405	8
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.1.3.0	synth with cache (only 1: unfold meq; only 1: intros until y; only 1: intros; only 1: auto).	0.0356760025024	8
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0306577682495	4
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0348179340363	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40	7.4.1.0.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: intuition).	9.04124593735	5777
Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.1.0.0.0.0.0.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: unfold meq; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).	1.1739358902	371
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.0.0.0.0.2.0.0.2	synth with cache (only 1: unfold munion; only 1: unfold meq; only 1: intros until x; only 1: unfold multiplicity; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: auto).	4.32995915413	1395
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	2.45003700256	852
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).	1.31747198105	469
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	0.1.1.2.0.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	31.1555659771	15408
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	8	synth with cache (only 1: easy).	0.0175809860229	9
Coq.Sets.Integers.Integers_sect.le_antisym	40	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).	0.0351800918579	6
Coq.Sets.Integers.Integers_sect.le_trans	40	4.0.0	synth with cache (only 1: red; only 1: intros x; only 1: PeanoNat.Nat.order).	0.212779998779	68
Coq.Sets.Integers.Integers_sect.le_Order	40	1.0.0.0.0.0.0.2.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	1.30000114441	602
Coq.Sets.Integers.Integers_sect.triv_nat	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0213341712952	2
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40	5.0.7.0.0.0.0.12	synth with cache (only 1: constructor; only 1: simpl; only 1: intros x; only 1: intros n; only 1: intros m; only 1: destruct (le_gt_dec n m); only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).	19.4962739944	12114
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.9.1.2	synth with cache (only 1: intros; only 1: intros p; only 1: red; only 1: auto).	0.695613861084	956
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.0.1.0.0.0.0	synth with cache (only 1: intros U; only 1: intros R; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros H'0; only 1: auto  10 with sets).	0.041393995285	17
Coq.Sets.Relations_1_facts.contains_is_preorder	40	9.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).	0.0550439357758	97
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	2.0.2.0.0.2.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros x''; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x y]; only 1: intros Hx''; only 1: auto  10 with sets).	2.80640506744	2597
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0169360637665	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	2.0.2.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: intros; only 1: auto with sets).	0.0334489345551	22
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.0.0.1	synth with cache (only 1: intros U; only 1: intros R'; only 1: intros H'0; only 1: auto  10 with sets).	0.0111508369446	8
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.00559616088867	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0433230400085	17
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0200610160828	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	20.3399088383	9958
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.2.2.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: unfold In in *; only 1: firstorder; only 1: intuition).	0.632807970047	296
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	1.0.0.0.10.1	synth with cache (only 1: intros H'5; only 1: intros Y; only 1: intros x; only 1: destruct 1; only 1: exists x; only 1: auto with sets).	19.2585129738	13334
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	4.2.3	synth with cache (only 1: intros H'; only 1: intros x; only 1: destruct 1).	0.955893039703	1375
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.0.4.0.2.72.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: red; only 1: intros y; only 1: intros H'; only 1: trivial).	5.05262684822	63069
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.12	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.122725009918	95
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.00610184669495	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.00945711135864	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	1.2.1.0.0.0.0.6.12.0	synth with cache (only 1: intros X; only 1: split; only 1: split; only 1: red; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).	29.9626328945	30548
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros X; only 1: intros H'; only 1: intros H'0; only 1: red; only 1: intros x; only 1: auto with sets).	0.0306849479675	12
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.00735306739807	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0070948600769	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intros X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).	0.0237410068512	7
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: red; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.0226259231567	7
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	4.0.1.3	synth with cache (only 1: intros H'0; only 1: intros C; only 1: intros Y; only 1: firstorder).	2.65034508705	1012
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	2.0.0.0.0.3	synth with cache (only 1: intros x; only 1: intros Y; only 1: intros y; only 1: intros H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).	1.35292506218	549
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	0.12.3.2	synth with cache (only 1: intros NI; only 1: intros x; only 1: compute; only 1: tauto).	12.5934181213	9896
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.0.0.0.2	synth with cache (only 1: intros x; only 1: red; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.244849920273	117
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros X; only 1: intros x; only 1: intros H'; only 1: unfold Subtract; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets).	0.125021934509	10
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.1.1.2.0.1.0.0.0	synth with cache (only 1: intros A; only 1: intros B; only 1: intros x; only 1: intros H'2; only 1: red; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	16.6291310787	5449
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	23.0	synth with cache (only 1: intros H'0; only 1: auto  6 with sets).	1.44415807724	2015
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0179510116577	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.8	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0547320842743	33
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0166609287262	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0178520679474	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0190198421478	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	1.0.0	synth with cache (only 1: intros b; only 1: intros H'; only 1: auto  7 with sets).	0.042484998703	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.0.1.0.0.0.0.1.0.0.0.2	synth with cache (only 1: intros z; only 1: intros y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	23.6315479279	16571
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	4.0382130146	2647
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	7.826597929	4597
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.0.0.0.0.0.0.3	synth with cache (only 1: unfold Add at 1; only 1: intros x; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: intros t; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).	3.13132691383	2044
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	5.2.0.0.0.0	synth with cache (only 1: intros a; only 1: intros X; only 1: intros b; only 1: intros H'0; only 1: unfold Add; only 1: auto with sets).	6.19871783257	2829
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.1.12	synth with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	14.2334308624	8221
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	6.0.0.0	synth with cache (only 1: intros a; only 1: intros A; only 1: intros b; only 1: auto  7 with sets).	0.0436398983002	14
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0176999568939	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0215909481049	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.0.1.4.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	2.75527381897	1762
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0490000247955	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	3.39924287796	1560
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.0.1.0.0.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).	1.62161803246	2532
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	19.0.2	synth with cache (only 1: intros C; only 1: intros h2; only 1: destruct h2).	0.773993968964	1961
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.0107209682465	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.017217874527	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.14.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros ?; only 1: intros x; only 1: exists x; only 1: auto with sets).	2.17272210121	6148
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intros H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	1.82449913025	1599
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.3.1	synth with cache (only 1: intros B; only 1: destruct 1; only 1: auto with sets).	0.0505390167236	43
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	2.3.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.024288892746	10
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.1.1	synth with cache (only 1: intros X; only 1: intros H'0; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0365760326385	15
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).	0.0298340320587	6
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.0.0.0.0.1	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.378591060638	180
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).	0.0228369235992	4
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros H'; only 1: auto with sets).	0.0216472148895	5
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.0.0.6.0.1	synth with cache (only 1: intros ?; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).	0.418851137161	510
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	6.0.3.0.2.1	synth with cache (only 1: intros X; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: trivial with sets; only 1: auto with sets).	6.0261259079	6084
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.4.1.5.36.0	synth with cache (only 1: intros x; only 1: apply NNPP; only 1: intros H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	6.87024593353	19940
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.1.3.4	synth with cache (only 1: intros n; only 1: inversion 1; only 1: easy; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	1.74320793152	812
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.0290460586548	11