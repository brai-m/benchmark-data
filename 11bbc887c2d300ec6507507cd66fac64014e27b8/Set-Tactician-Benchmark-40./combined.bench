coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.207641	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	0.297700	35	10	7.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	0.786237	381	76	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.467899	174	49	0.3.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	40	0.044652	7	4	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	40	0.028142	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.019939	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	40	0.038572	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	40	0.085165	10	9	1	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.112464	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.012876	7940	855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.019981	8550	4099
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.029930	28557	3557
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.030496	28263	4698
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.020373	10373	3659
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.027008	15862	4729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.026346	13496	4472
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.033426	38325	4510
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.037073	45600	3397
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.498647	181	33	10.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	40	40.042696	14626	2170
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.022666	24546	3443
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.017321	2	2	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	40	40.027289	32285	3568
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	7.504074	3868	358	5.13.6.32	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.011948	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	40	40.158618	4911	1719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.016779	8833	4117
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.447928	427	176	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.399539	22780	2787
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.021234	14851	3292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	40	40.032188	26373	4186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	40	40.028305	31423	4041
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.026527	20905	3729
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.032235	34338	3358
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	40.017450	10330	3346
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.024161	16764	3664
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.025881	27260	2867
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	40	40.018473	7286	873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	40	40.119986	23149	3188
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.026475	15601	3559
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.018060	12837	3194
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.019832	9401	3384
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	40	40.024778	6337	3874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.022235	15655	3089
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.040173	51666	3771
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.020568	18173	2077
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	40.023822	11265	2907
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.027205	24903	2904
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40	40.023679	10582	999
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.026592	20008	4032
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.027650	21293	4112
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.100103	7691	2694
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.020765	9833	3487
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	40	40.024934	19521	3314
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.022250	17986	3615
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.035150	33448	4710
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.050439	8570	3653
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.029310	19648	2128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.019427	14901	3010
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.027922	18687	4716
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40	40.016531	8359	1648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	40	40.021374	7675	4196
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.035498	33671	3467
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.041198	38933	3693
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.026105	24853	3724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	40	40.020458	12981	3620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	40	40.021587	8560	3520
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	40.030544	21540	3287
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.022572	21150	3103
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	40	40.026859	13444	2675
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.024662	16706	2890
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.028390	11970	3566
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.026505	21561	1368
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.161346	16388	3548
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.025870	16889	3862
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.023449	15223	4080
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.022666	13162	3468
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.015162	4	1	3	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.029056	27325	3301
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.023668	12965	3715
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.023851	16030	3687
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.031290	24581	3312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.028694	22070	3694
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.026661	23416	3626
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.026263	19945	4214
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	40	21.016029	8580	1548	0.4.0.1.18.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	40	40.013628	5595	1592
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.026221	14824	3312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.086558	10	8	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.030389	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.024584	15630	3896
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.027824	14740	3775
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.018165	7682	3136
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	40	40.026730	15751	4113
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.022660	16082	2868
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.021076	14425	3193
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.019047	8622	3064
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.133599	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.015872	5408	3436
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.026744	15768	3291
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.027802	17001	4086
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.020918	14495	3529
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.314844	25754	3542
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.030574	32509	4717
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.026309	17495	3235
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.023357	12230	3832
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.021674	23263	2950
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.018811	11728	3551
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	40	40.028618	25917	3108
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.043796	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.023714	11865	3980
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.024179	16884	2762
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.053383	76368	4751
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.028630	31531	2351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.024615	17951	3921
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.092953	21803	2335
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	40	40.195883	39239	4949
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.025828	17432	3976
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	40	40.029795	29578	3833
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.032009	10879	3428
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.019868	13384	3278
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	40.018399	13785	1410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.020445	8573	3799
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.024255	17359	2840
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.023094	15104	4197
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	36.458992	5329	2029	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.025370	17169	3789
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	40	40.026987	16979	4029
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.025426	15712	4630
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.028014	20043	3571
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	21.884188	5323	2132	0.0.0.0.0.0.0.0.1.0.0.10.0	synth with cache (only 1: unfold Rgt; only 1: intro; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	40	40.021938	18133	2834
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.028984	23580	3410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	17.861434	9812	2147	0.0.0.0.0.0.0.22.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.020165	8048	4148
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	40	40.020888	14720	2549
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.029868	20507	4629
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.054165	24817	4845
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.027970	12008	4076
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.022038	12366	3443
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.024374	15259	3814
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.023249	16925	2929
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.035813	33409	4639
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	40	40.028128	14810	5547
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	40	0.130865	31	11	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.017194	7010	3459
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.019911	13018	3709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.018046	11141	2964
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	40	40.032928	35453	1867
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.100010	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.028324	19571	3862
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.041539	6	4	0.0.2.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.043464	54545	4050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.037738	24146	5486
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.024054	18536	3761
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.042065	9	4	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	40	40.024840	17027	3213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	40	40.028363	19402	2686
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.016446	7292	2851
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	40	40.026687	29540	3858
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.022967	14902	4024
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.024420	10008	4815
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.017106	12690	932
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.016954	10264	3137
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	0.100211	14	5	1.0.3	synth with cache (only 1: intro f; only 1: intros f1 f2 X X0 x; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	40.024497	13388	4708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.028424	14930	4086
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.027415	16016	4259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.049651	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.018487	14515	2814
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	40	40.027997	21447	3139
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	40	40.024487	13759	3410
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.149211	21796	3536
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	40	40.027644	24650	3573
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.022214	11506	4141
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.023534	10250	3910
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	40	40.016565	13995	1220
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.043885	4	2	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	40	0.023014	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.017616	7617	2906
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.028915	13489	3857
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.381602	41	23	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.027988	16737	4329
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.033911	28208	3041
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.026908	22192	3669
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	40	40.025446	15485	3916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.024645	16691	2513
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.020271	10914	2899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.033739	14444	4668
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	40.025548	18593	3032
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.027007	14505	3656
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	40	40.014920	11339	1044
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.014282	8811	2129
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.028935	18147	3151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.033860	21922	4140
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.027817	20359	3421
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	40	40.030400	18630	4305
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	40	40.020448	12917	2961
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.023159	10751	3363
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.027861	19568	2832
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.027866	16912	5189
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.026372	11525	4072
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.039263	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.014294	5939	2603
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.030592	22343	3767
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.032757	22616	3852
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.022768	16738	3278
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	40	40.031839	27822	3332
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.037430	47266	4322
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.071081	19497	2843
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.021278	11352	2560
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.021638	12685	3353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.026938	14726	3560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.028087	22612	3905
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.026588	18767	3871
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.034807	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	2.413439	1945	335	0.1.15	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.090349	21	10	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	39.036344	3623	1889	0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: split; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.336649	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	40	40.028670	24124	3199
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.039016	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.030385	19180	3481
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.023143	14668	3164
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	40	40.023246	14607	3297
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.031302	24391	4371
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.029975	17044	4650
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.027600	16042	3705
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.036210	26967	2891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.058919	15995	2493
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.029789	20047	4644
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.014817	6153	2496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.028701	18642	4482
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.028845	21214	4050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	11.222829	2940	1093	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.033350	26999	3355
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.023762	14934	3737
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	40	40.025571	17890	3316
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.033670	26924	4912
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.030134	24197	3074
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.035273	37370	2836
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.075874	12027	3118
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.024565	9600	4821
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	40	4.995709	2799	354	21.3	synth with cache (only 1: intro; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	40	0.027538	4	2	2.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.036644	19326	3234
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.031404	25861	4058
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.029191	22904	3365
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.032672	25235	2489
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.026374	11849	3419
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.022210	11013	3282
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	6.551893	1906	352	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.034865	30790	4681
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.039056	31749	5270
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.027835	21238	3557
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.023450	9120	4829
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.029927	19547	3642
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.027469	20142	3407
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	40	40.027514	29384	3734
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.020520	11717	3369
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.027739	14886	3841
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.022831	15258	3273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.030927	26635	3596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.025006	13189	4519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.030056	23077	4743
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.030705	19926	5159
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	40	3.761147	3051	349	1.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.028330	18224	4295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.022953	9938	5129
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	40	40.021476	12208	2884
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.025380	10446	4885
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.029704	18574	5470
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.033686	25345	5156
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.026725	24060	3420
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.020196	11685	3266
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	40.024592	16237	3921
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.030381	29187	3333
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.034607	34116	5861
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.033692	30236	4700
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.029248	13227	4622
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	40	40.025650	15546	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.036011	29878	5263
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	40	40.035421	30867	4662
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.030024	16348	5929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.034434	33390	2684
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.037532	51358	3568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.028465	16445	2930
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	40	13.365425	5076	1007	0.0.0.2.12.10	synth with cache (only 1: apply Rlt_dichotomy_converse; only 1: unfold Rgt; only 1: right; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.029681	18837	4736
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.040602	40230	4998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.042231	38331	4706
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.031518	18032	4217
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.029253	18029	3135
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.035221	30986	4327
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.107293	17392	5259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.029478	21416	3505
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.020030	9732	3132
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.023995	12807	3474
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.030537	17241	4683
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.030741	23046	3974
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.038375	26176	5412
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.033538	24967	5094
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.026923	11103	4794
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	40	40.024255	15679	2486
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.034491	32894	5099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.031078	14636	4962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.031017	18556	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.029250	19291	2734
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.029542	17227	3809
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.038409	17259	4074
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.023839	10552	3264
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.026673	25276	2453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.031759	45072	3701
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.028853	11758	5188
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.019857	7105	2705
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	40	40.041761	41851	4104
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.034765	24011	4830
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.028859	14962	2921
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	40	40.042060	36465	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.026036	23193	3043
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.031716	18840	4229
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.022678	6791	3958
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.022948	13887	3708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.051455	23494	3579
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.039150	36517	4234
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	40	40.020122	10487	3133
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.032937	27454	4725
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.032735	45301	4344
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.034998	30584	5066
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.032329	26791	2978
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.024218	10770	3425
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.250239	33771	3009
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.030292	15912	4649
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.023848	15001	3910
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.024112	14858	3502
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.067722	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.050860	64811	6323
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.031471	16079	4897
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	40	40.634522	26015	2178
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	40	40.030272	21920	5492
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.037378	24437	5678
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.031778	30078	4496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.024138	13052	3740
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	40	40.024404	12986	3861
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.050539	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.023924	15338	2868
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.031635	18587	5364
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.070871	17858	3490
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.036142	29837	3678
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.051618	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.024338	12685	4742
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.835299	176	68	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	2.769379	1422	296	1.3.1.8	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.030140	23800	4082
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	40	40.024900	16669	2387
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	2.407226	1350	257	0.7.0.0.6	synth with cache (only 1: intro LS'; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.025256	10148	5513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.046139	44323	6429
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.063327	15251	4244
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.028564	15237	3637
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.020649	8458	3766
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.028775	16438	4633
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.031068	22638	3421
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.176661	17697	2727
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.026310	19956	3806
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.032437	24823	5204
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.035274	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.024754	14886	3445
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.032986	29698	2703
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	40	40.028082	24262	5283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.026056	17102	4302
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.031429	19753	4633
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.030784	19843	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.194560	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.403163	51	36	0.0.0.0.0.1.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.269891	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.019455	8650	3339
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.036261	29820	4943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.029159	18632	3713
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.017737	6726	3300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.034957	26098	4768
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.030083	21596	3498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.025542	13082	3900
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.041479	19159	3170
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.032140	28037	5598
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.026190	19204	4496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.027872	15077	4023
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	40.020709	10841	4009
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.030433	22908	5153
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.029513	20423	4992
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.023268	11422	4781
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.026661	11633	4780
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.033257	21850	5389
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.030904	12967	5108
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	2.542934	940	255	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.024343	15729	3395
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.034696	27287	3759
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.030363	19956	5268
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.031937	25939	4580
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	30.487562	10481	2977	1.15.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.046893	53422	3970
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.028081	22981	4389
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.023988	17361	3543
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.024522	17383	2869
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.030345	18224	4654
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.034707	25328	5132
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.345389	69	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.161646	15	13	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.037728	32171	4645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.020829	12751	2781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.039981	44416	4005
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.035366	35082	4508
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.026615	21405	4472
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	40	40.022163	11898	3768
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.027247	14326	4293
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.030916	20111	4445
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.031474	25974	3171
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.024921	13798	3369
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.647415	744	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	40	40.028167	17404	4644
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.030592	16224	4440
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.135949	27227	2958
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.078156	9375	2537
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.073795	10993	2126
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.028631	12846	4965
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.031698	23088	5448
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.019755	9755	3174
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.033358	17687	3252
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.033654	23437	3065
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.021799	15735	3410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	40.034469	28188	4748
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.029254	13101	4656
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.031382	23822	5059
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.035894	28826	3616
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.083352	18783	2811
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.027371	21846	3434
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.033699	18756	5340
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	4.911330	4880	745	3.0.1.10.18	synth with cache (only 1: red; only 1: intros x y H'; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.029541	20651	4030
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.032309	18902	3780
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.018813	9897	2559
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.029625	15301	3467
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.023778	16705	3207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.048485	65880	4693
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	2.960250	768	231	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.032494	22323	4945
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.077205	42764	3797
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.026783	15875	2808
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.029154	19013	3762
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	40	40.026946	11118	4892
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.030992	23839	4401
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.024621	15900	3319
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.019934	6186	3379
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.059884	67883	6380
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	40	0.016192	5	3	1.1.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.026041	12064	2929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.030411	22067	4061
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.029310	18677	3574
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.086286	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.051897	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.030387	14994	5215
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.029100	15407	4857
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.018488	8904	2814
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.033655	20253	4124
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	40	40.030296	18578	5115
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.029541	24211	3523
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	40	40.049025	48718	6131
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	0.134689	62	17	0.7.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.031766	16531	4863
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.024516	14431	2859
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	40.824686	38578	2116
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.032958	15563	4477
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	0.834884	135	73	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.031519	24158	4330
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.024805	12421	2872
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.027068	24223	3039
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	40	40.019036	9757	1901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	40	40.034014	14746	2614
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.047861	24785	3963
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	40	21.238686	14241	1539	0.0.0.5.0.3.10.15	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.025059	23402	2391
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.072147	33319	5596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	0.019292	6	3	0.0.3	synth with cache (only 1: intros; only 1: intros [y [H H0]]; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.040830	36445	4952
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.066417	19595	2505
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.031150	12762	5411
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.026280	16197	3150
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.052182	26300	3203
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.032300	19108	4975
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.043890	27089	5407
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.032028	14379	6044
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.025451	14026	3050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.028735	15227	3535
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	40	40.095112	48081	4457
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	40	40.053988	63763	5680
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	40.029012	15960	3827
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.025195	23218	2589
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.050426	10219	3416
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.027285	18913	2903
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.025812	20499	4001
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.030611	19598	3924
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.035391	30757	3967
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.035992	26618	4718
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.025230	14405	3404
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.025377	12014	3877
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	40	40.044040	21733	6671
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	40	40.027514	13196	4793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.021870	12340	3755
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.026807	17679	3350
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.030085	15627	5431
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.021410	9385	3240
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.028317	16936	4417
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.069455	22107	3296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	40	40.029300	24772	1522
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	40	0.062853	6	6	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.023539	7832	4074
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.030459	14495	4046
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.026983	13433	4133
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.042835	36773	5955
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.045814	40681	5265
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.034062	25690	4391
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.021561	10435	4005
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.026753	13075	5012
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.023512	12634	2994
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.030839	13385	4610
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.027111	22048	2420
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.024861	19458	3014
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.739981	185	67	0.0.2.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.024407	7661	3983
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.026789	13072	3737
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.378167	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	40	40.028163	9845	3133
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.048395	25978	6217
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	2.704799	2231	369	3.10.0.2.0	synth with cache (only 1: unfold included; only 1: intros f X x; only 1: intros; only 1: elim H0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.038751	28455	5157
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	40	1.029981	625	117	3.9.4	synth with cache (only 1: intros; only 1: intros P; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.031935	22271	3751
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.020290	8788	3495
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.039485	20288	5450
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.019902	10541	2389
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.311411	20385	2516
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	40.031094	22619	3052
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.020272	14185	2440
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	40	40.036663	18367	4581
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.024148	11380	3570
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.031427	18496	3020
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.027797	9078	4104
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	40	40.053853	55794	6052
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.147131	85	23	3.1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: intro; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.040207	40791	4339
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.044122	14404	4238
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.032155	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	40	40.023346	15745	2974
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.025043	12499	3160
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	40	40.034965	24305	4041
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.027881	17371	3615
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	40	3.553944	648	271	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	40	40.034046	23397	4900
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.029399	20787	3385
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	40	19.211075	8362	1594	0.3.0.2.2.4.0.0.2.5.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.095139	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.178958	921	99	14.7	synth with cache (only 1: intros a0; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	40	40.027796	11321	4700
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	40	40.047866	53725	7370
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.038609	25429	5042
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.019781	9117	3277
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.031646	22289	3835
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40	42.337820	36534	810
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.024200	13824	2875
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.035599	18760	5151
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.023389	7564	4374
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	40	40.030338	21703	4502
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	40	40.026102	11916	3134
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	40.043179	39970	4463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	40	40.046497	46350	6889
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.025305	9062	4376
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.039082	30724	3914
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.020091	9086	3087
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.034852	27311	4785
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.201012	27792	2355
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.022197	11697	2967
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.040533	26001	6567
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.029227	16908	4440
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.032992	24540	4670
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.633155	110	66	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.090623	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	40	40.030844	14284	4169
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	40	40.031567	29678	3888
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	40	40.027857	10470	4947
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.020475	14096	3062
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.026470	14665	3519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.024969	14804	2868
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.044357	34098	5557
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	40	40.025174	7533	4956
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.033206	27228	2209
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.028829	17423	2117
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.030119	9667	3001
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.429897	74	30	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.120166	10	10	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	40	40.042620	39843	5485
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.030189	26637	3102
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	40	40.029996	17188	2490
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.019538	6542	3177
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.031568	18899	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.021659	10740	2960
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.033645	17763	5486
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.025988	20252	2666
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.037686	26201	4732
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.039071	35182	4828
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.028346	20966	5489
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.027337	13960	4645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.111647	11	11	0.1.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	11.290212	8984	1459	1.2.2.21.0	synth with cache (only 1: intros n1 H'; only 1: unfold Rgt; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	40	0.457023	155	42	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	40	40.040355	34866	5382
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	40	40.028206	13942	3338
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.024699	16872	3128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	40	5.641185	3277	388	23.6	synth with cache (only 1: intros n; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.019168	2	2	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.101096	60	11	0.9	synth with cache (only 1: intros a Ha; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	40	40.046870	38209	6306
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	40	40.021309	8999	2740
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.042545	34235	5536
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.029049	23845	3885
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.028589	19491	4570
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	40	40.026476	10687	2605
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.527587	355	180	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.030031	18157	4474
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.033994	23196	4669
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	40	40.026203	13315	3159
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	40	40.036225	25490	5190
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.022899	16240	3170
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	40	40.030278	17639	4216
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.041469	38915	5232
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.018820	7701	2466
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.031779	17988	4837
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.032435	33234	4109
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	40	40.030299	26035	3521
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	40.033074	17719	5819
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.064782	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.064584	5	4	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	40	40.038061	33360	6281
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.028088	8164	5570
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.110888	728	109	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.028576	18758	3977
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.036963	25886	5313
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.020209	12375	2994
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.021142	13444	3273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.034996	23365	5869
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.021371	13050	2967
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.037785	35870	5702
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	40	0.009243	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.249238	22455	3310
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	40	40.034534	18796	5833
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.015096	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.053360	49783	5841
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	40	40.033713	30382	5051
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	40	40.030895	24576	3488
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.023646	15479	4295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.040782	24823	6060
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.033153	22224	5464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.013878	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.035699	13895	4672
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.052299	58531	6319
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	40	40.036059	28473	5688
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.039311	51537	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.024080	13609	3666
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.032807	20335	5517
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	40	3.633218	1916	360	1.2.14.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	33.520216	46585	5754	21.1.0.10.9.0	synth with cache (only 1: unfold open_set; only 1: intros HCutL HCutR Hfix env; only 1: unfold neighbourhood, disc; only 1: intros; only 1: unfold Rminus; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	40	40.029395	14718	4731
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.022663	18115	3009
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.036049	20152	5923
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.033245	19153	4216
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.023313	14686	2599
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.029993	30517	2094
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	9.608338	1919	700	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.033726	26893	5426
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.037215	34953	4357
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	40	40.028874	18994	3693
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	40	40.088189	7045	1595
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	40	40.028627	33562	3090
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	40	40.105456	47265	4789
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	40	40.029308	16349	5184
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.025577	20409	2851
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	40	40.032233	26257	2746
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.038014	22879	5008
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.066658	79242	7137
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.017429	6277	2523
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.031738	23355	4137
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.041457	32266	6040
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	40	40.027539	18639	4111
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	40	40.027436	21437	3423
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.013521	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	40	3.495197	2518	478	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	40	40.033008	11933	1690
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	40	40.031029	14132	5684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	11.853092	5505	1371	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.032346	26249	5229
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.023130	17620	3067
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.029403	15776	3466
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.042857	32183	4936
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	18.239945	10577	1495	34.2.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: rewrite <- Rmult_1_r; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.076348	45240	4604
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	40	35.692761	9798	2530	0.7.4.0.9.0.5	synth with cache (only 1: reg; only 1: intros x; only 1: apply (H x); only 1: intros x; only 1: apply Rgt_not_eq; only 1: pose proof (pow2_ge_0 x) as t; only 1: solve [ apply Rplus_lt_le_0_compat; intuition ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.028432	25582	4200
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.037802	38785	3583
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.031551	36765	4098
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.026833	35839	2688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.053864	84451	4769
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	40	25.393816	37658	3377	14.30	synth with cache (only 1: intros H l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	40	40.036398	10534	4715
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.026485	18482	3033
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.032457	21011	5083
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.033389	15160	5776
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.044566	49750	4222
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.021200	14284	2749
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.043079	49407	4398
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	40	40.025756	29805	3445
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.038112	30833	6452
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	40	40.036636	41108	4827
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	40	9.967919	11061	1487	24.1.5	synth with cache (only 1: intros x n; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.036905	23682	6450
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	40	40.029817	19734	4315
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	10.033833	3851	1344	4.0.0.0.0.1.5	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	40	29.371849	14711	4363	11.5.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.031912	22377	5822
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.015154	6203	2667
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.028137	19008	3832
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.025313	15584	3261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.051718	80500	4406
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	40	40.037430	34196	3076
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	40	40.026704	16104	3951
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	40	40.047280	49427	5575
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	40	40.102353	32420	3862
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	40	8.450814	5508	1005	23.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.040125	25739	4964
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.036601	34244	4037
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	40	40.035793	19768	5536
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	40	40.059221	19868	4751
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.027925	19624	3498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.020125	11834	3019
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	40	23.178357	9327	2626	0.0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.034654	34582	3009
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.025507	29877	3180
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.028181	28204	3484
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	40	40.035577	24162	4788
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	40	40.064304	49482	5990
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.041204	39668	3846
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.032574	12673	5078
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.034480	32182	3898
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	40	0.089166	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	40	40.046412	16928	3986
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.025651	14984	3516
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.024925	18845	2641
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.037434	39085	5821
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	40	40.029166	11795	5034
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.046151	63160	5223
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.138256	36413	3458
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	40	40.035403	17106	6174
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	40	40.035320	28905	6536
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.054615	54793	4388
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	40	40.046291	38403	5802
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	40	8.865984	3146	1190	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	40	40.028222	24187	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.023545	11349	3492
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.021279	10241	2516
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	40	40.047366	58999	3064
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.027302	25823	2813
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.038941	43714	5100
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	40	40.036428	45060	3471
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.508748	6320	353	0.35.9	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	40	40.033572	14115	6236
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.026899	21234	1754
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	40	40.037274	11664	4353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	40	40.032751	20387	5516
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	40	40.031045	32659	3935
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.046384	25758	3130
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.012168	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.022103	12743	2942
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.020825	7714	3080
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	40	40.035347	34805	3371
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	40	40.038899	50525	5378
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	40	40.033278	23875	4602
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.037456	29168	4863
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	40	40.040006	37064	5287
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.031732	28237	4031
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	40	40.037741	20809	2993
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.035321	14942	4388
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	40	40.030353	19533	4402
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	40	3.078594	1715	263	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.075706	29599	3659
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.014341	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.084029	5	3	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.112560	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.026192	13642	4048
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.025789	15592	3347
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.030410	10978	4768
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	40	40.103122	25526	5911
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.039056	26805	5183
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.031690	25533	3186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.049391	38165	4464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	40	40.032902	16108	5394
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.023351	13525	3187
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	40.035069	23039	4260
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.038419	55268	5562
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	40	4.645234	3148	740	10.0.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.103158	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.031984	28209	5416
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	40	0.037415	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	40	0.033952	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	40	0.045690	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	40	0.033892	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.026041	10402	4200
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.030662	23138	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.028203	22385	6355
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.038393	25187	4248
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.042516	52521	4729
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	40	1.783472	548	166	2.2.0.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: inversion H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.029440	25265	5176
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	40	40.033514	18639	5230
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.030393	16525	4871
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.037813	41918	5497
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.041175	26686	5383
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.049323	9319	1561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.024044	10229	2414
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.027276	12869	4256
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.029314	19421	4569
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.049051	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.036507	39645	5718
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.363726	60722	4508
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	40	40.042569	52123	5370
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.026321	14627	5574
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.029764	18832	4294
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.042663	50015	3808
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	40	40.038982	37374	5123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.023508	16618	3190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.027527	13441	2100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	7.674160	2585	454	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.038732	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.031353	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.035533	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.043669	43194	4162
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.024879	9459	3796
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.027372	20255	3561
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	40	40.034192	25315	6807
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.038062	30040	4211
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	40	40.054752	68199	4511
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.035865	38557	5087
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.031284	17071	4211
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	40	40.037234	72380	455
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.032310	16256	4470
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	40	40.039764	23305	5575
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.041057	11700	1994
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.035063	34647	3794
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.029788	16633	3974
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.022120	12738	2639
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	40	40.043465	31087	5228
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	40	40.040894	26782	3134
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.923364	44384	4111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.034585	35667	4061
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.033776	25930	3873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.326189	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.060077	13	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.182679	61187	1378
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.041643	57396	5805
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	10.328998	12108	1594	5.6.2.6.8.0	synth with cache (only 1: unfold included; only 1: intros A A_wd A0 AS; only 1: intros; only 1: intros del H9; only 1: unfold intersection_domain; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.039764	30620	6420
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.025166	15488	2334
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.033470	26352	3730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.025289	11801	3970
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	8.861445	3319	735	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.098186	15731	2992
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	40	40.071334	56400	3720
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.035288	25287	4161
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.044458	28325	4778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.035766	28235	4565
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.034428	15770	5900
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	40	40.034402	28012	3470
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	40	40.043084	40104	5456
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.033894	24761	5023
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.042099	9	6	1.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	1.553334	459	117	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.043987	47453	3957
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	0.010709	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.026023	7033	3923
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.027138	13101	2139
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	40	40.019380	12893	2015
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	40	40.146715	21923	3782
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.008278	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.040137	36990	3793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.045228	39257	5259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.030085	20284	4494
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.043850	33920	2611
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	40	40.040202	31812	4774
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.034712	29132	4403
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.039566	26562	5569
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	40	3.301417	2276	262	3.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.049716	11	4	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	40	7.138236	3409	708	3.5.3.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: intro A; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	40	40.042168	43375	5816
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	40	40.030259	16245	2948
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.926539	173	48	9.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	40	1.547155	183	89	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	17.362034	6853	1997	3.0.15.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.042483	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.152077	486	52	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.015358	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.041206	29512	5116
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	40	40.054741	58957	5464
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.034689	17839	5357
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	40	40.045499	39270	4845
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.050346	21355	3986
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	40	3.023193	2051	335	3.5.9.1	synth with cache (only 1: intro; only 1: intro; only 1: intros m H1; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.031768	35695	2910
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.042638	28602	4838
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	40	0.286051	51	32	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.040778	27167	4649
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.041720	42393	5296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	40	40.026232	12119	2438
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.029375	9059	1965
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.077843	31	11	1.3	synth with cache (only 1: intro; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	40	8.471370	1174	610	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.508061	42874	3330
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.030538	12640	4169
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	40	40.039461	32943	4743
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.029792	25625	4129
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.039102	35475	3756
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.026647	7990	1681
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.037970	22503	4551
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	40	23.213796	8869	1528	0.2.23.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.252423	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.070318	454	91	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.074288	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.044917	44004	5250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.036754	35579	5652
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.010687	3	1	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	4.805376	3065	811	3.0.0.0.0.4.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	40	40.039719	38037	3767
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.028694	17714	3818
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.035253	25930	2444
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.032879	21502	4390
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	40	40.039306	24425	4982
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.035357	41300	3712
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.037598	36245	4546
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.047232	42514	6191
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	5.898542	10906	925	0.0.22.0.0.0.14.16.56	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	3.368837	1032	229	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	1.156389	395	111	4.0.0.5	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.189104	19	9	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.039828	18496	6768
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.032715	26994	3411
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.036653	24971	6484
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	40	40.028798	30755	2722
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	4.531656	5252	825	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.022254	7862	3438
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.378499	35331	4222
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.076099	38007	4858
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.036223	21877	4442
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.038720	21543	5549
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.052798	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.075560	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.033242	17364	4943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.032556	30635	4434
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.039327	17082	6114
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.032935	25005	2673
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	5.507546	4311	325	0.1.17.15	synth with cache (only 1: intros n; only 1: pattern n; only 1: unfold Rle; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	40	0.016524	3	3	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.035653	36825	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	12.338060	4542	1736	3.1.4.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.039163	31558	7818
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.021810	12265	3355
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.031135	17820	4271
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.684614	35261	3342
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.035975	38761	3185
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.037464	18219	5450
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.033256	22922	4751
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.041556	32141	5471
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	40	40.034595	32867	3331
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.694670	60617	3525
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.020753	4	4	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.032878	17056	4578
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.041222	18252	6775
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.037781	20912	6587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.740514	136	75	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.076950	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.031134	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.023079	8192	3064
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	40	10.024975	7683	1198	0.0.0.10.4.5.3	synth with cache (only 1: intros r H; only 1: intros LT; only 1: intro H1; only 1: destruct H1 as [p pmaj]; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.039863	33719	5854
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.031938	32635	3286
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	40	2.747691	2330	490	14.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.064668	17193	3730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.034128	20586	4892
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	40	40.046203	47576	5836
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	40	40.034576	31482	3689
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.038263	29324	3404
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.039231	21205	6682
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.043375	21474	6180
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.065012	10774	2435
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.042399	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.023881	11138	3483
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.032222	14329	4171
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	40.053324	31078	5966
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.037216	31569	4377
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.038330	36631	3764
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	40	40.162274	26528	4518
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.029879	12908	4981
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.057857	66733	3402
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.382052	50	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.071984	43994	3455
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.027691	17867	3881
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.036823	15917	6399
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.036391	24079	1826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.055372	6206	2486
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.030904	11204	4892
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	40	40.138460	51866	6478
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	40	40.037220	24575	6196
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.043054	15539	4309
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.048571	65326	3085
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.044373	52255	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.024602	15670	3483
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.093335	40243	3161
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.038177	15606	4526
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.032752	29518	3083
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.078928	19998	4218
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.026441	10663	3221
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.983965	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.043217	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.037802	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	40.031423	21752	3446
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	40	40.041702	36184	4435
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	40	0.147987	31	14	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.375828	151	48	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	40	40.032416	23920	3325
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	40	2.759336	2232	283	3.3.17	synth with cache (only 1: intros x y; only 1: constructor 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.028382	10874	4602
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	3.097297	1615	326	10.2.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	40	0.071150	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	40	0.010416	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006338	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	40	19.392570	30819	2936	17.4.28	synth with cache (only 1: intros LT; only 1: unfold frac_part; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.068307	125156	3967
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.028977	8014	891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.027161	17434	3828
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	40	40.032548	19809	4646
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.034217	18600	5134
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.026905	11901	3798
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.042331	31068	7126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.037584	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.047114	56329	4353
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	40	40.038832	31940	4009
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.045653	41625	4723
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	40	13.976007	10039	1578	0.0.0.24.0.1.0	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: unfold Rabs; only 1: compute; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.043359	47695	4199
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.019810	8860	2209
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.038672	37551	4642
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.034267	22835	4755
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	40	41.079455	20993	1782
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	40	40.027519	15838	3079
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	23.830222	19768	2778	1.0.9.0.9.5.0.9	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.043936	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.020599	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.197884	771	283	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.047011	6	4	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	1.468642	587	194	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.074163	13	9	0.2.1.0	synth with cache (only 1: intros r1 r2 H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.048526	11465	2737
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.028594	15417	2750
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	40	40.032637	24636	4499
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	40	40.035850	19668	3415
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	40	1.339025	642	137	1.8.0.3	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.039620	22436	3737
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.037197	13841	6015
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.046637	12933	1944
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.054582	82974	3038
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.046885	20956	3474
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.058793	12706	1862
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	40	40.339269	22357	2335
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.079193	19230	2776
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.031852	9	4	1.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.028092	16023	3262
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.033346	38848	3435
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	40	40.051499	35687	5408
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	40	40.046720	25786	3111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.026769	11084	3945
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.036822	17508	6116
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.028736	11120	5758
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.023313	20015	3073
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	40	40.037692	20617	5532
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.050112	29208	3161
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	40	40.027408	14783	3429
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.067486	39285	5455
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.026016	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.027850	4	4	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.251425	43	18	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.247277	56	24	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.139681	27	13	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	40	0.021262	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	40	0.027320	14	5	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	40	0.024233	4	3	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.014897	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.033212	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.037255	24252	10759
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.023188	6953	3874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.047189	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.040455	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.033735	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.028267	10881	4881
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	40	40.033256	29406	4079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.034111	12368	5117
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.046537	25885	6073
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.024140	11295	2781
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.072537	49419	4190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.036056	21067	5070
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.130926	19092	1839
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	40	40.037274	42391	3204
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.046442	36252	4684
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	40	0.030850	4	3	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.112440	26	9	1.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.027610	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.022924	8136	3591
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.072265	18307	4618
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.209212	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.041878	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.028365	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.029182	8974	4782
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	4.180962	2316	471	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	40	40.039313	29503	4667
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.034829	21487	4462
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	0.900383	390	76	1.0.0.0.13	synth with cache (only 1: induction l; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.043328	20878	7219
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.028209	10548	2629
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.032402	16027	4536
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.366761	37282	3987
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	40	40.022825	14546	2491
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40	40.142323	43094	4928
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.023957	7060	3355
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	40	40.037856	24290	4087
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	40.036542	30162	4728
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.049861	47619	6112
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.034606	24665	4614
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	40	40.041224	30451	4686
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.036381	17434	5070
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	9.332061	2933	926	0.0.1.0.0.0.0.1.10	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: auto with real; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.045357	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.026342	18034	3485
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	35.545426	15614	4177	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.021673	23315	2569
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40	40.491741	46398	3679
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.022624	5281	2923
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	40	40.040254	28108	3421
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	40	40.035326	25027	3908
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.040909	36985	4684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.033615	20332	4449
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	40	40.045477	40030	3937
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	40	0.035246	15	4	0.1	synth with cache (only 1: intros n m H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.035446	19358	4828
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	10.387290	10656	1393	9.2.1.6.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.042187	25139	7827
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.033693	13648	6123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.039379	18901	6098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.125274	32531	4482
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	40	20.984223	11188	1845	0.4.7.1.21	synth with cache (only 1: intros n H; only 1: case n; only 1: intuition; only 1: intros c Hc IH; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	1.084369	242	96	3.1.1.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	26.646613	14207	3678	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40	40.941318	33598	2684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.021478	4927	3123
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.031359	17060	4774
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.047862	56146	3491
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.070165	33957	4127
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	40	40.040633	21230	4274
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.196278	43	23	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.040460	16094	8119
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.027653	10209	4235
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.038757	17885	6445
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.141297	365	105	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.055374	64013	3849
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	40	40.043984	38526	4382
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.040411	23569	4482
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40	40.048064	50255	3691
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.023119	6139	2735
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.116002	27109	3099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.034019	18953	5056
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.051504	33442	4447
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.032954	13783	4944
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.027228	10617	4292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.030929	43251	1708
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	41.137343	24999	1746
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.049148	59607	4344
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	40	40.038284	25512	4917
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	40	24.451082	73534	1529	179	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.045526	30070	5163
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	40.064973	96955	3655
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.025170	6756	3185
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.049967	40540	4613
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.030890	15000	1934
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	40	2.686830	756	260	0.0.1.0.1.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	40	0.115372	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.147097	49159	1573
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.180013	5	3	1.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.213685	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.729307	95	41	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.090424	5	3	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.108972	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.427603	61	34	1.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.062639	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.083338	27	15	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.275114	33	14	0.2.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.111169	35	20	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.343518	939	154	4.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	40.045261	38295	3816
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.009168	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.133178	43	11	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40	40.756788	31540	3555
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.048922	64220	2874
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	40	40.036593	30039	4693
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.045775	28098	7658
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.068861	45521	3000
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	40	1.569111	531	182	0.0.4.4	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.052472	58473	3914
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.028374	13131	3614
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.039105	20040	5212
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.101521	29791	3402
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	40.033716	20104	3702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.042062	27325	4530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.077763	30	7	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.032885	14045	2456
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40	40.027955	9076	3164
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.036565	43401	3441
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	40	40.040682	38216	4387
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.174218	19410	926
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.023948	14722	2220
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	41.529639	75946	1872
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.024805	8563	3517
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	12.049002	12902	1552	0.0.18.0.5.10.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: elim H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.051890	66458	4288
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.106639	6255	2140
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	40	40.028392	10194	1739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	39.985438	16836	4535
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.038581	28518	4102
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40	40.182030	34875	3096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.051244	59397	3549
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	40	8.792808	686	145	0.3.0.0.6	synth with cache (only 1: intros a0; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	40	0.414092	24	13	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.254457	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.103256	13445	3481
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.042602	22671	5524
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.023448	6439	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40	40.746816	36837	3130
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	40	40.031032	21312	3559
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.039097	31823	4581
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.123143	13396	6293
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.030608	20300	3221
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40	40.048645	65347	355
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.039744	16827	2340
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.025467	13927	2352
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.042699	9	4	1.3.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.038258	16	5	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.046845	53642	3762
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	25.637386	14735	3055	0.0.0.0.3.0.1.11.4	synth with cache (only 1: intro; only 1: intros E0; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros H; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 H); only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.024674	7445	3985
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40	40.851607	32896	3530
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.254755	38776	3805
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	23.388308	15639	1605	0.0.13.0.8.14	synth with cache (only 1: intros a b H; only 1: destruct H; only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.088019	36799	5028
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.470641	173	51	4.0.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.042439	40979	2724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.031494	18856	3688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	40	40.027863	26610	1988
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.046375	49174	3232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.049537	20981	3800
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.066937	86354	3079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.079570	19633	3098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.027399	14244	2878
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	41.691877	23041	2878
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.092389	34159	3972
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.037755	28992	4132
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40	42.142681	29025	2146
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40	40.291288	55852	3711
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.014316	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.583319	10	2	3	synth with cache (only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.032356	20990	3396
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.052574	27915	1499
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.040923	18935	5790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.065633	15645	1139
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	40.060141	60893	1874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.087076	27570	4105
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.040126	39089	2736
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40	40.476950	36525	2851
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.034550	18110	4827
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40	40.049760	47549	3954
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	40.141461	13270	1148
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.236833	8817	993
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.040795	19314	6002
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.066409	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.051665	85990	2072
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	40.029075	21283	3174
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.039347	10238	6438
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.103009	28542	2756
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.039398	19273	5856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.028369	15680	2740
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.047590	55524	3224
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40	40.762130	19139	1737
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	40	40.017391	3216	1312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.033483	15530	3163
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.022040	12709	827
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	40.037952	31787	2657
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.043595	15916	3092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.047057	17184	7119
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	40	10.442359	1890	314	1.0.3.2.7.1.4	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: intuition; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.008094	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.131410	122600	2752
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.112152	17608	2620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.025553	11546	2764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.036104	39207	2130
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.050430	58351	4471
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.039085	28082	3418
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.040827	23575	4312
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	40	40.042643	55813	3350
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.028302	26227	1817
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.026108	16892	2444
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.050038	11013	1487
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	40	2.028114	378	94	0.4.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.053276	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.046490	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.051281	9	3	1.1	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.026026	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	40	3.597904	1666	512	2.0.8.7.10	synth with cache (only 1: unfold IZR, IPR; only 1: intro; only 1: intuition; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.157060	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.017903	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.020102	8406	1126
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.716257	537	139	1.6.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.095764	16528	1304
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.235708	17154	3356
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.023902	10243	2418
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	2.981037	1203	354	0.0.0.1.0.0.3.6.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.209171	28225	1417
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.040635	27111	4087
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.032370	25715	2651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	40.037203	15279	3735
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40	40.350792	26126	1785
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.042545	47111	3307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.054028	37474	2466
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.028987	22526	3392
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.064192	23437	2934
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.022784	11287	2453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.084071	27063	4460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.041636	25359	3245
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.042406	27432	3869
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.647499	12126	365
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.155318	28666	4938
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	40	3.609535	6007	450	0.39.4	synth with cache (only 1: intro q; only 1: exists 0%Z; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.057814	67713	4165
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.306206	18157	1999
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.329641	40937	2850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.039613	36933	3277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.011286	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	3.739592	883	274	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.059067	8491	2098
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.094708	47040	3444
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.024823	11210	2520
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.189807	15102	2210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.033070	20154	2835
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.806150	6954	732
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.139580	37426	2809
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.041228	29436	4583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	40	4.449766	4508	391	0.0.7.66	synth with cache (only 1: intro H; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.035346	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.036096	40437	2033
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.041505	20083	5547
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.052470	38554	2624
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.047731	47125	4281
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	40	40.034902	19230	2406
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.751521	24753	2220
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.024372	8409	2791
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.035285	26614	3779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.018938	11542	1513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.018881	313	92	3.0.0.0.2.0.3	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.032322	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.078888	14	7	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.400218	182	13	19	synth with cache (only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.010168	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.008808	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.619592	6362	872
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.040233	18928	5896
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.042727	33005	4564
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.036542	22583	3131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	14.851268	49238	460	268	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40	40.082212	31049	2498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.029974	11651	1215
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.036191	17674	2745
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.023792	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.009385	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.809543	215	61	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.512954	37394	2503
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.030610	15560	3654
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	40.138461	19333	190
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40	40.210984	73895	2414
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.042167	16861	3378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.028928	17558	2488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.038584	40721	2893
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40	40.409433	73065	2705
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.943692	48671	2539
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.039311	35722	3427
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.020099	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	39.988443	9704	1641
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.027770	18060	2583
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.031455	2	2	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.516646	982	157	4.4.12	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	40.177557	61087	4118
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	4.927356	575	313	7.1	synth with cache (only 1: intros m n p; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.041089	27397	3803
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.213886	5813	145
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.112007	8613	4153
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.036293	26036	3143
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	40	40.029067	14219	2529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.049444	45337	3001
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.085038	62546	4629
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.038877	24172	4715
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.078737	23526	3028
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.010357	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.143511	19	7	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.010998	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.053628	15347	2471
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.041794	28700	2982
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.058138	76626	1126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.039892	16252	4321
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.156238	5913	967
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.109504	7354	3828
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	6.384151	963	42	0.0.41	synth with cache (only 1: split; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.036293	18828	3811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.040318	23435	3928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.047331	38843	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	40	3.639711	1699	419	5.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.124444	195726	1244
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.094032	4333	812
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.036567	22922	2781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.200684	1644	346
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.021100	5847	2088
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.049320	34815	3549
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.144731	23	9	2.0	synth with cache (only 1: intros x y H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	40	0.021391	9	2	2	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.035582	22408	4221
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	3.524991	2520	242	0.22.8	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.138477	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	8.952338	6225	248	59.12	synth with cache (only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.191379	10244	4472
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	40.123025	17393	576
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.029900	11993	4288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.039854	32719	4156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.208194	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.034020	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	6.220598	4299	344	4.39	synth with cache (only 1: intro H; only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.040550	25536	4114
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	40	40.465769	61990	1751
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.042876	10111	2421
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	40	16.143403	6995	395	51.0.6	synth with cache (only 1: intros a Ha; only 1: apply Ncring_initial.Zsth; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	40.120563	18205	3136
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.052674	16035	3815
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.028678	19915	2063
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.135926	17	5	1.2	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.243364	379	81	1.11	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.027351	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.491021	44	17	1.2	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.212172	36670	3044
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.354177	42001	1624
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	8.507967	2475	677	6.11	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	40.070900	30505	3119
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.030477	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.042031	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.028004	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.070819	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.028844	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.035356	28187	2893
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.292452	7771	497
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.034373	15393	5487
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	40	0.062640	11	6	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	9.073690	3696	1093	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	40	40.021406	34419	1732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.025335	11706	2002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.384305	7672	1371
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.038656	20630	5461
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	30.200961	18645	2737	4.0.1.2.9.8.0.1	synth with cache (only 1: unfold derivable_pt; only 1: unfold continuity_pt, mult_real_fct; only 1: intros n m p H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: elim H; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	0.163301	30	11	1.4.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.125151	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.031091	21898	3325
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.025588	12634	3480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.023721	27287	1184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.057166	90609	4760
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	40	0.029085	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.030122	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.066673	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.036403	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.766614	125	72	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.060917	27316	5788
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.042479	40631	2907
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	4.281915	2257	526	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.103738	25099	2631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	16.334995	14159	1139	0.24.22	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.065174	31	6	3.4	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.050370	27	5	7.0	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.043162	34368	6073
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.030838	19747	3749
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	19.867508	7753	1350	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	40.048731	53289	3079
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.041644	45670	3124
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	40.033375	24802	3204
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	0.269642	222	24	12	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40	40.037299	18855	4923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.054062	61815	3090
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.039021	26612	5054
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	40	0.026143	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.093941	8	4	2.1.1.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.176758	34	15	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.038947	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.047198	13	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.057119	6483	1338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.034166	16295	3717
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.028478	13687	3956
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.031507	20291	3910
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.036717	23256	4451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.042113	56054	2921
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.047892	68406	1323
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40	40.050711	50329	3112
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	40.303494	40276	2562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.090377	126028	3958
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.028192	19221	2252
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	40	40.044661	26038	792
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	23.682095	20914	1368	6.0.0.0.24.26.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.065613	10444	886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.022657	10934	2222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.014594	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	3.762987	1648	448	4.7.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.033902	24928	5052
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.032660	11157	4404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.030862	31511	2299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.035130	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.054507	8	5	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.027745	10512	1168
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40	40.128297	61828	3923
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.449442	35131	2544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.048761	57406	4519
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.023726	14555	1583
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.035674	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.043925	17170	2548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.027808	11714	3687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.031037	20343	3552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.032887	7	3	0.4.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	7.781584	7943	1102	5.0.2.4.7.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.034998	19374	5334
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	4.698534	3644	549	0.1.0.4.5.6.0.2.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: intuition; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order); only 1: eauto; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.038914	26229	4863
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	40	1.338459	655	98	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.049953	65625	1886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.028669	25501	2223
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.045821	34314	3462
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.016902	6	2	3.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.167478	15709	2961
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40	40.039702	33199	2743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.067721	16762	1836
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	11.789077	9411	1434	0.0.7.18	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.021284	7838	1826
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.069848	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.028297	15719	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	3.678190	1429	181	1.5.16	synth with cache (only 1: intuition; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.029155	15082	2113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.008417	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.378116	234	55	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.031122	19487	3759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	8.325283	3666	847	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.124778	45227	3770
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	2.314351	2641	266	27	synth with cache (only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	40.033025	12739	4315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.065480	76239	1762
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	2.679328	2144	289	5.0.4.0.3.4	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: first [ intuition congruence | auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	6.547725	1367	456	1.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.044607	34586	2280
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.052011	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	40.138379	59325	2703
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.234876	25453	2418
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	18.681548	4208	1845	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.089670	4132	792	0.4.3.2.1.8	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.078419	135553	1722
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.044401	33759	5589
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.028813	16511	2760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	40.030427	9149	1877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	40.050943	73718	2095
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.116133	26078	3024
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.030874	24536	3017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.034387	21294	4704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.096184	22	10	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.089715	27	6	6	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.016538	5953	2085
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.041498	7125	2895
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.032975	8920	2372
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.027844	15644	3274
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	11.724564	2251	154	0.0.0.38	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.847036	742	206	2.1.2.5	synth with cache (only 1: intro Hz; only 1: red; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.073042	43715	2443
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.038865	26830	3992
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.218852	23610	2513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.034223	37462	1992
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.154885	35575	2648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.035788	18621	5341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.030940	20180	3781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	4.432210	1760	219	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40	40.262122	14383	1505
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.642751	16912	1591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.016710	11045	1121
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.036017	5673	1033
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.025187	9829	4413
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.031278	448	133	3.7.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.075251	18	6	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.058200	32055	3551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.507208	577	77	0.0.2.12	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.028765	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	1.054630	219	42	0.0.8.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.046761	47635	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.033684	11840	2983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	12.342080	8107	1234	0.20.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	30.790498	7351	1349	2.0.2.13.9	synth with cache (only 1: red; only 1: simple induction 1; only 1: auto with real; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.033167	25188	3541
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.070138	39988	2822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.029686	14822	3115
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.593491	332	157	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.531063	230	64	10.2	synth with cache (only 1: do 3 intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.017517	15313	1768
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40	40.027573	5351	1074
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.146027	15950	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.030385	8763	4267
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.040282	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.027592	18314	2473
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.034372	27257	3130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.030180	17570	3086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	40.298161	43080	720
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.043004	43532	3269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.031657	12327	4698
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.039008	12484	2173
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.031401	41784	3146
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.028357	24804	2055
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.021812	4456	1813
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.033846	17824	3760
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.546123	10572	773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.032464	25550	2853
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.033416	22911	2734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.029168	31263	815
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.028836	14033	2534
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.040457	24716	3410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.031602	13388	3938
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.026693	11914	3017
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.031881	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.033867	48757	2837
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.190571	18802	2582
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40	42.878197	23146	366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.065088	125726	3921
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.060517	28536	1369
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.023329	13433	2013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.132316	22885	1014
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.032383	11767	1794
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.016764	10960	1290
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.026669	19375	2528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.034450	20012	2572
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.034041	25666	2433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.047069	58943	2131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.006164	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.135572	437	23	29	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.064290	7046	3030
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.038625	30789	2873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.016762	13790	1460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.459717	131	47	0.8.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.080259	9419	877
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.034144	28449	2854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	40.034644	21440	1022
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.028228	13157	2852
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.034317	7	4	0.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	40	40.086338	5215	750
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.050336	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.029341	10950	4144
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.043552	36102	4071
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.027861	20068	3862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.035126	36031	3028
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40	40.478866	13126	2564
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40	41.712943	42987	2053
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	4.366259	860	548	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.030872	4836	1031
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.030230	3779	898
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	4.906800	873	542	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.111300	25756	2075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.054985	12695	2842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.046295	5	5	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	9.847727	820	465	1.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	40	40.024920	15202	2256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.020168	15781	1538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.030803	15049	3818
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.055909	81480	4242
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.048662	39214	12565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.047114	45183	4421
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40	40.055670	35065	2869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.084632	2753	257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.028958	4145	665
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	21.727195	12988	3864	0.0.1.25.2	synth with cache (only 1: intros; only 1: unfold Rgt, Z.pred; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.022949	16384	2223
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.674714	259	66	0.6.1.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.025565	10788	2330
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	40.076077	4553	1932
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.031552	19932	2646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.026317	30165	1212
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.038907	24496	4194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.027509	15357	4002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.049022	73445	4258
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	40.994359	33445	2074
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.032783	22703	4355
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.027502	15331	1126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.093063	33892	2465
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	40.028099	28109	3685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.028243	15835	2565
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.089200	2291	916
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.043877	24821	3085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.699418	12520	1292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	40.031264	14444	3720
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.029222	19165	3300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.147732	167610	3219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.553818	323	50	1.0.10	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40	40.142152	32503	2312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.603983	14888	971
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.027340	11770	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.022307	20853	819
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.034205	15868	4686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.033380	27022	2329
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	40.028147	2290	882
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	0.917699	397	70	13.2	synth with cache (only 1: intros (x1, x2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.024648	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	40	40.048288	21304	2288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.025054	25272	1287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.033842	15360	3352
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.028619	12488	3397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.051112	60481	4885
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	42.815080	23506	371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.682059	54896	1809
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.124172	2091	472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	18.778890	7839	1154	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.111711	851	178	2.0.7.0.0.5	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.092191	9951	882
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.049803	12539	5108
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.503488	28032	1943
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	40.034114	17211	1802
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.149002	8741	1575
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	6.254027	943	257	0.1.12	synth with cache (only 1: intros m H; only 1: destruct H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.019722	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.027911	26148	1664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.027880	14191	3347
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.024898	14213	2279
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40	40.023174	5262	2003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.118313	8613	677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.027430	18099	2415
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.019984	7215	1881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	40.087212	12592	998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.028181	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.041492	17365	5449
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.124414	50	16	4.4	synth with cache (only 1: intros Ha'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	40	40.188640	12212	1778
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.050408	49978	4095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	6.760976	5495	473	1.1.0.29	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.036682	25062	3213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.044213	50895	1724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.028622	10094	3493
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.057459	12218	2203
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.379596	15041	1948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.191371	3804	913
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.025261	14662	869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.099082	10236	338
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.053314	22614	3454
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.030256	14326	1465
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.338373	11940	1565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.023809	8034	1643
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	1.584990	92	65	5	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.037606	3370	1202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.036350	33980	1795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.032071	14992	3315
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.026317	11689	2376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.030206	7130	1969
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.018824	4543	2514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.030127	14215	3171
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.176532	5362	1574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.055305	56385	4418
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	40	40.055299	21671	1574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.873378	1638	188	19.19	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.842994	20862	2221
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.047032	17664	1674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.032348	34614	2326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.028936	11089	3573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.728813	98	29	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.052748	8	4	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.033828	26615	2991
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.190040	20188	2406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	10.010746	7351	824	4.13.0.3.13	synth with cache (only 1: intros A l; only 1: red; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.037206	12521	3499
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	40	15.431511	6778	1629	0.0.5.7.1.6	synth with cache (only 1: intros x y z; only 1: rewrite Qmult_comm; only 1: unfold Qeq, Qmult; only 1: rewrite Pos.mul_comm; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	40.029998	9190	2316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.075879	22426	1800
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.025593	5318	1533
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	40	40.028866	15309	2543
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.036707	28886	2032
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	41.187236	4722	1664
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.711871	24584	2741
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.032624	16873	3417
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.034952	22590	3131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.049177	31322	2641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	40.080054	27741	874
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40	40.301378	16447	2676
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.017103	5732	1404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.096961	6280	680
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.046082	6673	2166
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.029610	16181	2591
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.454150	26604	2956
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	41.062355	18892	1038
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.400800	37288	1641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.032180	14566	3808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.026702	17534	1798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.330615	13094	2060
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.195317	49263	2988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.038857	69610	1528
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.052400	11137	1947
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.033964	25554	5044
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.093069	33578	2548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.052187	26971	2648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.882629	14969	3668
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	5.795059	4087	645	0.7.7.4.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.039114	42067	768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.030182	19099	3835
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.030194	30747	3406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.030912	34593	1992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.032238	14323	3495
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	40	11.582502	14437	1056	45	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.011550	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.010983	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40	40.507069	23973	2069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.031880	25063	2057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.011694	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.034183	10899	2143
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.029436	28170	2676
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	40	40.302697	27728	3278
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.159241	28057	447
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.042377	30014	3234
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.037467	32361	3217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.036376	16318	4153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.032449	29687	2000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.054855	10908	3631
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.034858	28204	3589
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40	40.113646	11098	2095
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.038023	20873	6981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.872985	23009	2219
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.059028	33816	3394
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.103954	14040	2828
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.665030	76365	3781
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.032152	23466	2235
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	40.208043	22069	3405
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	1.221349	120	25	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.024954	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.031047	11480	4314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.786842	2271	142	1.0.41	synth with cache (only 1: case_eq (Fin.eqb x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	1.678045	85	61	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.043469	45	21	1.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	2.122295	171	130	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.931807	15	5	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.065594	11421	183
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.032126	9797	3764
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.037521	19443	5468
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	40.112489	28154	2952
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.050290	16821	8266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.043307	12643	7961
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.079390	35074	3402
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	40	40.034700	12276	2564
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.039967	23345	3317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	29.943433	2673	1963	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.036515	22225	3121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.033152	21033	3913
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	11.105291	1153	921	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.029624	18987	3176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.039280	30158	3314
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.028603	18827	3585
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	40.193796	44751	3746
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.039633	26967	4820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.081774	19134	3284
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.048871	31935	3490
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.019549	10175	2084
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.044196	17273	2272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	27.783135	39590	1939	14.5.55.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.549242	36384	1709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.029406	11144	4071
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.707217	5055	4423
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.021248	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.826777	23	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.012496	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	2.022923	411	94	3.1.0.2.1.0.0.6	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.068872	17040	1776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.026297	26580	2088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	4.316431	5093	661	2.2.1.20.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.190906	31387	3245
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	4.485073	1351	591	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	2.395521	626	277	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.033290	15850	5017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.047297	19576	3300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.066548	6	2	1.3	synth with cache (only 1: intro H0; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.031778	17441	3289
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.073424	16838	2798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.048897	47591	3070
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40	40.024944	8899	3270
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	39.904258	10452	4360	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.077268	15215	2188
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.047053	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.016666	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.012974	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.076042	16	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.138729	28796	2059
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.055166	69477	4320
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	40.809052	13493	1227
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.032980	20848	3114
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.059888	16851	3407
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.146308	35	15	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.073822	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.298785	26372	3334
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	3.112411	1018	347	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.350839	33	16	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	2.564249	401	156	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.142120	32	11	0.2	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.219000	25	15	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.083218	4	4	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.029100	15427	2355
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	40	40.029206	19002	3295
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	7.242664	3179	955	0.0.1.0.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	40.051279	46066	3784
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.041241	36049	3240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.031641	13332	3916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.159368	18874	2018
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.011949	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.030802	21691	2639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.670143	39733	5600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.066921	74768	3948
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	41.282402	56714	3136
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.086600	24234	3053
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.027683	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.026065	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.029843	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.020118	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.043006	48889	2064
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.030916	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.028837	19876	3233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.818493	1216	79	40	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	1.387585	547	151	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.206320	27179	1655
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	5.971987	2218	501	0.5.0.7.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.125133	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.058234	63988	3512
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40	40.025160	6039	3143
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0.022483	2	1	1	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.039890	32891	3402
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.187116	50005	4594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.031008	18020	3510
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.694786	57613	4967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.039141	18174	4209
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.549860	25933	2681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.040420	38068	3819
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.065796	10950	1995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.050564	29154	1544
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	40.027034	11634	3340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.036333	15284	1202
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.489827	24208	2456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.032184	16335	4047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.014818	3	2	0.1	synth with cache (only 1: intros n m; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.035586	2	2	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	40.277363	106593	1067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.019304	3	2	1.0	synth with cache (only 1: intro; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.011782	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.026018	12205	1654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.028638	6	3	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.084458	60078	4008
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	3.175605	676	121	2.1.1.0.7.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.835268	1791	130	24.7	synth with cache (only 1: intro p; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.055587	18	6	0.0.6	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.069229	99896	730
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40	40.408089	16691	2633
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	2.438244	458	75	0.0.5.10	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.037637	20823	4195
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.036758	23217	4703
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	22.330344	4908	1939	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	4.159780	606	102	0.0.5.3.7	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.025376	2	2	0.0	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.017593	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.017035	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.017057	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.042998	11938	3987
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	40.043408	36481	4461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.031563	10976	4118
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.062815	31958	3994
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	40.189763	8250	3411
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.094226	11	4	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.039630	25786	2906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.063273	82024	2774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.057554	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.614377	15219	2554
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.038216	18171	3811
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.060717	14295	3277
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.057912	61800	2729
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.216250	27	21	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.106731	16	6	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.172256	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.266771	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.099159	22956	2409
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.205194	361	133	5.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.699038	1028	161	6.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.029277	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.028035	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.007843	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.118433	4806	1503
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	1.131914	954	98	12.0.18	synth with cache (only 1: red; only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.007977	1	1	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.218404	622	108	16	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.053695	60909	2389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.035889	23193	2747
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.036530	14594	4240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.331599	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.296130	7946	1238
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	23.073402	12107	878	14.0.0.17.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.033683	20382	3219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.065604	122751	775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.519375	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.655233	11420	1565
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.039109	26461	3660
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.029074	18882	3267
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.052503	15593	1188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	0.144681	41	14	2.4.0	synth with cache (only 1: destruct m; only 1: easy; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.035782	13982	4405
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	40.065020	76578	2219
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.036690	9782	774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.035678	19611	3507
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.319283	6298	859
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.040004	12658	1120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.038325	17162	2669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.055353	60805	4008
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.245796	12982	3708
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.044722	44067	2293
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.096224	6965	675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.033705	9749	3477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	40.044305	29355	3212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.036750	17771	4399
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.056228	6010	2152
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	5.100039	2886	566	14.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.040942	48650	2047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.031457	16731	2137
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.283995	36529	3109
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.011024	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.037664	29173	4221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.031260	5	3	0.0.2	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.020219	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	22.322661	13117	2198	15.7	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.034718	14735	4500
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	13.110441	11033	1013	0.0.4.1.1.0.0.2.23.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	12.885341	1265	116	1.0.26	synth with cache (only 1: induction x; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40	40.069377	22605	2949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.043169	26820	4154
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.517887	150	36	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.061127	25272	3734
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.029650	22046	2780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.027619	9471	3716
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.039074	24200	2964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	17.626269	1434	160	4.19	synth with cache (only 1: intros l H; only 1: now induction l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.033768	10121	1689
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	40.158099	4897	3658
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.039502	13533	2912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.058987	59894	3085
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.041261	26158	3353
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40	40.252461	34911	2727
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.041773	32124	2767
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	10.317148	3547	692	22	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.079651	22185	3168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.179110	23133	2098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.046553	15193	2959
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.033486	20421	2446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.067891	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.054498	56948	4293
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.029719	14031	2488
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.087817	41147	5581
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.008236	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.029037	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.012472	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.012181	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.009920	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.070105	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.009259	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.010224	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.006355	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.102720	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008670	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.013286	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.010493	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.012596	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008990	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.029884	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.010576	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.019559	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	9.847559	3587	617	10.3.1.0.1.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.036351	23894	3176
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.032936	24141	3234
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	40.340837	45014	3263
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.033333	28385	2711
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.490370	22161	2800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	40.063754	35916	4344
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.183293	29579	3424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.032229	18748	3251
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	40.688878	7119	1673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.116220	2673	713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.202326	4267	2606
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.011138	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.011750	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.062021	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.011235	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.016439	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.010159	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.012023	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.009887	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.045992	67187	1961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.056576	76392	1373
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.036267	34708	1575
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	40.111922	41245	2481
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.046966	8	6	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.041107	26519	3577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	2.072035	681	101	12.0.3	synth with cache (only 1: intros a b H; only 1: destruct H as [n maj]; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.038772	17114	5004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.043629	13740	3076
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.034633	20165	2907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.032525	15158	3575
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.043944	23793	2547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.052755	5577	1087
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.388451	9843	872
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.051235	65616	2904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.037187	33989	2086
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.040637	31328	3396
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	34.973506	10891	1338	0.0.0.3.1.6.1.18.1	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: L.MX.elim_comp; only 1: auto; only 1: eauto with ordered_type; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.036034	25598	3193
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40	40.441850	29382	3637
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.043578	17189	7558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.049500	44399	4751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.042641	26585	3390
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.075193	20798	2071
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.030878	17538	3032
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.158393	5754	1972
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.060490	75004	3027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.031433	24139	1829
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.027502	26708	1429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.039897	11188	2230
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.027566	14216	2884
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.109987	34377	2798
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.052186	10029	2863
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.105261	23	10	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.802018	365	71	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.043328	28703	3062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.036939	21963	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.045074	5829	900
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.270606	104	32	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.024712	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.042340	32864	4114
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	2.111124	2924	266	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.441717	766	169	3.3.1.5.0	synth with cache (only 1: apply Vector.caseS; only 1: intros; only 1: destruct h; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	40.126254	17386	4410
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.036127	29409	1779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.027033	14555	1917
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	40.062664	7863	1655
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.030483	24978	2930
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.242367	32936	3183
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.049334	20078	3932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.050945	49688	4576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.320639	8523	1412
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.036733	16104	2668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.033518	22683	2342
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.025808	20596	1678
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	40.041633	11715	4389
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.037102	23783	1385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.363677	18509	3245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.026065	12448	2282
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	40	40.040606	34062	3476
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40	40.220074	13415	4022
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.040216	18723	6817
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.371194	77	39	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.034166	25045	2673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.051625	14311	3481
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	39.917942	12935	1871	4.4.1.0.14.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply CReal_mult_lt_reg_l with r; only 1: exact H; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.033552	11632	2325
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.043953	42941	4104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	40.214715	12375	5194
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.041061	36467	2840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.023625	8119	2451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.035745	26010	4155
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.047469	42743	4923
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40	40.035858	10886	5912
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.031539	16720	4717
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.216810	28915	4178
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.033736	16652	3874
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40	40.382070	23561	1995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.030110	9251	2732
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.079286	105616	4618
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.049559	18	5	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.113999	14179	5515
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.310793	957	344	1.2.1.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.039981	40215	2286
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.046892	30822	5185
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.036466	11661	6209
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.035726	27135	3840
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40	40.620129	35689	3721
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.039842	16339	5449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.026823	13570	3086
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.021258	12343	2102
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.165639	62991	2833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.025928	18431	1308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.066478	19519	2070
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.114717	13044	5157
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.037896	29791	3628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.027832	15609	2409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.039359	24465	5346
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.502675	319	50	1.9.2	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.234239	10	4	0.1.0	synth with cache (only 1: unfold create; only 1: intros m a b Ha Hb; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.046838	39289	5191
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	40.083093	60305	1268
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	40	40.034050	19105	5134
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	40	0.038191	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.033243	13563	3941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.020122	10659	1394
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.246862	15015	2504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.041712	40620	2232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.049707	51214	4587
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.031852	12	4	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.034329	9797	5343
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.011532	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.233700	304	110	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	2.663167	838	217	12.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.888274	287	82	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.040073	39363	3694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.029616	17034	2966
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.035364	27376	3094
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.032201	13349	4075
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40	40.386233	14739	1781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.031582	14118	4411
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.040552	27591	2765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.057021	69175	1428
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.023457	16086	2016
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.023267	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	19.316571	3389	1222	1.7.4.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	5.898640	2239	544	1.0.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intros; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.179677	12421	1207
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.990223	3000	1699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.301281	21602	2175
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.034094	20743	2543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.039068	20459	3465
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.034103	26672	2756
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.022173	11397	1595
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40	40.217226	9880	2076
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.033036	23971	1453
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.050689	6330	1275
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	40	40.030842	12526	2868
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	40.037590	29243	1958
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.265995	8878	4633
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	40.116550	28088	3594
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.045725	15	4	4	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.088916	9	2	7	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.872587	7247	2500
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.092608	24468	1548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.063420	66137	3915
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.038834	32055	3363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.046189	14256	1954
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40	40.847623	10392	2373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.013401	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.028216	1	1	0	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.023269	15467	1479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	40.059830	32463	3701
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	40	40.041122	20485	5915
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.040269	31762	3485
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.078133	9	8	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.379412	28137	2032
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.198547	42488	1688
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.017376	15474	659
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	40	9.988559	3532	1294	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.042375	13974	3063
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.029323	18765	2328
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.027953	8099	2149
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.311609	18585	2814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	40.660404	21142	2812
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.059921	36694	2544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.064991	17	6	4.1	synth with cache (only 1: intros n m; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.225443	75	22	4.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: destruct m2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.060324	4414	975
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	40.082309	26355	4131
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	4.767780	1936	431	0.0.0.3.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.367792	22102	903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.706086	3876	1805
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.041555	37531	2989
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.042546	17325	5840
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	40	0.115594	14	13	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.030894	18194	2438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.033916	19936	3432
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.028301	14744	2562
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.120734	15442	3666
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	41.074667	43614	2687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.755029	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.044234	32317	2760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.065586	5388	923
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	6.697043	4807	469	7.5.18.0.6	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: repeat split; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.030179	16838	2824
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.276780	24207	2815
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.038542	24910	3566
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	40	40.035822	12959	5140
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	41.078633	13930	2312
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.605422	735	183	22	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.020491	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.033261	21259	2878
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.028888	15043	3199
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.068987	21985	3118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	9.484719	13859	624	7.0.13.18.0.81	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.455278	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.017116	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.013983	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.835482	69	51	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.382613	68	12	7.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	40.084148	11779	1934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.876890	68	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.008435	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.051828	19930	2375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.042211	30129	3683
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	41.143724	20350	3306
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	40.056862	31917	3464
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.041286	30848	3997
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	40	40.033818	5732	1227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	27.212255	2691	2030	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.342047	10220	2006
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	40.035307	24506	2971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.070512	20443	2752
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.034854	20844	2861
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	40.534028	23287	4472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.046445	38887	2854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.022998	16053	1584
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	12.827240	5597	873	13.6.0.3.0	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intro abs; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	41.139149	33344	4690
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	38.610690	4476	3227	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.036378	25219	3237
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.032714	18880	3233
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.031153	14030	3317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.443057	11195	2000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.032818	17141	3233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.027844	16436	3074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.036823	10915	1898
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	1.369796	57	24	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	19.114483	3053	1928	0.0.1.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.030699	6	3	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.037950	31813	2376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.030282	8672	1524
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	40.373392	24827	4822
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	41.007442	28133	2862
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	12.908756	8487	981	1.22.7	synth with cache (only 1: intros Ha Eq; only 1: Ndec.eqb2eq; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.010430	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	5.540322	2280	446	7.0.1.0.13.0.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with *; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.092734	18984	3013
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.040046	17477	6227
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.342292	10837	1667
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.034081	13518	3836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.029542	13921	3004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.033304	12910	2203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.175642	5203	3713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	14.931861	3028	730	0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.916494	92	10	0.13	synth with cache (only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.013959	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.040471	30084	2865
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	3.496854	1391	168	12.8.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.013214	17	2	8	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.053790	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.066065	17	7	1.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.025550	20350	1742
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.145868	10	3	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.155883	64	8	12	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.062634	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.056690	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.099148	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.046323	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.043560	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.701128	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.060563	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.056229	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.164547	12	5	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.578874	43	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	40.208275	22243	4447
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.788735	31	9	0.0.5	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.754821	31	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.873325	27553	3243
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.622143	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.909753	23	8	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.106868	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.841922	22900	2637
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.027415	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.028973	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.015179	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.400704	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.057885	14509	2395
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.028160	19205	2630
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.032595	17340	3352
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.036818	15795	4083
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.030922	8429	2760
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.305929	9190	1908
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.038579	37421	2648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.020809	670	196
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.041116	29085	4349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.865130	25176	3529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.585253	2524	481
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.081507	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.088759	1	1	0	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.207519	5	2	0.3	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.886877	18	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0.956480	12	4	0.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.096796	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0.530402	39	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.780698	33133	2546
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.030262	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.053943	20578	3301
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.031233	12106	2890
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.028613	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.027174	5	4	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.055366	29431	2594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.051343	35133	5027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.009537	2	1	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.045160	5821	727
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.420737	51	18	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.012400	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.047288	27755	2558
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.500361	6473	1143
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	2.515409	1286	252	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	2.668556	781	247	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.070733	101234	2943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40	44.645844	7066	1542
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.643385	1996	623	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	40	7.896771	6240	796	3.7.1.11.4.1.0	synth with cache (only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.460477	122200	2366
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.060949	4232	795
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.110513	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.025631	13142	2855
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	4.966907	214	43	1.0.1.9	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.034022	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.036881	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.055183	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.074367	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.038600	20065	5380
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.064561	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.087086	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.074123	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.091943	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.332790	18	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.080160	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.511741	10	3	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	1.973521	361	236	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.506033	11	3	1.2	synth with cache (only 1: intros; only 1: intuition fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.626212	29	6	1.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0.696890	51	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.758628	51	10	0.0.9	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.035700	19069	4703
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.697169	30	8	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.044389	23994	4528
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.729866	29	11	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.057436	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.057034	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.035773	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.030918	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.057090	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.068649	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.096428	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.039432	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.513719	17	4	0.4	synth with cache (only 1: intros Hab; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.223240	9	2	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.163882	6540	987
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0.753156	28	13	2	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.432642	18	6	0.0.6	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.648393	166	37	0.1.7.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.558716	70	15	0.0.8	synth with cache (only 1: intro Streicher_K; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	3.084059	334	74	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40	40.031997	35884	817
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.337049	17421	3543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.571921	13877	3416
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.708824	22494	3197
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.132013	29978	5279
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.762058	21369	3203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.062270	26	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.041672	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.066471	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.738292	9	2	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.043127	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.044813	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.036533	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.027361	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.053988	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.063189	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.080181	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.043495	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.038590	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.589030	39	17	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.624516	32712	4773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.069323	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.020829	7	2	4.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.061970	5	3	0.0.2	synth with cache (only 1: intro n; only 1: intros g_eq; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.011083	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.086187	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.774504	66	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.780168	50	17	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.041418	19067	5373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.778109	44	15	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.726480	38	8	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.437624	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.221648	4	2	1.1	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.030540	15771	3930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.031966	22096	1782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.043392	32109	3891
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.015758	3583	2199
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.028217	21435	2535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	40.038188	15630	3018
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.330552	42467	5160
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	40	40.523737	20736	2966
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.933917	50832	2760
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.834612	7092	2902
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.031929	14000	3756
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.476787	7183	2511
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.116600	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: intuition; only 1: do 2 rewrite F.union_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.094101	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.034092	18255	3772
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.932864	24	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.031253	16078	1435
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	1.154069	47	19	1.7	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	1.000470	65	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.046376	7996	1245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.596942	125	17	2.8	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.561158	44	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0.734654	21	6	0.0.2.2	synth with cache (only 1: intro H; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.033875	2263	1235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	4.445817	249	68	2.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.038963	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.031000	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.051443	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.064037	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.060494	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.076979	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.066298	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.103440	14	3	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.095254	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.061896	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.534562	18	6	0.4	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.391724	15	8	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.535044	21	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0.515651	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	1.358831	71	56	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.342856	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.624160	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.046596	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.052507	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.037217	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.031868	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.050408	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.068998	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.074177	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.044405	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.230104	8	3	2.0.3	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	8.918877	708	183	0.6.7.0	synth with cache (only 1: expAdd; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.540086	53	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40	40.101836	17805	2144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	1.358880	62	39	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.296540	8	4	0.2.1.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.100411	8492	1267
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.393747	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.355003	19744	4290
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	1.277904	153	33	0.1.0.0.4.4	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.785158	14926	3356
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	1.972166	504	103	0.0.3.2.11	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.829990	7271	4145
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.043572	17477	5250
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	40	14.351453	4378	1707	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.047247	15569	3812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.039388	10343	1641
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	40	40.042432	39224	2731
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.085962	11775	1883
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.039797	26976	4157
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.036816	19816	4068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	41.952226	12567	1692
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.015566	8042	1586
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.362343	23535	4643
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	38.784576	20207	2163	3.40	synth with cache (only 1: intro x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	40.728258	11342	1605
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.612373	38789	2826
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.026287	17174	2396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.029034	14847	2711
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.082819	58026	2013
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.039910	26830	2988
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	11.660323	3698	986	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	4.188782	1043	129	1.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	40	4.509453	895	215	4.0.3.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.073465	106719	1167
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40	40.040391	41020	2433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	40.021059	4864	2952
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.069577	3942	797
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.374071	32624	4129
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.941467	12726	1775
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	40.824397	31581	4298
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.036087	23588	3813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.030708	23550	1787
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.484908	66306	2612
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.055802	18313	2935
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.033646	14746	4521
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.042826	32268	4324
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.038643	32089	3466
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.633816	630	178	0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros EQ; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.027804	6458	4333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.075661	3068	756
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.416115	29924	4091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.838522	8574	4462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.009158	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.025351	14213	2425
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.816299	41784	3391
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.052624	7411	1608
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.357845	26025	1878
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.054344	30163	3342
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.031153	22376	3176
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.038601	24187	4153
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.038796	31478	3098
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0.010321	7	1	6	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	40.035855	10142	4469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.085702	2234	591
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.046791	43319	4259
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	40.314650	11903	2962
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.028567	24304	1916
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.187970	43876	3787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.067789	12125	2239
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.291291	12556	6373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.058370	7920	1480
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	7.845287	6656	534	0.1.0.0.6.7.9.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: apply Qle_minus_iff; only 1: simpl; only 1: rewrite <- Qle_minus_iff; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.032563	12515	4028
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.029813	22200	1929
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	40.104967	8880	2630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	40.029958	21000	2482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.012271	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.046293	40422	3803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.437059	159	26	5.9	synth with cache (only 1: unfold phi; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.390851	38596	3167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.132563	38	4	10	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.009352	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.006880	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.109592	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.127064	11	2	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	40.865088	28206	4714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.008628	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.027323	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.012061	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.012383	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.009221	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.011504	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.010960	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.010828	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.009418	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.111493	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.010352	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.014610	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.014202	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.012153	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.021042	12189	1419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.009252	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.033843	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.008211	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.025917	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.765477	45223	3611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.025072	18305	2047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.060768	13936	3025
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.180798	59606	4755
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	40	40.025064	13833	2493
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.068321	125743	796
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40	40.185916	17878	2765
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0.007780	8	1	7	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.070366	94593	3374
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.034000	8088	4948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.147445	10019	3861
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	14.025217	7097	957	0.0.3.7.1.0.9.7	synth with cache (only 1: intros n m; only 1: destruct m; only 1: intro H; only 1: Nat.nzsimpl; only 1: Nat.order; only 1: intro H; only 1: simpl; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	40	40.029565	17220	3107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.833107	3059	1302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.011097	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.010335	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.048890	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.009409	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.015080	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.010592	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	40	40.035446	34956	2481
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.010218	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.010485	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	40.044172	22888	1963
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.020575	6246	1372
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.284522	24148	2845
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.047847	33657	5886
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.045160	42538	3597
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.046395	35863	5299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.080541	28200	4409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	40.031978	6048	1803
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.370688	28993	3220
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.040086	29826	2505
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.739380	33916	2224
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.917293	11385	881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.141648	14001	621
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.042248	8958	2849
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.265182	12834	1359
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	40	40.041855	30289	3831
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.048238	18477	1830
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.042885	32555	5123
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.044291	26060	3745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.597908	6830	1092
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40	40.340847	13080	3046
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	40	40.035698	26928	3553
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.041356	42558	3027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.977790	13037	3001
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.087858	23699	2189
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.049673	11731	2714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	6.937020	2007	847	0.1.8.0.3	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: destruct (fold_0 s' i f) as (l', (Hl', (Hl'1, Hl'2))); only 1: apply fold_1b; only 1: clear Hl2 Hl'2; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.242142	12743	716
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	40	40.045369	38832	5258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	7.611911	1835	993	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.043816	33297	4897
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.037667	25531	2962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	40.028582	4835	2025
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	10.754997	3842	1319	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	40.197939	12545	1746
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.039988	32701	3928
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.035642	24242	2446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.033716	26944	2098
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	40	40.906682	25577	1888
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.041505	11202	1644
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.176086	21991	4054
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.037487	24005	3511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.041310	24232	3230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.050966	69994	1220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.029381	14942	2290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.020424	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.853456	16894	5647
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	40	16.245869	8020	1593	2.1.0.13.7	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	5.073258	1411	544	2.2.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40	40.249584	19336	3528
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.039547	32621	4062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.022040	13462	1586
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	41.848571	40283	3745
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.025456	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.033558	17366	3241
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	40	42.396757	8677	1333
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	4.381029	4234	395	19.0.25	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.288197	13100	3927
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.044305	36421	3037
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.047553	56398	3743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.334243	10139	1779
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	40	40.050255	43336	4613
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.671109	15079	4984
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.257409	22647	2038
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	40.033290	20407	4288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.044155	10794	2695
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.270618	18318	2465
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.132058	5506	1453
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.340494	21215	2309
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	40	41.796344	19581	1435
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.057693	34841	2215
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.047375	26634	2655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.042029	8877	2126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.019630	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.177315	43	15	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	3.919087	4880	409	2.1.1.3.31	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	40.035044	20651	4568
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.326849	70	27	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.034267	9846	5051
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.011770	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	1.782872	266	81	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.036592	19311	2915
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	1.393055	181	48	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.034030	23569	3121
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	4.742666	2334	354	8.0.1.12	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.732576	14332	2203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.028221	8102	4049
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.077217	6620	1222
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.106108	15417	3106
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	41.520725	13447	1325
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.038467	24220	1505
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.024998	5095	944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.026869	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.038753	26187	3581
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	40	40.022968	12617	2162
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.036543	24037	3442
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	40.969409	36410	3258
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	40	40.565249	25994	3351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	2.208694	1115	121	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.023878	8771	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	41.228151	15199	1788
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	1.069625	25	6	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.038070	16685	6203
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	40	40.807041	20675	1803
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.039065	9425	3644
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.030009	20871	630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.041806	4524	252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.056207	57088	3113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.021507	2	2	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.094819	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	40	40.038359	16717	4676
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.037042	14291	3890
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	2.738422	3382	414	3.1.3.4.1.2.0.11	synth with cache (only 1: intros RS' n; only 1: induction n; only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.470243	255	68	1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.700004	8167	1304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.114079	12318	2458
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	41.029749	57058	3140
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	40	41.178751	12257	1078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.026028	11761	2967
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.040802	32584	2591
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	40	40.016364	8976	979
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	1.087300	866	97	2.6.17	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.023278	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.080229	57571	2357
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.015822	11013	1066
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	40	40.221331	29232	2037
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.037894	27381	4435
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.053870	29929	3384
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	40	40.873113	26296	2673
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.169088	8246	1329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.277965	25542	2475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	40.045434	25615	2352
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	41.630004	20362	1417
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	40.047342	20516	2557
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	40	4.571651	1634	223	0.0.3.0.0.3.13.0	synth with cache (only 1: intros; only 1: split; only 1: simpl_relation; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: simpl_relation; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	2.093023	414	99	0.0.3.0.5	synth with cache (only 1: destruct 1; only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.202553	13732	1248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.056420	61952	3023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.159155	7640	1700
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.184740	22727	3501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.022833	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	40	40.045946	30627	4676
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.084671	21362	2547
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.042667	8065	2397
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.025454	15154	2505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.276063	39585	3810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.067756	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.022112	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.172511	6414	1116
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.094602	21999	2395
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	3.213713	2069	377	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.135995	25990	2172
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	40	41.101799	27568	2729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	11.062143	2302	288	0.1.0.6.8.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: intros Ha; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.027445	3	2	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.026082	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.030790	21877	3097
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.085498	31424	3206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.033111	21090	2561
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.036317	7828	1898
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	40	0.656347	208	35	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.213224	17535	1687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.185945	17433	3019
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.042129	36731	2597
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.307275	13477	2459
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.879200	2811	552	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.051985	48611	3583
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.208882	45052	3494
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.942252	17119	2568
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.041653	5638	193
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.041274	32342	3863
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.223167	52739	4242
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.178723	9647	605
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.039238	25237	3484
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.070032	13002	2677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.037423	15745	2158
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	40	30.529247	15052	3007	11.11.2.8	synth with cache (only 1: intros n; only 1: intuition; only 1: now subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.318592	14081	3177
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	32.963963	19663	1778	2.7.1.0.0.5.17.9	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.046324	18426	1386
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.917441	24537	1843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.056667	59184	2045
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	40	42.175583	22060	1950
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	40	40.213469	52444	3515
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	41.674654	28007	1546
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.039422	13615	3166
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	40.030720	11911	2544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.187283	11385	1198
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.026890	20600	2104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.353417	8810	1718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	8.574864	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.038251	10045	2999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.043967	25237	2680
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	40.711361	38320	2282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.047704	44037	1859
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.108406	34109	4387
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	40	41.058275	24496	2613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.036983	21837	2128
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.024220	15637	2205
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.030446	15184	3256
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	2.676402	586	380	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.030948	10015	3757
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.069223	27208	2809
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.084408	11711	2465
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	40.055075	64278	4376
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.042443	11725	6112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.023567	10256	2686
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.154436	19896	3104
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.748285	9226	2737
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.211302	4830	766
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	40	40.023443	13073	2036
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	40	40.140161	65316	3347
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.370123	17637	3618
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.041070	41850	4238
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.044477	21435	2815
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.185238	11378	1974
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.035687	18733	3793
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	40.042958	17041	5587
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	19.931929	12421	1877	11.19.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.038518	22652	3109
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.130296	31448	3439
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.021508	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40	40.500593	24534	2089
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	40	1.210532	590	126	1.2.1.11	synth with cache (only 1: unfold Pos.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.036109	17	4	0.2	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.066675	27290	3050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	42.783876	7704	1048
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	9.559320	4797	794	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.308522	25896	2422
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	40	2.325234	693	160	4.0.0.3.1.2.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	40	0.326603	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.045374	64373	2564
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.037238	4057	605
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	40	6.966379	3109	376	0.0.0.0.14.12	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.215156	13	5	1.2.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	40.116571	18702	4300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.048040	26367	2283
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.039977	15683	5382
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.049722	12392	2081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.031892	8316	4282
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40	40.841002	37703	2590
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	40	40.027786	13955	2834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.426008	18637	2147
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.222688	37589	3150
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.043156	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	40	30.031952	15318	2853	13.1.0.9	synth with cache (only 1: red; only 1: simpl; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.026528	23224	2233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.062703	31922	3761
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.220318	23572	4163
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.093660	33138	3403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.046150	18535	5114
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.026679	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	40.032836	23907	1892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.066087	15684	4336
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	40.781439	33370	2660
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.029414	14658	3610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	41.523485	10219	958
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	18.546483	7574	2860	10.6.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.245686	38320	4254
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.267060	16562	2581
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.947315	319	91	1.3.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.041380	40955	3346
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.036947	29116	3706
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	40	22.340838	23502	1593	1.0.0.0.1.15.23.4.4	synth with cache (only 1: intro; only 1: unfold IZR; only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.128663	24316	3111
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.043964	16455	4917
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.032094	14113	2262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.058414	17806	3244
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40	40.411984	34708	2868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.065337	2261	405
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.042159	22707	5166
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.148899	33738	1386
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.105832	31344	2523
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.049860	56373	3402
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.043342	28635	4077
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	40	40.032122	17244	3470
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.095016	16703	4508
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.039582	10649	5241
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40	40.721593	26238	2112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.040837	25355	4536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.033552	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	37.378423	18983	2032	7.2.0.19.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.052704	14359	1823
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.041536	28584	3888
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.192825	32610	1628
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.235316	19722	1410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	5.541743	2325	849	0.0.0.0.0.0.2.5	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.024388	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.251103	4398	470
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.057246	70845	4197
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.032118	16578	3745
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.083378	31144	4103
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.037741	9002	5188
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.151642	28535	1996
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	5.747556	5304	395	1.5.15.18.8	synth with cache (only 1: red; only 1: intros n; only 1: intros a b; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.057076	65631	2249
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40	40.213233	22788	3024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.057768	12830	1752
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	40	40.211572	23361	1936
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	40	40.125667	34366	4015
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.044618	23123	5945
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.024255	17241	1960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.052484	58789	4146
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.037858	34518	2794
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.035653	29859	2812
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.296288	60397	2898
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.214901	20284	1956
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.045266	28602	4257
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.129667	30619	2551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.334449	10209	2225
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	40.233080	42505	4687
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.103728	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.043238	18989	5204
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	2.379482	859	177	6.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.725238	478	61	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.705655	213	45	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.038975	13856	6056
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.046154	42301	4519
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.029386	27828	1939
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	40	40.041834	31910	6458
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.040837	29988	3258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.237113	37206	4774
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	40.040627	34171	3364
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0.010879	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.037352	16181	4229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.036649	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	40.591400	32213	3354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	41.489913	5670	1146
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.219310	16101	2558
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	40.194050	28810	1928
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.040135	12401	6370
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.052366	80785	5423
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.050013	53435	2464
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.039627	13145	5889
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.036324	24866	3817
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.208442	32232	3736
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40	40.036182	27824	3269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.042896	25132	4162
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40	40.096971	8526	3405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	7.826443	2689	905	7.1.0.1.3.0	synth with cache (only 1: apply bit_ext; only 1: case (to_Z_bounded j); only 1: intros H1n H2n; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.193163	14441	2404
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.317281	11721	1350
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.252859	21699	2100
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.035698	18070	2400
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	40	0.993281	542	111	1.0.0.3.7.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	40	40.045282	50191	4499
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.046051	39448	3359
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.037731	10951	4840
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.051004	60953	3460
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.261809	92552	3460
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	40.036658	20457	3623
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	41.231944	27452	2374
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.035339	16927	4063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.274576	8296	1963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.062537	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.053725	60399	3460
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.227003	20904	2736
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.041648	38367	4619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.036867	25660	2857
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	4.866028	1458	336	0.3.0.2.0.5.1	synth with cache (only 1: destruct x; only 1: intros n' (HPn', Hn'); only 1: qc; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	40	40.031302	10468	4311
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.250907	33234	3120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.039059	9837	3371
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	40	2.142721	922	127	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.103322	46678	2583
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40	40.042886	31886	5326
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40	41.251167	22356	2184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.036846	17750	4092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.291743	4947	1310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.034767	25660	4298
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.316644	350	20	26	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.008847	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.079524	26802	4144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.046668	37433	5543
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.103711	24686	2255
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.041331	27248	4831
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.031858	16930	4187
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	40	40.210677	48283	4126
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.155874	44193	4006
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40	40.116652	24810	3676
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40	40.145907	10439	4256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.139576	6607	1250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.050277	64057	3700
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.268972	27631	2073
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.289528	19393	2870
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.039406	30015	3227
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.174405	21803	2595
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	40	40.041409	31378	3712
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	5.436588	2307	425	6.1.3.6.0	synth with cache (only 1: unfold Q2Qc; only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	2.184750	627	149	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.044462	28712	5248
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.168866	19736	1760
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40	40.041029	45477	3810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.367282	22954	3594
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.027493	13087	3015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.023345	23097	1728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.038901	27328	3557
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.035529	18643	4259
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.776794	9630	877
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.038078	22835	3380
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.285285	406	109	0.0.0.0.0.6	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.037643	31962	5132
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.162091	25382	3397
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.046723	60320	4633
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.301574	13978	3103
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	2.748041	1887	427	0.0.7.2.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40	40.030159	19111	2410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.109460	30113	4853
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40	40.310359	5894	3635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.040854	17893	2902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.062323	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.040249	30190	5277
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.052509	16919	4345
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	40.367742	29711	1057
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.056596	58494	3104
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.036885	28291	3837
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.204577	23367	2560
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.033686	19342	3279
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	40.353682	16052	1591
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	40.038504	15049	2139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	22.096107	15998	1794	2.0.2.0.0.1.3.4.16.5	synth with cache (only 1: intros H l; only 1: red; only 1: simpl; only 1: intros m x y; only 1: intros; only 1: L.MX.elim_comp; only 1: rewrite H2; only 1: rewrite H1; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	40	40.350549	16189	5027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	5.930456	13933	546	29.14.4.20	synth with cache (only 1: intros a; only 1: destruct a; only 1: now simpl; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.037461	11518	1577
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.036981	8	5	0.2.1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: intro y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.137169	9	5	1.1.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.163331	118	30	8.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.705275	30362	4703
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.040120	38694	2955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	8.023967	2298	419	3.11.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.027952	15475	3193
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	41.085571	6832	786
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	40	40.036110	29208	3870
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.147233	32988	3174
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	40	1.440329	1021	121	7.8.3.1	synth with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	40	0.768559	168	40	8.2	synth with cache (only 1: intros x y z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.046617	46308	3875
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	40	40.146026	14872	2754
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	40	40.263759	6666	2220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.044844	16222	1281
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.096036	45044	3305
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.058229	71251	5849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.058668	60900	3693
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.042656	31046	2990
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.549060	11909	1306
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.693740	10317	1257
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	40	40.039836	26219	3833
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	40	3.904528	1145	320	1.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.166714	38789	3517
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	40.016899	8545	1693
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	40	40.315801	13561	2256
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.245221	6280	3081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.032375	12469	2343
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.285915	99405	6839
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.580080	41104	3960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.051334	54780	5639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.083368	54843	2851
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.039329	25577	3935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	8.254468	3818	737	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.056468	2660	783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.497455	8708	1165	1.1.1.1.0.0.24	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.198048	574	142	13.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.033680	30788	3396
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	40.268088	49804	4765
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.043704	50280	2495
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.210483	21957	3706
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40	40.023445	5361	2799
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	16.243146	14981	1436	5.31	synth with cache (only 1: intros m IH H; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.700456	180	49	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.576817	13711	2331
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.036798	20113	4108
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.117443	23648	2735
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.423938	25408	3377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.820227	12335	2256
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.020331	3529	438
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.707826	58233	3100
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.035840	31300	4132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.037087	28497	3321
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.118479	26981	2478
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.379091	11231	2949
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.169063	28483	4617
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.599606	1800	523	11.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.292223	221	71	3.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.052397	15	7	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.054586	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.049882	9	5	5.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.049181	39667	3263
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	40.798743	12275	1634
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.055044	12314	2460
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	1.405071	98	26	7.1	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	40.086345	33868	4047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.276404	7642	732
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	7.112611	2455	408	0.20	synth with cache (only 1: intros n m; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.025223	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.025983	2040	436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.863760	52380	5397
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.032072	14036	4158
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.580449	604	158	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	5.136434	2162	334	0.24	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.042621	28016	3052
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.237208	28580	3250
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	6.187152	2854	418	2.0.22	synth with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	2.039779	491	180	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.429883	9262	1984
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	10.697624	11629	1073	9.12.15	synth with cache (only 1: intro n; only 1: intros Ha Eq x IN; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.272182	26515	2783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	40.059218	87000	3118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	40.033292	18705	2560
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.028999	13893	2229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.062185	11255	1878
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	6.266706	3853	525	0.3.2.1.16	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.039367	3006	1156
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	6.205766	2199	229	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.039908	17241	2129
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.128663	30	15	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.856571	14489	2758
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.039984	13933	5736
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.301285	21888	2962
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40	40.407681	10927	3635
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	40.391069	7302	836
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.760794	43	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.592350	28	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.045853	8	5	0.2.1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: intro y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.141069	9	5	1.1.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.041249	26	8	2.3.1	synth with cache (only 1: split; only 1: split; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	40	40.232741	55618	3317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.063022	79490	3241
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	6.445524	4174	443	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.862093	11402	1913
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.043057	37275	3851
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.052488	3640	887
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.091058	24565	2399
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.025913	9601	2736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.130710	26132	3976
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.036629	21263	2019
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.318391	12119	4922
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.223503	34017	2997
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.035674	22358	3426
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	40.273834	30401	4469
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.328795	12291	2271
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	4.819048	2524	429	0.6.6.4	synth with cache (only 1: intros s s' H; only 1: intros a b; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	40.481342	10385	2898
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.028171	18008	1934
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.000340	1530	147	0.29	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.141952	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.103829	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.062637	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.032759	34014	3219
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.035415	14162	4744
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.847320	31793	3892
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.048018	16689	984
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.017644	3287	967
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40	40.422679	22240	2651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.038916	29167	2729
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.237382	24433	3517
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.833070	49116	4653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.313223	8379	978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.034319	21536	3975
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.046592	40151	3968
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	40	40.019488	11347	1318
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.079625	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.763669	64276	4197
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.048613	22914	2752
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	40	40.321806	10392	3638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	11.282869	14482	937	0.44.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.028418	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	40.035723	2343	1208
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40	40.179244	22528	2671
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	40	17.449209	8022	715	3.16.7.16	synth with cache (only 1: Z.nzsimpl'; only 1: Bool.destr_bool; only 1: ring_simplify; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.033880	20738	2125
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.347289	16867	2201
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.532844	19202	2265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.153588	28217	1895
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.909961	31274	1963
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.040811	27651	4530
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.051107	18495	2044
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.028066	11	4	4.0	synth with cache (only 1: intros a b H; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.075836	19	7	0.0.0.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	40	40.419842	13910	2759
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.698665	22252	2921
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.025318	2326	1148
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	40	1.891737	1188	75	2.0.0.0.0.40	synth with cache (only 1: constructor; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	40	0.005505	1	1	0	synth with cache (only 1: exact Qmult_plus_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.005837	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	40	0.211204	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	40	0.006614	2	1	1	synth with cache (only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	40	0.008822	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40	40.028579	9035	4149
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015790	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.043561	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	40	0.019877	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	40	0.023230	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	40	40.033241	12342	4823
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.231638	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.145784	19	12	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.029685	9130	4635
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.340022	21679	2477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	40.850704	14800	1734
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	5.164329	1472	332	0.1.15	synth with cache (only 1: intros EQ; only 1: intros n'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.120756	10074	1165
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.203609	19899	3254
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.045463	41677	4035
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	40.038717	16839	4470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.039103	9	3	1.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.042175	2290	1250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.607062	33207	4282
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.637153	102	41	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	40	40.105880	13965	2475
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	40	0.104446	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.464468	17298	2963
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	40	0.044224	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	40	40.022477	12453	3178
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	29.245918	15321	1807	3.1.11.23	synth with cache (only 1: intros n m p H; only 1: intros op Hop; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.016038	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.027044	23956	1943
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.228872	24337	3928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.054181	14036	1667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.033874	19694	2811
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.366794	29464	2498
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.111682	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	21.718060	15659	2455	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.045846	37154	5064
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.013131	2456	1273
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	1.386571	256	51	10.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	40	40.459619	15398	2293
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	40	40.040543	15848	6783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	40.800194	49941	3197
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.045935	45068	3745
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.245330	14416	2962
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	4.313971	3756	333	8.27	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.930407	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.750932	44	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.204200	50088	3791
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.032636	12356	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	40.031666	27334	2449
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.420588	40606	3333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.785711	37282	4030
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	13.978010	1900	399	1.17.0	synth with cache (only 1: intros x y H a; only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.078676	32706	4657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	27.900917	20264	2240	2.15.2.16	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.011425	3028	1286
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.039356	19511	7577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	40	40.467122	23132	4381
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	5.388519	1481	596	6.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.211575	15736	3471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.717783	34918	1809
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	15.050763	7216	954	1.1.0.2.14.9	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.480853	61	21	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.021274	20855	1728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.028935	21937	2679
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.549175	23338	4143
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.057162	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.768146	43693	3194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	3.634576	1716	397	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.209836	16636	1913
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	1.916905	694	133	0.13	synth with cache (only 1: intros H1 H2 H3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.033612	24230	3839
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.015809	8063	1471
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	40	40.601296	26224	2462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	40.040871	28020	4889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	2.656219	1227	303	0.0.2.7.3	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.189592	32	12	1	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.115289	17232	3543
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	40.027564	23522	1910
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	40	0.064580	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	40.651278	87008	4275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	40.073171	4779	922
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.025228	13222	2130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.720567	55432	5132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.034912	12343	1295
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.229088	15214	1705
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.142850	544	72	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.136193	16	4	0.4	synth with cache (only 1: intros def_n0; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.741243	618	70	1.0.12.9	synth with cache (only 1: intro; only 1: rewrite H; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1.454972	206	39	7.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.803849	253	68	4.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	40	40.806251	114182	3053
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.018958	14432	694
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	40	40.481358	32855	2611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.129686	36007	4670
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.238413	25030	2659
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.591796	77994	4847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	40.027032	13917	1429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.060546	39677	4524
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.764331	54896	4909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.072580	14410	1864
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.500075	84274	1365
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	26.554207	22998	1859	1.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	40	40.933422	34464	434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.034159	10	3	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.456515	37670	2557
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.156830	36848	4728
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.040041	1570	597
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.386781	9	7	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.748011	44605	5289
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1.845646	1222	216	21	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	5.171266	4343	432	1.22.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.290312	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.800011	58476	4046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.028422	12930	3257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.141527	25669	3259
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.901071	54907	5014
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.037403	26723	4601
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.067153	142851	3680
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.241767	19517	3270
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.788826	55482	613
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	40	40.446650	11171	3128
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.068024	24351	2346
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.025208	4502	558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	40	10.651991	4520	1166	5.4.11.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	40	2.763218	1205	257	3.11.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	40.643894	29123	5432
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.741201	65102	4872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	42.211425	3493	468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.038064	27885	3269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.523418	53559	4724
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.026933	6057	3380
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.694453	67344	2487
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.133132	45656	3640
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	40	40.037612	17357	4093
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.078459	18584	2567
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	40	9.280700	1449	550	0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.489203	19087	3410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.487116	128024	3848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.281959	25	6	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.072248	73	11	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.873556	43319	6975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.135366	12569	2164
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	40	40.697038	28995	3674
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.047869	34863	3298
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.896261	38397	4370
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.040546	39933	3392
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.752003	15018	1203
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	40	38.852830	6232	1832	0.0.0.1.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: exact Qcplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: intros; only 1: apply Qc_is_canon; only 1: split; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.030627	6885	3913
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	40	1.149024	259	107	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	40.476653	14637	2531
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.822319	43270	2410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.134255	38088	4160
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	40.108505	8818	841
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	40	41.027771	48269	4890
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.029294	15957	1326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.068783	39365	3399
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.816672	79256	3720
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	13.248011	12400	982	4.27.1.1.1	synth with cache (only 1: intro n; only 1: split; only 1: now destruct n; only 1: intros Hb; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.571213	21093	1691
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.011163	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.020080	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.552227	64021	1271
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	40	0.913948	709	88	0.5.3.11	synth with cache (only 1: intros l l1 l2; only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.102987	39757	4278
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	41.338917	26906	3624
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.068375	6	6	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	40.533774	38515	7259
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.871901	15943	8753
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	5.879150	5721	850	6.1.3.17.2.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	40	40.148010	78054	3853
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.055459	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.024966	13	3	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.047812	39879	4719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.526524	1439	55	52	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.019897	11250	1377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.093539	50137	4062
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.483452	32852	3851
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.407216	14424	1527
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.641353	58250	3808
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.704248	43055	2581
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	2.091031	517	176	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.093988	30745	2765
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.645651	30212	4270
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.800339	68486	3752
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	2.555329	1312	294	0.0.12.4	synth with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.940923	39454	3973
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4.696049	2483	451	4.12.2.7.0	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.815151	52106	4623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.052530	64556	3077
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.030430	10802	4302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.873258	32828	5131
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.758005	5726	785
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008960	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.010135	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008247	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	7.492609	17171	666	0.0.0.0.0.0.4.80	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.010539	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.010768	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.064917	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.715842	108023	1786
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	40	40.535534	30216	6062
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.048059	46066	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.594214	29757	5002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	0.546866	182	52	0.1.8.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	17.793624	12076	1076	12.17.1.13.0.0.23	synth with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros e l1 l2; only 1: intros; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.302865	47	18	0.2.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.742551	24930	4859
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	1.596812	276	42	8.0.1	synth with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.814548	45197	4960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.420931	66844	4543
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.027285	26329	2733
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.035929	12334	5091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.835784	41082	4054
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	39.567079	27354	1489	102	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.766097	31522	3917
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	41.265103	29176	1814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	1.251864	281	31	12.1	synth with cache (only 1: intros l; only 1: now induction l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.027065	20373	2467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.830759	52568	3260
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	22.674958	29422	2613	0.0.1.0.2.5.8.9.1.12	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: intuition congruence; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	40	40.086545	51413	3505
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.534673	38196	4245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.755757	69638	2232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.833017	68293	5345
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	18.461374	12283	1650	1.16.8.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: simpl_relation; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.037892	11805	4863
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.867012	35880	2764
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.584472	19486	3772
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.053706	80351	4168
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.028034	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.046011	39416	3816
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.018152	12311	1369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.738319	53780	4090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.014414	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.349648	210	45	7.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.061428	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	40	40.540633	101653	3356
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	40.626269	29031	3302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.827657	15509	1712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.666882	25151	2232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.100266	57	13	5.4	synth with cache (only 1: intro a'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.041779	21601	2815
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.045489	15800	5227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	0.570162	439	58	4.12	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.024862	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.025716	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.411070	297	55	10.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.028658	7734	4097
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.626552	24745	2026
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.115443	51252	4007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.360668	5698	1684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	11.285970	6531	1254	4.5.1.3.5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.033584	13581	4896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.430172	45092	3221
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	40	40.674927	121923	1997
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.149489	23788	4276
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.027047	16669	2027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.733830	69915	3686
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.043872	37426	3763
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.897863	62495	4135
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.429292	29673	2545
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.652551	123228	2739
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.135942	36373	5156
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.119967	80836	2866
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.100511	37	9	3.2	synth with cache (only 1: intros n m s1 s2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	24.461812	33617	2743	1.33.15	synth with cache (only 1: intro y; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.976149	648	121	2.6.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.430460	195	23	10.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.242811	18	4	0.6	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.038334	14353	5973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.607300	36782	4403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	18.398279	35214	1631	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.100974	95916	2702
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	13.050748	12311	1604	0.3.5.0.24	synth with cache (only 1: intros a b; only 1: unfold eq, Equal; only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.276477	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.284268	16	4	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.266975	5	2	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.011429	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.036626	26624	3535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	25.444708	21804	2984	0.0.0.0.19.0.8.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.818116	77247	2330
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	2.745370	950	184	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.463028	9290	1112
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.142606	32427	5436
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	40.858554	26799	1918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.042138	14298	6744
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	41.194219	40441	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	41.039667	52406	2995
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.875175	120920	2268
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	40	40.640903	42777	2052
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.149422	27751	4725
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.053852	56758	4561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.097775	73997	3136
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.104231	7656	3110
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	2.829292	246	148	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.604890	23412	2889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.132271	32579	4303
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	41.006716	41068	4903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.043831	16650	6019
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.028664	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.025676	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.555638	34313	4293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	40.474895	107835	829
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.854956	94598	3031
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.021389	2	2	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.858907	44113	4467
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.044694	27675	1967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	1.117010	1064	133	0.6.16	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.561851	22069	2646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.759725	13717	4732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.798658	5537	3616
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.468327	13350	1767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.110833	22791	5251
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.654571	33889	5585
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.041481	33502	3553
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.532339	28402	3488
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	40	4.409674	18457	1589	0.44.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	41.303272	54771	2482
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.606342	27909	3318
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	40	6.804371	31860	2321	0.34.6.13	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.569828	30058	1953
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	12.833681	5591	287	32.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.046977	58868	3462
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	40	40.968120	31382	3985
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.851725	19688	2261
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	5.977250	2761	171	38.2	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.866516	4899	3029
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.199193	16366	4081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.225928	25083	4208
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	6.841401	7142	284	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.013658	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	1.179869	549	40	27	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.617552	17113	2864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	41.086797	23182	3638
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.007592	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.015012	2	1	1	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.015468	3	1	2	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.014884	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.016678	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.563757	24	12	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	40.621407	143095	1760
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.024476	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.099568	133734	14207
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	40.959431	56601	3895
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.176973	141	28	1.9	synth with cache (only 1: intro a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.041540	6280	808
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.297709	1272	126	22	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.665165	23078	5377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.843399	10014	3665
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.144096	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.378763	987	209	12.5	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.253558	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.745176	5417	3743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.034218	10586	4847
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	4.970722	1294	516	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.634632	26927	349
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.591754	31062	4548
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	12.457179	7321	1035	1.0.0.23.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.751326	10375	490
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.203450	43380	2749
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.022386	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.032127	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.105162	118461	10148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.859210	28406	4081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	40.055866	46856	4521
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.863163	16689	2850
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.809628	7799	4190
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.049453	14617	9131
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.113692	34535	5165
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.055306	41823	5026
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.729237	8789	514
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.114985	44531	4922
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.234713	27100	2106
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.776891	30156	2665
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.018532	2	2	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.033801	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.635079	55529	3879
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.070004	71087	2254
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	40.561570	29341	3928
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.513597	407	70	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.045296	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	41.056730	17644	3805
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.890476	13235	3704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.214423	3606	3132
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.131796	15010	4990
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.600523	22622	4836
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	40.706692	2620	952
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.076675	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.571432	39082	3823
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	4.960963	326	55	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.532993	19311	2735
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.672775	128822	2738
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.047992	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.825457	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.282241	44566	5508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	40.070586	94996	1640
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.435592	25109	4946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.096285	23067	3430
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	41.479190	10366	2062
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.011185	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.184140	6996	3906
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	33.726674	22743	1555	12.33.13.16	synth with cache (only 1: intro n; only 1: split; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.291728	21749	4886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.032408	6	1	5	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.476028	5449	642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	8.046341	3566	971	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.773303	212	82	4.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.400136	16613	1542
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.621281	23301	3666
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.039707	10	5	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.024907	8	3	0.3.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	23.523924	17527	1981	0.0.0.0.1.0.7.1.8.9	synth with cache (only 1: destruct x; only 1: intuition; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.927172	70355	2483
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.821175	75822	3724
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.048763	43327	3230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.118085	31495	3810
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.596444	18971	4013
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.050832	6106	3879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	41.153915	14097	1564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.012110	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	41.045633	5122	514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.205168	19058	5042
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.221171	8961	2206
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.946954	26205	4744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	14.630239	8282	1959	0.0.1.1.2.0.0.0.5.0.0.0.0.0.0.0.3	synth with cache (only 1: intro H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.533425	39796	2445
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.279396	23275	4934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.025802	26638	2517
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.407669	27028	4006
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.854063	13516	3180
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	41.052392	18235	2753
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.129012	19983	4941
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.625790	7847	644
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.042094	19135	4587
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.538325	27764	1251
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.036220	18928	4002
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.036657	4	4	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.665141	18712	2726
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.834941	77752	3804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	40.775878	39759	3381
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.023746	20518	2048
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.169200	36885	4311
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.808179	14953	1939
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.107258	3880	2732
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	41.182453	13482	1894
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.515829	7566	410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.260319	45351	3547
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.472610	26448	2051
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.777635	21100	4116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.665033	30091	1912
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.875531	67819	3054
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	41.162348	42833	5103
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	40.042725	29939	4138
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	41.045108	47409	5237
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.034911	24190	4363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.049632	7490	4779
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	40	40.686775	16262	2047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.464779	2201	165	4.2.14.2.18.2	synth with cache (only 1: split; only 1: intuition; only 1: auto with *; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.033590	8983	684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.047741	35079	5190
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.287668	17131	3135
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	7.728723	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.819880	20624	2920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.381373	25415	3888
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.595352	109721	2416
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.928398	31822	4538
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.050208	17406	2691
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	41.215615	27173	2581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.193366	42614	4204
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.088057	32030	1549
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	40	41.537770	14970	1447
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	40	0.640529	107	38	3.3.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	0.852070	210	65	2.2.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	26.814691	21172	2564	0.3.1.0.15.6.7.1	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: auto; only 1: simpl; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.213193	47189	4922
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.043926	8	6	0.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.598556	30236	1933
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.431838	6987	414
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.824215	23807	2983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.579938	55240	2270
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.691134	30149	1598
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.559730	222	37	0.8.3	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.194209	150	24	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.067257	55504	3609
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.572371	36985	3626
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.159363	23174	3719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.065574	24366	2493
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.764695	37856	3102
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.009762	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.232115	40533	4149
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.564459	39618	5556
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.385599	62549	1971
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.569035	4184	472
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	41.103159	18684	3687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.693456	42283	2345
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.009943	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.230801	54852	3060
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.044328	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.063777	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	13.902323	6508	1328	0.14.0.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: now split; only 1: intros (EQ, EQ'); only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	0.823249	277	28	1.14.1	synth with cache (only 1: intuition; only 1: contradict H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.052107	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.032728	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.014778	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.046436	34342	2575
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.486676	45333	4372
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.408216	10987	505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.075828	42727	3513
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.438174	1103	270	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.632025	31081	2914
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.008894	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.276645	21858	1955
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.444850	34474	2029
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.469335	4113	409
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	40.950369	14195	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.622448	35998	3726
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.381947	26570	3810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.053685	43995	5314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.783768	45659	2754
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.884219	234	66	0.5.1.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: destruct H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	2.816048	600	73	0.1.0.18	synth with cache (only 1: constructor; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	40	40.928450	20821	3051
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.170450	16613	3587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.109856	25289	2136
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.066561	91770	4216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	27.973316	39802	630	3.1.0.1.1.3.1.0.1.1.0.0.200	synth with cache (only 1: compute; only 1: destruct d; only 1: trivial; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	41.034416	34193	3088
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.009156	1	1	0	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	1.285411	585	101	1.12.4	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.023088	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.014348	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	5.404067	1625	709	2.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.475011	20420	3425
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.007408	4294	415
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	41.170936	12713	2773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.390430	8310	1059
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.399924	40361	5044
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	40.881866	20174	1433
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.423426	246	33	0.0.11	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.076416	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.624230	723	55	30	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	40	41.543329	17464	1867
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.247041	13637	2639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.118276	34357	3612
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	22.558204	16519	1858	1.0.1.30.3	synth with cache (only 1: unfold permutation, meq; only 1: intros x y H; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.654435	14211	1876
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	40.251367	44127	2847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.032838	19705	4032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.034905	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.014448	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.736037	26886	3555
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.027001	580	398
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.121466	21405	4456
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.357735	33534	4239
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.798747	31810	3587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.225062	26712	4090
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	41.022214	31001	1387
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.025867	8770	3886
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.442891	18765	4414
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.244520	30684	4911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.972823	28144	3244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.457436	19007	2917
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.841867	43582	3432
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.446529	4072	365
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.515292	52567	5434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.041697	34484	3834
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.123881	70309	2932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.195100	18741	2773
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.439200	32541	3019
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	5.057000	14831	763	0.6.2.17.6.14.11	synth with cache (only 1: red; only 1: red; only 1: intros l; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.067694	7360	4993
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.046051	28969	4442
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.275325	43244	4308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	40.567937	15843	2069
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	2.452278	685	164	0.1.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.662704	20012	3715
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.088543	34438	2273
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.009132	998	372
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	7.035304	4413	270	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.505475	102441	2723
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.023762	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	4.444906	3544	286	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.921210	19922	1436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.175082	15454	2072
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.024684	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.146379	4	2	2.0	synth with cache (only 1: intros; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.085340	22210	3181
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	41.200949	13115	1666
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.111260	14916	1891
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.063078	19363	4162
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.047283	32863	9076
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	18.352558	9119	1663	0.3.1.6.0.12	synth with cache (only 1: intros def_n0; only 1: intros x y z; only 1: compute; only 1: intros; only 1: rewrite <- H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.067387	9	4	2.0	synth with cache (only 1: intros; only 1: dintuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.533382	39698	2704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.041975	15320	2317
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.610588	775	381
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	4.458183	1531	400	17.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.621216	93760	1684
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.116055	46118	2020
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.087303	6935	3246
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.111216	37410	4647
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.127151	16507	2399
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	40	41.210959	23200	1300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	41.433581	34127	2352
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	4.545424	718	347	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	25.088474	56775	1395	97.29.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: do 2 constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.023132	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.021334	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.287422	29175	5162
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.182690	29	13	3	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.021147	6	2	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.154084	34968	5077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.757127	10355	2336
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.018343	915	281
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	41.183435	24626	2785
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.173025	37714	2337
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.929910	6481	3537
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.097021	45939	1958
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.123371	16515	2475
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.683127	1696	387	7.9	synth with cache (only 1: intros x y Hx; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.944817	8582	2496
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	40.193065	31172	4295
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.533636	27325	1470
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.564638	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.271345	42053	1261
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.111647	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.010086	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.217988	23662	3179
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	4.536067	6732	511	2.0.1.38.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.765101	47904	2009
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.157394	1408	267
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	41.275069	16780	3189
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.041008	38308	4309
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.200747	7635	4015
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.073301	49801	714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.024672	3	2	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.019375	8	2	5.1	synth with cache (only 1: intros; only 1: intuition Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.032921	22182	3036
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	41.319428	9051	3504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.314256	8385	1559
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.162430	27206	2804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.205527	22919	3676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.502535	46728	5789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.036077	17912	3963
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.004067	2716	270
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.649037	24163	3480
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.029034	8352	3132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.216175	6491	2434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.140581	23916	2389
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	27.047736	35661	3481	52.1	synth with cache (only 1: intros n m H1 H2; only 1: Pos.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.070698	7641	4361
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.231266	92	26	1.4.2	synth with cache (only 1: intros n; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.903207	779	135	1.1.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.806450	76	31	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.520055	3729	421	19.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.421389	38526	2685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.042086	26754	4612
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.247661	32392	2310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.523067	25811	5181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.044219	43558	3000
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.366068	829	229
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	41.041959	15157	1794
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.039084	30546	3223
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.209506	74309	500
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.046752	28573	5355
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.251214	67267	4188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	40.026366	13866	1832
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	41.225858	34843	2064
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.052982	57114	3858
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.093463	17662	2909
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	40.089962	28755	5050
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.003379	557	258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.880166	35363	3252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	7.168884	3425	615	5.3.0.0.0.3.7.3	synth with cache (only 1: intros s; only 1: intros x y z; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite <- H0; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.440175	55471	3342
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.059585	38195	2200
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.115805	4978	3230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.045943	52172	3213
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.337606	71468	1822
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.022422	2	1	1	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	0.315084	85	26	0.8	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	40.034614	26329	2893
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.304173	24076	1957
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.551022	40946	3299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.047510	40495	5114
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.147331	44346	3715
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.672122	1465	258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.109298	22872	3348
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.597282	8525	2686
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.027618	18594	2511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.128121	5059	3871
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.034253	26897	2543
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.292198	49209	5531
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	40.032449	34988	2568
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.303108	32628	4486
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	41.194466	37482	3366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.049622	53188	5002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.138197	43259	4353
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.436957	1788	247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.084658	21086	3367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.598488	23585	3429
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.027341	11067	2913
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.142075	4103	3105
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.030952	24784	2651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	31.503688	29712	2376	27.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	16.295758	13455	1426	2.5.0.0.7.1.18	synth with cache (only 1: intros P Hrec; only 1: intros m [H3 H4]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	40.273502	50084	4394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.243355	44167	4737
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.567042	19230	1397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	40.056394	21756	3220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.337182	33363	4115
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	40.003974	2712	223
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.290338	8635	2336
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.008120	15155	2354
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.174415	13095	4480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.034477	30045	1997
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.031018	25050	2191
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	40.261769	21580	2998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	41.160041	15329	1846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.036724	12948	5537
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	41.219126	19908	1973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.036455	26536	4554
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.005245	985	289
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.244854	41785	4386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	39.191066	47077	3230	1.20.11.1.21.1.7.0.43.0.2	synth with cache (only 1: split; only 1: intros (e, H); only 1: compute; only 1: dintuition; only 1: red; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: intros (e, H); only 1: intros; only 1: compute; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	1.054955	327	83	3.0.2.4	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	44.057368	14573	1592
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.105224	50253	2558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.030681	22872	2007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.027555	16517	2926
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.196737	71226	3549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	40.649478	30340	1832
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.019604	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.048221	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.042328	33534	4773
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.611699	16757	1742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.032834	13858	5866
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.093806	1524	338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.217703	22647	3052
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.478427	39852	4191
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	13.990673	7595	1284	1.1.0.0.9.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.056882	5	5	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.017949	7841	2014
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.033853	8129	5441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.029733	17512	3853
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	21.551294	613	128	2.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.192978	48893	4434
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	40.467697	28160	2544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.816311	2112	354	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.412798	28158	5889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.058865	57411	7907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.044354	32926	3059
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.132543	47643	4980
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.193269	31270	5082
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.101165	14699	3286
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.040236	41264	3045
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	40.038557	23901	3769
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.872297	2537	479	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	40.004410	3238	212
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.339187	69971	4512
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.655329	33615	1634
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.500415	131701	6151
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.053434	63251	6095
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	41.002444	8038	1185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.136338	25112	3169
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.148862	35881	3747
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.501135	42764	4269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.037006	7	3	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.064189	15	5	2.0.1.1	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: apply H || intro; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.373327	42231	4705
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.038901	27959	3196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.044078	38915	3670
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.014717	3924	182
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.349292	64787	5123
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.812703	26960	2858
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.687482	88599	3704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.038182	25825	5641
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	40	41.156360	12548	1798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.045461	28983	7306
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.073633	22800	3431
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.322209	79772	5954
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.024848	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	40.504679	31835	3889
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.045633	46977	2307
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.069847	22110	2416
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.418844	1082	281
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.368269	116637	4092
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.552157	25641	3208
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	40	40.673868	69424	4054
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.053914	33111	5086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.045220	31677	5811
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.134618	47642	4227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.221489	32421	5788
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	40	0.019319	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.085268	19	8	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.028128	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	41.079870	7402	1576
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.521096	26286	4946
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.042088	23924	2412
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.033913	23693	3539
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.380506	748	227
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.274480	52112	6585
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.652063	20820	2282
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	40	0.052643	25	7	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.062217	59897	5388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	40.044356	30735	6183
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.157706	124235	660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.132991	49509	4639
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.154806	97947	3490
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.019228	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	40	0.019685	2	1	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	41.042063	8480	1637
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.374138	37904	5566
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.024127	16928	2244
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.416125	646	211
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.132454	56503	7869
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.038803	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.340448	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.339195	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.539214	25751	2221
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.762077	38506	5201
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.062451	58374	5829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.041370	20936	5305
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.063662	34629	5048
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.290421	54684	6303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.402428	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.701849	115310	3902
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	41.101030	8627	1580
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.115947	25606	4919
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	40	0.008907	1	1	0	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.808360	214	69	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.012637	6890	1089
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	28.749583	27786	4121	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.379889	90238	2862
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.004355	686	197
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.711236	152469	2394
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.059343	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.057517	51419	5940
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.178977	24124	4812
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.578757	40894	6565
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.049049	45254	3892
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.450400	41146	4985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.028156	18736	2046
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.046782	48647	6135
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.565521	43035	4273
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.709350	155939	5338
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.253950	53857	4002
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.325019	611	150
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.599291	34227	2822
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	40.052478	33413	5029
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.042610	24779	4807
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.531249	32494	5766
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.024598	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.049635	55575	4608
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	6.632647	4546	974	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.559297	18702	5667
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.035507	13394	1956
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.126361	60442	3177
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.414957	30685	6315
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.051174	51379	4338
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.873139	81126	3416
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.004725	865	198
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.808001	7666	1429
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	2.632302	35	10	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.474323	13	4	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	1.004986	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	8.916097	2481	649	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.046541	53944	5583
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	2.539511	1023	348	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.198892	39705	4739
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.076037	115839	4825
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.567636	19244	3683
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.040762	28045	3623
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.194473	15889	2056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.033925	9	3	1.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	40	40.556582	55914	5039
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.572265	137847	5846
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.341403	15214	2661
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.370773	37665	2804
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.065312	643	154
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.828638	53132	1242
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.048126	37226	4680
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	33.612312	43516	3737	0.0.18.18.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.191946	88234	846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.053237	44934	5356
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.029382	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.583207	137	44	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.034948	27388	5327
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.035363	23965	1712
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.608107	52242	4928
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.783861	510	109	0.0.4.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.246924	116373	2678
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.038077	11	7	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.009948	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.839301	49992	5197
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.572169	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.434390	30528	2041
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.036869	855	169
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	41.356504	10893	1509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.038724	41529	5245
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.749853	49632	4188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.206038	69471	4223
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	40	8.521512	5582	704	11.9.3.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.150205	22	7	2.0.4	synth with cache (only 1: intuition; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.031219	3	3	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.046299	56154	5930
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.063834	26886	4098
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.026011	7944	4928
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	3.062896	5649	252	4.0.1.64.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	40	40.155169	80946	3127
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.533595	95569	5318
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	2.705365	480	158	6.1.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.927213	606	85	10.7	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.234290	16	16	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.079872	5	3	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	40	40.335814	37492	3741
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	40	5.220961	4200	593	7.1.4.2.3.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro eq_rect_eq; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.077403	845	163
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	40.229073	81013	5386
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.013312	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.039563	22539	4065
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.773658	19062	2495
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.211144	32041	3930
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.527012	40769	3106
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.645910	41796	4689
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.629252	46014	4430
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	19.932560	29185	2740	4.2.0.0.40	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	40.060836	12534	1345
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.587808	30355	3136
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	40.728339	45609	4634
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.003422	890	167
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.493289	120018	6124
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.697744	110544	3346
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.049354	38528	4091
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.124504	85794	5387
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.115377	31018	3785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.031859	31621	3840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.038563	39759	5085
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.479634	159205	5547
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	40.025535	22004	1609
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.559164	36	15	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.653965	22446	3650
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.626850	71162	4631
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.055654	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.008122	1308	190
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.765736	130476	6778
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.052266	38910	4531
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.825172	21863	2136
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.768510	42051	3924
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	40	40.704543	28723	3950
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.530620	47136	4386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.180047	52851	4144
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.561311	96334	5351
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.021864	17671	1880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.093037	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.099693	24052	3756
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	40	40.541955	52204	3868
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002706	1783	155
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	2.430383	1017	184	1.0.0.6.4	synth with cache (only 1: induction 1; only 1: split; only 1: intuition; only 1: intuition; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.286315	71844	5620
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.071231	10382	1059
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	41.006577	30840	2099
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	41.022076	28605	4113
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.394599	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.065262	8	6	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.850904	47799	723
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.555925	38257	3581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.255146	20846	4210
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.028282	8237	3584
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.002850	651	129
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	40	40.650307	40177	5679
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	18.346209	19744	1753	0.0.0.0.13.0.27	synth with cache (only 1: intros Hbeq; only 1: unfold filter; only 1: intros a n Ha Hn; only 1: rewrite xfilter_spec; only 1: simpl; only 1: intros; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.606901	18870	5393
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.342092	155441	5406
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.046170	38050	5321
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	40.478775	11552	4869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	3.344060	1790	166	1.1.0.19.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.169974	10445	669
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.675933	25159	2711
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.668849	44048	4473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.051906	27022	2006
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.597889	24494	3289
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001937	286	91
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.638094	20245	5222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.083153	33305	4296
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	41.082047	22981	2087
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.559002	35910	2330
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	40.717140	36029	852
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.042144	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	40	8.183780	4684	697	0.3.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.055607	84540	784
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.565025	25196	5408
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.534067	19572	2227
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.760732	29310	4689
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	40	1.823083	515	92	1.2.0.1.0.4.11	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.040677	26891	3955
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.002033	343	78
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.745036	23930	1679
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.047636	36422	5051
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.057266	52299	4122
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.743129	26155	4348
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	40	40.735216	36377	4197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.058775	80905	2541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.150960	27016	3895
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.047747	48994	5553
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.792977	13203	2077
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.642047	48673	6140
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.050708	39005	2772
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	40.742783	34851	4088
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.001535	144	62
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.099381	36777	5193
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.032899	53715	4649
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.390167	17072	3786
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	40.066900	88318	5536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.054178	69816	2814
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.440724	18884	3543
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.472008	42727	4177
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.537739	7450	1471
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	40	40.739040	45681	3123
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	39.741297	44797	3821	1.11.0.9.0.3.16.13.3	synth with cache (only 1: intros H; only 1: intros s; only 1: intros E; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: contradict H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.148049	15	12	3.0.0.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.715337	45189	3760
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.001357	262	51
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.051530	51630	5292
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.037683	44894	3693
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.128729	27491	2769
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.506831	56419	4228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.041854	32810	6289
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.860781	38762	3548
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	40.614513	39435	6034
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.015029	4	2	2.0	synth with cache (only 1: intros a Ha; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.014629	4	2	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.768416	37828	1933
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.070153	27738	2489
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.843692	53728	1640
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.039572	34907	2741
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.001440	219	51
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.048801	66235	4795
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.657954	20996	1947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.040347	40575	5916
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.674890	53809	3549
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.516082	36429	4361
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.602620	18840	2369
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.711420	23084	3602
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.750662	31800	4696
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.027835	23786	1319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.354049	39542	4449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	40.053318	53639	4783
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.001273	121	52
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.022525	28171	2863
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.036562	38330	4519
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.338393	68	31	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.037966	25443	5575
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.638201	58015	4997
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.742649	39167	3324
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.112947	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.849958	43460	3983
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.545626	16780	5286
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.054573	29817	4873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.051397	23262	2477
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.852223	36313	4760
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.065336	89884	3492
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.047549	27465	3325
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.001388	97	34
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.088495	22526	2467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.048065	79060	3050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.011970	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	40	40.789137	32223	4643
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.116162	37099	4214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	40	6.308945	13304	395	5.63.24	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	40	0.102355	19	5	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.864534	49834	2945
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.379510	36602	4672
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	4.046063	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.137226	36087	3849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.039671	26000	3023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	41.327475	9537	607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.058632	26930	4141
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.072899	28	9	0.0.2	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.039981	25386	2995
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.002161	852	57
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.039288	56182	1914
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.820075	37822	3517
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	40	40.993381	18647	2803
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.665640	28537	2877
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.644212	24987	3955
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	40	40.026892	22807	2071
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.751993	38158	4041
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	22.860231	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.059881	23860	2159
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.505745	34292	7673
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	6.322291	9	7	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.076320	23846	4729
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.022921	36540	4158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.034053	25928	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.017971	3	2	1.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.007349	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.718955	22511	4109
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.771610	86598	9694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	8.940380	5522	1276	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	40	40.025653	16671	2168
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.490793	25646	3492
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.645842	19365	3628
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.477830	22350	3985
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.055642	40373	3538
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.008252	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.622020	35463	5183
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.001517	177	40
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	4.289978	9	3	3.1	synth with cache (only 1: intros; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.060950	60964	4727
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.026930	42580	3773
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.884516	9114	3791
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.916015	65418	534
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.043618	4	2	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.016153	4	2	2.0	synth with cache (only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.037294	35431	3191
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.366015	34530	3186
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.640137	34484	5336
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.010863	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	41.179198	31603	3102
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.043455	36052	3313
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	40	40.406531	27299	3284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.925748	8596	1507
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.001621	309	39
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.069450	27293	4607
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.079424	147634	8513
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.446546	21739	1909
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.040986	32141	3154
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.590166	47678	2826
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.125705	33872	4956
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.014103	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.019345	3	3	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	40	40.620746	33208	1611
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.730266	43220	4116
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.074592	34805	4227
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.539434	80808	906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.528660	11246	2459
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	17.804444	21582	1012	0.0.0.0.0.0.2.64.0.12.71	synth with cache (only 1: split; only 1: intuition; only 1: firstorder; only 1: intros l'; only 1: intro; only 1: intro; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001632	146	39
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.048476	60663	4219
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.051374	100848	6702
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.092102	39282	2024
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.448947	29542	3992
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.878687	25453	2930
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	40	40.029701	22630	2989
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.633138	77836	1148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	40.059543	62124	2596
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.470457	43201	4371
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.520632	26551	2207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.692267	6004	735
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.001658	323	38
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.056938	79061	3669
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.023207	26434	2819
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.045024	55772	3645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.541278	36860	4685
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.090723	19	4	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.025165	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.667021	31307	6929
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.650857	93	21	9	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.022544	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	1.001546	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.358889	53	17	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	40.636160	30513	3886
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.670013	34270	3470
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.085698	35208	3499
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.477235	28956	1873
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.210716	48552	3789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.109175	36722	3956
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.001381	163	46
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.074139	117865	5771
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.035012	47912	5145
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	17.455743	12753	1419	0.0.34	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.007127	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.044874	50014	4046
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.173842	23884	5214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.448681	28070	3073
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	40.713600	31250	4479
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.579534	36406	2545
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.077853	21757	9187
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.008679	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.626897	22229	2729
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.005877	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.549455	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.001292	92	45
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.043399	49500	4029
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.096924	181902	9464
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.054453	45642	6323
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.447611	19720	2730
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	7.181104	5854	984	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.037060	31496	4572
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	40	40.637889	41481	3362
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.856776	23170	3358
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.574521	23152	5510
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.643214	46908	2167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.264812	23412	2525
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.377533	17094	1756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.191790	114	19	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.001104	119	44
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.052273	55064	5635
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.041936	67255	5111
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.629522	62167	2081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.104355	14514	1496
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.042558	37025	3166
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	40	40.793233	18039	4899
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.623404	30882	3642
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.054136	21428	5580
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.974799	32685	3369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.621189	8992	1692
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.942219	17650	2029
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.001508	67	30
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.031454	240	93	2.1.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.067478	75580	6373
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.057893	70256	4054
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	25.830606	28459	2557	4.0.94	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.738133	32127	3074
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	28.045906	21905	1991	0.0.1.2.32.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.038066	11398	2545
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.043856	27962	2663
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	40.816927	19583	5117
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.195018	30438	4427
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.170451	70	21	1.1.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.474680	88815	885
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.001345	181	48
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	41.109914	40998	2024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.071424	66384	3924
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.059251	75225	6013
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.166690	24054	5245
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.555433	163	78	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	6.224782	7777	1023	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.702451	51817	3405
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.617590	27216	3347
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.046428	31833	3899
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.040724	30657	3068
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	40	0.383079	1059	48	0.1.42	synth with cache (only 1: split; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	40	1.009346	2129	112	5.5.49	synth with cache (only 1: split; only 1: intros A A_wd A0 AS; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	40	1.302296	1776	75	0.55	synth with cache (only 1: split; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.062145	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	40	0.063243	31	12	0.0.0.6	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.438491	110	34	1.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.758749	22196	5090
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.942612	43941	3800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.649830	113377	809
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.004733	212	38
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.050253	30141	5339
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.919714	9200	2549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.010657	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.018901	7	2	5.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.051685	35950	4416
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.087448	125901	7172
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.097398	60	24	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.343658	84	38	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.759365	908	147	1.0.14	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.254689	222	47	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	9.643222	4538	1045	5.1.3.5.0.5	synth with cache (only 1: case n; only 1: intros; only 1: reflexivity; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.734459	25684	2557
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.030769	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.068094	27649	3770
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.027373	25175	2072
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.494696	29184	2969
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	40	0.522710	94	18	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.742147	31336	4566
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	41.055020	86122	3988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.488149	70307	6602
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.001727	315	49
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.983398	1947	256	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.040695	27137	6434
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.061996	68304	5428
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.111356	184293	9700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.858243	22299	2696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.699341	42257	3804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.035797	19952	3918
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.038518	15185	6105
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	39.766624	78023	4338	0.0.2.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	40	40.577159	36283	2454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.140180	34280	2213
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.001305	335	41
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.367783	38921	5098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.045299	21454	5381
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.140093	58942	5790
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.355753	15610	1709
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	10.312259	7975	824	0.34.0.12	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	13.798113	6903	1242	1.0.1.0.0.0.0.2.0.1.0.0.5.0.0.4.0	synth with cache (only 1: unfold Nat.of_uint; only 1: induction d; only 1: now Nat.nzsimpl; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?Nat.tail_mul_spec, ?IHd; only 1: trivial; only 1: simpl; only 1: Morphisms.f_equiv; only 1: now destruct nztail; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.922386	17587	2118
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	2.013780	2084	309	10.3.7	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.032728	13804	4215
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.911421	32828	3661
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.033633	26136	2524
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.925229	54620	3442
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.064175	14	4	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.052206	2	2	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	40	40.523116	80419	3441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.049783	43856	4787
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.001251	166	39
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.694610	38604	5124
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.948368	21073	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.507709	34494	2728
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.180825	77374	4612
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.046092	34733	4544
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.905689	21925	2564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.252942	5	3	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.932850	45994	4641
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.034261	28164	3318
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.317366	852	267	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.573285	19886	5910
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.070230	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.593149	73307	4660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.047999	11739	5847
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.001701	155	47
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.129087	37209	5786
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.729120	25276	4467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.533984	31528	2663
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.188741	93062	6580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.036830	31172	3651
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	40.511046	25302	3174
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.029285	24788	3247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.996166	3562	467	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.986320	23531	1276
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	40	19.773561	26044	3107	5.1.2.0.12.0.19.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.922106	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.099786	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.375806	43339	2496
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.516344	52188	5593
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.043549	13242	5921
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	40	11.505611	6166	1317	0.1.0.0.7.8.0.1	synth with cache (only 1: intros a; only 1: intros H; only 1: N.bitwise; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.001981	335	70
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.733677	1059	167	1.14.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	4.309698	1240	342	0.0.0.0.0.0.1.0.0.6	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.079569	41973	2361
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.362148	21633	3048
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.296496	65134	5206
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.287567	92	25	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.359214	33909	4233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.036917	26939	3181
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	40.094082	16858	2801
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.953364	18183	2048
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.038392	19165	6479
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	40	0.019804	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	40	0.035867	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.038304	13484	5683
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.803597	30374	775
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.011174	489	65
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.821853	36037	3310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.045148	43335	3434
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.357599	155	42	9.1	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.021190	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.022164	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.363087	28400	1870
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.875812	20143	3110
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.983763	18593	2426
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	40	3.036588	2524	271	21.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.034276	29489	2524
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.025311	14196	2411
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.862573	26355	2512
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	7.493883	4023	773	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	10.123627	8276	688	29.19	synth with cache (only 1: intros; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.013641	3	2	1.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	40	40.563357	51059	5882
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.006086	478	58
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.449709	32378	3293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.635631	66791	3473
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.501218	29579	4952
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.058830	53624	6371
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.062473	46471	3808
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.053055	29558	3866
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.504458	41322	3289
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.168033	93869	5552
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.190357	24500	4111
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	3.162166	779	141	6.0.5.2	synth with cache (only 1: split; only 1: split; only 1: intros n' Hn'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.020113	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.669035	41320	1372
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	40	40.491255	14580	2119
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.007645	326	71
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	16.884549	3664	724	1.1.9.10	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.465355	41835	3716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	40.082592	22714	4080
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	40	41.059666	15891	2668
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.093878	48309	5846
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	13.278073	5737	658	0.16.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.040080	25777	2954
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.854854	14778	2428
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.065714	8	1	7	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.174401	53498	5219
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.718062	16488	3271
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.866480	31748	3573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	21.372888	6603	988	0.11.13.0.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	40	40.439572	23906	4090
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.003010	380	110
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.804508	43377	2838
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.052022	20	6	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.625314	56847	3113
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.954155	36118	3341
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.922764	35335	3170
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.028765	20375	2407
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.575216	25144	2259
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.161576	65666	3453
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.035708	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	41.220811	17851	3731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.370830	66880	3414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	41.021634	25887	3383
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	40	40.491805	17325	4168
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.001434	118	37
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.809899	45847	2849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.662362	19467	3323
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.919883	12161	976
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	41.142857	18962	2455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.074671	35283	4765
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.584305	39245	3690
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.276391	49791	3595
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.611024	1103	135	6.12	synth with cache (only 1: Z.swap_greater; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	40	0.030189	4	3	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.367682	336	47	2.11	synth with cache (only 1: intros a n; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	40	0.014464	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.039557	18	5	3.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.142514	35478	4438
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.474114	50	14	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	40	0.014213	5	2	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	40	0.028369	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.869456	20883	6043
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.768117	20975	2687
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	40	40.044819	13042	8197
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	4.325833	3080	227	15.13.14	synth with cache (only 1: intros x y; only 1: intros H'; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	15.805129	6189	2130	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.446407	248	43	13	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.005333	593	98
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	5.684226	5500	285	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	2.708863	2091	192	39	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.079437	46318	4551
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	40	5.746926	1990	628	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.055807	25413	3589
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.840593	21015	2662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.901799	21450	3565
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.263030	50471	4402
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.526695	16646	2201
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.161592	60662	3161
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.884703	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	40	40.144790	38138	4252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.753186	19904	2591
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.005799	600	82
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.869273	103046	5322
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	41.242302	52119	2519
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.093722	50743	5159
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.053941	16521	3386
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.564608	29144	5368
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	40	41.211172	22347	2171
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.930409	38804	2580
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.120759	31345	4314
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.006697	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	41.036043	97353	4839
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.052024	34705	6255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.775789	18007	1449
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.001625	433	35
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.469851	16517	5947
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	41.097993	22746	1327
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.718431	30774	5485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.050719	37328	5152
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	1.047096	226	113	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.712087	36741	3735
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	40	41.063709	25932	2585
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.018139	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.880018	28928	1151
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.686818	43189	3422
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.955921	90128	5572
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	40	40.431070	16395	5892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.556985	12259	1790
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.001282	62	34
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.484700	40633	2099
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.942562	7969	1627
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	23.299072	16428	1558	29.20.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	4.322799	4173	322	51	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.034297	27275	4600
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.606700	54709	4042
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.710972	29107	3123
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	41.177041	26659	4658
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	40	2.523625	800	100	0.0.0.17	synth with cache (only 1: intros l; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	8.776794	19654	551	103	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.023227	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.018642	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.124460	69	13	0.2.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.022521	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.025755	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	40	1.960789	344	62	1.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	41.239775	20682	984
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.542262	37203	5101
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	40	9.449353	3171	945	0.0.0.0.1.0.3.6.3	synth with cache (only 1: destruct x; only 1: intros; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.609396	198	66	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.009983	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	40	40.943441	18254	3820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.752547	18516	3491
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.002071	63	36
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.839878	12623	2445
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.831887	37279	1771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.037901	27244	5089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.366812	61843	5090
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.594323	54343	4519
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.486319	87109	6380
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.966725	88217	3639
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	40	41.315889	9912	1984
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	0.070933	10	5	0.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros a0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.607930	21938	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	41.074934	34699	1793
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.001698	155	30
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.556986	27492	3871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.392403	109	41	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.014494	4	2	1.1	synth with cache (only 1: red; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	6.433563	4470	897	19.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	7.107425	13316	212	0.2.0.0.2.152	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.661337	5538	103	0.0.102	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.786791	44906	3636
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.041592	33693	4428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.364689	3542	77	83	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.021861	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.386193	374	59	0.0.0.10	synth with cache (only 1: intros a; only 1: unfold Z.eq, Z.add; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	40	40.639392	45011	3261
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.935627	32020	3140
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	40	40.601520	23154	2287
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	41.475147	41457	3549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	41.182299	59028	2865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	17.080233	5393	560	1.0.0.24	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now rewrite add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.686357	40367	3836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.741379	31	9	0.3.0.1	synth with cache (only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: intro m; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	37.193996	21707	3235	2.0.0.1.2.0.0.7.2.0.0.0.3.14	synth with cache (only 1: compute; only 1: functional induction (min_elt s); only 1: split; only 1: auto; only 1: auto; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto; only 1: rename _x0 into r; only 1: auto; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.114966	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.001401	257	28
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.080262	117252	4143
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.053743	38332	5237
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.928853	57389	5108
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.706609	257	81	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	40	40.660210	46000	3923
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.934320	34687	4694
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.550642	66577	5317
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.578370	44495	2347
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	41.023255	20242	1779
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.815853	14271	2305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	40.574041	3696	735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.725675	24	10	1.0.0.3	synth with cache (only 1: intros; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	32.728611	24220	2905	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	40.598565	14349	1084
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.105199	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.001233	91	39
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	41.016637	36889	4179
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.032204	19454	2181
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.593258	55789	3225
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.543181	26025	4060
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.661676	24049	2742
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.886389	19639	2633
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	40	40.140053	20200	2996
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.023591	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.797059	21	7	0.1.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.734721	9127	1169
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	40	40.459812	7358	1879
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.009280	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.012453	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.010148	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.063694	99744	3868
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.440252	137693	2439
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.001441	86	37
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.015081	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.015367	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.011289	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.031970	12571	2085
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.540533	16597	1979
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.669919	12864	2454
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	40	41.188892	16076	1663
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	40	40.978638	46590	3351
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	41.086485	21592	2747
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	41.248434	19531	1700
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.099181	13	11	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	40	0.113664	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.156383	11573	1894
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.988079	50454	2498
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.007409	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.533287	48682	3263
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.305987	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	5.992886	6350	630	7.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.844862	46483	1734
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.036402	26961	2606
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.041245	16429	2036
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.629706	25700	2023
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.881739	30034	3765
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	40	40.854049	19731	2777
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	41.036652	14301	2991
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.014465	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.025366	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	41.324132	11760	1862
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	41.021068	11949	1757
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.114701	26989	1332
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.133302	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.230188	112241	1577
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.009851	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.833119	19924	1929
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.917903	26570	1480
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.046379	50754	1251
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.035737	16481	2627
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.665287	17994	2393
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.844983	15633	2765
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.751979	33129	4041
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.342102	68773	3791
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.743590	13466	2657
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	41.414328	2650	1128
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.837539	27241	2270
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.375470	78773	2356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.754026	11337	1002
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.815144	25144	2062
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.008624	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.047656	48870	1798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.039191	22860	3563
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.699465	11054	1028
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.440513	31809	5770
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.895042	58835	2894
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.564570	36603	3050
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.804471	17734	2679
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.850834	14928	1627
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	41.277233	4184	607
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.655084	47462	1317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.012249	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.695701	13064	1874
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	28.895232	13954	1628	0.0.10.2.1.5.2.2.4.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: intros x; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: intros; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.020971	6465	2542
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.656956	30971	1154
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.113340	34028	3731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.745416	21190	4138
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.662363	34191	3123
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	40	40.561196	13696	1535
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	41.095980	14396	2901
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.044310	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.697232	18930	2312
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.049754	4	2	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.012612	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.830359	2888	818
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.139999	32090	3322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.727118	13765	1447
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.818363	13603	1800
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.050302	63164	1394
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.904601	18565	1339
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.034935	17708	2365
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.747946	18796	2447
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	41.028247	21960	948
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.317696	65262	2932
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	41.445033	15232	2874
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.677594	19974	2079
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.497695	15213	1187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.724620	14739	1200
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.839699	11132	1622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	1.951885	106	30	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.697466	47582	3559
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.032994	16096	1696
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.801576	19642	1198
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.025090	13401	2409
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	9.886213	4980	606	0.0.3.17.0.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intro x; only 1: abstract now inversion 1; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	41.168048	15801	2954
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	41.156487	10144	758
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.440363	11986	1133
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	41.252110	19700	2880
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.937961	9850	1425
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.431898	24575	1238
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.908527	16608	2371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.851697	6753	1684
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.033692	21160	2085
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.946983	17970	1068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.031093	10287	1112
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	41.021844	18184	1553
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	3.644302	2707	170	35	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	40	41.392327	23499	3196
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.196495	32969	1768
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.582783	4000	219
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	5.680938	4339	240	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	41.277434	8902	1500
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	9.981486	6840	572	13.10.2.12.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.054868	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.882862	15278	2709
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.394165	32185	2440
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.364434	4687	318
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.015188	4211	1586
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.971757	13361	1142
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.029672	7410	3214
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	41.029663	7565	1000
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.557199	34934	2837
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	41.318995	43383	2381
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.440042	5538	318
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	41.245079	13768	1910
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	41.087873	20122	1088
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.720383	10638	2500
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.601077	9244	3586
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.737240	19382	2413
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.849037	43892	1530
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.043292	33887	2990
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	40	40.741171	51443	3148
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.877126	8786	1262
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	8.676347	4656	394	37	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.073756	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	40	41.452474	26492	3172
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.905144	32517	3392
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.482503	3927	890
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	4.485119	683	109	1.5.9.2	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.554919	72	22	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.392294	10110	1920
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.053777	130	48	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	41.197392	19358	1398
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.423619	21217	2834
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.536356	25513	2504
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.816779	4978	428
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.448274	8303	326	81	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	2.428630	1247	58	35	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.049089	22115	3570
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.846749	34075	1029
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	41.047705	9513	998
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.145026	37036	3343
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	41.185707	26632	2959
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.543177	3488	811
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.844199	18243	443
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	31.754295	9137	1587	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	1.352090	264	108	0.0.0.4.1	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	41.506441	14664	2302
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.783343	666	68	3.3.15	synth with cache (only 1: intros Az LS; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.014925	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.160174	102	13	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.456364	9724	4433
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.033349	7	3	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.290250	24653	3096
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	41.252711	30478	1478
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.052265	50039	3215
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	40	41.798294	4954	1856
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.224696	9438	1301
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.729281	32776	3948
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.853685	22616	4536
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.027453	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.568404	9417	3619
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.284300	13480	3017
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	41.149673	19018	1833
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.985135	25865	1627
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.512051	11930	1979
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.248226	5327	650
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.043391	31408	3634
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	41.085541	15007	2027
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	20.913873	18099	1227	2.10.1.7.9.2.7.20.7.2.11	synth with cache (only 1: compute; only 1: split; only 1: compute; only 1: now f_equal; only 1: compute; only 1: intro; only 1: now subst; only 1: compute; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.038218	23532	2062
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.745692	27145	786
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.232247	36361	4413
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.357668	33920	5128
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.113736	45	14	0.0.3	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.082268	6184	371
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	13.270496	3831	562	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.575505	13257	3147
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.639872	14743	2932
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	40	40.592777	5520	1628
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	0.599177	103	39	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.017965	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.090164	17546	1942
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.060329	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.144659	17	6	3	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	12.296290	2399	456	16.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.057852	19212	2226
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	40.860162	16607	2697
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.051520	10412	1409
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.635211	12314	1042
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.124316	34004	3798
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	21.175856	12507	554	55.22	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.709207	23335	4783
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.022522	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.015924	10	2	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.012241	3	2	1.0	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.111291	4493	922
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	40.442638	80458	4110
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	41.135109	9624	3787
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.098103	20	5	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.623220	1359	67	1.0.0.46	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.032571	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.012650	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.010406	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.454278	19141	1919
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	41.498789	9052	1306
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.052193	53662	4651
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.927508	11713	1831
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.159258	34408	3400
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.557634	26707	1443
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	40.891231	34336	3332
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.203581	2178	367
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	41.713353	13486	1875
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.149024	105	19	14	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	6.391242	2888	236	2.1.14.12.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto; only 1: intros H; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.686262	20210	2400
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.189509	18862	2979
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	41.338908	22663	3681
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.289240	2821	474
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	41.461478	14317	782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.151875	14825	2000
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.795877	13707	1839
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.242986	26839	3325
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.665188	8340	1104
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.027377	8081	289
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.733438	17280	2247
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	41.181509	22522	1985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.090158	117	34	2.2.1.1.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.745909	29855	2283
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.377400	87	12	13	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.831858	16188	2730
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	41.124811	30731	4827
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.336927	161	23	8.2	synth with cache (only 1: intros; only 1: now rewrite <- ?BinNat.N.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.108074	15830	2150
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	41.464474	19670	1002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.104088	15503	2576
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	41.134423	20139	818
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.412293	21795	2483
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.490188	8853	2761
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.023982	14262	178
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	41.341762	28330	3056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	41.191629	17738	2506
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.552472	48323	2828
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	41.146715	12907	2534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.532927	23049	2499
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.043598	2490	438
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.014676	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.014370	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.988480	12849	3138
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.718666	1584	72	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.032189	12306	3678
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	3.298112	1551	66	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	41.420907	29514	236
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.119659	91607	1090
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.643252	15754	3187
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.045072	6833	481
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.467023	16979	2276
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.443051	51712	3783
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.847374	44053	1538
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	41.121279	22762	2532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.636925	45714	2092
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.048051	23762	2336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	40.052434	9967	2637
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	41.422220	9709	2068
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	41.006228	22297	656
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.376492	53061	535
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.682509	7860	2914
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.012050	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.009809	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.008788	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.009821	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.141479	35928	4373
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	41.720078	22421	3357
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	40	40.033474	10335	5369
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	41.153383	11717	1956
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.822357	6619	1253
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	4.355062	399	141	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.691207	24626	4521
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.018956	3058	538
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.038493	17016	2888
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.677496	6329	950
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.819250	26532	722
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.431870	35308	1120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.194290	20132	3430
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	8.932975	838	460	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	40	40.623680	21557	3062
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.024514	27664	1851
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	41.100068	29283	7960
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	41.364874	7554	1974
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.699934	11367	804
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.634966	20455	1772
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.034482	8132	1523
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.055480	38968	1638
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.472536	18418	924
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	20.889087	13005	1398	2.1.0.12.6.6.3	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.664907	11172	953
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.549593	194	63	1.1.1.0.0.0.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.479128	13067	2451
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.064826	143	11	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.952632	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.587144	4699	1960
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	40.745285	37508	2750
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.939125	12320	2055
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.097765	7087	793
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	41.227108	12510	2909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.919574	19472	2490
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.023220	3992	574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.051189	13414	4819
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	41.448094	26314	223
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.210276	29907	4325
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.299388	22715	4144
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.672018	37326	1550
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.872943	8548	2419
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.145307	32742	3011
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.341928	34182	4338
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.045218	16819	381
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	8.237131	870	400	0.3.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	41.143205	17036	2153
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.599787	15709	2045
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.028582	5483	1207
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.241031	8	5	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.038974	11163	2704
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.611936	12110	728
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.447248	18328	2804	1.0.1.9.3.1.2.6.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: intuition; only 1: congruence; only 1: split; only 1: discriminate; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.117711	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.323319	31805	3788
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.660495	21649	1744
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.964874	19040	3798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.627767	20855	3038
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.033543	42316	810
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	41.062434	7781	1657
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	41.304278	10587	1679
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.376176	8633	1242
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.146783	10319	2229
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.031746	11731	1879
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	27.074695	27133	525	2.2.0.42.77	synth with cache (only 1: intro m; only 1: induction m; only 1: simpl; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.610821	8360	1443
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.607622	29293	4013
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.600327	12900	895
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.616878	19415	3203
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.140156	4918	648
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.683089	17727	2666
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.504975	7711	2935
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.486010	16508	2844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.601435	18501	1392
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	10.324228	6875	1074	5.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	1.990417	1099	154	19.7	synth with cache (only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.007283	2	1	1	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.038561	26360	3676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.031628	17441	2319
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	40	4.376451	3232	347	24.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.671251	18911	1987
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	40.626491	20177	985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.806200	31568	2706
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.186473	18326	3125
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	6.216262	620	346	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	22.336162	12150	1637	4.1.1.2.0.0.5.14.12	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: unfold remove_min; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.026007	36116	1999
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	40	41.372708	21119	2207
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	14.161769	8356	1728	1.1.5.0.0.5.1.2.0.0.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: inv; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.409044	4452	2509
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.949355	17573	2788
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.390343	32767	2888
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	3.377458	637	279	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.616824	21391	3712
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.608750	13537	2470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	41.148951	38866	1628
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.027276	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.038871	5630	2375
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.642224	28976	3964
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.041286	42939	3147
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.431933	1251	50	1.0.46	synth with cache (only 1: intros EQ; only 1: simpl in *; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.830043	1912	115	0.0.0.2.42	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.035315	30564	5965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.932588	20642	2039
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.022351	5459	3265
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.968211	94913	2972
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.108654	10568	3317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.565528	45507	4204
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.007073	6	1	5	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	40	40.476722	20489	5375
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.166817	22613	1472
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	14.305231	13287	1677	0.2.1.3.0.2.19.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.705282	68223	2998
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.045247	8342	2334
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.735621	32452	4365
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.052865	61604	2853
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.089908	8262	943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	40	40.487443	20060	1723
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.519193	27386	3617
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.018155	6127	2068
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.554509	12561	2174
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.502931	28608	3634
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	40.162340	24317	2194
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.480634	19447	2621
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.636888	71269	2881
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	40.400431	8453	2909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.436379	49261	1524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.034525	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.038552	57190	3411
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.048870	5807	1125
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	40	41.209825	23536	2418
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.170696	44	21	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.715661	25245	2876
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.018655	6055	3021
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.548670	18164	2693
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	40	0.737568	774	112	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	40	3.130950	3750	385	6.20	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.284365	48262	1171
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	40.031832	24948	2502
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.488096	21042	1552
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.480725	60650	4790
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	15.064001	17276	1476	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.849220	8623	1525
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.734157	89047	1658
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.021566	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.022923	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.022993	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.032828	19691	3755
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	41.155743	14958	4696
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.964458	67432	1295
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.050280	5507	1774
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.329284	10919	1632
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.619590	25661	4198
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	40.113560	30847	2198
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.298266	6919	2259
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.372749	57127	4733
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.608662	31725	1921
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.324079	9004	2661
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.690586	19474	2407
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.680461	189	61	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.041301	7	4	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.053516	53100	3973
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	40	41.152857	12497	2669
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.620965	23497	2555
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.038364	23534	3166
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.034640	32714	1435
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.620907	8710	1882
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	40.220680	22071	1899
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.269879	16208	2997
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	41.548771	15785	1785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.794669	28793	2156
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.020068	5082	2760
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.587222	41498	5373
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.035679	26382	4098
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.033935	19097	5054
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.140982	35	18	3.2.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	1.882704	398	66	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.047762	11458	2012
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.023943	12684	1491
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.086455	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.112826	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	5.028448	1005	296	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.052207	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.439033	2578	381	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.158220	17597	4743
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.169343	49011	306
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.381529	13664	3042
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.072694	78658	4567
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.479498	46961	4340
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.015482	4011	2393
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.421669	32270	5271
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.033628	20040	5559
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	13.020592	7704	1490	0.0.1.0.1.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.024647	10582	2034
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	41.055654	18220	1892
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	40	40.682750	44997	3749
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.022248	13309	1427
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.044025	41011	1850
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.708648	10598	2824
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.130876	13813	3141
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	4.004704	844	183	1.0.1.11.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.148250	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.315475	36261	3152
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.015087	4296	2171
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.223886	25379	1656
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.022491	16275	2036
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	41.222514	73023	3531
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.714962	1365	429	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.030723	5911	3063
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	4.380073	1474	435	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.025625	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.646109	24516	2303
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.021163	11032	1413
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.478447	59575	3782
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.045458	11926	3754
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.225241	22711	3208
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.133636	15	6	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.444735	12495	3117
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.014434	4117	2137
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.102298	72775	6850
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.660479	16819	3043
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.040791	30385	2844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.021605	10359	2312
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.601724	27238	3353
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.836073	31870	4376
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.018074	5214	2264
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	40	40.426447	81811	3699
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	40	41.145226	14807	1722
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.579503	35404	3739
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.103599	5	5	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.197699	17680	4438
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.020183	19099	1508
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.132653	26644	4391
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.039417	36936	3467
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	28.288043	7961	3317	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	40	41.040501	46385	2783
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	40	0.127231	39	17	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	40	1.888260	630	59	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.023214	9354	1864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.350931	32025	4224
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.707749	44758	4259
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.025173	21937	1169
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	40	40.784012	6025	2022
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.785512	61916	2657
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.234147	17151	3931
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.010942	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.697722	203	14	20	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.021295	14746	1802
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.852658	19450	2951
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.025572	18613	1818
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	40	41.008429	36837	3193
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.018993	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.014228	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.015321	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.008624	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.009401	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.024425	22211	1440
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.021075	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	40	41.061696	17788	1716
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	40	41.001900	40957	2144
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.026485	17021	1287
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	41.208817	43239	2513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.063351	8	4	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.044423	77	7	13	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.008581	2	1	1	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	41.007057	11319	1857
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.983891	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	41.106778	49749	2244
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	7.387553	1132	448	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.879442	509	38	0.0.0.0.27	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.029466	29421	3750
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.052056	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.130363	42	17	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.026524	5	3	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.020496	11199	1228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.034777	5354	588
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	41.019202	10918	1816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	8.853485	4395	745	1.15.1.0.0.7	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	41.027952	16177	1813
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.042802	12235	2000
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.021630	8014	2310
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	41.346796	33845	2843
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.635373	12255	919
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	41.247578	35177	1967
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.481020	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.958289	15207	2087
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.929039	60497	3889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	11.644086	12311	968	5.6.7.8.2.24	synth with cache (only 1: intros m a b Ha; only 1: red; only 1: destruct m; only 1: intuition; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.019946	10986	2349
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.975896	850	94	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.045388	33866	3256
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.526333	34129	4468
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	29.858891	14958	1978	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.170869	41	15	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.025176	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.035368	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.021119	12179	2458
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.043018	721	96	10.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.038793	37694	3484
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.021398	11141	2393
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.798269	63594	3417
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.140916	15934	2721
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.338067	5960	1118
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.943452	50001	632
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.019955	5618	2355
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.720052	42545	2078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.031511	24299	3094
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.527213	30994	5233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.779894	21936	2453
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.030723	28189	3319
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	7.286813	1978	317	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.051303	15	7	1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.055896	15	6	2.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.034853	19538	3566
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.025332	19746	2306
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.457821	24377	3938
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.784683	7673	1425
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.373353	18992	5454
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.640643	8706	2226
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	40.036570	13878	2804
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.011035	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.022377	22638	1477
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.531038	36099	6460
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.674384	40045	3153
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.020921	9178	2092
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.721189	26381	3366
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.084487	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.025232	9	4	3.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.022630	9203	2232
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.019290	7656	2212
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	41.139303	40180	2644
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.008764	8	1	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	40	40.437728	7840	1725
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.529809	7893	1054
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	11.960390	3171	506	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.018258	7035	1569
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.764238	30297	2833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.013729	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.017962	11862	1642
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.601848	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	1.388754	637	140	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.155130	27007	4111
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.028118	12349	3733
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.440982	42503	3411
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	13.743548	35505	1612	0.1.1.0.38.20	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.058743	20342	3161
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	41.388953	4798	939
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.691271	39	7	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.022191	15691	1183
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.729136	16431	4436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.216573	24790	5272
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.036925	27302	4713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.179496	96	23	8.0	synth with cache (only 1: revert l1 l2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.019767	6360	2532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.476436	13987	5090
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.988159	39432	4414
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.036752	28000	4763
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.023422	10	4	3.1	synth with cache (only 1: intro s; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.015307	5	2	2.1	synth with cache (only 1: intros m H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	41.038173	29979	2660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.225116	12146	1911
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.490824	55737	6123
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.127393	30	8	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.966921	6234	1096
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.071771	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.008050	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	40	0.046908	22	6	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.021311	3	2	1.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.068890	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.020121	10738	1549
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.407188	14029	2484
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.757313	3143	916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.030410	21254	2512
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.017215	8563	1766
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.824661	17102	4872
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.990852	23900	5083
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.028351	11528	4911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.980105	27218	3251
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.036799	15178	3887
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.059011	50740	3626
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	41.051432	26385	2341
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.024353	13974	1847
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.647310	9261	2450
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.293653	3427	1073
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.030469	29159	1588
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.018636	10969	1922
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.034784	37837	3675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.395233	22994	4156
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.143801	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.023882	13300	1951
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.367826	42082	3284
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	40	3.758621	1236	410	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.018533	11595	2145
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.519948	17918	1735
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	40	41.259428	50474	1984
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.054630	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.016138	6313	636
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	40	8.174708	2602	434	12.13	synth with cache (only 1: intros n m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.833883	14955	1618
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.535493	3812	1604
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.017576	6809	2055
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.026625	8934	2527
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.920288	31707	1749
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.045744	5315	1911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	41.259100	37603	4525
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	40	18.743436	7419	374	4.41.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	40.685751	45127	4297
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.025633	27215	2578
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.163243	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.461663	27540	3880
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.018713	18787	924
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.765297	18161	2464
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.407362	8496	1919
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.018756	14037	1253
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.051106	28904	2361
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.618312	20048	3593
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.031900	19708	2765
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.839242	26467	3805
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.867755	21608	1793
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.033961	26288	3751
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.377900	11867	1590
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	41.043530	44885	2453
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	2.585827	642	215	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.018098	16652	1258
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.652542	496	183	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	28.621620	15349	1626	2.16.2.1.9.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.034509	14696	4304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.164266	25444	5889
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.016667	10012	1256
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.034180	29051	1818
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.812572	25212	4746
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.032685	21101	3421
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.831566	50287	4506
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.029077	11790	1398
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.298745	19945	4276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	40	40.864114	32826	1442
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.147470	36789	4955
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	40	41.150342	23505	1609
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.627001	21046	2499
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.017736	9021	1194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.623494	13037	3159
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.033017	12192	3004
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.839152	32896	4397
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.026885	10597	4404
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	41.201666	95508	1935
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.049319	59783	1612
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.068430	6	6	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.043147	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.013604	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.182453	11984	2753
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.435118	56678	4008
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.153252	15650	4626
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	40	41.210253	28914	985
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.084131	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.032301	14427	3867
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.018729	10943	977
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.014111	4776	830
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.547971	5954	2368
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.027703	11527	5181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.901888	37048	3763
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.033245	21746	3499
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.405695	57581	4250
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.327134	5707	1996
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	40	40.609140	44683	3584
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.277204	21430	4207
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	40	40.057049	44277	1592	0.0.33.34.0.64	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal; only 1: Z.le_elim Hm; only 1: apply Z.add_shuffle3; only 1: apply Z.add_shuffle3).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.824540	15860	2724
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.026871	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.035637	22793	3811
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.016322	14033	1130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.492348	5511	2511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.037284	24604	4176
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.809602	42494	4252
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.095107	27137	3573
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.654766	38545	3396
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	3.907089	926	383	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.371712	11424	2665
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.024406	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	1.544879	721	215	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.012475	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.102059	65	14	0.1.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	40	40.994473	39750	3688
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.134134	8	2	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.382519	35	14	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.015244	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.284941	72	22	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.536695	377	45	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.031714	6	2	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.032955	8	2	5.1	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.028968	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.245332	91840	3169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.009416	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	6.697645	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.217824	285	66	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.195021	159	25	4.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.876582	25464	1091
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.158985	11	10	0.1.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.113581	22141	2425
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.033799	31957	3362
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.015202	11298	972
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.344142	17777	4225
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.030950	9836	4923
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.231859	35547	3268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.026617	9634	1071
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.293678	21252	5387
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.015376	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.050150	10	5	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.008342	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.337792	37527	5177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.926776	37170	2783
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.146280	16	8	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.351541	139	26	1.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.041582	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	40	41.099960	17634	1395
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.979963	15809	1098
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.064892	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.068150	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.039404	41029	3567
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.689854	24909	2158
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.015643	11328	876
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	40.180898	15909	5381
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.013578	4	2	1.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.006187	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.023156	10	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	4.634790	1734	359	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.029937	12597	2363
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	40	8.918938	4351	491	34	synth with cache (only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.309029	54859	3990
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.047916	10378	1226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	40	0.054346	23	10	0.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.504922	15867	3271
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.191007	27041	4480
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.107943	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.052160	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.964739	1162	139	7.17	synth with cache (only 1: intros n; only 1: now rewrite <- ?Nat.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.019229	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.061430	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.070342	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.441287	142	33	0.7.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.003512	350	82	11	synth with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.016676	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.009282	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	4.013286	1052	378	0.0.2.1.0.1.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.382430	60	30	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.191287	295	36	21	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.004669	7	1	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.967046	20368	2554
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.041831	25238	6948
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.017202	10063	1995
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.662532	22012	4507
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.256539	43082	7537
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.933805	29325	4094
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.027431	10477	4035
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.100921	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	40	41.053398	32072	3269
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.348813	33109	4743
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.075022	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.273341	33	8	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	40.416384	28022	2703
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.036473	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	40	0.023365	4	3	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.009241	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	40	0.058020	9	7	1.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	40	0.284018	249	50	15	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	2.289244	954	73	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.185754	50	5	11	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.184336	10844	3567
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	40	9.050733	9718	207	1.1.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	40	0.009932	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.195469	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	0.753138	116	79	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.122498	42	14	0.2.1.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.008476	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.008880	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.361123	73	37	1.0.0.0.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.124467	27012	4990
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	40	3.755825	1388	359	2.4.0.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.035836	22436	3598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.488739	61273	4738
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.005973	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.015972	15619	1679
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.286506	333	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	0.017744	3	2	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	0.018541	5	2	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.599933	21859	1859
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.191298	46515	5664
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	41.021198	46757	2193
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	5.438894	983	506	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.042109	38562	4692
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.244563	18815	3374
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.771357	23580	3154
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	1.019967	763	112	9.18	synth with cache (only 1: compute; only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.148900	114	16	0.2.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.439463	11000	1547
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	28.269064	73100	1532	4.1.6.3.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.010072	3	1	2	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.010861	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.282932	18191	4157
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.016140	6136	1764
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.761557	31067	2206
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.275839	5356	953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.358932	16154	2542
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.739893	24424	2479
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.033519	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.010138	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.006926	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.040528	21981	3366
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.029072	15375	2907
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.097411	38739	5913
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.441032	18116	1445
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	10.502738	6690	933	0.9.0.6.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.232786	26409	5791
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.816041	28483	8452
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.217769	49768	3045
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.019891	12948	1508
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	40.792740	37514	2540
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.036051	24593	2648
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.088025	19394	4801
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.690244	23605	2796
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.026592	13344	3342
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	40.066135	49415	5688
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.447242	39202	3107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.555444	21631	1734
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.288632	13228	3725
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.595905	35558	3557
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.286646	19495	2679
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	7.319922	4735	591	0.0.5.1.1.5.1.0.0.26	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.049990	23469	2758
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.419660	22268	4396
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.366427	4659	341	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.816546	10792	1277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.421900	10159	2080
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	2.875475	2189	354	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.027429	26050	2192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	41.196378	42130	4355
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.050001	30752	6127
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.055130	61327	4962
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.139319	38586	5364
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.028779	12364	4468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.080095	31257	3693
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.025276	6790	1902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.501650	9523	2308
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.029243	17984	4272
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.906863	41490	3458
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.631248	23909	3708
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.040324	27211	3509
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.938341	53201	1808
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.622593	87571	4468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.048926	20579	5099
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.381263	14214	2374
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.329021	20026	5677
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.289104	41560	3575
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.060602	4662	1558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.128671	28024	3798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	40	39.474135	46861	5816	0.0.0.0.0.0.2.0.8.10.4.0.17.0.0.0.1.0.0.1.8	synth with cache (only 1: unfold N.max, N.le; only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: revert m; only 1: unfold Z.le, Z.max; only 1: simpl; only 1: intros H; only 1: case Pos.compare_spec; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros E1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.046046	32554	5286
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.105518	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.554040	40907	4546
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.009026	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.007107	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.023350	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.008708	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.027256	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.053594	48401	3891
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.114978	50555	4853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	40	41.098506	94297	1980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.980886	87356	3338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.104495	25887	5532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.339641	15681	4746
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.353440	13642	3704
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.263018	57	29	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.045441	18615	1410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	31.073599	198107	622
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	6.819755	6186	663	0.0.0.4.13.1.8.0.12	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.726131	34564	4756
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	1.121870	443	107	0.0.0.0.0.2.1.10	synth with cache (only 1: intro; only 1: functional induction (min_elt s); only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.029756	5623	1582
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.036954	17504	4050
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.801973	42256	4216
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.288786	30766	6089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.810970	55871	6051
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.968276	59390	1727
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.115221	671	289	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	3.041758	3287	291	0.0.0.0.0.0.0.0.0.0.17.1.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: split; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	7.682767	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.314300	34935	4587
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.585830	21570	4137
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	8.248712	3619	1298	1.0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.017612	3	2	1.0	synth with cache (only 1: unfold elements; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.013780	3964	1740
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.334274	58292	4583
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.034329	22037	4233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.532220	41952	4561
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.533763	19431	2796
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.486754	21932	3412
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.555836	48065	3998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.007436	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.405657	45583	3915
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	27.562223	48189	2702	2.2.2.6.2.2.2.2.6.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.950252	82853	4040
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	11.304711	10821	963	0.0.2.0.2.2.3.0.0.0.4.4.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	40	1.527808	385	238	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.387368	12629	5869
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.224851	8927	1618
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	12.854085	7292	2838	10.1.0.4.0.2.0.2.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.066174	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.400674	1097	204	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.014593	3862	1559
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.445971	18338	2397
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.051281	15938	3104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.033544	12754	4687
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.485401	29297	4775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	41.094596	34246	4380
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	40.998602	49630	2091
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.050423	14	4	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.018770	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.016633	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.017246	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.012344	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	3.082008	1029	344	0.0.0.3.0.0.0.0.5	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intros; only 1: simpl; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.655457	116	60	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.157174	33097	3007
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.883091	17984	4297
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	40	16.600736	23304	1972	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.289914	10123	4655
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.243088	12400	3257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012949	3476	1324
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.768228	36467	5360
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.154823	36378	6406
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.036212	30573	5480
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.129954	24891	5677
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.547651	48566	4466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.902462	763	92	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.019317	4	3	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	40	7.325237	4970	721	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	3.568827	1336	519	7.1.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: unfold flip in *; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.173876	47274	5802
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.335327	33269	4759
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.454608	62705	3388
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.375979	36337	3584
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.209785	11195	4332
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.405682	13873	3676
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.013429	4105	1293
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.303779	59646	3470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.162759	30938	4405
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.328001	41540	4354
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	40	40.364040	43495	5269
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.020839	1	1	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.259268	34	18	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.031866	28299	4906
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.179229	6	5	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.189954	15717	2915
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.185158	30338	6900
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	40	4.847459	996	300	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.926179	75229	1960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.610700	9305	1567
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.296498	17960	4196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.154459	24867	4234
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.011123	4787	1306
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.172537	114305	3265
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.180514	69223	4691
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.022479	6733	2773
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	40	40.598652	30875	5042
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.041093	29623	5484
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.101292	10959	5044
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	4.411598	1157	369	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.010588	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.050417	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	40.870703	21486	1278
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.009549	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.221266	14	8	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	40.612780	80803	2906
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	40	5.055752	1027	482	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.290008	95	46	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	11.190495	2168	742	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.584506	39	25	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.643377	8766	1514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.088865	49019	6217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	14.343919	8156	1631	1.0.1.0.0.0.0.2.7.14	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: simpl in *; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: unfold N.succ, N.add; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.124093	25212	4837
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.012536	3583	1651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.249478	76430	4290
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.182322	53845	4371
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.048081	23830	10286
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.043636	26612	6483
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.257525	16998	5946
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	40	27.203446	23670	2599	2.2.0.0.0.6.3.2.0.32	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: unfold Z.ggcd, Z.opp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	43.568355	42441	1032
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.084809	40468	6702
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.676698	12373	2005
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.433241	40172	5818
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.054756	14	6	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.406736	106	56	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	40	2.005764	891	207	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.231294	12089	3082
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.011883	3318	1413
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.323307	50308	5408
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.218530	28777	4703
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.030319	10923	3981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.202293	17431	5084
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.033911	16250	6384
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.912972	14187	1885
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.529690	37586	3161
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.144820	32534	4608
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.954311	11704	1985
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.010162	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.008466	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.011589	2	1	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.011976	2	1	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.012389	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.012983	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.190941	13	6	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.034675	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	37.375397	30569	4272	1.1.1.1.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.277848	5128	2179
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.037827	9613	670
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.364238	137571	4981
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.186350	36744	4534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.048777	24188	9961
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.037665	11149	5481
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.034692	14945	4942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	40	41.122196	13087	1496
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	5.290873	6932	599	0.1.0.1.2.1.0.0.0.5.25.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: ok; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.219638	870	168	2.0.2.1.2.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	41.011084	69153	2046
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	8.819935	10399	868	1.40.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.262116	23754	5664
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	41.025835	47705	3656
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.310449	47811	4318
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.033514	9116	2600
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.013574	7863	1107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.244644	23163	3894
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.046348	51387	5467
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	11.163621	1661	1113	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.355288	14606	5863
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.030129	12871	4974
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	40	40.939740	27866	658
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.054277	8	4	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.121915	25	14	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.325189	43148	4504
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.008742	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.005872	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.007123	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007355	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.005838	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.108326	61	20	9	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.008623	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.007334	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.006370	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.006211	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.010483	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.007968	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.008046	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.034182	13819	3775
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.058637	13588	5000
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.429688	54962	4024
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.634966	42397	2960
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.019298	11423	1629
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.360786	6687	2431
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.225972	89249	2957
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.030906	10461	3421
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.035439	23346	5215
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	2.478478	560	153	0.0.0.0.8.0	synth with cache (only 1: intros m x y e; only 1: CRelationClasses.simpl_crelation; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.992111	21804	2775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	41.079512	37595	4822
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	1.180685	423	204	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	33.928965	10496	4660	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.115872	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.031611	19613	4674
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	40	40.896952	40485	2220
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	41.025878	34963	2960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.054669	10	3	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.025635	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.038522	29763	5360
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.024005	5802	819
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.244686	34055	3888
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	2.667557	2475	375	4.3.5.7	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.160128	164	24	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.184686	46926	3964
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.046339	7890	4743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.046647	11454	2051
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.993113	24808	2178
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.867523	29260	1797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.248814	21359	5874
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.007004	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.018080	6	2	4.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.096860	11	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	0.800360	609	109	4.0.1.0.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: intros p l inlist; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.034465	9395	5279
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.056302	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	40	41.130126	42372	4271
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	41.037753	35902	1895
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.009604	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.786128	20131	3950
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	11.112176	26874	1134	57.23.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.026955	2949	855
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.385735	53005	3701
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.064919	70858	3395
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.053742	45837	5605
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.324613	436	48	3.0.23	synth with cache (only 1: intros H; only 1: simpl in *; only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.617121	48137	3320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.628074	17911	1423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.541519	17148	3604
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.235050	23547	4105
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	26.692909	1642	799	0.0.0.0.2.1.1.1.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	40	40.838569	17367	817
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	40	0.062947	29	7	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	41.169274	21124	3671
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.008477	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.050672	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.589092	215	34	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.096033	8	3	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.580809	21959	4708
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.056228	47699	4921
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.098789	216	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.222378	79076	4479
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.135915	94093	2768
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.046893	54102	3512
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	40.732500	41435	2316
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.055500	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.062864	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.761725	38101	4020
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.358612	25096	5271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.335005	11524	2111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.404982	235	48	1.0.0.4.3	synth with cache (only 1: intro x; only 1: intros n H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.012437	2881	1248
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	40	40.405868	51225	5860
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	41.100832	46043	2966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	41.185566	23065	5315
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.020694	11190	1584
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	2.311561	1084	184	0.0.1.1.1.1.11.1.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl Z.to_N; only 1: trivial; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.651077	284	120	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	1.202861	421	65	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.335260	10621	2642
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.378815	65716	4489
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.061666	25148	3025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.273287	32233	3242
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.572620	34932	3207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.089767	45221	4217
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.506747	27627	3878
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.020904	10704	1450
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	40	41.172220	25967	3659
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.039069	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.019512	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.511945	64729	2407
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.544133	748	209	1.0.11	synth with cache (only 1: intros L R n; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.034161	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.013154	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.032401	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.012272	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.059071	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.060994	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.029649	15091	2459
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.780323	27979	4840
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	6.516331	5534	1064	1.0.2.3.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.749857	1201	259	1.1.1.2.0.10	synth with cache (only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro; only 1: intro; only 1: intro; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.368157	12956	3521
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.423708	9431	1401
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	15.755266	17438	2092	0.1.0.2.1.20.1.7.4	synth with cache (only 1: intros H; only 1: assert (Hn : 0 <= n); only 1: trivial; only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: apply Z.testbit_Zpos; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.039156	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.019999	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.008340	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009232	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.412623	25417	3612
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.008796	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.010226	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.007253	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.159997	8	6	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	2.026426	389	146	1.1.3.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.823819	60031	2611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.516937	188	91	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.474989	105	51	9	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	41.155014	19227	3739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.360604	20375	5134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.285272	15095	4625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.425502	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	40.618590	27215	4655
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.407506	57374	2741
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.121216	28	8	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.026686	9761	2686
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.045771	27577	6033
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.908790	795	123	0.1.15	synth with cache (only 1: intros [| a l] H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.028909	7	4	1.0.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.381340	20756	4640
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.283279	32914	4302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.423648	10636	1694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	41.046849	59133	4030
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.866522	24603	4922
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.735431	17607	4157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.351350	25980	2299
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.191470	13841	3566
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	41.140705	41860	1921
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.448044	27296	5648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.029167	9936	3242
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	4.342772	1340	260	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.027289	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.433554	27405	6048
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.283955	37351	4343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.423048	46161	4316
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	29.441532	10146	2494	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.432550	18323	3071
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	36.551428	47894	5818	5.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1.791446	2867	83	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.046607	36868	6087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.362905	9765	2299
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.707576	17044	5634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.091025	32777	3807
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.023805	13283	1727
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.978026	40979	3887
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.424128	24368	5024
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.186526	15	7	2.1.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	1.277426	123	43	9	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.121800	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.268815	68866	3531
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.395875	62918	3409
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.413677	31614	4270
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.023506	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.025953	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.479937	13572	1943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.288744	49328	5145
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.217418	21765	4463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.578878	12234	2010
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.601917	36695	4479
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	32.658712	32549	4125	0.0.0.0.1.3.3.0.1.3.2.6.0.0.0.1.3.3.0.1.3.2.6.0.10	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	31.056898	25890	2792	0.0.1.1.2.4.5.1.4.3.0.0.0.5.1.22.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.nzsimpl; only 1: intros Ha; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy; only 1: intro LT; only 1: auto; only 1: now split; only 1: unfold Z.lt; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.025519	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	27.455421	11631	3793	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: trivial; only 1: trivial; only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.028927	12644	3318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	20.999273	43343	2012	0.8.72	synth with cache (only 1: compute; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.383124	32689	1068
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.032205	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.021774	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.191599	41481	4963
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.055530	51865	4251
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	9.846092	7723	1818	0.0.1.1.2.4.1.24	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: clear IHl IHr; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.551969	941	242	0.0.1.0.1.5.9	synth with cache (only 1: intros; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.034474	19224	2919
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.381444	52863	5045
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.333576	25714	5025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.400644	12238	5023
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.454312	19594	5452
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	41.143748	30049	2751
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.653089	16032	5381
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.295922	4341	751
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.049681	42351	4858
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.564007	11584	2112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.302681	13909	2078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.040297	18168	3430
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.426320	8753	1470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.407308	54839	5190
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.199128	25722	5249
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	41.191092	36986	3391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.175149	94	26	2.1.2.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.084462	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.041122	12	6	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.031055	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.027109	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.562585	22426	5134
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.761867	37881	2961
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.055623	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.397446	26248	5065
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	21.342450	6741	2496	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.329603	11938	1646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.218626	71343	3935
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.234593	12338	3035
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.233582	8064	2525
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.036206	15855	3468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.459162	37783	3615
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.303048	93830	4389
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.322379	98980	4296
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.238676	26442	5756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.261031	123	31	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1.413948	2376	179	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.071613	861	61	0.0.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	41.255969	9887	1453
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	35.201406	18652	3231	0.8.2.0.4.9.0.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: intuition; only 1: destruct a as (x', e'); only 1: subst; only 1: apply add_NoDup; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	41.261078	23151	5029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.317790	16655	2412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.324924	32740	4076
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.556694	12180	2034
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.060891	27541	3300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.416188	983	44	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.043272	24739	3558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.439489	18969	2017
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.007321	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.015257	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.497143	5270	282	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.424059	86363	4867
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.443949	25672	3525
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.581379	55733	4848
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.525407	25762	5278
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.291020	43462	4879
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	41.167626	23144	3888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.464089	40818	2425
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.233597	16983	4757
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.223063	16744	3338
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.222200	36604	6628
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.030706	13331	3858
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.018991	3	2	1.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	8.778660	2409	692	1.1.1.1.0.1.0.0.11	synth with cache (only 1: destruct n; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order; only 1: Z.order_pos; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	5.901917	2810	503	0.0.1.4.17	synth with cache (only 1: intro; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2.270938	452	181	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.597887	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.006167	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.422831	64855	4418
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.019202	7	2	5.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.395423	58182	4303
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	10.507986	3172	785	0.0.0.0.8.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	14.420158	3412	1010	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.224147	89423	5791
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.149885	2132	162	3.0.2.24.2	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	40	1.214975	436	82	5.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.564303	56677	5562
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.636156	31303	3852
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.009001	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.041448	16614	5077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.715013	6893	912
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.197652	51504	3947
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.264945	29839	1188
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.040712	24738	4326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.170339	248	16	22	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.087451	57748	4112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.309180	57970	4937
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.469000	21643	2758
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.238957	41	11	0.0.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: compute in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.008684	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.020520	5	2	3.0	synth with cache (only 1: destruct p; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.010356	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.035485	12	4	1.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.009091	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.007350	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.009969	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.092912	409	94	4.5.5	synth with cache (only 1: do 2 rewrite InA_alt; only 1: intros (a, H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.514408	73214	4741
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.209719	182	13	19	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	40	40.376730	27634	4736
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.039043	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.504124	46049	5264
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.291522	80000	6859
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.041306	15234	4648
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	13.701810	21867	1295	0.4.1.0.0.49.2	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: firstorder; only 1: compute in H; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.268736	61478	3285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.486273	57557	2539
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.292014	10741	2292
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.044183	33420	2895
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	4.284004	1954	450	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	14.034702	17410	1541	0.0.11.11.15.1.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.486319	26436	2208
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.302654	74112	5720
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.221466	105598	5601
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.109525	24044	6106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.705977	27172	4258
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.234092	55290	4336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.167259	14416	5178
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.196799	69985	3150
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.230532	63933	5825
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.036422	22719	2882
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.235419	34585	4388
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.320276	42721	5876
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.385622	39301	4301
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.313384	71928	7881
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	24.668184	34510	3043	22.9.20	synth with cache (only 1: intro x; only 1: intros n H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.314210	96019	3212
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	40.584504	17743	5518
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.657054	48518	5542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.160621	27799	5614
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.368542	10747	1629
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.351420	49412	5911
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.043979	21687	5180
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.245481	86479	2215
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.223756	31354	4580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	40	40.313133	26699	4268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.129466	56484	5330
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.098867	30145	7770
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.062945	65143	6995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	40.840361	16131	3570
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.245044	35085	9177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.795684	390	102	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.273289	502	232	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.308728	15072	5728
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	9.437124	4442	952	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.366649	20164	5183
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.119004	56277	6415
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.054529	43085	6346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.052537	4093	156	70	synth with cache (only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.373925	163	41	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.047079	10	5	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.201446	27793	3473
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.060481	675	398	0.0.0.0.0.0.0.4.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.706014	188	110	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.183927	35856	6019
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.186525	29	11	1.0.2.2	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	3.653895	2160	579	1.1.2.5.0.0.0.12	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.052116	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.285184	23152	6187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.615299	1535	439	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.176166	76351	5226
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	40.269383	26451	8764
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.223280	52867	5934
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.602125	32858	6894
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.093931	10966	4910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	40.607027	19954	4018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.341111	23211	5369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.264839	87568	4875
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.053435	41948	4838
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.340438	16370	3596
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.356633	10800	1455
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	15.687808	5972	1602	1.5.4.0.4.9	synth with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: symmetry; only 1: f_equiv'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.164406	58502	4363
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.060619	66636	2239
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.158713	67096	7346
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.278100	36588	6706
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.541807	21152	6896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.014190	6	2	0.4	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.014005	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.008605	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.318317	24258	5320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.778051	42690	1021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.068726	71832	4898
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.282797	75578	4010
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	14.777990	9037	1751	2.0.0.0.0.0.0.0.1.0.0.0.0.14.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.554884	12686	2006
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.044618	40243	4751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	40.180668	46104	2403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.172246	61960	4499
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.042229	45374	2979
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.054704	47971	5470
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.258717	19149	5327
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.581064	33184	5123
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.010069	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.675195	1870	206	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.856548	14670	2156
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.606528	29855	1634
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.053148	39176	4435
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.389487	26206	4375
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.452830	14176	2690
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.413755	440	113	0.1.5.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.022435	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.262533	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	40	40.464980	33266	5174
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.477211	32269	2568
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.986971	788	149	4.12	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.232248	67175	3645
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	1.947693	653	153	0.0.1.2.9	synth with cache (only 1: intros H; only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.314901	68477	5802
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.533987	11248	1125
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.029825	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.141580	21	15	0.0.0.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.518785	50421	4747
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	9.853789	9535	1687	0.7.0.2.3.2.2.1.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.376513	29860	7447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.014878	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.426289	16485	2369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	3.180642	8713	506	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	40.298738	54646	6174
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.272409	25291	5452
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.281434	60486	5314
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	1.925849	1899	283	0.0.1.6.7.20	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intro n; only 1: unfold Raw.empty; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.043503	19722	5424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.474551	33289	4749
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.207824	56424	4002
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.162742	35259	6139
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.046378	31574	7029
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.160783	17036	3213
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.156329	248	108	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.196041	64691	6990
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.382597	24655	4748
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.481668	29951	7030
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.007567	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.059583	71512	5873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.461281	267	65	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.188776	38676	1850
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.251371	56836	4845
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.187482	50555	4463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.332335	24150	4844
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.039230	24009	5816
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.271594	45527	7668
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.139540	133578	5152
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.008911	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.009285	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.050881	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.009412	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.215004	144	17	0.0.15	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.099937	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.579886	35	9	2.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.016838	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.447076	319	42	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	40.380204	31340	3862
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.010054	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.012193	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.514809	77	9	0.12	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.034063	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.010215	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	3.716507	2144	167	0.0.24.4.0	synth with cache (only 1: repeat red; only 1: intros x x' Hxx' y y' Hyy'; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.116159	108	9	15	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.673991	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.125955	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.903304	286	113	2.0.0.0.0.0.0.3.0.0.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.180192	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.361451	45455	9532
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.764831	23966	3119
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.635332	28217	6622
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.416671	50467	4289
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.323950	39078	1255
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.487515	32651	4660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.426145	69389	3365
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.048816	50613	4399
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	40.694554	63348	948
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.279010	93468	5052
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.291261	39690	3187
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	1.097313	331	78	0.1.8.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.016782	1	1	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.508354	56582	4096
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.316846	25994	6494
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.826521	24986	3060
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.067907	53734	6725
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.936973	24661	6679
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.040262	12593	6412
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	14.397741	12746	1870	1.0.0.9.2.7.6.9	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.263313	39655	4131
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.034039	21366	4008
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	22.206375	5736	2491	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.310486	68425	5867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.575264	23696	1561
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.237739	34318	7756
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.553312	6610	1919
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.287877	37694	5394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	40.273985	66062	5611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.572149	37660	6854
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.196098	10809	3490
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.338632	51446	6856
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	9.774823	44146	1033	0.0.0.101	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.089801	30	11	6.0	synth with cache (only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.046619	29223	5245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.064743	96341	4285
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.132626	24271	6752
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.297964	76591	5044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.476599	43855	2703
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.215751	62	13	6.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.006035	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.007957	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.015512	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.024774	8	4	3.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.151735	62458	7180
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.240521	93	23	7.1	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.340874	35798	3428
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.321414	24477	4349
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.576137	25994	5961
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.186493	14396	3853
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.153470	28303	7989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.254650	49774	5431
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.288604	25136	3835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.043725	32182	4757
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.187603	78602	5749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.490842	55617	3978
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.349455	20981	3337
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.365098	24020	2732
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.378109	198	43	1.6.0.2.3	synth with cache (only 1: split; only 1: easy; only 1: auto; only 1: intros l1 l2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.053986	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.517897	688	171	0.1.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	6.660180	15372	170	0.173	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.373944	39140	2772
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	9.277030	7196	1131	2.0.11.2.5.6	synth with cache (only 1: intros; only 1: elim H0; only 1: intuition; only 1: rewrite InA_cons; only 1: eauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.365429	40641	5675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.879579	23033	6541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	40	5.975294	2542	684	0.1.0.0.0.1.6.5.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: simpl; only 1: now destruct 1 || intros _; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.468302	26387	1434
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.399406	44099	5485
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	40	0.266323	23	9	0.0.1.2	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: reflexivity; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.524854	42236	3435
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.180854	49	24	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.059332	44675	4535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.054414	56186	4692
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.322932	141630	4998
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.442189	85820	12828
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.361345	178	36	0.1.9	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.468574	45113	5591
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.499999	24773	2984
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.217359	43301	6151
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.584483	29765	8057
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	40	40.399956	32003	4556
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.032748	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.271453	63	8	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.008062	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.010299	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	3.403802	1416	487	0.3.2.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.045755	9	7	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.195868	33	19	3.0	synth with cache (only 1: revert m; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	21.849962	10332	1774	16.0.7.5.4.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: auto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.025934	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.190285	37768	2803
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.012439	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.007082	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007343	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.565323	65077	2199
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.413201	22403	3215
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.042013	22594	4363
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	7.291137	3073	780	0.1.0.1.1.7.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro H; only 1: intros; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.045846	37347	5025
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.416233	100860	4375
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	3.715265	1030	289	1.0.0.0.0.3.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	8.739960	1215	484	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.417676	26872	3938
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.010415	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.014962	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.640268	151	74	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010405	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.009758	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.010612	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.010912	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.011959	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.008016	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.024848	11	4	1.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.008035	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.616103	392	55	18	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.008146	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.008440	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.007434	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.722251	9412	1235
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.343493	16540	2239
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	35.023152	84759	2840	1.1.0.10.102	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.037536	27584	2973
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.606672	24369	6009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.183250	24190	4819
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.526576	20607	3674
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.040726	29993	4495
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.412421	102951	3283
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	40.040074	31453	4284
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.488868	100841	6590
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.070091	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.283525	70343	4693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.327870	14522	2182
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	33.591206	41702	4848	0.0.0.4.0.4.4.0.2.0.6.13.15	synth with cache (only 1: intros l' n; only 1: intros m IH; only 1: intros (p, H); only 1: unfold MapsTo in *; only 1: induction H; only 1: destruct y; only 1: destruct H; only 1: compute in H; only 1: exists e; only 1: eauto; only 1: destruct IHInA as [e H0]; only 1: exists e; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	4.689281	4661	795	0.0.0.0.0.0.3.0.0.0.0.0.3.0.0.7.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.442577	198	66	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.303919	78906	4132
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.066969	3165	242	1.0.1.0.31	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.036132	19632	3367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	40	40.219271	32461	5221
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	27.814669	21714	4480	0.0.0.0.15.0.12	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	3.329795	1027	408	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.099702	37941	4761
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.401174	20866	304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.062443	66675	5067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.200645	99711	3361
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.086102	32647	4705
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	4.845580	547	132	3.1.3.3	synth with cache (only 1: intro n; only 1: unfold relation_equivalence in *; only 1: intros x x' Exx' y y' Eyy'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.659047	5065	1400
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.477877	14297	2628
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.297981	45734	7131
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	6.495175	3183	695	1.1.2.10.4.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: induction l; only 1: intuition; only 1: auto using eqke_equiv; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.176581	38	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	3.291500	1972	558	0.1.0.0.6.0.2.1.0.0	synth with cache (only 1: intro Dec; only 1: split; only 1: induction 1; only 1: constructor; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.738651	81	37	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.912318	406	101	0.13	synth with cache (only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.263737	65824	4337
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.739777	7440	1579
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.055579	49585	6338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.209085	45	28	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	40	40.643730	36670	5809
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	40	0.570457	127	56	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.288640	72358	4999
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.015996	6	2	4.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015493	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.293944	2729	136	5.39	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018643	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	29.593264	4470	963	2.12.6	synth with cache (only 1: intro x; only 1: intros H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.009857	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.013814	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.025581	11	3	3.2	synth with cache (only 1: intros a a' Ha; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.245842	12	4	0.2	synth with cache (only 1: intros A A_wd A0 AS n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.054144	16	9	0.0.0.0.0.2	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: reduce; only 1: unfold pointwise_relation in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.170748	29144	5711
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.395539	26306	3807
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	17.337510	11086	2647	1.0.0.4.7.0.1.5.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: exists x; only 1: invlist InA; only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.914343	25026	2964
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.005180	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.006564	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006749	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.618666	16423	3056
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.322564	47681	5983
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.044749	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.204900	1172	326	1.1.0.10	synth with cache (only 1: intros d ie; only 1: intro HF; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	5.008170	4481	853	4.0.0.0.4.0.12	synth with cache (only 1: induction l; only 1: constructor; only 1: intro y; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.139374	56289	3087
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	13.641112	13295	2228	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.223489	122584	7234
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.266337	41530	5910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.080624	111466	6338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.258139	79209	5297
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.283493	56838	7516
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.185714	215616	4339
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.123122	37687	7047
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.719731	371	68	4.2.0.10	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: constructor; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.628019	49237	5284
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.375300	54298	5834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.611062	5993	949
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	8.493804	4134	988	1.0.0.1.3.0.0.9	synth with cache (only 1: intro Pdec; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	4.978155	4736	825	57	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	14.762512	12232	1362	12.2.2.8.9	synth with cache (only 1: destruct H; only 1: intros l m a; only 1: simpl; only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	7.439103	984	199	2.16	synth with cache (only 1: compute; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	2.636506	1032	168	0.0.1.12	synth with cache (only 1: unfold pow; only 1: intro y; only 1: rewrite recursion_0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.358399	52073	3806
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.168084	25829	7933
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.228295	105	32	0.1.0.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros n H; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.083162	39	14	2.0.1.2	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.308265	142526	7406
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.284833	58780	5758
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.254613	180	43	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.479720	52897	6185
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.154347	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.078736	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.164387	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.671743	10660	1153
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.065938	20897	7209
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.391863	101383	3875
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.794652	32155	5017
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.323928	28682	1008
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.360676	22877	5013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.338053	7866	1564
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.274934	44923	4338
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.115112	34535	7913
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	2.414097	1353	326	1.0.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.236307	65086	6051
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.507310	30829	3130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.093734	23	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.027954	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	40.849456	26615	2039
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.019185	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.009827	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.296368	22952	4713
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.161047	35584	7778
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	6.007406	4795	997	1.0.0.1.1.0.1.0.0.12.0.2.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: firstorder; only 1: simpl; only 1: apply Sorted_merge; only 1: auto; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.280230	66530	7141
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.612453	23114	4550
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.342986	9324	2735
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.241258	45268	5312
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.305033	80	18	3.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.348738	20868	2760
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.046631	20490	7422
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.025459	13	3	3.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.054555	2	1	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.055888	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.013173	4	2	0.2	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.008304	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.016391	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.026407	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.275786	35623	4463
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.973368	578	100	0.12.3	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.254881	15005	3175
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.024058	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.086307	29	13	0.1.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.370052	32040	5276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.842305	10282	2268
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.158057	72451	6836
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	1.320423	401	111	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.026041	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.273194	47830	10121
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.412769	29650	2333
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.656937	26159	4744
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.387669	10063	1930
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.222602	372	106	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.378200	83	22	0.1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.274446	37703	5936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.218683	14378	4623
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.814235	933	254	0.0.1.11	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.026176	7	3	3.0.1	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.178386	58088	3615
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.276544	43795	6028
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.011334	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.041309	9	2	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.108304	26	10	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.192865	14542	3358
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.029358	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	2.948882	1381	241	3.1.2.1.0.15.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.053250	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	2.914608	845	406	0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: case (M.union s s'); only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.350786	33063	5120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.225666	25016	6024
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.056369	48906	6802
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	40	40.743343	9183	1241
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	18.355682	8810	2579	0.1.9.1.0.0.4.6	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: tauto; only 1: firstorder  (subst; auto); only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.442083	64327	3172
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.476130	33924	5945
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.017385	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.028726	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	9.683140	23195	725	0.1.5.42.59.0	synth with cache (only 1: constructor; only 1: intro y; only 1: destruct y; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	4.391372	2071	498	1.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.028012	6	4	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.006884	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.010123	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.011878	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	11.051504	7351	1341	0.0.1.1.0.0.0.1.4.13	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: intuition congruence; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.206628	21689	2782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.410687	20658	1982
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	25.240192	16401	3131	4.2.3.3.6.1.0.1	synth with cache (only 1: repeat red; only 1: unfold eqk, ltk; only 1: intros a n H H'; only 1: destruct n; only 1: simpl in *; only 1: constructor; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.226471	58797	4219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.478195	81725	3425
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.461620	16469	2696
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.063521	62834	7275
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.116165	17239	7567
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.845727	24912	1825
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.330255	68545	5506
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.916665	28283	4042
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.162514	28952	5652
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.862193	945	333	1.1.0.1.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	2.298585	1353	360	1.1.2.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.347301	6645	859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.173399	24644	2909
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.311298	26499	5036
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.013454	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.012008	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.015198	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.088256	699	135	1.6.0.11	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.207620	27479	5127
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.344728	26407	4234
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.011404	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.056211	45958	6164
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.153877	23327	6594
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.285200	109855	6124
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.450273	19695	3314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.521046	21969	2682
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.063742	24	8	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.463366	28252	3557
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.375584	25106	5767
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.221560	9156	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.482593	4014	1488
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	28.030880	33109	2651	2.5.20.23	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.235203	50176	6557
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.233321	82918	3966
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.276536	40281	6031
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.134017	74451	4743
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.333878	52533	2327
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.694244	23623	4119
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	40	40.053207	44925	7198
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.094708	37097	4302
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.439850	28379	4950
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.399725	10633	1553
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.046565	6	3	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.316510	12	4	4.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.652258	58	22	4.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.434858	2019	813
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.370059	9212	2357
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	40.239705	37483	4790
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.371992	11676	5054
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.197774	19046	6482
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	24.215379	15062	2765	7.4.12.1.7	synth with cache (only 1: intros l1 l2 Eq x; only 1: intros; only 1: rewrite <- H; only 1: apply Permutation_app_head; only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.316470	25225	5424
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.220105	52781	6977
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.759027	20445	3120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.043136	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	40	40.295624	23690	6113
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	2.640856	2813	79	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.077825	136	40	7.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	9.501683	4870	1000	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.625477	38847	2184
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.268526	8288	2160
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.235265	53641	6507
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.700736	463	101	6.1.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	40.375921	8503	1987
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.330109	49284	4538
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.522521	59729	5694
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.047999	1671	380	1.5.3.1.0.7	synth with cache (only 1: induction l; only 1: unfold eqk, eqke; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.158583	29274	4757
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.293589	61449	5121
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.302087	25424	5276
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.444151	60125	440
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	16.673206	2112	794	0.3.0.2.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intros; only 1: generalize (Hiff (compat_P_aux H)); only 1: rewrite H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.596842	13874	2834
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	9.491219	5552	1050	0.1.5.0.7.2.0.8	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: unfold eqk, ltk; only 1: constructor; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	40	40.183796	89864	7717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	40.356383	28194	5932
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.027668	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.019934	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	40	4.634582	3104	703	12.0.3.0.3	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.376241	18653	3940
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.055169	46434	7833
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	3.028958	7118	436	0.4.0.1.1.39.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.122677	13210	6049
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.263558	34709	4613
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.206647	27538	3998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.205844	31833	5238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.008778	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.527254	31129	2064
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.740808	84	35	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.010540	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.400958	21216	1807
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.045630	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.078191	22482	3089
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.400720	21806	4197
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.758982	27259	4800
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.605852	62793	4400
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.255342	21437	2901
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	26.361881	14522	2772	0.1.13.0.0.12	synth with cache (only 1: intro y; only 1: intros l m a; only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.248409	70479	8848
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	40	37.008893	84124	4893	0.2.1.0.2.16.44.5.1.17.5	synth with cache (only 1: intros; only 1: induction f; only 1: simpl; only 1: reflexivity; only 1: destruct a0; only 1: induction f; only 1: simpl; only 1: reflexivity; only 1: auto; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.764347	24546	940
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.014573	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.226115	15625	1936
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.659570	54896	2182
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.762736	1520	59	2.51	synth with cache (only 1: split; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.322671	18146	2678
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	40	40.618366	63615	2866
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	2.307355	4898	219	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.772111	8669	1488
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.573050	721	68	36	synth with cache (only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.029342	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.551018	208	25	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	2.285989	580	51	21	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.199877	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.044285	19	5	0.2.3	synth with cache (only 1: intros n H; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.081028	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.048844	26	7	2.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.006957	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.010324	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.584631	24128	4098
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.719065	4077	515	25.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.437823	48183	6569
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.135081	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.760604	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.039684	32813	5145
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	0.814031	740	64	20.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.630063	875	138	13.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.518287	24855	2878
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.012759	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	2.085109	711	176	0.0.5.4.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.148546	75571	8683
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.594001	69945	3638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	40.293660	14473	3140
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.605636	45398	4706
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.259998	7756	1549
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.576330	40353	3727
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.648390	283	87	4.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.281266	22198	4980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	40.661885	40040	4689
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.140744	45065	6700
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	11.651175	4553	930	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.217022	11850	3495
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.357254	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.801653	30969	480
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.421768	26409	3849
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.304089	57563	9197
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.400598	37294	4256
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	20.422288	6103	1091	1.0.1.0.0.0.1.0.1.1.0.0.0.0.0.0.0.2.29	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.646656	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	7.195991	5777	692	21.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.035009	3	3	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.372130	7784	1658
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.579280	44700	4369
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.475262	13427	1785
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.402425	10762	2257
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.406798	26192	4691
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.658114	9146	2009
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.333685	8325	1850
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.955696	16503	451
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.478532	21472	4393
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.229118	20767	4497
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	41.095616	37576	3499
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.403331	24180	2876
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	16.246616	10607	1458	0.0.0.0.0.0.0.21.22	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.230175	8846	3374
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.081073	26752	3487
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.787395	17623	574
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.427188	22337	2671
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.041958	8	6	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	3.860753	4326	427	3.6.22	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.188819	37788	6914
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.324902	6851	913
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.549348	7130	1411
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.771695	27299	358
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.048977	30158	6430
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	14.539575	4529	897	0.1.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.899780	345	67	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	1.908057	683	170	0.0.7.0.0.2	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.681859	18837	3446
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.684231	27992	2379
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.533184	15262	1987
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.614944	21012	3529
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	5.305015	3611	183	53.4	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.676765	22228	1761
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.208498	34450	4524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.738347	27646	2111
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.046511	27220	6451
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.406439	6324	369
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.811190	55944	762
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.050061	31136	7000
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	14.513868	8369	531	44.15	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.532269	40993	3631
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.500620	79555	1778
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3.022246	1796	148	25.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.173715	20144	4211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.326126	15212	5265
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	2.758582	990	110	15.17	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.134846	93	10	14	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.298445	9064	2162
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.651905	29465	2674
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.361608	62660	4907
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.593006	29406	3339
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.124766	29241	6613
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.546471	11822	1380
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.071218	4	3	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	2.184474	584	80	1.0.1.0.0.3.17	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto; only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.097314	51	10	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.090103	22392	4643
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	5.247340	2898	694	0.0.2.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.405143	19582	4105
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.173020	26046	3181
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.202679	21354	5550
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.041948	7	6	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.637679	37157	6799
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.599805	32176	269
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.139937	20024	2313
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.635044	48599	4365
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.180215	42696	5836
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	4.846849	1707	595	0.0.2.0.1.5	synth with cache (only 1: intros X Y H'; only 1: intro IT; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.364671	31500	5642
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	40	5.237315	2951	679	5.0.4.5.0.2	synth with cache (only 1: induction F; only 1: auto; only 1: intros n m H1 H2; only 1: unfold push, map, contents, index; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	6.815907	1531	478	1.0.0.0.0.0.1.0.2.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.112869	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.441928	64317	2557
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.635509	10584	1788
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.211367	28640	5686
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.303990	11644	4159
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.210716	38039	3489
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.815061	36579	2367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.155917	15	15	0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.763181	22050	302
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	0.242155	407	22	28	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.141251	29803	4576
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	40	34.869148	20619	3779	22.0.1.2.4.1.3.0	synth with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: intros; only 1: auto; only 1: intros A f assoc a0 comma0 l; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	23.240843	7229	836	11.14.1.0.6.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	40.150536	22006	6571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.563421	69723	2713
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.226823	14675	2693
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.514076	60478	5186
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	40	16.297613	11346	2194	9.2.11.0.0.0.0.0.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: intros; only 1: auto; only 1: intro e; only 1: intros; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.793179	3679	774	6.2.1.0.1.0.0.0.0.2.0.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.162563	32651	7222
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	29.206650	9679	4304	0.0.0.0.1.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	40	40.252679	21208	5703
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.514967	7500	1008
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.591806	22011	5201
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.331659	47725	5151
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.705589	12844	1344
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	0.207286	272	17	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.023650	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.067112	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.471459	16084	1652
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.563740	20370	3013
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.211507	12196	2654
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	5.186686	2247	470	4.5.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.047368	37608	6405
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	40.114569	40741	5268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	15.640667	3672	597	1.0.0.4.17.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: intro y0; only 1: destruct 2; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.048001	25058	7870
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	10.179918	6211	1531	0.0.0.1.4.0.0.1.1.4.2.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.203963	23566	6917
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.492561	773	381	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.302470	120557	4315
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	40.542359	8613	872
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.503437	50168	3584
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.238169	74193	3494
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.492381	13092	966
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.387345	13929	1112
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	4.589387	2456	609	0.0.1.0.0.1.0.2.0.1.0.0.0.0.3.3.4.0.1	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: unfold rem; only 1: simpl; only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.103042	27890	2763
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	7.309416	2484	1222	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.152100	48171	6387
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	7.093459	3276	1033	0.0.1.0.0.1.0.0.0.1.0.0.2.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.160283	24952	7122
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.310773	33151	4300
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.221983	16522	5834
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.351243	19481	4305
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	40	40.376052	35367	3535
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.355207	9587	1718
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.129599	37679	5835
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.402625	28536	1510
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.367910	37850	3741
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	14.775955	8070	2320	0.0.0.4.1.3.1.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.048587	45323	2693
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	40	40.085385	31835	6130
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.659309	29346	5287
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.280476	120504	6939
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.685046	16143	3113
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.311655	15599	5580
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.444503	20498	3571
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.582059	8378	1981
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.316217	25411	3259
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	6.328491	5517	657	7.0.14.12	synth with cache (only 1: intros (l, L); only 1: induction l as [| a l IH]; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.363358	28599	1500
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.250845	41173	4552
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.267478	21358	5963
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.745614	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.032121	17087	3389
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.224289	60025	5433
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.790851	45500	3552
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.362313	75862	6501
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.414822	19339	1342
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.177241	110	25	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.277593	14394	6538
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.154199	26911	3058
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.277476	51072	3038
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.270716	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.203802	14283	1455
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.556029	21024	1250
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	39.929161	16514	6389	0.1.2.6.0.0.3.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec b a0); only 1: left; only 1: intuition; only 1: now subst; only 1: right; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.180539	62	19	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.320438	31901	4188
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.042750	35476	2713
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.195135	110399	5083
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.468955	20168	3033
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	40	0.165377	112	28	0.7.0.1	synth with cache (only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	40	1.928021	936	249	1.1.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction l; only 1: intros; only 1: split; only 1: simpl; only 1: intros l; only 1: auto; only 1: simpl; only 1: intros l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	40	3.408128	1857	515	5.1.1.5.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.158575	17875	4488
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	40	40.404664	30531	4201
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	40	3.075775	1840	380	0.0.0.2.2.1.0.2.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	40	0.065701	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	40	0.042730	5	5	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.282383	25333	5815
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.373370	56163	3673
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.417153	97586	5146
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.195463	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.319981	23002	3729
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.651273	21475	1238
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.317416	44980	4965
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.414293	32665	4506
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	1.844881	418	214	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.342423	39506	5856
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.073102	30876	6020
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	20.434317	19718	1369	0.0.1.0.2.0.6.18.38	synth with cache (only 1: intros n IH; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	40.401392	31404	6423
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.218813	49910	8713
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.046435	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	40	40.428904	30902	4640
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.206802	36762	5641
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.456230	24126	2290
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.560632	22508	2544
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.034407	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	40	40.590056	19127	3346
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.028584	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.040980	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	0.028109	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.698893	27977	1203
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	40	17.518731	18355	2927	2.7.0.0.3.1.4.4.1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: firstorder; only 1: subst; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: subst; only 1: auto; only 1: simpl in H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.337464	40250	5306
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.323537	28910	4199
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	13.617925	14403	1075	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.026645	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.025794	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.455112	41612	3176
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.157784	34761	3786
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.287162	63733	8288
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007018	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.040860	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	40	40.092851	46636	4318
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.393945	22331	3961
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.158531	23076	4817
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.276103	40214	4786
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.528728	27152	1617
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	40	40.244643	47282	6752
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.266107	15697	3491
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	1.648949	423	74	8.5.2	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.252356	43401	5547
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.469170	105066	8840
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.102433	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.098159	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	40.730736	32067	5855
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.958367	219	86	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.145191	29835	4602
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.066215	95563	11613
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.260115	29242	5275
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.009635	6	1	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.141356	30695	7363
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.341957	16323	4640
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.092806	26658	3062
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.144565	38783	6893
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.301611	4	3	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.234553	39330	5186
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.209217	43245	5409
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.171754	50119	5790
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.228061	54964	6263
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.420404	27573	5879
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.165570	29399	5300
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.273018	47781	4169
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	40	0.007946	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.050481	45898	4796
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.049913	10	7	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.177725	42824	6873
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.117392	18104	5755
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.512039	30578	3852
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	40	40.251189	14795	2534
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.121689	58381	5840
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.239894	42996	7097
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.264186	27564	5715
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.188514	63254	8123
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.309174	26666	5617
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.036330	21952	4404
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.214707	84073	5245
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	40	0.004143	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	40	0.010208	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	40	0.004713	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.025245	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.012554	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.136198	10777	3080
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.044885	27317	6793
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.259199	42266	5558
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	6.056948	2762	1114	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.849793	230	106	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	40	0.013194	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	40	0.315011	171	44	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.398494	334	66	2.11.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	40	0.131417	9	8	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.347941	44937	3693
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.094806	33189	5771
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.356289	106945	9000
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.270016	53316	4546
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.271439	36045	7855
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.180053	68138	7380
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.816022	33656	4992
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.183874	35373	5965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.827932	472	226	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	3.523217	1459	503	0.0.0.1.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.569361	1687	361	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.173484	44074	7095
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.049733	39067	7682
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.140373	43996	6059
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.152471	58990	8470
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.047341	26	11	4.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.312237	51273	3997
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.138686	17897	5232
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.237463	30627	4846
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.263922	35636	4929
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.334955	36276	4502
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.282118	25469	8109
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.256007	94	24	4.3	synth with cache (only 1: inversion 1; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.017575	2	2	0.0	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.171217	39689	5472
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.741032	36203	4426
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.009219	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.011217	6	1	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.088584	39	9	9	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.044743	29309	6455
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.155361	29770	7727
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.313208	17305	2952
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.670053	83	38	0.0.0.0.0.0.0.5	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.109593	45011	6882
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.008510	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.091825	63892	5964
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.299363	14558	4262
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.202977	39298	5166
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.260814	43342	2104
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.309010	40381	5288
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.249423	90	26	0.1.5	synth with cache (only 1: inversion 1; only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.191291	40474	4943
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.179377	22721	2795
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.316057	17788	6203
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.867849	48564	3310
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	40	40.226559	151161	2411
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	4.333830	4690	368	3.3.46	synth with cache (only 1: destruct (N.le_gt_cases a 0) as [Ha| Ha]; only 1: now destruct a; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.344990	23888	2983
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.157559	42753	6357
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.178815	53266	5498
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.162318	32277	4874
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.216244	56439	5224
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	23.733790	18628	2540	2.4.2.3.0.13.7.18	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: unfold not; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	40	40.378237	33713	6653
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.918884	1430	374	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.134058	8	4	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.442140	41419	5012
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	6.492882	3935	468	0.20.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.203127	97766	8619
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.695178	121	50	1.5.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.180130	37685	7630
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.202704	34677	11693
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.468428	19014	4035
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.326058	37536	3151
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.268333	33514	9477
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.110162	44786	4742
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.249473	28067	5340
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.140638	355	112	1.0.2.0.3.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.160637	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.163985	30294	5384
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	17.436858	21926	3067	6.6.9.4.3	synth with cache (only 1: unfold get, push, index; only 1: inversion 1; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.225605	33248	4447
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	40	40.178338	66434	7338
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.195528	41884	4830
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.032215	11	8	1.1.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intro; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.376385	37265	2838
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.105644	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	3.595399	1633	565	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.241567	56050	3526
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.594128	18752	5545
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.551550	15647	2134
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.190045	19036	6489
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.123888	46799	4969
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.239520	31288	4741
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.185529	35794	6211
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	40	40.105348	38801	7346
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.264580	43151	5262
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	40	40.129990	43832	7189
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.231821	26672	3770
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	40	0.169752	71	22	9	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.351237	13459	3804
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.323977	43071	1767
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.295279	39458	3788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.488140	16923	4810
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.359196	20528	5611
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.284250	39211	4062
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.139560	33082	5219
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.109274	20191	4583
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.067052	92245	5153
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.248305	28517	4171
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.363904	205669	6370
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.137189	94013	3850
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.091719	20327	4113
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.114511	59292	7121
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.148495	6556	3100
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.230235	26510	5949
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.165978	28726	7027
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.030251	5	5	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.012907	2	2	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.173796	58402	2680
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.132134	38670	5694
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.491198	95	53	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.027011	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	40.196329	17215	7548
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.298164	35833	5015
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.095458	43449	5490
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.199931	103192	7731
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.094039	41871	5654
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	4.599007	4656	651	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.065888	99647	9683
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	4.933380	4675	528	0.12.2.9.6.3.7.3	synth with cache (only 1: split; only 1: intros; only 1: induction l as [| a tail]; only 1: trivial; only 1: simpl in *; only 1: now discriminate; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.005026	2	1	1	synth with cache (only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.012421	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.013905	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.179479	111	30	1.2.5	synth with cache (only 1: destr_bool; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	40	1.124941	296	69	8.3	synth with cache (only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	40	0.015508	5	3	2.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.185918	36861	4787
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.142567	8543	2907
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.609616	22016	6458
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.123377	38048	9296
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.204054	57479	3965
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.041996	26946	5604
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.268667	39242	4441
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.168186	27443	6673
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.089550	48349	5365
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.137508	107733	9090
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	40	0.327770	672	56	24.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	6.139411	12636	1634	2.22.24	synth with cache (only 1: intros a Ha; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.031015	21	7	7	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.162465	56720	6858
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	40	0.879458	629	194	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.453578	226	108	3.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.030151	15	7	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	40	0.990791	473	181	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.038913	20	8	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.009038	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009145	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.011352	6	2	3.1	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.013146	3	2	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	40	40.192622	103539	4840
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	40	0.005163	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	5.246591	7428	1160	27	synth with cache (only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.091651	17931	5202
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.657341	18097	6246
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.344292	73989	6919
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.210135	150020	6561
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.109710	20509	4129
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.222681	16654	6349
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.153305	33533	2592
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	40	40.180758	28717	5714
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.269336	35743	5028
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	40	40.104614	19955	1952
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.424339	80621	4980
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	40.113877	51647	8274
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.401364	183	69	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	4.090382	4596	616	4.0.0.3.19	synth with cache (only 1: intros n IH; only 1: induction n; only 1: simpl; only 1: now discriminate; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	40	0.018016	5	2	3.0	synth with cache (only 1: simpl; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	40	40.203539	27692	3119
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	40	40.281825	29454	7343
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.896416	33671	4111
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.149760	19201	5529
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.151520	13	5	5.0	synth with cache (only 1: unfold to_nat; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.197417	88003	2575
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.315764	5385	2092
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.250221	22252	2696
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.351050	55	22	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.131858	14	7	3.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.042553	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	40	15.399940	23002	2732	0.2.0.0.6.6.0.3.11.0.0.7.8	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: compute; only 1: destruct l; only 1: reflexivity; only 1: simpl in *; only 1: destruct l; only 1: reflexivity; only 1: apply f_equal; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	40	0.035407	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.435427	48090	9682
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	40	1.966311	936	280	0.0.9.1.0.0.1	synth with cache (only 1: induction l; only 1: intros a r; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.056694	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.008418	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.802932	273	92	0.0.0.0.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.017872	2	1	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.022836	39	7	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	40	40.209105	32444	4096
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	40	3.123884	2361	327	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.139432	185351	12874
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	40	13.220152	15532	2009	109	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.223858	50795	7066
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	40	40.382307	79099	2270
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	40	40.273472	29703	6439
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	40	0.259635	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.325553	21460	4947
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.193130	34830	3154
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.413675	25575	3365
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.117010	22687	6145
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.188087	11617	3035
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.193055	39644	5025
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.180662	139554	3441
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.006504	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	10.604603	6843	1018	1.0.1.1.2.25	synth with cache (only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.123688	176529	22120
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	40	40.068564	23403	7058
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.065501	87411	4769
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.379240	29242	3582
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.231789	14320	4658
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.901747	52184	6310
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.100397	78174	2662
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.369514	15473	1721
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	3.396256	428	81	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.047329	32387	5792
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.314812	51964	5073
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.214132	175288	4915
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	0.356518	116	44	0.0.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.392810	13081	2847
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	40	14.514846	5084	1549	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	2.181207	297	143	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.469191	278	95	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	40	0.064470	9	8	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	40	1.471856	152	83	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.020705	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.009345	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.092574	196931	17072
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	0.396743	620	119	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	40	40.171322	32717	6703
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	2.326822	11692	922	0.10.13.0.20.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intros H ?; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.133780	49343	4291
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.393436	90875	2002
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.465589	31816	4778
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	40	40.201220	77891	5263
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.242670	71844	4770
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.315590	5421	2343
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	40	40.156969	44531	7563
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	40.299520	288967	2484
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.010594	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	40	1.403827	612	191	6.0.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.232500	33940	4442
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	6.214681	11960	589	0.0.0.0.0.73	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.026088	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.915836	325	120	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	40	40.283761	37055	4813
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	40	12.921234	8218	2044	11.0.1.0.0.0.0.9.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.217458	465349	14363
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.156671	62427	7463
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	40	6.570732	5134	1002	1.16.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	40	40.083044	20273	4654
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.405811	145074	2084
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	40	0.016451	5	2	3.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.538659	1621	675	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.168273	60	14	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	40	40.376639	48025	3758
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.090106	42089	4283
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.411001	10697	3239
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	26.376630	19963	2520	1.9.0.21	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	26.214533	20359	4579	4.1.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.539626	4176	1783
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	40	3.634661	1505	324	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.007137	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	40	3.496721	1625	607	1.0.1.0.0.0.9.3	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	8.190869	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.066644	7	6	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	4.849534	1233	436	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	10.942805	14419	1089	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	40	3.894138	924	362	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.006380	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.249120	36099	5815
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.158312	491107	15656
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.290749	67610	7181
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	40	40.299596	24395	3468
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.127331	80264	6124
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.133753	41822	4463
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.047181	165	96	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	2.837425	1597	479	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.259305	49	30	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.081617	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	40	6.162473	2835	802	3.1.1.2.0.5.1	synth with cache (only 1: intros; only 1: induction v; only 1: inversion le; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.274889	26262	4517
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	2.310475	826	265	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now simpl; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.014620	5	2	0.3	synth with cache (only 1: intros m w le; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.036772	6	4	0.1.1.0	synth with cache (only 1: intros; only 1: destruct v; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.224406	6806	2435
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.063813	51710	5688
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.477267	6126	1174
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	4.211301	3267	620	0.0.0.0.2.14.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.007411	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.006739	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	40	40.190649	23105	4111
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.563882	25015	3821
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.573881	17684	2812
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.652605	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.377405	41850	5844
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.024355	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	43.583823	91322	2280
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.169263	62537	4360
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.225024	33731	7503
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	13.023539	4534	1416	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.175103	338	93	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.325269	55	31	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.632441	315	47	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.115255	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.331967	23331	6821
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.150620	37	21	2.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.311447	38497	4462
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.137665	19190	4458
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.309686	11808	1298
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.153405	33707	3663
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.923658	392	97	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	40	40.474046	27723	2029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.970293	17810	4002
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	16.247331	8000	2164	1.0.0.0.14.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.265888	558	184	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	31.030651	27247	3205	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.569122	137	76	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.097679	18	11	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.055231	33741	7631
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.045578	24272	11664
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	40	40.487897	26289	4859
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.386348	25522	1962
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.097149	22284	6373
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.162368	38803	6026
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	8.387274	5077	807	26	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	5.359668	2166	243	0.0.0.7.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.132279	23678	5955
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.126635	51909	5159
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.248550	47764	5945
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.466373	17651	5196
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	40	40.078351	35790	9198
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.194117	31210	5235
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	3.248296	2495	552	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.046961	70257	7568
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.151239	331960	19604
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	40	3.850399	3343	593	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.004958	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.142888	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	40.133795	105700	5306
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.005135	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005168	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.007278	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.041555	22158	6270
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	40	40.355726	39961	3943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.122902	214802	4915
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.100897	15874	6807
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.040658	24272	4335
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.072651	36389	7472
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.566303	13377	4749
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	40	40.310599	60520	10428
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.304316	52127	6147
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.098816	216898	15941
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	40	40.090742	43321	4677
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	40	0.022112	18	3	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	40	0.008485	3	1	2	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	40.180803	23863	3703
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.041357	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.384126	17301	6608
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	40	22.181585	16775	3100	8.7.5.0.3.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.120088	41760	4658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.108612	42999	9469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.370216	77	36	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.172974	21276	7248
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.352368	12533	2721
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	40	40.166806	78884	6170
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	4.734444	2229	627	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	40	3.685107	2842	629	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	41.108483	8761	2245
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	40	0.145668	11	6	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	40	0.007131	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	40	13.957245	2527	723	1.0.1.0.0.0.7.6	synth with cache (only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred m); only 1: rewrite geb_leb; only 1: case leb_spec0; only 1: constructor; only 1: order; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	40	40.077514	39922	7578
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.088747	222281	9540
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	40	40.236383	68524	4733
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.009860	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	40	0.005982	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	40	0.010308	3	1	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	40	0.009822	2	1	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.009690	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.490618	13164	2240
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.273182	21982	6007
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	31.142491	29817	3497	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	40	0.007393	2	1	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	40	0.006130	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.008580	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.086094	26941	8628
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.259785	38613	3997
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	40	0.229401	34	11	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	40	0.004264	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	40	0.010518	2	1	1	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.006039	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.164591	60820	6662
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.374048	17275	3989
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	25.076565	26789	4801	0.0.0.2.1.6.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	40	0.959166	177	74	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.216076	10338	2609
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	40	7.409588	3237	1137	0.0.8.0.0.3.0.1.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.839256	22781	3478
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.054132	93180	9462
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.039903	19046	7754
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	40	17.393679	27415	2717	9.0.0.12.22.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m; only 1: intro; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.041805	54015	11266
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.094592	24592	5734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.125723	79692	12582
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	40	40.148328	35122	5920
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.075617	38432	5072
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.163863	14856	5090
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	19.610589	16235	2463	3.2.30	synth with cache (only 1: destruct (min_spec n m); only 1: apply mul_cancel_l; only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.644834	245	71	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.034642	19513	4108
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.015291	3	2	0.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	4.770172	1727	262	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.327308	4	2	1.1	synth with cache (only 1: rewrite two_succ; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	40	1.249458	285	130	0.0.0.0.0.1.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.055661	37238	5809
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.045683	87894	9706
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	18.497465	7233	1311	1.10.5.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.021355	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.015388	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.018521	4	4	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.200999	23064	8153
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.038538	36150	4679
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.532033	37779	6549
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.102127	29098	5959
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	13.164745	4667	1300	7.2.2.1.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.818186	294	139	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	0.788691	242	124	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.051113	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.106365	49245	6262
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.192425	27770	4595
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.123033	41635	5349
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.934348	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.148539	13376	4795
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	40	19.294219	8403	2441	13.0.1.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.278694	32545	4145
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	40	40.213485	44954	6678
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.042656	52136	8164
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.033368	17790	7899
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.298589	91699	5855
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.120113	20269	6593
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.141659	19346	6151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.187375	63749	9369
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.221037	38633	4321
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.419651	468	235	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	40	40.133913	52277	5537
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.103642	29649	8081
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	1.865538	720	322	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.134315	49252	5192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.470854	23776	1474
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	40	40.237176	62390	7088
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.037471	43521	6639
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.179449	18633	6766
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.193972	24596	4083
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.205753	47078	5224
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	11.131184	10839	1921	2.0.0.0.0.0.0.6.6.0.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros H; only 1: intros; only 1: reflexivity || destruct H; only 1: trivial; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.007181	2	1	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.008017	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.056844	106085	5597
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	40	40.185925	29945	3213
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.161893	21151	6062
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	40	40.272438	39525	5285
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	40	1.323762	1347	168	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.005598	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.007568	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.363497	12850	3471
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.105933	48578	5541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.320977	46732	3794
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.703632	159	55	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	40	7.435116	1708	450	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.009580	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.007305	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.020495	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.013355	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.035250	8	1	7	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.007764	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.143387	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.020614	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.014444	3	2	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.014077	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.319966	26791	7125
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.037387	39603	3552
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	40	40.150318	37572	9965
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.287505	45115	5319
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.071842	31319	6819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.168548	45164	8782
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.168751	25236	5996
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.113491	116745	3280
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.041738	23696	6853
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.101594	103256	6644
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	40	40.060475	31292	4340
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.422126	30430	9086
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.147073	18163	7123
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.099415	180016	14141
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	40	40.115441	43578	6551
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.190885	23049	8465
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.121510	24459	6781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.435631	43199	5677
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.087496	26529	6264
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.293977	50139	6974
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.209946	19645	7254
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.046294	29502	4560
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.181882	70660	4817
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.498482	30316	5194
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.697705	254	72	1.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	40	40.184958	26440	5675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.010648	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	40	20.471934	21861	4374	17.1.0.0.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	40	0.007368	1	1	0	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.025748	3	2	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.022723	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.065359	89574	12776
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	40	40.163859	49846	6210
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.111905	29736	8273
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	40	16.174294	9700	2439	2.2.0.0.2.0.1.1.2.7.1	synth with cache (only 1: revert l; only 1: induction n; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: eauto; only 1: intros [| a l] H; only 1: now f_equal; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	40	6.135039	2178	825	0.0.0.1.0.3.1.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.155501	88663	9461
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.107774	19623	5517
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	40	40.045123	42655	6867
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	40	1.718908	859	245	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.183256	21315	6402
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.012302	4	2	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	21.428133	74539	10615	5.13.8.1.14.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.232190	43688	4935
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	9.641995	6162	1522	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.189967	63773	3954
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.028463	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.803236	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.010637	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	40.485733	29050	3549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.008108	1	1	0	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.010706	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.008725	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.007150	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.014717	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.005116	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	40.120393	19591	8141
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	40	11.415524	5382	1812	0.0.0.0.1.0.4.0.0.1.7.0.0.0.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: solve [ inversion H ]; only 1: simpl; only 1: intros; only 1: now auto with arith; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	12.507039	6926	1012	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	40	8.634476	23377	1312	0.0.0.36.38	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	40	40.053985	82872	6896
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.192348	35304	6952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.097511	42841	7367
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.116070	20620	5447
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.203000	48165	5298
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.177587	17222	7230
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.087550	159913	15392
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.062491	53404	5663
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	34.302529	28355	5354	0.0.0.0.0.6.1.10.5.23	synth with cache (only 1: revert q; only 1: unfold Z.le, Z.max; only 1: unfold Pos.max; only 1: intros H; only 1: simpl in *; only 1: case Pos.compare_spec; only 1: congruence; only 1: congruence; only 1: intros; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.214841	52095	7003
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	40	40.134331	39978	4225
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.248665	19860	2480
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	20.421672	12505	2737	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	40	40.105981	65111	5842
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.120914	4	2	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.104606	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.283630	87584	6975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.187186	21527	4657
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.205246	37303	3492
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	40	11.805076	6925	1809	19.0.0.0.1.0.1.0.0.0.0.1.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	40	0.008731	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.320903	39210	5479
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.059764	92394	15331
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.223756	20785	6455
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.133558	47573	8256
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.142874	36017	5560
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.232218	46566	4335
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.006139	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	40	40.103054	75525	7257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.081824	22994	5421
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	40.244132	44899	5514
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	2.910476	1189	272	0.6.0.1.1.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.007938	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.027851	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.008710	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.027002	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.009865	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.031184	13	3	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.006669	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.014322	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.018973	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.008705	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.095175	16660	6939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.176622	350	20	26	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.012077	3	2	0.1	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	40	40.091852	54514	5414
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	40	40.044588	38653	7432
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	40	0.030042	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.169796	19175	4487
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.054370	72884	17367
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.256433	35415	6280
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.063205	68250	3740
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	40	16.918922	30486	2846	27.18	synth with cache (only 1: induction 1; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	40	1.777115	568	137	3.0.5.3	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	9.354033	7236	1260	0.5.9.6.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	40	11.162523	15806	1799	0.0.2.7.36.3	synth with cache (only 1: symmetry; only 1: Nat.induct ltac:(n); only 1: apply Nat.sub_0_r; only 1: simpl; only 1: intros n IH; only 1: now rewrite IH).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	5.652326	2962	821	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.609038	367	58	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	40	40.059798	68189	6074
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	40.030214	24714	2998
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	40	3.472203	2622	390	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	40	4.151074	2672	465	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.048110	33362	6087
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.549419	48689	4385
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.095318	38486	6337
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.069209	128919	17671
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.483484	36876	5591
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.410684	75702	4254
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.007038	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.136767	17288	5102
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.187515	45151	4771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.292518	65778	5852
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.193397	49960	5764
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	40	8.019410	8759	1002	3.2.21.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	40	0.788284	1299	115	33	synth with cache (only 1: now apply Nat.add_sub_eq_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	40	40.047596	38975	6275
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	3.681497	5886	656	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	40	3.608523	2199	601	0.0.1.0.2.0.6.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.145894	54733	5141
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	40.125033	33183	5948
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.018310	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.362401	25626	5107
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.012424	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.015618	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.007181	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.017346	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.007653	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.009685	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.008236	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.008006	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.005973	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.013365	4	1	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.009809	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.009966	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	40	40.084601	41703	8396
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.093559	156420	19338
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.180977	60924	6208
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	40	23.185371	13481	4523	0.0.1.0.2.0.6.0.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.228729	64626	8128
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	40	40.184597	13624	3423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.318179	46143	5847
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	40	40.240263	47625	5506
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	40	40.182166	31572	4194
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	40	0.165434	80	26	0.3.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	40	0.527022	516	88	7.3.0.3	synth with cache (only 1: intros L R n; only 1: intro H; only 1: firstorder; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.251145	22145	1312
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.079100	34823	7147
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	40	2.482626	2197	412	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.595961	38198	1896
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	40	40.093296	81331	5916
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	40	0.024773	11	4	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	40	0.063211	18	8	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.062306	71890	14027
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	40	0.503647	207	64	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.165731	68246	4712
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.488734	18303	5547
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.049125	53830	6508
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.012004	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.060199	12193	3495
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.226885	20691	5194
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.140675	18824	3812
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.015366	4	2	2.0	synth with cache (only 1: simpl; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.077699	38600	4520
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	40	0.015802	2	2	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.015731	2	2	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.374548	27397	4363
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.066152	62058	4516
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.087435	38165	1876
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.096933	207984	13525
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	40	40.222496	48242	6100
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.222519	81134	6884
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.294083	27556	5306
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	40	0.039666	7	5	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.004364	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.016310	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.138813	7481	3464
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	40	40.159615	50273	7830
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	40	0.177678	28	12	0.6	synth with cache (only 1: intros; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	40	0.162582	23	10	0.6	synth with cache (only 1: intro H2; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	40	0.014932	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.025483	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.007211	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	40	0.015114	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	40	0.768858	294	94	0.0.3.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	10.045767	4780	1199	0.2.2.1.1.1.7.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl Z.to_N; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.010550	1	1	0	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	40	0.710627	318	90	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.482154	10137	3066
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.236716	30207	5753
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.114093	72617	6619
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.048368	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.304390	27938	4576
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	40	40.087820	16380	4792
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.128212	44118	8848
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.352847	53665	3968
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.010176	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.488552	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.422271	52300	4587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.040892	35199	4825
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.160255	32193	4959
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.144686	38720	1339
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	40.166860	39186	4779
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.314879	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	15.022521	11088	1657	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	2.780615	1647	414	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.387899	599	61	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	40	8.097297	22435	878	3.3.28.30.19	synth with cache (only 1: Nat.induct n; only 1: left; only 1: firstorder; only 1: intro p; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	40	0.021904	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	40	0.769072	442	105	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.031675	24060	5802
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	40.372614	42133	5183
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.027260	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	40	40.389909	59305	5692
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	26.865352	13004	4270	0.0.0.1.1.2.0.0.9.2.5	synth with cache (only 1: revert q; only 1: intros H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.089090	29971	6783
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	40.230661	45604	3064
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.376285	66959	7536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.056051	21668	3232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.105000	39042	5804
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	2.920658	869	303	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	40	40.071170	19463	2411
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.147465	41280	6472
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.022648	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.231736	24	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	40	0.027682	16	4	0.1	synth with cache (only 1: inversion 1; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	40	40.220047	66062	3739
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.487319	43	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.276638	56337	5406
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.046551	31348	5966
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.204766	38570	3893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	6.449845	3842	585	0.0.0.0.6.0.4.2.1.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.041638	20092	6946
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.143469	41075	5088
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	40	27.002252	32994	4201	28.2.5.0.0.0	synth with cache (only 1: induction n; only 1: intros; only 1: auto; only 1: inversion 1; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.198526	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.039226	12369	1491
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.498755	106761	5647
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.392727	27370	5193
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.568353	22258	4789
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.138000	44	17	1	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	40	0.421506	483	36	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.008484	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.074111	63822	9037
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	40.114619	31312	5056
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.068424	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	40	0.059543	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.059627	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	0.267230	13	4	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.058787	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.058234	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.065758	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.056866	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.059913	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.273822	4	3	0.0.1	synth with cache (only 1: induction n; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.063390	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.070098	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	40	0.588405	94	29	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.099239	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	40	0.040061	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	40	0.063746	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	40	0.062939	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.088753	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.049206	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.049245	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	40	40.138835	26905	6497
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	40	8.144359	4550	1136	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.085527	49322	4279
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.171633	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	1.300793	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.280424	36920	3429
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	40	3.698648	3962	521	0.0.3.2.4.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	40	2.962743	1949	374	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.190223	19183	6242
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.256262	30944	6550
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.098471	37907	4955
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.008794	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.043767	26928	2842
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.372893	87924	4028
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	40.654585	55070	2382
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.015742	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.341444	20541	4430
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	8.769260	2993	888	1.1.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.036654	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	0.034252	5	1	4	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.174573	46751	6489
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	40	40.234592	56379	4917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.139438	4488	1412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.198804	49647	4913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.137076	21071	4663
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.217746	17633	4802
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.166126	35765	6230
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.058102	53748	7274
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.015540	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.006018	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.005078	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.003990	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.008162	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.023415	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.076791	32	14	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.138469	13343	3194
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.603817	69958	3378
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	40.165600	45152	1466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.018958	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	11.188338	15977	3348	2.0.7.4.0.0.5.10	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.004663	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.193383	32262	4525
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	40	40.185876	28139	6592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.081426	9433	2021
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.177553	46548	5356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.052901	12	6	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.125509	37977	7272
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	40	4.002141	2342	455	2.3.1.10.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct IHl as [l' (a', H)]; only 1: rewrite app_length; only 1: simpl; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	9.397847	27633	1019	1.12.32.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.032135	17363	6070
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.270219	21380	5681
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.243192	15745	2715
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.089208	18806	4940
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.338936	3948	1348
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	40.551185	67069	1990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.306061	832	455	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.048981	30043	11505
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.287701	27865	2544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.085636	30749	4548
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	40	40.149435	25287	4754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.026316	11011	3363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.065001	9140	2774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.055622	13252	3119
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.131295	18325	5852
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.402663	7094	1854
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	5.835699	4417	837	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.027558	15081	3221
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.456036	29612	3049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.040939	14588	4964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.025453	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.064362	36625	11814
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.165629	20163	5048
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.029428	21531	3935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.045284	49204	6700
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.140671	30671	6067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.059304	11206	2659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.044694	38043	5524
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.040192	18536	5123
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.263449	24708	5713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.032869	18801	6142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.143705	23490	2437
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.617667	22571	3089
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.052642	28526	6720
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.033457	19126	5573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.026188	23023	3992
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	10.740732	14174	443	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.058224	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.040242	47162	6565
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.160718	29666	5462
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.177609	2180	327	5.1.15	synth with cache (only 1: induction l; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.032792	15820	4424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.066356	15725	2838
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.155528	21177	5868
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.285639	56186	5472
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.746110	967	444	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.070042	18225	5181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.099077	20116	1962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	2.665130	2245	317	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.436499	168	41	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.049850	37281	10097
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.316349	28934	4687
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.013486	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.033882	29377	4763
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.377172	25062	2664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.033524	17787	6611
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.078751	70714	5674
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	40	0.006846	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	40	0.052286	8	7	0.0.0.0.0.1.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.031085	11142	4334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.048903	24364	5335
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.179552	39954	5229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	1.529142	537	189	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.031252	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	29.844744	10045	4075	0.1.1.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	6.174560	2192	903	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.055407	58240	5695
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.030747	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.892794	1994	457	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.034234	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.150538	23793	2322
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.041056	34426	8995
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.012438	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.310830	48871	3584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.049773	15376	2543
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.105295	29970	3938
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.039541	16623	5900
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	2.596850	898	198	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.079407	5	5	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.072084	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.077234	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.154311	41461	6957
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	40	0.846087	511	79	13	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	40	0.017033	6	2	1.3	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	15.602719	10548	4206	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.059562	12197	3889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	28.353895	27243	6116	0.0.3.3.0.1.0.7.4	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.253092	34975	5565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.041861	43775	8272
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.268030	68437	8914
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.141987	24235	4796
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.237705	73376	2985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.097389	26558	4889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	2.890030	807	474	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.034699	16630	4427
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.632637	32359	3078
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	40	40.254175	32164	5797
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.044015	34864	9983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.118742	11350	5072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.045814	24600	6399
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.087074	27343	7928
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	40	4.339021	1814	494	0.0.15.0.0.0	synth with cache (only 1: induction l; only 1: intro n; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: subst; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.051598	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	40	0.753433	515	137	0.0.6.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.052504	41244	6821
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	11.358522	5828	2383	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.140962	30329	3515
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.541028	1457	641	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.081898	28	23	2.2.0	synth with cache (only 1: revert m; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.032502	1150	559	0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	40	13.301022	15855	2386	2.0.21.0.0.0.0	synth with cache (only 1: intros l n d H; only 1: apply nth_error_split in H; only 1: destruct H as [l1 [l2 [H H']]]; only 1: subst; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	40	0.416689	153	75	1.0.0.0.0.2.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.867930	873	455	0.0.1.0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.701416	2234	979	0.0.1.0.1.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.138263	14804	5327
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	40	5.154339	3572	1364	0.0.1.0.0.0.0.1.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.014009	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.011322	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.099302	22	7	1.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.012019	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.320651	16310	5826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.056055	12069	3982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.066009	37549	5681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.096168	42764	4295
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.330003	123	46	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.143385	18	6	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.117552	11411	4521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.044826	38036	9325
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.056210	30105	8740
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.217321	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.206028	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.999233	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.034994	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.056780	25	7	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.070543	26343	5902
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.214837	37687	5606
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	40	40.179562	41407	5865
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	0.948796	472	153	4.3.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.172347	34050	6168
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.090122	88264	4581
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	40	40.538854	47071	3722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.087365	31047	6132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.045251	41739	6125
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.694566	54887	4625
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.014572	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	40	0.005720	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.164758	74	13	8	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.058828	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.069315	13093	5281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.058292	25626	6848
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.366098	21575	4824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.056988	29183	6360
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.328797	21999	6666
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.195533	86276	2626
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.064360	19061	5589
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.097338	65428	4802
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.770153	811	113	0.0.0.27	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.177646	31943	4100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.089850	24724	2427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.056715	67686	8525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.034541	17930	4902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.131222	15807	5352
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.044334	26083	7129
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.171137	50519	5148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.058971	31892	6485
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.269495	21765	5599
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	40	8.456152	13804	1396	0.10.0.0.0.0.0.23	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	40	40.302869	20676	4118
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	40	0.971724	514	138	0.1.3.0.0.0.3	synth with cache (only 1: intros n m p; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.084420	21196	4797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.525359	681	292	3.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.082723	18467	5006
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.292217	35011	3783
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	40	13.589730	12947	2307	0.0.0.1.0.0.7.0.0.0.0.8.4	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: destruct l; only 1: rewrite IHl; only 1: simpl; only 1: auto; only 1: rewrite IHl; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	40	0.046460	7	6	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.130989	20974	3212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.045935	34514	9646
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	40	1.170421	594	182	1.0.0.0.0.5.5	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	3.882320	3855	526	1.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.350962	145	32	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.046048	31548	5870
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.133489	11254	4501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.038599	12840	5187
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	40	9.595875	6509	1033	0.4.15.1.2.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.115279	18543	3429
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.080639	39955	4062
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.219367	72	20	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.148712	62634	5930
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	40	15.082850	10238	2419	7.13.3.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: firstorder; only 1: inversion 1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.109644	15228	4612
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.075810	32351	7733
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	10.062690	6868	1596	0.0.0.0.0.0.0.0.4.1.0.0.0.0.4.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	40	0.382597	70	32	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.493916	32109	4107
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.037683	7	5	2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.052675	26312	7385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.260898	3407	1101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.165220	376	103	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.039175	23130	5746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.093725	10881	3993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.051054	22531	6568
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.034769	11887	4868
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.084357	42801	4517
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.060243	32861	7072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.223918	17377	4908
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.114856	40534	7798
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.264236	44653	3651
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.323684	42959	4404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	40	0.336005	101	41	0.1.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.070612	34341	8991
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.061228	13739	3565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.038045	27491	6223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.069806	9820	4829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.067287	20083	5496
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.057703	5566	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.029360	8827	1309
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.371402	20528	2740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.311170	22724	4891
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.305526	23839	2637
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.304018	31583	6030
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.302054	21971	4580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.071163	26693	5792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.034101	24007	6734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.126929	21740	4957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.534591	146	71	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.196805	9203	4182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.036304	14038	6045
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	10.199187	5355	911	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.005892	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	2.862125	914	276	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.095025	16887	5593
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.075920	19754	4031
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	39.620490	40998	5371	0.0.2.5.0.0.0.4.2.1.0.0.2.1.0.1.24	synth with cache (only 1: apply succ_inj; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	40	12.322676	3561	1113	4.3.2.1.1.4.0.0.0.2.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: split; only 1: intros H; only 1: order; only 1: intros H; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	0.019326	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	40	0.006150	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	13.884605	5405	742	4.0.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.089540	36083	8107
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.147127	24096	6161
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.323965	47705	6725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.054938	52227	7494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.044884	48482	6728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.355420	5245	1467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.040633	6484	3860
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.031882	6646	2816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.044427	15801	3090
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.112133	21787	5394
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.449995	16279	3421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.071968	9979	4553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.087247	23462	4567
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.042566	34958	6130
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	40	40.234673	29085	5766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.053779	39986	7171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.035431	29145	7916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.033145	17792	4249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.050047	14608	6112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.075596	54512	8402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.619248	168	59	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.579954	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.209305	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.116858	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.032081	28994	4374
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.252429	23358	5321
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.507234	15414	3570
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	40	1.280382	353	186	0.3.2.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.033705	9638	4110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.042004	20309	5307
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.195067	16023	3755
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	40	40.271797	27714	5342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.044385	56730	5444
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.042179	24001	5023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.171245	17937	3346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.071433	8761	4762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.100245	20734	5947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.034966	17482	2695
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.211831	20315	5320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.119524	16017	3479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.059481	30900	5165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.318640	15898	3961
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.135160	17705	4573
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.014943	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	40	40.521336	34321	3334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.062055	31359	6210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.032902	23492	5110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.198222	13289	3713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.046350	23728	4825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.069139	26052	6578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.223132	362	164	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.025140	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.023439	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.044797	14287	3497
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.184339	16218	4944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.164214	27681	4675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.028206	16749	4153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.059621	38684	4623
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.122380	24838	5129
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.504615	14048	2278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.074578	59828	7927
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	40	0.838711	225	121	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.038402	28076	7981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.049326	12669	3486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.012480	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.052315	22559	5590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.069213	33682	6191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.478424	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.037700	19501	3900
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.117760	26370	7372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	3.904397	1812	507	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.183594	16860	3103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.042468	34332	6353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.182062	23920	5086
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.116393	27293	5141
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.030436	17	5	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.034598	19647	6041
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	40	40.517047	20258	3915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.037210	21651	8676
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.048240	10	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.165308	10251	1928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.045280	31347	7731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.219640	9755	2919
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.033928	23675	6557
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.339153	17087	5709
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.030601	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.369704	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.221457	44	27	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.140803	12471	4236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.051069	22829	3618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.143006	28162	4374
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.125635	33859	6316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.043157	27598	9362
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	40	40.483530	50581	6691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.040328	19694	7881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.126671	19132	3910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.048081	51884	8334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.028208	1089	476	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.053458	30852	3979
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.277403	9015	3394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.049669	27169	5678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.169136	16621	3997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	17.434590	10688	3201	0.0.3.0.0.1.1.0.1.5.0.1.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.051657	24777	7115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.093268	39425	5411
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.063299	39552	6263
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.011976	2	2	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.049259	23795	7205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	13.099935	3908	449	2.2.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.292135	57891	6421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	20.456027	7962	2136	10.8.4.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- gcd_div_swap; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.156044	16343	3429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.041784	27871	10266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.052041	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.130926	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.041584	20841	5046
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.099514	25994	6504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.089173	11777	2611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.045143	17565	6206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.206487	20581	4027
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.148063	30699	5250
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.106933	108	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	10.401981	3948	1646	0.0.1.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	1.667303	1044	181	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.107063	32	17	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.035166	15767	3523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.116915	20865	2806
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	40	40.236756	32721	5025
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	2.128312	587	201	0.0.0.5.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.087268	20420	5206
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	40	1.893122	679	148	0.0.1.6.2.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	40	0.018634	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.071256	14694	2689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.037416	29444	8658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.037214	29714	5764
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.190803	26274	8672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.084374	9104	6042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.115229	17667	4051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.061037	18638	6282
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.109700	49092	6266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.042711	22543	8659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.042862	25513	3155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.159847	18922	5410
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	40	40.283449	25272	5839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.068216	23414	3498
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.043056	28387	6906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	7.516748	4939	1435	1.0.0.0.3.8.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.516745	228	120	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.020345	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.021133	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.156434	26929	7226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.118717	16664	3876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	16.042980	20692	2520	19.2.8.1.8.1.8.0.5.6	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: firstorder; only 1: intros a; only 1: intros n m; only 1: intros H H1 H2; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.534616	1550	364	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.105485	21409	3791
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.045852	15261	6600
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.097395	29443	7194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.044919	28161	8075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.045196	26993	3324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.010499	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.151223	22542	4699
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	40	40.189175	42357	10415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	28.193637	16906	3368	1.0.1.6.1.22	synth with cache (only 1: intros n m p q; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.043034	25581	8747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.244968	35677	2776
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.268666	19496	5858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.378311	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.035038	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.086138	10728	3525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	11.436288	4558	2076	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: trivial; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.038228	18020	3329
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.040278	14313	6520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	9.458322	3981	1465	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.107263	53261	7359
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.026660	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.059485	20	8	1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.122763	27	20	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.507728	44	29	2.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.224872	39	25	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.042005	20928	3777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.040606	29403	5466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.034499	10694	4007
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.034909	20428	6986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.096878	44908	3236
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.352087	24735	7434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.034489	29580	5065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.034076	12962	3719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.044334	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.329024	70	32	0.2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.047560	7	6	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.090128	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.145897	3684	1203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.104983	5033	948
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.068644	46513	4241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.129523	16236	5677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.089490	25615	4512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.057209	18942	3932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.038312	16409	4003
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.242122	19091	4375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	19.122438	4463	2381	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.180943	29	20	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	5.604113	5682	519	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.375538	93	49	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.073731	25843	5292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.182028	55	21	0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.039400	7	6	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.038088	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	40	8.907100	5281	1108	5.1.1.0.7.1.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.063129	34729	1294
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.253194	34520	6716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.139016	6771	2214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.044698	31832	5744
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.198389	43810	3445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.186915	12929	4338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.048053	18369	5844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.044106	23216	5295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	40.094096	21627	4070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.067472	25156	7532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.075150	21426	4135
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.412058	23020	5279
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	4.083024	1414	498	1.1.1.5.1.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	40	0.026808	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.038616	23673	5049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.048412	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.183835	31373	9473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	23.794021	16236	2592	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.100932	9443	2209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.036988	28937	5675
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.082352	32760	5089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.027964	10278	5966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.038524	24350	4800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.062333	43345	4203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.200425	33915	5338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.218041	10467	3077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	2.586527	1037	482	1.2.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.193178	36421	6105
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.065881	35175	5672
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.200245	21651	4347
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	4.835517	1623	766	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.064717	15937	5327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.186936	19793	4121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.058958	15508	4780
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.097619	30987	5675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.208029	14627	2948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.071223	11	8	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.059824	15237	4097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.048805	23177	7426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	16.568031	3579	1656	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.023648	7959	2307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.145739	18379	5527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.052681	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.073569	35586	4739
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.115376	36768	7237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	7.973107	2792	998	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	15.532303	3206	1052	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.263754	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.908825	473	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	40	40.049494	35980	6354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	5.993047	2265	646	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.079380	15021	3388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.112544	15491	5264
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.100725	15083	8289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.090947	6345	2450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.063131	9	6	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.078132	13239	4744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.105899	19381	4713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	22.800481	19419	2501	0.0.0.8.0.3.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.864213	736	279	1.0.0.3.0.6.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: apply crossmul_le_addsquare; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.107101	7809	2188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	27.571738	9051	3587	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.114094	23706	7797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.102632	27060	4434
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.837245	112	43	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.406991	57	33	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.305949	25115	4415
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.069163	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	32.038501	55501	5891	5.1.2.8.1.15.8.14.0.0.0.0.1.4.0.0.0.0.1.31	synth with cache (only 1: split; only 1: assert (H : forall n, Even n -> Even (- n)); only 1: intros n (m, H); only 1: exists (- m); only 1: rewrite mul_opp_r; only 1: now f_equiv; only 1: split; only 1: assert (H : forall n, Even n -> Even (- n)); only 1: intros n (m, H); only 1: exists (- m); only 1: rewrite mul_opp_r; only 1: now f_equiv; only 1: intros m; only 1: destr_bool; only 1: firstorder; only 1: intro; only 1: intros n1 m1 H; only 1: red; only 1: intros; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	9.569392	3043	1253	0.6.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.087540	12476	4768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.120496	13	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.231025	26315	6060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.084451	8978	2945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.032277	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.029318	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.029734	14569	3056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.027699	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.047108	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.091638	27745	4450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	16.348479	7842	1659	11.0.2.2.14	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.080275	38900	5012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.178950	8982	2547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	19.541979	5653	3369	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	3.635138	1634	756	0.0.5.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.083022	23471	5226
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.301364	23045	6728
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.070539	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.075327	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.070546	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.076419	8	6	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.020547	10	3	2.3	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.007234	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	40	40.208549	37072	5151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	2.761559	482	273	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.425613	319	125	0.0.0.0.6	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.245218	9597	4070
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	5.514877	3708	960	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	3.731040	2091	555	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.048966	22148	5796
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.159930	18757	6893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.114247	13921	3520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.041647	23737	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.174503	35784	3738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	7.175527	7125	894	0.0.0.14.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.312451	115	46	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.039550	24626	4510
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.463865	603	209	0.1.0.0.5.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.454497	112	44	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.292361	92	39	0.1.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.343394	2284	351	13.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.097983	11403	1862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	40.061104	20120	4953
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	40	40.048208	42711	5378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.077916	12466	4218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.042253	6898	3186
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.902683	306	152	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.136285	34333	8520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	5.293580	1794	594	0.0.5.1.0.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.035290	29693	5559
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.428219	12667	4780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.771511	56	32	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.052052	6	5	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	12.963389	7050	1796	0.0.6.3.6.0.3.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.044467	20192	5931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	3.412808	1581	199	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.100169	28823	5169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.050480	17191	4906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.101779	499	157	0.1.1.1.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	40	11.728644	7445	1869	0.4.1.9.0.0.0.0.0.10.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: red; only 1: intros a b l H; only 1: contradiction; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: firstorder  (subst; auto); only 1: injection H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.071045	30103	2975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.062702	12246	3279
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	40	1.138167	425	132	2.4.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.182073	444	143	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	39.890173	20058	4483	0.0.24.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.028728	8601	3621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	4.006823	640	313	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.092704	32584	6133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.061642	18481	4183
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.935797	143	58	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.114043	19621	6469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.042635	22583	9987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.028235	11742	2745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.577688	851	320	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.058172	19508	4548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	5.016395	1089	318	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.033569	13363	5205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	13.631550	6341	1691	3.7.0.5.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.438422	80	38	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.144570	15839	2779
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	40	40.111647	32052	6285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.103935	27194	3213
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	0.838229	307	92	1.2.0.0.5	synth with cache (only 1: intro H; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.039278	20866	7359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.192509	351	177	0.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	6.494777	1250	488	0.1.0.0.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.338325	24	15	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.076148	10207	4070
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.036132	16486	6593
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.781046	500	111	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.354745	9810	2239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.074446	30194	5906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.112673	34435	3597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.036303	16465	3153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.046601	19708	2756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.090045	17502	2951
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.090646	16313	3005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.152161	42421	4069
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.049415	20205	6191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.036608	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	11.584793	5828	1277	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.078113	50801	5689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.109647	18939	5971
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.093479	21886	7345
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.328794	17020	6090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.074573	11427	6338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.043735	31912	5735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.112904	11266	3561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	4.224822	2877	729	1.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.076928	13296	4388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.149912	10279	774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.042251	25884	6368
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.526364	14568	3844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142958	61600	4687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.059211	18095	5595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.741341	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.888557	167	80	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.031855	21941	4728
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.425399	19444	7265
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.091710	30073	4476
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.822995	892	124	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.075837	13796	5822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.056518	13906	4062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.034554	23564	5607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.124448	15263	3501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.031481	9692	1545
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.119698	26559	4255
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	40	40.203937	25376	4499
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	40	0.598708	706	57	27	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	3.435663	796	396	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.183800	8565	2079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.389742	81	44	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	16.279949	12869	1961	0.0.0.2.9.2.0.2.0.2.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intros k H1 H2; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.191226	12	8	2.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	40	0.020528	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.023619	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.031463	11140	3002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.037000	15830	6207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	2.147584	420	188	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.173782	28860	7714
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.123224	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.029521	4	3	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.350481	48	19	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.022563	2	2	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.010632	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.041296	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.025238	2	2	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.010295	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	40	6.577202	4280	612	9.4.0.11	synth with cache (only 1: destruct l' as [| y l']; only 1: trivial; only 1: firstorder; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.009460	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.919085	403	88	5.2.0.0.1.3	synth with cache (only 1: induction l; only 1: intros l2; only 1: firstorder  discriminate; only 1: intros; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.026055	7	3	3.0.1	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	3.664058	1147	406	1.1.5.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.009310	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.007235	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.304398	55527	5011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.148606	8273	3930
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	40	5.418367	4461	779	3.10.14	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	5.875279	2046	704	0.2.3.1.0.6	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	40	0.369100	641	38	0.0.0.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.033683	22367	6983
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.014542	4	2	0.2	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.340036	165	38	4.1.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.083077	22964	4241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.048001	14830	5700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.038479	13576	3621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	1.202740	309	146	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.238099	29042	5070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.028523	8781	4361
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.642984	3750	1435	0.5.0.0.0.3.0.0.0.1.1.1.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: intro l'; only 1: elim l'; only 1: auto with arith; only 1: intros a' y H H0; only 1: absurd (S (length y) <= 0); only 1: auto with arith; only 1: auto with arith; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.008902	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.041827	12510	6389
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	40	11.924280	4819	1670	4.3.3.0.1.1.0.0.1.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.152036	37212	11531
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.098082	13636	4863
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	40.210034	53018	5593
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.012561	4	1	3	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.007006	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.799496	268	118	1.0.2.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.047745	16352	3202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	35.933301	11548	3104	1.0.0.5.16	synth with cache (only 1: intros n IH m H; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.126164	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.122437	10759	2620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.136989	11466	1107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.133255	12036	2395
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.031806	21177	5230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.195250	8100	2470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.721702	828	338	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	6.126945	1967	652	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	23.068272	10048	3586	0.0.0.1.0.0.5.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (lt_ge_cases 0 b); only 1: apply div_small; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: intuition; only 1: rewrite <- div_opp_opp by trivial; only 1: apply div_small; only 1: rewrite <- opp_lt_mono, opp_nonneg_nonpos; only 1: destruct (mod_neg_bound a b); only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	2.145583	551	247	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.068872	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.066209	8	7	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.940185	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.033810	17025	6972
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.390568	28440	5092
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	40	1.805278	758	288	0.0.0.1.1.1.0.1.5	synth with cache (only 1: induction n as [| n IH]; only 1: intros l1; only 1: intros; only 1: solve [ auto ]; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.281507	15257	5942
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.274996	10824	4137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.117295	16302	3706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.031943	15926	4046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.057331	21476	3699
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.030416	7542	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.025917	7573	3587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.288369	9459	2156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	8.832998	3183	1021	2.3.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.040534	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.050440	17800	2327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.020761	10307	3341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	14.131700	13295	2982	0.3.0.0.2.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.462746	107	53	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.117115	5805	1165
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.235464	30452	6087
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.296267	11763	4303
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.391264	11286	2961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.153950	15215	3706
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	12.485174	10964	1644	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.060752	21096	3720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.171857	8582	2511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.073391	324	108	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.044786	8890	3485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.261974	9305	1942
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.015787	5	2	3.0	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	6.349413	3293	606	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.045021	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.155223	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.064014	22325	4238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.029549	9694	5250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.043396	20507	6790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.070077	16774	5835
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.240998	43032	5287
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.137722	14625	4002
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.029064	13	3	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.083584	5975	2037
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.148079	22660	8417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.053549	29239	3980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.137913	9727	2758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.123561	5896	607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.131231	17055	3732
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	40	9.007084	7332	1745	0.4.2.1.1.15	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.068041	21	5	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.055191	19	6	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.016959	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.160529	23	11	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	0.459339	57	21	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.027686	12002	1866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.068287	75188	2511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.132919	17280	4215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.077590	35060	5099
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	40.381143	26476	4834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.027534	2822	1219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	19.388065	8198	2124	1.0.1.5.1.0.1.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.040926	21024	10907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	18.638568	6069	2553	0.0.2.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.192410	24853	3062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.017738	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.212094	18192	3982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.066262	9162	1617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.198340	14646	3679
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.728153	116	50	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	40.292040	58155	5985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.042518	92165	3067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.038386	31359	4223
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.403189	33758	4654
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.023116	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.391593	217	36	0.0.0.15	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.009694	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.032965	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	40	2.728518	802	312	1.0.0.0.0.5.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.055965	8390	1998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.069932	12134	1995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.056242	16383	5564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.111493	13667	3833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.072679	39253	5653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	11.361611	5370	1746	0.0.0.7.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.364644	16333	2563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.191580	15353	752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.194212	16193	3362
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.360183	35400	5255
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	23.214717	18203	4407	2.2.0.0.9.1.0.0.0.0.3.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	40	2.153898	682	229	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.043240	63731	2153
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	40	1.692773	663	160	1.0.0.0.0.1.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.028669	6	4	1.0.0.1	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	40	1.486352	523	178	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.113762	20342	5273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.108084	4091	1454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.047853	15567	5314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.026567	13346	2449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.122237	41738	7340
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.121861	15431	4064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.267672	17374	1950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.239227	6910	853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.163029	16600	3301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.852841	499	99	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.420693	37542	4672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	9.798585	2990	1230	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.065624	87102	2940
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.262337	33425	5025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.034299	15988	2538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	16.138755	4412	1645	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.117130	12899	4139
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.051352	25253	7411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.061289	11609	2118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.133055	23007	8286
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.163023	15845	5441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.181390	10614	1059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.105666	11538	1965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	21.133465	5987	2373	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.458694	34951	4292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.057839	8298	1378
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.328229	8734	2781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	28.406148	17522	3705	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.030525	22306	4327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.061993	25666	7244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.972083	1832	594	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.248935	3064	1230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.685957	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.116105	38	16	1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.047319	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.057523	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.025995	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.017343	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.079003	425	152	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.117347	25	14	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.018106	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.016907	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.523183	88	39	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.117278	24	14	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.295133	65	31	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.337342	44	28	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.177673	15932	3171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.096954	12426	3744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.195912	16743	3267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.084795	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.080304	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.113997	5	3	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	39.580707	11619	2869	0.5.5.0.0.6.0.3	synth with cache (only 1: intros n m H1 H2; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: apply max_l; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: apply max_r; only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.271597	12721	3200
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.379843	28268	2943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	6.008227	1805	711	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.038665	9926	2191
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.286825	8396	3301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.082090	20266	5464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.060384	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.033420	22879	4036
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	17.549735	2979	1088	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.040691	25360	11885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.274223	717	306	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.043419	22252	10517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.177500	21448	5172
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	6.421013	1020	402	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.096350	24088	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	2.553792	774	314	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	38.210768	18453	4512	0.0.1.2.0.0.0.0.1.0.0.24.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.402957	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.117523	22086	5521
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	40.240582	60500	5946
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.581522	128	26	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.033516	15067	3126
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.201854	20488	4967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.083071	12492	4149
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	4.300853	1283	516	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.031449	22977	5250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	26.488237	4574	1513	0.0.1.0.4.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.207043	16218	3920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	6.272209	1184	532	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.045312	18677	7810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.172932	24226	7070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.153959	18042	3137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.031461	11355	4615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.133259	24731	4343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.230442	16	7	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.034155	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.036592	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.031286	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	10.816361	1605	594	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.159385	20200	8045
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.024631	3	2	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.291340	456	206	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.314610	16064	4892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.070001	27499	5526
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	40	0.028137	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	40	1.015118	210	95	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	12.220508	5654	1443	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.048372	23194	2392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.118404	23	10	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.032683	12748	2700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	9.356702	4680	1440	2.8.2.5	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	40	10.176724	4640	1393	0.0.0.0.0.1.0.0.0.0.1.9.1.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: intros; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.045788	35812	5064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.039893	21645	7321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.061803	15939	4230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.256625	6094	1634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.034805	13927	4831
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.356457	35898	4639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.216255	9704	1284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.111081	15061	5614
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	8.569837	3091	1170	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.193384	24406	4367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.028794	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.019314	9942	3069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.039524	23374	6310
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	40	40.243442	20086	6691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	34.411931	20327	3119	4.2.5.0.0.9.9	synth with cache (only 1: intro p; only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	17.258885	11288	2410	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.034917	9932	6304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.107899	11992	2363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.188124	15678	3249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.028620	10403	5031
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	18.422634	31633	1671	9.8.1.13.12.5.34.49	synth with cache (only 1: compute; only 1: revert l1 l2; only 1: induction l1 as [| x1 l1]; only 1: intros H; only 1: constructor 1; only 1: intro x; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.092916	14206	3841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.040880	18021	4077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.129558	17268	3422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.033216	5150	2814
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.027012	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.041575	23846	3837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.029939	24659	4908
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.309498	19453	4672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.039883	24472	4957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.234162	66	22	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.061685	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.240380	32	13	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.106084	16287	4057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.058343	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.279853	18729	3564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.038387	14764	4298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	27.403788	3920	2077	0.0.10.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.455971	23278	4606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.159049	11196	1680
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	40	6.234339	2212	660	5.0.4.2.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	40	0.209999	33	15	2.0.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: split; only 1: simpl in *; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.125193	29305	4873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.208980	7269	1655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.030001	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.029499	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.033528	11771	3542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.028597	14678	3515
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.354268	33963	6586
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.063259	2404	225	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.039790	28545	6911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.037440	17388	5249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.322053	24113	2929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	32.896727	10643	3241	2.0.0.6.0.0.0.0.0.0.5.2.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.034623	12304	4113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.041629	14935	4614
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	10.028423	4141	862	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.249693	53954	7732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.033373	10373	5739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.197891	26403	4266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.043415	27165	6251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.022215	11620	2826
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.175864	24667	4757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.045704	27478	5487
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.029902	16567	6015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.245610	12404	3844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.027029	15760	5475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.029762	14369	3490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.063591	15050	4724
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.089096	26657	5094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.028585	13240	4330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.141813	19541	3757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.630509	540	306	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	19.277320	9556	1772	0.0.0.0.0.3.17	synth with cache (only 1: intro z; only 1: intros n m H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.199738	59	23	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.032955	20600	3544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.042527	23120	3879
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.276531	18822	5732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.063333	27665	5971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.305545	8722	2294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.032757	19126	5489
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	33.319759	9452	3822	0.11.0.0.0.1.0.0	synth with cache (only 1: intros n m p H; only 1: rewrite <- (add_0_r n); only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l; only 1: apply eq_le_incl; only 1: apply add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.034522	9543	3000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.396010	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	3.159788	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.328063	32637	6238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.091295	24083	4486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.036700	25512	4748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.055771	23278	5994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.070916	14050	5032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.036058	28379	4866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	25.486201	13377	1855	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.044211	23652	6499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.055324	17499	7311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.054770	14346	3206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.031191	20236	4634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.044342	45715	4684
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.527612	41989	5615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.042181	21739	5139
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.061926	14230	5973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	23.185861	24765	2467	0.0.0.0.1.41	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.058311	15903	4042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.104519	36693	4866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.031384	33197	5607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.220178	98	28	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.248882	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.220844	790	187	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	2.921664	889	398	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.224982	17586	7897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.036265	23929	5480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.207976	25	15	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.518151	111	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	3.186706	969	322	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.101327	20	10	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.059584	26042	5217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.033879	19946	4492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	3.907684	980	303	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.031955	24687	3925
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.015684	612	195	0.0.0.2.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.297678	64	31	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.145872	50	29	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.037022	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.435344	103	32	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.289165	64	26	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.045135	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.256603	314	109	0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.297283	32199	6665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	37.719955	34247	3229	1.0.10.1.33.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: right; only 1: order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.279445	29	9	0.0.4	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.292319	44	11	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.205782	13	5	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.138332	13760	3855
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.036493	12219	6521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.951438	896	122	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.115765	8	4	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.031819	13128	4199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	8.048904	2383	1085	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.649354	225	70	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.042438	36180	6373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.013684	4	3	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.869819	1538	619	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.031552	20011	4453
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.285041	23444	7287
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.029443	6	4	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.172668	17838	3893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.034603	24002	4147
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.035871	12512	4216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.086012	21155	4386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.393628	55	22	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.762222	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	2.373903	999	305	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	40.371974	27739	5160
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.045378	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.066179	8778	5134
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.135157	25752	3905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.030941	20675	6139
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.037367	40143	7121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.176842	51	19	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.037350	15369	4497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.032924	21471	4628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.495334	169	66	0.0.3.2	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.041460	1613	412	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.488984	37183	5837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.102291	13623	3616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.037820	23797	3645
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	7.825924	3700	1233	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.018225	5	3	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.052146	24753	6612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	21.074405	9481	2318	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.079745	30949	5048
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.076410	8111	1821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	11.757154	6852	571	1.1.2.5.7.5.23.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.070510	10343	4976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.094922	20154	3994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.060751	14710	2153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.035444	29032	4013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.042908	30396	6581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	10.144724	8226	2064	0.4.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.283608	27970	3187
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.223590	26039	4233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.075867	20908	7262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	13.055315	4570	1739	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.061074	35936	4552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.015611	5094	1291
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	40	40.382838	20451	3779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.033133	16183	5109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.112477	9819	4557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.218699	22141	4192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.039322	12	4	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.031849	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.027257	9628	2034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.032881	22336	4058
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.238104	12755	977
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.092231	22497	6280
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.070866	21489	4622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.036466	17431	2965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.038515	9	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.149490	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.948303	275	118	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.424008	69	25	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.515612	127	34	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	31.454492	13028	2635	24.0.2	synth with cache (only 1: intros H; only 1: bitwise; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.038374	28271	6290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	11.800384	6074	1415	6.1.8.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.029698	14272	2833
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.054569	67255	6335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.033828	10583	3188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	12.394602	3975	1804	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.103713	10291	4304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.026243	8748	2030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.358672	21035	2571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.067252	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.066365	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.090830	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.419145	17093	5829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.041155	27022	4859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.116294	23493	3070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.035108	18427	4053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.082089	17402	4762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.027096	11527	2722
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.251451	22561	3925
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.039981	27827	6656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.073813	18102	4796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.055715	13947	5090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.020186	16846	2050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	10.522156	2490	729	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.040073	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.030737	19414	4364
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.399611	17581	5930
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.123899	28	15	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.031161	18391	3790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.171999	17465	3186
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.029449	12801	3453
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.042936	37434	4469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.035005	19916	3145
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.233658	19573	4998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.812396	342	52	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.028797	16676	3424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.054694	10918	2945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.171852	10497	5516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.019931	8522	1908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.039484	25225	4460
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.363776	35637	6934
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.017984	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.018833	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.037096	31259	4285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.104115	18953	3070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.031851	11983	4800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.041852	69695	4717
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.039626	13	6	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.021142	8443	2086
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.045185	31881	5267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.026372	13278	2697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.036195	16278	7652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.141188	19540	5034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	7.806948	7203	1297	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.002576	704	234	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.041175	37434	1769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	8.679190	5167	1206	3.0.0.0.0.3.1.1.0.0.0.7	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.804939	207	59	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.190281	26497	4753
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.256532	31616	6368
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.013908	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.032138	18014	3468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.136387	20002	2667
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.037935	18878	4851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	24.203953	13837	3181	0.0.3.1.2.3.6.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intros _ H; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.032744	11660	1975
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.040170	29713	4507
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	4.790702	2581	757	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.038201	31623	7092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.084861	16478	3616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.099423	24946	3853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	5.471636	2909	728	8.3.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros m H2 H3; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	12.669012	9045	2210	1.1.9.10	synth with cache (only 1: intros n1 m1 H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.027175	13746	2090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.131346	29822	3475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.031874	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.379623	20563	7204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.281871	19000	2855
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.029941	19809	6128
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.400708	27887	6350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.087528	123369	6439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.046206	31360	6205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	36.170913	15344	4332	1.2.2.5.0.3.0.0.2.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: cases ltac:(n); only 1: intros n IH; only 1: now nzsimpl; only 1: intro H; only 1: intros n _; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.095311	17641	2901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.084162	71354	5136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.042875	25047	5069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.336642	553	189	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.024370	13999	2100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	2.474471	486	169	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.228500	18866	3979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	10.267540	2289	620	0.0.0.0.0.0.4.6	synth with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	14.840655	9840	1985	7.0.1.0.0.0.0.12	synth with cache (only 1: intro LS'; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.512520	38268	5518
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.128749	46	19	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.010290	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.270832	21749	4943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.062401	16068	4223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.121071	227084	4534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.041470	26340	6416
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.388469	20274	4002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.042165	35118	5127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.039361	17405	2688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.754566	187	74	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.061231	46029	5841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	17.087766	11559	2810	0.0.0.5.0.1.0.11.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.232269	21677	3731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.031525	20071	2852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	1.909046	878	188	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.030839	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.315611	23617	6156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.257687	30794	4616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.036314	19504	6522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.104610	200405	6462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.047529	25316	8387
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.256550	36350	5443
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.562860	2337	354	0.0.1.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.047666	9603	3026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.101313	85036	2267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.073808	31488	3366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.034628	23095	5263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.025104	12303	2275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.243366	19013	3871
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.276019	35039	6625
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.029507	5	4	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.313404	11657	2533
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.029904	15140	5120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.050979	25648	7105
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	40	40.229426	40677	5842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.075893	8249	2738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.047822	75457	4659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.025778	9701	2700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.042564	31559	5216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.042268	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.038987	20776	6980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	10.750748	5756	1545	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	2.708550	1301	449	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	25.685493	14293	3144	1.3.0.3.13.1	synth with cache (only 1: intros n m p q H1 H2; only 1: rewrite mul_comm; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: order'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.026346	10607	2443
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.174326	22076	3944
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.404390	28483	6478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.046167	17300	4716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.253310	19142	3239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	35.473863	39745	5959	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.046602	27786	6310
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	40	40.222773	53253	4486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.102219	16341	3676
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.027745	18484	3840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.038045	25479	6543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.034569	21589	5614
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.031640	13938	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.041552	355	137	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.233051	17284	2901
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.532246	24507	6174
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.045108	27972	4529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.183927	13873	2259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.049703	70918	5076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.050195	13629	3165
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.274636	23264	5985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.100012	43507	5720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.063556	30061	3894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	10.209429	2586	636	0.0.1.4.11	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.104147	22113	3877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.046586	18199	1796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.054285	3	2	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.029970	23651	5209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.015078	2	2	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.038278	6	4	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.150213	23898	5050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.173166	601	209	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.425159	52	24	1.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.030545	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.083955	5	4	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.246082	10336	3601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	5.341272	3610	447	0.0.1.0.18.7	synth with cache (only 1: intros n H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.051070	31551	5220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	40.055008	52803	4498
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.023753	15274	2726
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.148374	32959	4753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.033449	38114	3792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.025953	14696	2140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.290163	20164	3825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	12.422661	6218	895	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.134176	25810	4288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	16.355881	7492	1227	0.12.14	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.246628	15449	4028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.960117	683	125	4.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.372284	712	161	1.3.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.052648	22870	4325
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.313803	16793	4700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.014997	14157	1024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.535582	977	271	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.080630	21507	6528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.038395	36157	5959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.047403	7	6	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	11.650504	4338	1102	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	40	40.296777	59410	2915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.032513	18350	3560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.039626	22821	3807
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.236028	15345	7013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.074464	18174	2554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	25.791304	9139	2048	0.25	synth with cache (only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.128071	20048	3576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.031557	17465	3090
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.674046	25066	5222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.037390	24058	3714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.096846	9829	2323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.049373	33576	5060
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	40.175181	88962	2978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.041086	34610	3884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.030650	15003	2429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.266957	14646	4168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.206381	10002	1000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.065196	11775	2888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.263889	23015	4190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.027709	21992	2531
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.420301	32911	5086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.042474	21109	3780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.085232	9398	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.039702	32780	7476
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.180868	12619	3248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.031031	22793	2460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.025169	9993	2573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.324529	333	120	0.0.0.0.0.5.0.4	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.409461	90	39	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.344725	15562	3548
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	15.208388	9258	2046	0.1.0.0.1.6.1.0.4.2.0.0.14	synth with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros; only 1: firstorder; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.119852	7	4	0.1.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: solve [ inversion H ]; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.050190	50399	3793
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	24.895353	16278	2903	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.032060	12407	2898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.258150	17164	2861
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.031668	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.033810	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.019870	12293	3015
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.385116	29322	6816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.061385	17074	3371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.062988	63036	5094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.094831	1338	272	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.038856	24335	4949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.033019	18135	3030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.172856	7522	2754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	30.526224	4702	1193	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	1.611831	96	51	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	40.072878	38971	4259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.037200	24124	5565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.027467	13119	2485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.261936	22759	3327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.025790	16554	3072
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.240691	37669	6232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.162644	9821	2773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.111444	23801	4135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.029092	20740	3573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.033263	19981	3207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.402899	11259	3440
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.061976	71441	4275
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.091907	15343	1730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.024997	14120	3139
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.041122	4	3	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.097829	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.065462	17051	1763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.038164	21454	3224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.019814	9906	1698
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.373089	44650	4403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.150084	13048	3155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.029432	20898	4007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.072628	13957	2523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.913454	400	127	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.040659	18431	4356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.288352	3875	1237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.047012	52279	2446
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.058741	25067	4716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.030646	15835	4421
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	2.455071	2072	275	0.0.20.1	synth with cache (only 1: intros; only 1: generalize (rev_involutive (A:=l)); only 1: inversion_clear H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.044199	14225	4248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.276132	15514	2435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.023273	10287	2291
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.202215	16933	2575
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.401436	16978	4576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.041822	11512	2719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.040221	47272	2645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.044902	24039	5502
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.281655	19668	3247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.061092	76627	3137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.045148	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	13.558421	11900	1363	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.030142	13234	2648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.108428	12	5	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.078761	68500	5985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.047912	14496	4373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.156003	19076	3125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.022904	9485	2749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.126565	8515	1715
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.429132	13246	4631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.050867	28563	5577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.045958	19885	3875
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.281333	10379	2428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.062688	78517	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.037924	27096	6196
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.077690	9163	1759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.373738	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.030699	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.504822	21949	2999
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.024858	4	2	0.2	synth with cache (only 1: inversion 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.049066	41753	10140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.027683	9073	3228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.231482	21910	3539
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.056582	9998	4713
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.045953	19625	5123
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.039968	25812	5591
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	23.119343	32636	3411	0.10.1.5.2.8.21.4	synth with cache (only 1: intro H; only 1: intros E; only 1: intros l1 l2; only 1: induction 1; only 1: constructor; only 1: auto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.040241	12966	4046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.206687	11465	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.046109	34079	11195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.055669	8018	2084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.064031	12021	2779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.047893	33332	12375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	9.865984	2664	677	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.655816	444	114	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.037268	23108	3605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.208046	26593	3698
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.052067	33719	4600
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.288277	55150	5105
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.029476	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.031389	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.049791	16176	7421
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.302040	23043	3468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.362616	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.094402	6388	1779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.199779	3397	1365
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	4.360805	807	318	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.074189	32040	10758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.051387	24235	6672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.513943	98	58	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.681780	154	65	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.027922	9669	2406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.032433	12947	2732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.042637	25832	3301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.252608	21662	3736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.111661	15456	2472
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.768640	44813	5194
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.432717	9625	2287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.074311	15141	3458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.354398	16339	2413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.048119	12287	2417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.072299	41551	8871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.042640	21104	5708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.033678	15099	2863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.047381	13111	2092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.034306	7714	4372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.178457	29906	4653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.042824	498	105	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.096141	32839	2515
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.500074	20100	7385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.078448	12560	3403
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	40.362742	9207	1851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.137503	17116	3366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.038459	19248	4585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.034433	21713	1868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.078029	10613	4006
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.572873	225	70	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.081254	20	15	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.042313	14769	3097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	30.320184	9834	1557	4.3.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.049990	13629	3054
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.266636	12948	2495
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.044432	8077	1901
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.511467	22327	5886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.054126	12004	2035
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	40.246755	18901	4385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.051907	42021	5668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.377689	13163	2436
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	4.967992	4289	561	4.3.10.10.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.008302	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.049667	30383	1560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.032586	17890	3723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.029334	17293	3499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.036471	12839	1201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.029268	17782	3473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.317685	19984	3439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.025395	12401	3480
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.293629	27409	6427
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	40	1.884316	478	194	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.115838	2687	1055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.053300	18253	4552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.316117	13326	2297
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.343589	33836	4652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	19.103362	5732	1019	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.033449	30277	5000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.031787	12320	4143
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	5.034598	1243	262	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.052887	38949	4687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.033197	22232	4128
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	29.274764	19706	3615	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.034310	19908	3473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.027523	10396	4130
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.068986	14567	2668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.030038	16228	2714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.205174	13234	2042
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.339361	24808	4722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.033514	14695	5136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.038142	20301	3663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.119059	20016	3708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.029701	12345	3479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.702941	47	27	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.032126	11320	2754
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.213945	23432	6044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.070418	31441	7767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.036024	17919	5328
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	40	24.815687	16999	3659	0.0.4.6.2.0.0.1.0.8.0.1.0	synth with cache (only 1: induction l1; only 1: induction l1'; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H; only 1: intro y; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.036659	14765	4106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.042761	12776	3780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.276693	16384	2182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.039558	12457	4389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.087954	8626	2478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.027666	11769	2525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.040104	23475	3220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.037459	30691	3526
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.267356	34337	5647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.191676	12475	2216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.038931	17148	6492
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.330507	21408	3288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.052758	20206	2808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.048108	22197	3768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.347509	4839	1199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.029333	12726	2226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.080769	8916	1841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.284700	11317	3073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.026105	10768	2252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.038778	32790	3005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.288032	12	7	0.0.2.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	40	40.391319	28232	4170
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.048428	23623	3870
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.027912	18643	3372
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.224911	53489	5075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.053124	30340	4141
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.065480	15323	1471
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.138198	14903	3607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.042020	30625	4079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.027680	12201	3724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.040574	18740	4504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.034399	23936	4294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.033532	16263	3085
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	40	40.453832	33403	4052
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.672433	60	28	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.226328	9424	1720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.026590	11129	2241
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.328011	20171	3456
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.039029	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	24.000935	11306	3892	0.0.4.1.5.0.1.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: order; only 1: apply mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.068170	21727	3277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.065038	34544	3514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.121740	13050	2721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.018916	8907	1765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.283273	51	16	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.347648	77	21	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.282464	10950	2299
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	40	22.119908	46841	2422	1.1.1.2.4.7.0.1.3.2.31.15	synth with cache (only 1: revert n; only 1: destruct n; only 1: simpl; only 1: intros Hy; only 1: intuition; only 1: simpl; only 1: compute; only 1: induction n as [| n IH]; only 1: destruct 1; only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.907921	275	69	2.0.0.8.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.070473	26891	4833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.043509	25534	4075
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	40	40.240353	28660	5481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.157532	8042	2234
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.064253	10662	2237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	4.031920	992	395	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	40	9.554310	4680	1382	2.0.0.0.2.1.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.041501	14007	5099
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.127894	7900	1708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.035189	18234	3972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.192347	12547	2437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.042108	17097	3164
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.169116	17044	3538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.019842	7270	1847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.208838	12	7	1.0.1.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.035774	28861	3963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.044094	21963	5007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	2.879595	1513	334	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.208494	9229	3552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.042554	10923	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.064938	24522	5029
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	40	40.421425	54486	4527
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.062730	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.012526	3	2	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.055083	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.239230	4271	1033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.081147	12912	3963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.117739	12189	2677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.035498	9410	4949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.348478	7151	2001
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.017243	5332	1789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.039281	27666	4095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.040700	22930	5838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.172233	10260	3877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	7.476646	3643	1054	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.042184	21409	6035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.035757	18241	3832
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.215056	17586	3911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.098791	9581	2248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.054664	13722	3374
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.722254	431	93	0.0.0.0.1.9	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.118208	11425	2770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.028901	8664	3380
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.037824	29925	3859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.019186	4939	1584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.035791	15969	3081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.063755	15321	3303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.043905	25418	4714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.036405	38054	4535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.054875	13848	4325
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.294034	24803	5268
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.380146	963	227	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.031725	4992	1836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.033132	17057	4658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.118817	8986	2402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.997979	349	118	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.063578	10340	5047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.031195	15423	3521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.021106	7467	2348
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.090093	7	5	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.044682	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.036482	13878	2896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.060120	10865	2358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.040720	30796	4462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.042648	34590	3754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.027073	15553	3866
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.365256	19821	4234
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.086300	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.039037	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.046473	17902	2955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.063410	12568	3728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.038477	22325	3170
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.786346	2084	510	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	5.508427	1828	427	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.067823	10523	5405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.068189	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.172007	20701	3923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.024411	7263	2101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.042250	12008	2720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.184721	5470	2278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.055546	29088	3557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.032243	12898	4811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.035736	18212	5191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	11.637515	3294	1127	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.109206	18848	4045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.080234	21735	5561
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.123067	26473	3792
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.028597	7	3	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.037670	5	4	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.055385	9484	2079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.458203	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.045967	11974	4276
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	6.685324	4370	732	1.2.16.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.161198	8021	2352
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	1.885230	1844	231	0.7.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.021857	7373	1986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.032217	15775	3342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.069964	25454	3721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.029284	17228	3151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.111780	71	13	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.038047	25320	4645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.036789	14662	3755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.104530	16386	4038
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.103000	15186	3859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.034818	23764	3201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.574325	207	84	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.034267	18537	5464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	9.034532	2410	771	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.282874	6708	1328
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.148462	64182	4799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.022635	7884	1862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.031864	11437	2464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.042140	37326	6453
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.042899	29832	5876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.687647	1585	246	21.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.036754	15958	3600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.065109	15555	4171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.046241	16998	3927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.029063	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.152142	12262	3530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.031476	13468	3557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.038816	20972	5087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.255016	7092	1473
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	40.224186	33078	5388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.020346	7518	1921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	12.018339	8645	1441	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.063903	39044	9041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.087289	13940	2293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.093378	268260	5378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.871667	505	129	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.036826	16333	5256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.209749	17023	2929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.136598	16338	3998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.096617	12259	4319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.018679	8	3	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.016643	8	2	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.032857	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.028920	13481	2848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.255523	8030	1752
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.253040	42140	4361
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.064228	69909	7565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.052623	33136	3955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	2.222088	1239	319	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.086447	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.358660	52	21	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.057143	30539	9430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.082935	7519	1451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.057342	53356	6558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.029616	6794	3550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.193486	4345	1581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.090714	15145	4431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.014849	2	2	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.057755	72385	20608
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.184554	11906	2080
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.146474	20610	2257
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.297496	22500	3472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.038446	22677	5087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.069575	71872	5759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.023659	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.260252	22	14	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.049878	23320	7831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	12.877267	2734	796	1.0.1.10.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.041977	25631	4511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.058520	54339	6482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.037268	24429	3844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.110965	15796	3389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.052178	64003	14770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.488407	163	58	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.014354	3693	1866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.040487	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.073367	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.241044	21244	2826
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.363169	27020	4857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.036650	27941	5048
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.042456	26014	5122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.186182	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.642363	69	32	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.050102	22192	7214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.089597	16369	4310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	3.663808	774	263	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.054802	40397	6639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.040743	29081	2319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.631050	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.036138	19421	4044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	19.447403	5444	1127	0.0.0.0.9.1.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.168955	7	6	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.047380	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.192958	13634	2648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.039521	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.057439	29832	1745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.017670	3596	1678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.192660	9754	1680
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.223423	37941	4766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.031110	11211	2233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.046195	24060	8192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.146578	15902	4303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.055216	33137	4350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.053725	65567	7085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.052443	24293	3352
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.062180	41951	9166
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.139029	21924	3729
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.065111	37607	17632
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.042229	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.029237	15175	3650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.187572	19157	3134
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.132033	42688	5860
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	5.080912	3027	832	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.043566	11103	3609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.034496	15691	3129
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	3.873858	1338	642	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.039166	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.093170	5274	1414
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.785562	1481	670	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.040621	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.043672	18853	6166
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	2.934832	1039	478	0.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.033383	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.052464	51064	4644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.477879	120	61	0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.047468	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.096075	39	18	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.042342	18289	4900
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.094716	96938	8319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.096645	21526	3926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.026597	12124	4149
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.083884	18460	2546
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.327499	26705	7346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.052899	27918	6112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.033386	13915	3037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.036501	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.089895	18062	4275
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.052563	43179	7119
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.036139	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.042069	29261	4148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.034811	20567	3721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.037665	12265	6936
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.053595	32537	10694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.044546	23649	4918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	16.343892	6557	2646	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.034381	12609	3978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.035023	21283	2331
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.215316	20908	5799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.041579	31415	7060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.044105	30258	3749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.142622	6838	2165
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.010085	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.045136	22926	9733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.023285	16616	3119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.031189	12380	3814
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.055113	47949	18761
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.191246	66	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.111940	15162	3359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.076161	16595	4847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.431298	120	51	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.035322	13009	4286
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.136401	6812	2860
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.230711	26585	6245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.056659	15413	6213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.048204	26210	5704
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.107558	198406	4660
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.040854	30305	3154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.041028	31614	5348
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.025651	6620	2618
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.082178	119678	9515
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.234070	14252	2423
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.310243	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.045397	19947	5237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.040607	19949	3631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.253074	19505	4539
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.192178	38482	5051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.046261	13683	5163
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	37.082790	131754	6053	4.57.3.6.0	synth with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intro Hxz; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.022548	19	3	6	synth with cache (only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.042739	21636	4428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	26.797818	7196	1900	1.0.1.17.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	21.407042	10819	1529	30.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx y y' Hy Hr; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.100498	166573	4677
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.031261	6	3	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.212650	95	29	4.6	synth with cache (only 1: repeat red; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.050115	24635	4593
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	11.151670	11883	1869	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.010646	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	6.889094	4375	1007	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.049761	22565	4522
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.064012	72743	16882
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.069981	38	12	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.027504	10747	3039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.153060	16785	2249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.056594	17009	5096
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.386297	42950	5552
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.068767	66495	11839
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.006861	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.093305	23015	5473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.045075	15668	6037
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.056272	29667	2705
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.052022	51335	5957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.038627	32976	5058
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.836566	752	507	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.114093	8	5	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.067794	3	2	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.024764	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.044815	16235	4772
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.062003	43761	16631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.042076	19581	4808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	38.478875	20925	2310	36.2.14.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: rewrite <- (pow_0_r 2); only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.037403	26872	5205
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.252031	48370	4441
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.054583	74117	5506
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.153055	16315	5097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.055585	6571	3069
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.036914	21236	2999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.042406	26006	5695
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.032677	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.048659	45359	3618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.138573	16110	5022
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	4.697067	925	485	1.2.2.2.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: rewrite !ones_equiv; only 1: bitwise; only 1: now destruct a.[m]).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.060359	72688	7030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.053027	22465	4252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.158985	15606	1876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	2.275248	826	119	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.077967	21515	4338
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.274029	62152	3605
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.052213	14961	2623
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.014585	1	1	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.064936	10886	3133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.094234	7155	2760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	9.849558	4280	1210	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.064691	6	5	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.030139	19270	3362
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.029889	18717	4981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.026423	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.032646	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.030278	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.022671	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.026334	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.035742	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.045272	16	4	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.116337	21	13	1.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.055583	43668	5525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	5.854695	1449	503	2.4.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.019272	6	3	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.217697	12756	2921
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.042732	44243	4036
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	7.557174	4243	1186	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.321704	88	41	0.0.5.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.273818	35104	2617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.032759	16005	4901
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.262438	60404	4968
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.058615	36861	11627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	3.742462	1288	657	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.038941	22747	5763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.050207	7285	3088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.027131	13284	3645
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.043075	46534	5209
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.021310	7	2	3.2	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	5.294482	4330	540	13.1.12	synth with cache (only 1: intro RS'; only 1: intros; only 1: now apply mul_lt_mono_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.214235	48	24	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	10.197871	3705	1315	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.048369	36006	4578
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	7.184865	1426	414	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.023258	8	4	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.022906	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.016222	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.162829	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.010256	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.010119	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.010264	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.015805	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.207561	26308	4054
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.021135	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.012685	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.009985	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.008159	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.010256	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.013222	2	2	0.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.006761	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.007994	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.006767	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.008502	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.041936	40388	5053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.218061	36179	2671
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	5.513068	2626	861	2.2.0.1.0.1.0.1.0.4.3	synth with cache (only 1: split; only 1: intro EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.057369	22677	4401
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.038865	29993	7401
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.368210	33194	4503
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.275294	71	33	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.039473	5	3	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.289732	2363	226	1.7.19.0.0.23	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.080699	12241	5198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.037362	5922	2853
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.032528	17809	4939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.048478	44064	5129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.041478	61724	2464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.035748	8	3	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.038185	20196	3186
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.095640	134247	9682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.261872	22843	2862
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.077958	151112	7824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.129246	10693	3641
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.448992	43234	4281
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.065622	78429	5940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.152603	3592	1539
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.071941	10146	3117
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.035282	17216	6147
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.512711	196	67	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.017888	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.053769	29337	7157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.070288	75629	4713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.054461	12	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.221725	61	19	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	4.116732	2932	637	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.050182	10	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.120035	14118	2982
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.055770	22176	11516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.240729	18875	2615
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.048871	27018	14202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.050863	16068	4492
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.043188	27654	5627
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.043388	49805	3044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.146767	10250	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.048087	12858	5018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.030542	7864	1649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.041883	19962	5800
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.039668	18587	4906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	5.441448	3453	758	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.123327	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.423271	565	248	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	15.530442	3980	1859	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.478974	75	45	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.051201	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.025127	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.046481	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.097662	12	7	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.019267	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.163969	18	11	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.100059	20216	3821
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.036292	31414	1176
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.065571	56510	6620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.103465	19226	2694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.057964	11379	4578
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.056489	45844	5065
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.065156	19927	1619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.121804	2732	1130
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.080334	12822	2768
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	3.296229	22127	203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.040292	20499	4518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	34.624908	13771	2978	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.057899	8	4	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.703389	144	90	0.0.3.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.016900	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.044965	7	5	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.262076	43	20	0.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.016375	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.020678	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.951591	196	70	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.421565	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.054212	235	154	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.035353	19377	3514
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.034093	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.062260	4	3	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.157834	14754	3798
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.041469	30649	9970
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.070356	71083	12767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.304372	14615	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.060631	15911	4319
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.174023	84206	5726
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.011067	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.264027	6414	2048
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.036338	16626	2852
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.042177	31630	6548
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.054598	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.087431	13251	2456
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	13.459085	92858	608
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.015520	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.057964	11	9	2.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.099360	33165	5954
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.036455	14797	4933
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.191104	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.045724	11075	2444
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.041523	27336	10638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	3.001646	1032	358	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.251432	20140	4061
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.116867	10364	3502
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	40	0.012307	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	40	0.039760	125	10	16	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.004363	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.008877	2	2	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	40	0.016072	4	3	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	40	0.008876	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	40	0.010009	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.008967	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	40	0.201139	506	30	3.27	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	40	0.007027	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	40	0.369478	599	40	0.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	40	0.028248	7	1	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	40	0.059735	24	4	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.152933	38860	4813
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	40	0.870148	480	79	0.0.0.0.17	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: Bool.destr_bool; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	40	0.014931	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	40	0.016630	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	40	0.015086	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	0.552800	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	40	0.011636	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.684222	146	16	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.151154	10014	2726
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.026220	11800	2837
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	40	0.776589	185	17	2.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	40	0.010140	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	40	0.012573	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	40	0.679317	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	40	0.057110	11	9	2.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.012319	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.080066	64696	1440
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	40	0.732647	165	16	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.881137	1160	235	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.026782	11466	2771
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	40	5.306398	6098	590	0.1.33.15	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.052958	22898	7721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.053583	52288	6859
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.075453	7339	2160
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.048000	19176	10032
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.608511	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.033121	24522	3763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.308120	22221	3271
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.147031	39795	5250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.072984	17421	5895
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	10.941244	4683	1216	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.042866	37309	4052
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.044729	24978	9962
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.007077	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.007726	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.007499	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.045803	10430	2737
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.412501	14113	375
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.057483	37798	8291
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.013353	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.464731	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.021642	3	1	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.013109	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.004819	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.010221	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.009795	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.007293	3	1	2	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.007409	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007922	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.078665	50	5	11	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.047849	37982	6132
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	17.520122	2325	268	0.0.28.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.004623	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.008223	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.005265	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.294880	1122	251	2.0.6.0.2.1.1.3	synth with cache (only 1: hnf; only 1: split; only 1: red; only 1: intro z; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.006588	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.012270	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.018455	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.011917	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.053698	289	74	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.015283	2	2	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.012499	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.017432	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.013195	3	3	0.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.043042	21712	6365
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.011670	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.007488	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.063644	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.290871	13	4	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.095750	44583	5819
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.007157	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.007370	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.005027	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	1.553229	2131	343	1.3.1.4.5.7	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.004863	3	1	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.009197	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.014877	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.006682	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.016670	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.008615	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.038568	15	5	3.2	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.015630	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.005879	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.011233	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.008720	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.293911	26354	4302
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	40	40.622595	64764	2841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.052511	16576	5775
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.042180	31160	3161
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.046651	26382	9226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.056177	9442	3490
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.046410	29206	5104
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.342742	17346	592
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.016252	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.018300	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.011409	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.036709	12632	5044
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.107490	7410	407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.254105	17208	3449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.463609	7768	1666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.242395	473663	10635
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.114795	114	15	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.100184	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.085757	49	26	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.041599	24634	3842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.190801	21423	4811
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.010994	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	1.006844	8883	126
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0.778125	205	179	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.885027	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.058156	24182	7958
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	0.839970	149	140	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.361886	23	3	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	0.898338	891	84	19.2	synth with cache (only 1: intro X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.014623	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.101989	30	6	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.010466	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.013758	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.860649	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.074514	3347	1601
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	3.996820	2746	345	22.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.016963	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.042051	5	2	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.011046	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.038662	17577	5776
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	40	0.372461	754	67	3.9.20	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.007401	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.357782	24315	874
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.083796	63	8	0.11	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	2.900443	1231	81	0.0.38	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.049205	42863	4194
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.045438	7805	1584
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.011548	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.561179	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.292234	158	77	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.222375	12914	3157
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	7.432070	5089	4447	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	26.236932	154467	4997	4.48.80.13	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite -> H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.009167	4	2	2.0	synth with cache (only 1: intros H ?; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.171368	26569	3210
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	4.401682	2566	2235	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	22.783050	10686	1035	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.046182	26553	6501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.115138	11971	4275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.058159	53913	2994
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.042876	14501	13225
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.015866	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.179858	63	6	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.019366	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.044733	41902	1669
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.109367	166694	4706
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	15.186520	7676	6795	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.407015	17352	657
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	3.656405	2215	1601	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.649097	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.132682	15394	3284
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.125897	182119	5352
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.312027	16184	3673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.059690	82991	5587
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.043119	16550	6233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.063860	6509	1982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.040591	16543	6641
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.618775	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.014638	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.060467	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.023170	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.010201	4439	761
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.011441	7	2	0.5	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.032336	4	3	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.008768	3	2	1.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.005210	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.042795	14	5	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.006538	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006130	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.042216	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.029272	12	2	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.007310	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.050886	41021	6048
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.045070	25969	4582
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.843608	1308	520	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.446297	35245	1645
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.048260	16379	14873
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.036290	13	6	4.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.017553	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.015189	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	10.861170	6296	2539	0.0.0.1.1.1.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.613975	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.161170	13200	2289
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	37.226891	356721	3448
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	40	0.016410	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.005056	3	1	2	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	40	1.687545	11448	144
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.007633	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.009335	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.020416	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.225782	20879	4528
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	3.946986	13884	745	2.31.36	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite -> Hfst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.054473	57468	4247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.053489	33976	11704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.092088	16057	3726
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.045428	23730	5683
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	2.267696	665	317	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.019908	9848	2009
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.074349	4	2	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.240483	714	361	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.044178	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.022101	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.072213	15	7	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.064384	423	102	3.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.107519	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.018318	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.203353	26	13	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.025683	39976	1340
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.352029	26793	889
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.041626	8438	2478
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.005397	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.009225	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.016361	5	4	0.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.005287	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.019784	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.003842	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.007748	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.767211	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.025740	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.006272	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.043587	27595	6823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.242957	13292	3357
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.101070	26687	3862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.036095	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.085038	9	4	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	31.575686	20291	3328	6.7.3.0.5.5	synth with cache (only 1: red; only 1: intros x x' Hxx'; only 1: simpl_crelation; only 1: intuition; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.024569	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.121067	168163	8296
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009367	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.083379	28414	3682
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.565749	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.109322	95	21	7.3	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	40	0.511374	556	79	0.0.19	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	40	0.049518	50	7	0.10	synth with cache (only 1: intro H; only 1: destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.160799	5769	3119
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	40	0.569885	1177	98	0.10.16.0	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	40	0.061956	125	12	0.15	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.109207	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.031933	14783	4579
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	3.273111	8885	374	7.48.24	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.045045	21354	4798
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.035292	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.079585	7	5	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	3.201889	8287	380	3.29.52	synth with cache (only 1: intro; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.078183	7	2	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.203572	58	17	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.056750	10872	1544
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.150870	33730	1442
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	40	40.016080	5624	1174
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.033142	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	0.847822	252	64	3.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.037538	19804	5704
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	4.617254	1726	400	0.2.2.9.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	33.013809	8325	1529	0.0.0.0.1.3.1.0.15	synth with cache (only 1: intro H; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.040461	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.305982	19605	4004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.103248	21491	3629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.092225	48129	4891
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	17.196905	8200	1212	4.4.4.12.2	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	40	40.061473	104099	14271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.038098	21344	4109
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	2.625505	6916	690	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.102208	144589	6805
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.049723	24231	5010
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.048005	42473	4529
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	3.638152	10820	591	2.19.52	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.247114	34362	969
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.045649	26801	11706
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.457412	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	25.619972	21661	3540	0.0.32.0.0.0.1.0.0	synth with cache (only 1: intros L R n; only 1: destruct (lt_trichotomy n z) as [H| [H| H]]; only 1: apply L; only 1: now apply lt_le_incl; only 1: apply L; only 1: now apply eq_le_incl; only 1: apply strong_right_induction; only 1: assumption; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	8.285549	5873	1159	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.114962	5299	1994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.189256	18232	2889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.127308	11687	2637
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.037339	2410	663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.045522	23128	7574
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.096435	106133	16652
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.821354	606	196	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004869	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	5.183178	3290	1494	7.3.1.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.051972	23837	7043
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.046924	6234	646
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.120520	150895	5394
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.379814	13989	829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.140451	40869	4881
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.054495	57670	9902
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.444502	158	55	1.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.025595	11555	3241
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.154319	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.155875	18226	2913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.147780	23578	2816
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.056319	4525	504
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.143970	335427	14995
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.005949	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.012556	6	4	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.196690	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.028371	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.039465	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.046575	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.046802	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005201	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.005941	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.051825	28728	8857
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.047832	21961	5357
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.044734	15084	5676
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	1.435202	9842	133
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.769816	694	102	1.16.0.1.0	synth with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: trivial; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.113855	135375	6620
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.260642	20188	1114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.061738	52940	5119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	23.248270	15380	3641	3.0.0.0.0.0.0.0.0.0.2.0.19	synth with cache (only 1: induction d; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.036675	23561	2077
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.056923	47581	11691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.108085	8867	1084
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	2.650130	1737	571	6.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.247727	11828	2464
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.045830	12914	1095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	40	15.803835	7976	2442	0.0.0.0.0.0.0.0.0.0.8.5	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.039280	16491	4026
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.052420	20775	6282
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.092507	4455	562
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.012710	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.031454	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.110772	166801	5898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	7.460141	2549	1181	0.0.0.0.0.0.0.0.0.0.0.2.1.0.2	synth with cache (only 1: induction d; only 1: unfold unorm; only 1: rewrite <- rev_nztail_rev; only 1: simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.309898	15719	798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	7.281459	4477	1830	0.0.0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.017906	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.039686	16679	3040
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.058416	27708	5743
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.021785	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.130702	17065	2129
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.041162	19622	6347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.280396	6167	1677
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	8.227748	8124	1251	0.6.7.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.079777	22536	3012
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	40.051841	27476	5581
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.067313	17555	5196
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.050885	60312	3511
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	1.083880	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.010964	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.012462	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.215494	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.015710	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.833747	470	198	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005546	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.587932	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.006692	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.190199	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	40	0.017179	5	3	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	40	0.012268	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	40	0.135956	151	32	0.2.4.2	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.114968	139511	4816
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	40	0.131544	103	25	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.257187	22330	1220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.044612	22780	9679
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.060280	48742	5313
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.042955	29412	7526
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.102561	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.025089	10251	2182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.204770	13173	2656
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.056706	62990	2858
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.046215	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	40	29.745185	163423	4987	0.13.3.58.11.22	synth with cache (only 1: intro Streicher_K; only 1: intro H; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: reflexivity; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	40	0.013920	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.064236	61572	7874
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.006160	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.077006	113531	3491
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.051062	26520	5088
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	2.199634	1710	368	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.110552	187287	14030
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.095470	633	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.446901	15490	599
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.268781	617288	11253
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	9.372014	5975	1308	1.0.7.0.2.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.059628	68483	5157
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.047176	42428	11391
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.008770	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.014869	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.092152	22057	5327
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.758324	447	146	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.324895	67	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.292047	8930	3961
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.128517	178843	10313
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.024917	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.050679	42289	12039
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.137677	230011	12343
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.007155	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.006836	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.024880	22	5	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.023993	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.022762	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.037268	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.035319	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.007086	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.004989	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.050215	159	20	5.11	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.005910	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.008937	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	1.699711	1321	202	0.7.2.3.9	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.402857	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.035327	52396	4171
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.132048	226690	5804
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.306336	60611	1543
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.115526	192295	17805
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.058915	36924	5784
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.055821	25453	4193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.139665	24789	3856
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.044843	27681	8031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.076078	16678	5491
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.063071	53165	9105
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.062785	77961	9729
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.007185	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.013041	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.047255	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.051156	36039	5110
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	2.524713	1678	814	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.056003	43357	11918
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.106805	257599	7851
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.197220	25771	1322
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.056946	78467	17071
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.022139	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.054949	33654	5312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.057029	42600	5603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.043994	19719	5270
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	30.063530	24290	10423	0.2.3.0.1.3.1.2	synth with cache (only 1: intros U R x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'; only 1: intros H'8 H'10; only 1: elim H'5; only 1: exists z1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.040325	16046	7441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.147839	19674	4627
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.079742	64103	9912
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.052849	51291	5591
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	2.809856	8025	908	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.064709	54938	14711
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.968405	26764	798	2.2.0.2.35.57	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.212989	53	14	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.009121	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.115839	236446	6943
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.218645	33856	1422
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.114114	194586	11169
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.051980	37851	6470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.037756	19235	4257
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	3.800958	3974	1090	4.0.0.1.13.1.1.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.324193	145	66	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.041297	26735	8831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.114672	6920	1636
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.042822	27293	7531
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.948805	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.141937	16850	3428
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.077215	62485	9632
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.048807	34234	9865
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.074961	72305	10857
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.009263	2	2	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.125552	251416	7164
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.365334	42194	1237
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.064165	84231	9560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.049972	38835	6502
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.097173	111751	12159
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.052483	25333	12079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.126451	17960	5101
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.133795	176641	10692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.127282	24786	4361
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.037596	15900	6126
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.053475	40943	13027
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.050032	34203	9129
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.124358	231544	6730
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.772476	1874	396	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	18.300890	10666	2391	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.365589	50251	2236
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	6.774543	7776	675	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.558886	1453	138	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.061487	52975	12675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.052337	39023	5259
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.089122	124773	13893
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.060663	42896	10407
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.077735	89110	10790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.313886	12599	4117
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.051938	31307	9102
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.029741	8570	3481
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.111271	143911	19388
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.253303	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	40	0.590959	1350	116	0.12.16	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	40	0.013798	8	3	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.127198	4337	1398
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.288574	50928	1487
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.126071	53122	3879
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.110891	138226	8868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.073034	64176	6913
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.070717	66146	14134
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.350818	194	97	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	17.930587	3520	1342	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	6.477298	5296	1033	1.1.15.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	6.085793	7547	1714	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	40	40.038815	25029	9040
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.081668	37	9	2.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.067093	57371	9345
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.570056	827	106	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.024519	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.256818	23202	5487
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.070240	73764	11098
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.025641	9	4	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	40	0.005422	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	40	7.915224	24594	2062	1.34.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.046658	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.031840	13	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	40	5.065568	6285	1326	0.0.5.3.0.0.5.3.2	synth with cache (only 1: intros A B []; only 1: intros; only 1: left; only 1: inversion H; only 1: assumption; only 1: intros; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.138304	292149	13702
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	40	0.013974	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	40	0.016933	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.033794	17160	3061
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.011603	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	40	39.595219	29983	1144	10.10.9.11.41.46	synth with cache (only 1: intuition; only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	4.508399	26738	318
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.071492	52099	3842
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.066101	48620	8171
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.067107	44584	13277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.089384	24622	3294
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	7.551331	14715	3131	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.307606	674	69	1.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	13.994636	8567	2367	3.3.0.1.1.9.3.0	synth with cache (only 1: intros Compat Hl Hr; only 1: intros; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.028379	12424	4208
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.022196	9	5	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.011598	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.008193	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.117823	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.097102	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.019740	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.021334	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.626944	1322	127	1.0.8.12.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.099765	72	23	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.072919	79470	5335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.181168	14780	3335
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	40	27.881117	84782	10004	2.3.0.3.20.7.14.3	synth with cache (only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: intros Hfst Hsnd; only 1: simpl; only 1: rewrite Hfst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.017617	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.005859	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.147350	312807	11317
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.033339	12	3	0.3	synth with cache (only 1: unlock; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.213226	2462	495	1.0.3.2.8.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: simpl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.013152	4	3	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.011919	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	40	2.320882	24859	311
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	40	3.268021	4697	1015	17.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	18.201908	8574	1248	0.0.0.0.13.0.18	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	18.020349	13210	3701	0.0.8.24.1	synth with cache (only 1: intros Compat Hl Hr; only 1: intro x; only 1: apply min_case_strong; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.023039	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.020421	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.167113	253482	11783
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.012323	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.013927	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	40	0.016946	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.016207	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.009736	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.010343	2	2	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.191487	61821	2008
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.246279	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	40	8.282913	11213	2747	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.071748	70059	3282
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	40	0.634727	230	131	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	40	1.349603	516	280	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	5.337233	75740	763
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	40	0.388177	119	83	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.337337	194	44	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.107484	190	30	0.16	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.093781	12624	2184
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.061655	39496	7739
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.085666	119583	14944
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.093112	112881	6262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.305057	26275	4894
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	9.662040	16309	4062	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.256581	168	81	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.170616	271210	11063
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	40	0.005077	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.074087	75449	6951
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.096906	120581	13390
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.005854	5	2	1.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.004486	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.206351	45482	1180
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.024652	15942	1956
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.060211	27870	8974
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.098953	115736	11374
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	1.400994	2585	482	0.0.4.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.018748	8	4	2.0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.166443	247785	11882
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.063960	43736	6924
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.131032	199262	5002
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	4.088042	17724	2105	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.094465	181	31	8.0.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: destruct h2).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.004149	1	1	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.216391	18975	5461
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.565716	611	183	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.009552	2	2	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.624423	1282	202	0.9.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.077821	65312	12788
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.068618	63245	9465
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.102175	189	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.007505	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005236	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.019087	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.007021	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.048710	37082	8158
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	6.302304	12519	2539	0.0.0.0.0.13.0.0.0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.104147	147195	16480
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.958329	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	9.285083	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.134030	160831	5101
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.037411	24657	3755
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	5.367943	14988	2955	1.0.0.0.0.0.21.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.050900	24160	9379
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.077690	73414	12570
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	40	40.125819	199308	14009
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	23.973581	120156	9447	0.2.3.1.36.1.3.8	synth with cache (only 1: red; only 1: intro; only 1: destruct 1; only 1: intro p; only 1: elim (Noone_in_empty x); only 1: red; only 1: destruct p; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.087072	91029	5617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.241812	11030	2144
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	31.378002	431395	3274
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.134170	303370	10156
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	27.869611	84922	10449	0.21.3.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.682496	546	171	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.011808	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.008598	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.246961	141	39	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.086509	125766	6528
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.130769	161707	11660
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.230051	25005	923
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.067666	65814	16598
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.054450	29315	9383
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.068382	44619	8755
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.122899	168982	13238
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	40	0.015349	4	4	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	40	0.006694	2	2	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.010485	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.019044	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	21.265488	27027	7529	0.12.0.4.5.0	synth with cache (only 1: unfold Add at 1; only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.013818	3	3	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.242733	96	61	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.010789	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.010286	3	2	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.653929	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.075166	59990	7965
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	40	0.006533	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	40	0.007272	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.014977	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.005646	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.009038	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005514	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.007976	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.004159	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.004723	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.003595	1	1	0	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.078777	11543	3599
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.161641	238903	9341
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.074964	92567	13674
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.087559	84196	4805
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	3.879042	4276	1075	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	6.178284	16939	1079	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.015104	18	4	1.6	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.107125	113585	12667
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.023855	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.374599	42794	697
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.056111	43022	11061
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.055104	25149	8718
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.068555	59982	13371
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	40	40.133883	196246	12709
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.145688	287458	10048
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	40	40.127194	198397	14260
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	40	0.004304	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	40	0.003979	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.078135	3412	453	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	40	0.101542	135	22	2.7.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.012567	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	40	0.477757	330	108	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.020114	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.128233	10654	4594
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	1.201198	1167	371	2.0.2.1.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: destruct 1; only 1: intuition; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	40	0.022244	11	4	0.3.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	40	0.005830	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.033573	4	3	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.008080	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	40	0.023646	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	40	0.030301	6	5	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	40	0.030965	18	7	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	40	0.009290	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	40	0.006756	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.007358	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.008399	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.009074	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	40	0.005174	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	40	0.006589	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	40	0.005739	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.014959	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	40	0.015384	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	40	0.037157	8	5	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	40	0.039613	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	40	0.026844	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	40	0.047541	12	8	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	40	0.087089	40	21	1.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.022883	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	40	0.079911	36	20	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	40	0.006482	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.004708	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.005000	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	40	0.005099	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	40	0.005411	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	40	0.005459	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	40	0.008844	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	40	0.015705	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	40	0.031321	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	40	0.034453	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.056094	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	40	0.031065	9	8	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	40	0.010899	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	40	0.005271	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	40	0.005763	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.005592	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	40	0.005763	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	40	0.005932	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.024862	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	40	0.005945	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	40	0.006848	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	40	0.010042	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.009307	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.010858	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.009070	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.010208	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	40	0.007816	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	40	0.011398	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.006297	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.009153	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	40	0.005897	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.004301	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.004662	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	40	0.006260	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.008800	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.065877	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.026044	10	3	5.0	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.015138	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.014960	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.014693	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	40	0.007873	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	40	0.021146	5	5	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.007737	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.043633	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.163504	66	27	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.013067	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.011175	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.018604	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.011307	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	40	0.014567	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.012480	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.007940	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011817	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	40	0.007011	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	40	0.018357	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	40	20.461589	60351	5248	0.20.10.8.14	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	40	1.644345	1917	549	1.0.4.0.4.1.4.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: apply H; only 1: right; only 1: apply H; only 1: left; only 1: apply H; only 1: left; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	40	0.071045	35	12	7.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	40	0.022174	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	40	0.026956	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.020480	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.016704	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	40	0.010754	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	40	0.008885	3	2	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	40	0.009952	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.011521	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	40	0.048799	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	40	0.005910	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.007736	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.005495	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	24.582833	111545	7142	0.11.3.8.49.0	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: intro z; only 1: intro; only 1: split; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.044823	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.462875	970	138	2.11.6.1	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	40	1.529897	1580	319	3.0.0.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: auto; only 1: repeat split; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	40	0.026366	13	4	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.017525	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	40	0.020749	6	5	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.071539	136164	5602
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.087197	99592	15943
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.071437	113349	4696
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.152733	103973	9104
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	1.170072	2006	450	0.4.0.0.12	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.063062	47353	15269
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.057879	25831	8569
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	40
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.065158	77	7	13	synth with cache (only 1: by case Pb).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.100661	154146	13368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.046432	22710	5646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.167450	12	5	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.099446	135677	10800
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.106755	157162	16282
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.082561	18	16	2.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.064666	105	30	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: auto; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.113801	143751	7018
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.037296	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.019734	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	4.536067	7828	1458	1.0.0.1.0.4.1.3.0.2.8.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.313362	230	68	6.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.019534	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.035984	21	7	2.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.095107	170548	4268
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.111058	161084	6719
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.088475	132042	12057
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.093548	93758	15682
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.464437	455	105	0.0.0.13.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.061606	48886	14628
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.054055	20440	7835
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.152446	72720	3309
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	2.793470	2675	983	0.0.0.0.0.2.1.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	40	5.798651	4885	2190	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.051268	24367	11272
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	20.125577	12586	4618	2.1.1.1.4.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.824497	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.137443	12882	3160
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	3.519396	11669	1219	0.8.2.1.17.0.2.14	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.022376	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	40	40.075479	67237	12189
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.102879	113811	8028
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.029896	20264	6785
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.086220	121086	4036
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.076147	98577	11690
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	40	2.217836	9008	1068	7.4.0.0.0.13.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.012178	11	4	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	40	0.006494	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.074078	46966	10099
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.084613	85462	7899
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	40	0.834756	1384	326	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	40	0.029695	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	40	0.014709	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	40	0.021935	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	40	0.035376	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	40	0.009826	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	40	0.009884	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	40	0.024679	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	40	0.023305	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	40	0.017645	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	40	0.062295	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	40	0.029920	38	9	8	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	40	0.004984	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	40	0.016390	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	40	0.021774	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.025883	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.025016	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.018092	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.016626	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	40	0.015316	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	40	0.020154	16	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	40	0.008635	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	40	0.046458	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.036844	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.145928	67500	743
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	40	0.778509	2975	167	5.48	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	40	2.672832	7788	555	0.8.48	synth with cache (only 1: destruct 1; only 1: intro p; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	40	0.718213	3074	197	9.3.27.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	40	0.581553	2387	174	13.3.18.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.060255	51714	12695
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	40	4.234693	25494	875	2.1.9.22.22.49.4	synth with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.046987	22392	11667
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	40	2.686787	20277	690	1.47.17.34	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.137317	12812	3969
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.199186	342347	9166
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	40	40.093787	140650	15204
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.491154	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	0.767650	656	192	1.0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.049401	16577	9833
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.125572	171502	13829
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.222206	120	49	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.079662	108237	14765
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.061788	44518	14501
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.073124	47683	11248
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.078430	75841	8653
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	5.394624	3400	1874	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.053526	34750	14499
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	18.554854	6605	3646	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.250556	477	79	0.6.1.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.013945	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	40	40.134007	255606	13562
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	5.476712	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.824521	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	5.653628	18192	1280	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.196463	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.214494	378052	11813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.145719	32398	5749
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.122042	204	37	0.11.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.011973	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.200250	2165	256	0.10.0.0.14.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.019553	3	3	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.016986	10	3	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	1.639781	2397	316	0.11.0.0.15.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.108112	124611	10385
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.069282	51625	12873
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.109125	162380	13372
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.129512	291438	15635
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.065889	3603	217	2.46	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.143377	185667	10092
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	14.377988	22545	2870	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.031431	17	7	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.134356	184118	10949
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.084118	76079	11352
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.041860	16545	8177
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	40	1.537100	15548	169
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	40	40.146468	238116	8863
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	40	1.613615	15903	171
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	40	1.683750	16625	175
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	40	1.482897	16262	173
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	0.738228	2300	188	17.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.051865	45	12	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.013860	3	3	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.156503	27429	5203
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.237476	405984	6257
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.185889	449466	10088
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.077242	54454	9048
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	17.995852	89988	6270	0.0.1.1.0.11.0.0.0.7.24.21	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.027149	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.023179	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.126908	117432	10169
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.104347	188460	11307
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.075320	52477	10089
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.044771	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.048743	16481	6956
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.075893	86366	13319
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.650697	459	141	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.086392	86317	15423
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	40	40.093870	106786	4690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.085642	19713	4799
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.266435	614797	6420
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.009633	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.010485	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.106049	138501	8631
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.238026	89206	8993
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.206657	320927	11388
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.102148	108686	13877
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	1.444560	2138	439	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.106375	284868	17050
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.107402	119625	12989
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.092684	168213	16248
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.051447	18040	6685
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	40	2.867115	2668	1190	0.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	2.512107	6143	408	23.1.6.28	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.071772	55238	10786
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	3.548065	42462	409
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.140533	185809	8204
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	40	0.839499	1829	93	0.46	synth with cache (only 1: red; only 1: by move  =>b b' ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.185450	20910	4081
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.246525	698880	6686
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.041772	10557	138
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	23.692665	111072	8382	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.018904	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.089073	84263	8156
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	0.875184	4705	207	0.60	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	40	0.010490	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	40	0.012342	3	2	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	40	0.012120	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.225922	570	66	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.059714	38302	15143
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.948724	44201	922	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.020236	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.071654	67670	14558
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.121721	193991	15004
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.021178	18	5	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	40.305554	606290	5600
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.003590	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	40	0.038746	45	14	0.8	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	40	0.011368	10	3	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.131831	168062	8921
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.072124	47956	13833
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	1.162653	10557	138
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.051255	35	14	2.4.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	9.855683	45309	2291	0.4.21.37.1.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	40	40.113000	113210	4820
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.363540	496	90	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.363257	6184	861	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.695567	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.041467	17666	4660
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.224121	518192	4351
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.074768	46308	10654
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.008887	3	2	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.009152	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007917	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.019412	13	6	0.0.0.0.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.018875	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.011289	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.011911	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.055371	23135	13658
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.216411	375892	8223
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.016020	3	3	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.017528	2	2	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	5.087474	10951	926	0.43.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.083593	102728	14995
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	40	0.000654	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	40	0.002369	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.000680	2	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.011733	59	19	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002851	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	40	0.065983	542	158	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	40	0.055006	246	97	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.147993	1101	131
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	40	0.367481	1334	353	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.152295	922	104	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.624731	2931	605	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	40	0.005738	4	4	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	40	0.181928	809	143	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.037841	33764	2830
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	40	40.146508	275777	21448
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	4.077185	4917	422	0.9.21	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	40	0.355389	1168	134	0.5.0.1.31	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	40	0.014252	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.015801	8	4	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	40	0.019228	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	40	0.015942	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.088151	83943	13227
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	40.281911	479819	8643
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.026439	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.020185	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.496578	934	72	1.29	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	40	40.124434	125058	4320
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.025903	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.012449	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.015834	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.020040	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.018004	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.098801	126804	12781
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.026379	16	7	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.019732	12	4	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.055730	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.008658	2	2	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	9.377368	31991	384	2.2.194	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.141709	20765	4098
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.008380	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.006523	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.012008	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.005978	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.007953	1	1	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	40	6.644709	15952	3790	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	40	0.081077	72	48	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.092913	145812	2374
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.423400	484	51	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.007824	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.004008	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	40	40.205657	337156	21798
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	2.877690	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.087587	83437	16023
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.723412	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.009232	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.008143	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	40	0.026371	20	6	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.182850	351121	25386
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.120259	176327	8257
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.120384	167501	12800
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.096235	86820	4015
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	40	40.118936	96451	4098
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.125389	164844	7466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.178812	13405	4083
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.110983	184196	17311
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.439908	9258	851
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.220969	64768	774
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.057923	48297	12160
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.164995	190	30	5.5.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.035229	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.017082	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	40	40.135517	182595	13218
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	40	40.116782	163107	16037
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.293025	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.153822	217627	4437
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	40	40.081086	62662	17120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.020429	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.023923	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.050057	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.467520	38220	547
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.277999	46745	537
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.058994	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.053985	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.009632	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	40	0.006835	5	1	4	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.005743	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	40	0.112576	111	13	2.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	40	0.116120	80	11	2.10	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	40	0.020021	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	40	0.543665	1148	43	0.46	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	40	0.007560	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	40	0.008253	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.020493	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	40	0.038234	63	6	12	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.006353	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	40	0.005963	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	40	0.009358	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	40	0.005534	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.006462	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.007741	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	40	0.011408	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	40	0.014240	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.015676	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	40	0.026666	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	40	0.007506	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	40	0.007749	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	40	0.008364	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	40	0.008183	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	40	0.028624	5	1	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	40	0.005948	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	40	0.017568	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	40	0.014461	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	40	0.433481	179	21	8.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	40	0.014655	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	40	0.017754	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.037032	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.021983	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	40	0.016559	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.030305	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	40	0.028742	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.010005	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	40	0.015088	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	40	0.009797	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.011212	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.010273	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.010380	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.008245	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	40	0.008912	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.007069	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.008095	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	40	0.009450	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.013343	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.013284	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	40	0.012687	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.012034	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	40	0.086657	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	40	0.020407	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	40	0.017956	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.031768	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	40	0.007304	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.007311	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	40	0.010432	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	40	0.012961	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	40	0.020291	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	40	0.017770	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	40	0.019157	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.034556	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.019332	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.022126	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.014365	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	40	0.010203	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.023684	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	40	0.027550	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	40	0.009688	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.046019	44046	2656
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.011479	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	40	0.011371	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	40	0.011253	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	40	3.316176	1752	70	1.0.0.0.53	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	40
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	40	2.991612	4068	337	0.20.0.7.24	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	5.049170	8444	662	15.13.9.30	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.137036	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	40	40.103937	130989	18292
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	40	0.006673	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.060229	44566	4024
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	40	0.146249	205	87	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	40	0.018011	26	7	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.005979	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.290829	468	134	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.009893	6	2	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.014238	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.398230	11404	468
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.006779	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.007489	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.513818	1431	111	28.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.012143	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.009945	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.009192	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.010328	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.009937	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.630409	9662	278
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.327266	31798	325
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.015482	5	3	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	40	0.008409	3	2	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.014992	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	40	0.028255	13	7	1.0.1.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 1; only 1: destruct 1; only 1: repeat split).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	40	0.020837	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.024015	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.029015	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	40	0.435756	465	84	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.009029	5	2	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.008148	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.019458	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.011310	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.009724	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	40	0.046061	41	13	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	40	0.029218	19	7	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.145527	206158	17177
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.012040	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.164439	224806	15355
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	40	0.014836	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.013708	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.015600	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	40	0.011667	5	3	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.105665	127097	19053
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	40	0.009332	5	3	0.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	40	0.025971	24	10	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	40	0.184341	387	65	1.0.4.7	synth with cache (only 1: induction n; only 1: intro; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.132381	202871	4551
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.827544	1355	217	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	1.266869	899	239	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.141782	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.248505	42785	484
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.187960	307458	6618
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	40	25.652492	77283	6052	3.28.4.11.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	40	40.060210	41621	13238
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.334422	262	74	0.7.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.043294	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.011322	1	1	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009443	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.012786	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006316	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	40.211650	283908	1988
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	40	0.011445	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.144260	18702	3067
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.161320	227433	3317
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.169107	203739	2558
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.204828	294315	20615
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.027973	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.356712	2152	552	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.277257	350062	8119
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.009146	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	40	40.083606	73802	15428
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	40	1.556556	3350	379	1.1.1.3.20.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.016996	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.185567	18	6	0.4.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.173010	12	3	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.238427	375228	3592
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	40	0.014302	13	3	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.126815	173860	3211
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.938631	434	89	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	40	2.658234	2226	943	0.0.1.0.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	1.595268	1033	464	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	40	1.294245	723	338	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.797506	716	148	2.5.1.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	40	0.407061	236	79	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	5.918572	4385	840	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.072326	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.055702	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.073459	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	2.999505	1176	361	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	40	40.235966	249106	10230
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	40	22.209202	34489	10084	0.0.0.0.0.0.0.0.0.8.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.165731	276386	2810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.219863	8023	2187
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.094150	90303	5204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.042206	13795	3654
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.130410	176028	2072
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.133278	184694	4801
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	40	40.187639	298351	13343
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.134637	171891	3839
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.063020	68385	3717
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.037807	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.064467	69892	3701
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.098213	121322	15856
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	40	0.260580	562	89	7.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	40	0.013362	15	4	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	40	0.065880	53	17	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	40	0.014244	4	4	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.211838	375430	12361
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.151921	172265	3277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.031653	11246	2813
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.134218	173787	4030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.147497	6473	2287
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.123815	175885	4797
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.117131	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.027024	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.011191	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.010779	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.231040	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.015436	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.011712	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.009108	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.015419	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.016382	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.009306	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.008861	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.010479	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.015034	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.016045	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.013224	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.016521	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.014758	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.029491	4	1	3	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.106998	113973	4762
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	23.907861	232293	2489
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.122296	174591	15168
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.125355	132245	4055
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	31.451061	312469	3003
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	16.794615	27483	1203	27.54.18	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.023694	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.015657	2	1	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.013087	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.126894	220223	17118
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.238369	459363	5909
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.123638	97	30	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.014435	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.017610	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.028233	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.025249	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.122669	170069	4852
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.034512	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	40	0.466933	378	56	5.6.6	synth with cache (only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.120263	10762	3814
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	40	1.277738	1127	123	13.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.585483	192	19	4.14	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	40	0.011572	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	3.830273	4508	157	0.70	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	40	40.087690	80990	4986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.039712	12325	4558
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.068677	27	3	9	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	32.467948	284852	2569
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	40	0.014071	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.068548	41238	2467
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.017474	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	40	40.181097	312675	10652
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.086145	70450	2484
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.130715	190886	5400
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.100292	69779	1936
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	28.346674	74357	1988	20.122	synth with cache (only 1: red; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.170450	15840	1680
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.121874	78665	1877
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.008716	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.223937	15649	2612
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.151392	102939	3237
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.027789	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.270226	7824	1687
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.145673	88336	3020
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.199145	15581	3230
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.093297	126179	2231
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.108486	108840	1905
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.108987	98995	2123
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.101873	66609	2997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.022116	8013	1739
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.097349	66630	2591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.035274	15871	3954
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.057860	40412	2804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.044688	28941	3504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.038896	19163	3221
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.130505	70682	2490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.033175	17580	3238
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.120040	94179	3220
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.126644	83649	2718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.029575	26223	5387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.030860	36308	5013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.026694	22431	6191
