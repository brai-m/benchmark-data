coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	40	40.071883	11427	1840
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.201198	8	5	1.1.0.1.0	synth with cache (only 1: intros; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.095479	35818	7484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.010923	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Nat.order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	40	40.080306	25260	6232
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.478585	45541	6251
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.121534	49434	4546
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	40	8.716280	10140	1535	0.4.0.5.0.3.12.2	synth with cache (only 1: intros n m LE; only 1: pattern m, n; only 1: apply le_elim_rel; only 1: intro; only 1: rewrite <- minus_n_O; only 1: trivial; only 1: auto; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.083298	3989	1122
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	0.009375	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	24.021315	25971	3169	6.31.2	synth with cache (only 1: intros z t; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	4.736169	1067	160	0.0.0.36	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	40	0.037808	8	4	2.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	9.431453	4558	772	25.1	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.027735	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.022965	5	2	3.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.014683	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.060971	18830	3715
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.008250	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.512024	241	30	7.4	synth with cache (only 1: intros a0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.222309	65	41	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	40	0.017055	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	40	0.018273	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	40	0.018485	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	40	0.017210	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.097731	35584	5228
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.047695	13	11	0.1.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.070375	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	40	0.007271	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.129166	19931	4037
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.116042	24687	4823
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.065253	17135	2224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.077968	19792	7573
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.106402	2	1	1	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	40	8.419692	4063	1023	0.0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (S (S (2 * n))); only 1: replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	40	40.027019	7063	1481
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.209549	84444	6464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.014326	5	3	0.2.0	synth with cache (only 1: unfold EUn; only 1: intros; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.081780	21085	3897
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.072768	46	14	1.4	synth with cache (only 1: intros a Ha; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.185878	74515	7469
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	40.083437	24013	6120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	40	0.032637	5	5	0.0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.167926	22373	5074
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	40	40.098944	34899	5541
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	40	40.086094	26850	7585
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.089189	30731	4189
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	40	7.458540	4202	599	0.12.9.5	synth with cache (only 1: intros r H H0; only 1: unfold Rsqr; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.049326	13922	3025
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	40.071537	18205	9066
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.107077	23	13	1.2.0	synth with cache (only 1: intros; only 1: ring_simplify; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.045890	14	9	3.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	40	40.060111	17183	3956
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	40	40.767123	9060	2798
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.056672	20272	1868
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.041614	9628	3306
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.149578	57680	5698
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	40	40.240747	26668	5480
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.053824	13181	6052
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.109101	37078	6092
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.083273	24874	4018
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	40	40.206131	82791	6122
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.112242	34637	5661
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.088451	21	8	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.169729	30012	3891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.493390	17742	6129
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	40	40.465776	5197	947
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	10.710609	7160	1593	0.0.4.15	synth with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: apply Rminus_diag_uniq; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	15.160809	5430	1644	1.1.2.13	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.335268	649	116	6.11	synth with cache (only 1: intros x y; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.027121	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.058288	15302	7384
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.050241	13784	3784
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.474720	27224	7277
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	40.076493	22381	5072
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.111024	25768	5165
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.125751	47083	5316
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	40	0.126284	87	31	4.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.283074	109946	5722
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	8.760771	10426	1103	0.1.0.40	synth with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.767488	46	22	9	synth with cache (only 1: exact eq_equivalence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.191474	54764	5759
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.338764	16112	6823
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40	40.283469	5996	497
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.816513	31323	5959
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.036683	8	5	0.1.1.1.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.191458	9915	6684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.663275	19835	6986
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.085805	28315	5121
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.028086	2	2	0.0	synth with cache (only 1: intro H; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.062297	17731	2833
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.110138	36979	8119
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	40	40.029838	8674	1162
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.018276	2	2	0.0	synth with cache (only 1: intros a Ha; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.020255	4	2	2.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.095939	30107	6848
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.059971	13069	6708
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	40	40.064417	18171	6553
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	40	40.047611	11644	1906
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.034930	7785	1567
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.063264	12632	3178
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.576765	218	54	0.1.0.7.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.023045	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.043613	19	7	0.0.0.1	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.022449	6	4	1.1.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	40.096116	19376	6752
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	40	40.056338	13466	7119
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.297883	127200	4561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.654614	30838	4989
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	40	40.076606	26661	3984
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.307214	48219	6186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.084597	18971	6039
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	40	40.077329	23274	5301
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.085937	24487	6434
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	40	40.125781	44568	7610
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	40	40.073736	19967	8769
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.250994	17939	7600
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.470964	36	19	1.1.0	synth with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	40.095064	30021	4176
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	40	44.505928	5827	1829
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.207803	21331	4550
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.047401	10763	3184
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.073881	15707	4360
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.065414	28	6	6	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	41.669084	6823	2356
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.081119	22836	8517
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.125213	46936	6444
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	40	41.348478	8330	1739
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.069718	20322	6544
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.060500	14790	5365
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.217735	49530	4559
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	40	1.663526	768	184	3.7.0.0.2	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	40	40.648926	64420	7761
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.048930	9723	6381
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.204143	36921	3247
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.207309	76103	8701
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	40	40.061673	17373	5200
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.134142	23781	6582
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	40	0.070874	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.363776	20421	5719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	40	0.177106	22	16	4.0.0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: prove_sup).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.087258	3710	559
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	4.400028	1753	520	15.3	synth with cache (only 1: red; only 1: exact Rmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.128630	46350	6280
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.167040	48817	6192
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.005503	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.074226	25689	2327
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.085137	27801	4295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.737071	249	96	6.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.522945	12818	7158
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	40	40.957496	15030	5521
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.115961	42984	5457
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	11.606999	5670	1377	5.1.13	synth with cache (only 1: do 3 intro; only 1: intros Ext EM A; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	40	0.089308	13	7	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	40	40.105563	23859	3004
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.057173	16	7	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	40	40.135686	46654	4308
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.146919	56162	7830
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	40	40.080204	23700	5813
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.082675	25677	4160
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	40	39.934328	21902	3650	2.4.3.12.2.2.0.4	synth with cache (only 1: induction l; only 1: intros; only 1: auto with real; only 1: unfold IZR, IPR; only 1: simpl; only 1: intuition eauto  3; only 1: left; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	40	3.733297	1441	277	4.0.2.5.2.2	synth with cache (only 1: simple induction 1; only 1: Nat.order_pos; only 1: destruct m; only 1: trivial; only 1: intros; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.049944	13864	2790
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.120316	38636	5532
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.121147	35446	3632
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.044912	10021	4762
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	40	40.056439	13519	6724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.087581	33524	1574
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	40	40.076417	23606	3491
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.757100	29420	4641
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	40	40.108764	40078	3949
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.148036	39330	5237
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	40.108456	21631	7389
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.083915	25617	6453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.309519	63	30	0.1.0.1.1.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.434346	30614	7696
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.080971	22592	6906
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	40	40.153109	32124	4952
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.089926	27790	7355
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	40	6.244105	3232	634	0.5.2.9	synth with cache (only 1: intro m; only 1: intro H; only 1: intros a b [=]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.089931	23	10	4.0	synth with cache (only 1: intro n; only 1: auto with arith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.047872	10948	5925
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.109576	20025	3318
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	40	40.594348	25727	6172
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.221499	55561	2059
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.480311	11385	3721
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	40	40.107725	36709	8134
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.135965	50767	4250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.073643	22903	5534
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.248248	87	36	0.0.1.4	synth with cache (only 1: unfold derivable_pt; only 1: intros; only 1: exists 1; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	41.363546	16925	4036
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	40	0.536650	34	23	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.070720	21874	3348
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.099943	32050	3633
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.199621	40193	5628
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.174003	13802	5449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.081072	20519	7659
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.222230	22049	6027
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	40	40.152900	4431	1242
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	41.016180	14448	9305
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.128065	47896	5872
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.334639	31520	4407
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.648716	19697	5545
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.080329	26078	5022
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.116288	39698	7848
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.059781	18126	4566
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.627077	50438	7960
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	40	40.095150	11509	2632
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	40	40.045097	10621	5877
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.132109	48741	8413
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.076280	8603	2004
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.061274	19507	4175
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	40	40.088170	29725	5391
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	40	40.076608	23399	5826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	6.646927	4849	1166	2.0.1.12.0.1	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: intros (H, H'); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	5.090162	9060	978	2.10.6.2.9	synth with cache (only 1: red; only 1: intros Ev Od; only 1: inversion Od; only 1: apply H; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	44.812194	11334	3706
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	41.563302	12081	6562
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.076426	12369	6794
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	40	40.060388	16413	7188
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.068377	20792	3768
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.060705	16507	5379
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	40	40.105611	38464	4878
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.010410	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	40	40.054631	15315	2519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	40	40.772707	17134	3319
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.083238	25151	7285
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.062145	18242	6174
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.058442	16057	5651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	40	0.023041	6	6	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	40	40.441074	24765	6099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.061241	15997	6843
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.512589	347	95	2.0.0.0.2.3.0	synth with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.161273	53106	5815
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.082615	19441	9711
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	40.078981	22712	6375
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.252537	28455	2542
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.817695	18436	6386
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.089372	24663	4100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.580191	21842	3833
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.105093	23586	6876
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.282693	114087	6607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.100279	21126	5044
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.090479	28516	6799
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.091768	31434	4048
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	41.695506	10255	3221
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	42.974569	18606	3020
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	0.015371	5	2	3.0	synth with cache (only 1: intros; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	40	0.009814	3	3	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	40	40.204129	48064	4945
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.778767	24228	6444
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.239380	20580	3443
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	40	41.184134	6149	712
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.801870	14377	8991
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.061176	18663	5498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	32.873211	23619	5804	3.0.0.4.0.0.6.4.3.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition; only 1: unfold Rgt; only 1: exact (Rlt_le_trans r r1 r2 H Hle); only 1: intuition; only 1: generalize (Rnot_le_lt r1 r2 Hnle); only 1: intro; only 1: exact (Rgt_trans r1 r2 r H0 H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.876947	24993	4219
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.150458	55327	8256
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	40	40.092861	20639	3218
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	40	40.054789	11625	2462
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.053885	15287	1802
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.121573	42077	8309
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	40	0.071805	4	3	0.0.1	synth with cache (only 1: split; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.109244	36962	6772
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.099189	28819	8847
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.100990	37578	4657
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.120946	41488	6551
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	40	2.808433	393	172	0.3.8	synth with cache (only 1: compute; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	40	40.245040	87142	7770
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.045631	8820	7915
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.247635	28259	7191
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	40.041289	8855	4689
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.087918	20	11	0.1.1.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	40	40.074883	25285	3582
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.546374	9476	5811
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.077246	21314	7265
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.126595	42836	5079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.134574	16116	8962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.128346	49381	4950
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.100723	35256	6579
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.217401	38820	7387
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.842705	21543	2328
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	40	40.427824	9919	5962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.097420	29561	9389
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.194316	81430	5149
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	40	6.024387	2110	809	2.8.4	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.064913	15991	7549
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.097856	28573	9106
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	40	1.766107	623	70	0.20	synth with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.264663	24207	3890
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.185043	14095	6455
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.049059	7271	4570
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.773915	10336	2196
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.152627	56039	9731
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.046777	11032	6001
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.196040	39658	3201
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.063990	17826	6627
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.188951	29469	4222
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.021717	12	5	0.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.412850	59551	4383
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	41.648228	5128	870
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	40	0.680300	558	140	0.0.0.5.1.5	synth with cache (only 1: intros n m H; only 1: intro H1; only 1: subst; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	40	1.176208	771	254	0.0.0.4.1.1.1	synth with cache (only 1: red; only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	1.901461	1150	227	2.2.3.0.0.1.0.2.9.0	synth with cache (only 1: split; only 1: red; only 1: vm_compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.106804	7	4	0.0.3.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.215474	30	11	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.263978	24679	3874
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40	40.059456	20275	2207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.268908	22511	2432
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	41.330992	30817	5563
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	4.784016	2928	921	0.0.0.1.0.0.0.1.4	synth with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.074675	23747	4910
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.996538	14326	8864
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.436477	177	66	1.2.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: trivial; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.068232	20726	3704
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.708856	35861	5356
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.054071	16470	4033
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	40	40.085946	27553	4654
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.060319	16771	5565
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	26.303893	13325	3560	0.0.3.0.0.18.0	synth with cache (only 1: intro n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	40	40.147360	53726	7116
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.050121	12922	5225
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	40	1.527051	1049	391	0.0.0.0.0.0.0.2.0.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	5.777888	2520	755	1.0.3.12.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.197014	55125	8940
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.020874	8	4	0.0.4.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.093969	31242	6374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.083093	27442	5361
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.007947	2	2	0.0	synth with cache (only 1: intros n m; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.057915	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.008822	2	2	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	40	40.059734	12446	4654
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	40	0.575808	161	39	0.0.0.1.5	synth with cache (only 1: intros x y n; only 1: elim n; only 1: trivial; only 1: intros c Hc IH; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	40	40.826234	25408	9743
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	40	40.072029	19465	6822
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.043639	10280	4365
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.126566	11889	5787
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	40	40.035995	8341	1957
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.084969	27994	6803
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.069324	20003	7521
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	40	40.112029	39071	7558
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.162001	19001	6835
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.218819	14404	8614
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	40	40.081032	21262	7261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.042330	11231	3963
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	40	40.078744	21619	8058
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.271996	24914	3087
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.104645	31199	6404
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.109780	20	17	0.0.0.1.0.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.010813	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.069759	17326	2283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.143223	52124	7958
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.453623	31298	6729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	40	40.912620	21176	6312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.687029	6969	2226
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.091613	10	8	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.050758	2	2	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.163068	64795	6496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	41.275962	17204	2665
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.073524	22435	5769
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.102898	14477	4074
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.155549	24445	6709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	40	41.679144	8902	1451
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40	40.035863	7212	1953
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.337207	27844	6228
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.051421	15047	3482
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	40	40.200524	21502	4717
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.943113	49410	3193
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.100661	34667	6604
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.083572	25563	2140
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.936240	10947	2282
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	40	2.459742	1413	347	4.0.0.0.0.1.0.0.2	synth with cache (only 1: intros x y; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: left; only 1: exact r; only 1: right; only 1: intuition; only 1: right; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	40	0.226311	91	29	2.0.3.1	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.125493	92	30	1.1.5	synth with cache (only 1: intros a b H; only 1: red; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.069007	20893	6328
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	40	0.016266	5	3	0.2.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.740210	11016	2126
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.045570	10251	5768
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	40	40.134781	32670	6075
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.289275	12666	3602
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	40	40.070619	25197	2462
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40	44.633950	3709	606
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.174199	39136	7373
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.119379	6123	1607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.142467	24027	8429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.036628	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	40.049199	13929	3455
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.129613	16748	2843
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	40	40.139351	50397	6347
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.100153	16380	6782
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.092165	27863	7805
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	7.950235	5364	858	6.0.13.0.0	synth with cache (only 1: intros; only 1: red; only 1: destruct H; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	40	0.101830	4	4	0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.910090	44031	7801
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	40	0.010868	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.004110	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	40	40.073724	28083	2552
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.046435	33	9	6.0	synth with cache (only 1: intros Un pr; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.099522	32725	6108
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.006270	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.071802	20254	7044
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.120993	41542	8356
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.166257	15786	7532
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	40	40.106932	35667	3817
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.067808	15479	7081
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.071684	24884	3658
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	40	0.128781	12	3	2.1	synth with cache (only 1: intros n m H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.205088	37822	5322
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.070119	17084	9198
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.069725	20681	5735
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	14.198785	10826	1689	0.0.0.1.0.0.0.1.27.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: symmetry; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: symmetry; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	40	40.049476	13527	3463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.100520	36838	3687
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.419742	33000	5672
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	40	13.758664	13687	2074	0.0.24.0.1.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct H; only 1: red; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	40	40.876286	12378	7779
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.131682	47465	6273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.862792	11216	2376
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.042486	10018	1044
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	16.561754	13117	1849	5.0.5.5.8.10	synth with cache (only 1: intros s2 n H; only 1: induction n; only 1: simpl; only 1: ring; only 1: simpl; only 1: ring [ IHn ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	40	41.325194	14286	3789
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.135269	51652	5883
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	6.363908	1247	43
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.113207	24811	5315
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	40	11.094993	11932	1082	4.4.2.1.0.1.8.22	synth with cache (only 1: destruct z; only 1: destruct z as [| p| p]; only 1: simpl; only 1: discriminate; only 1: easy; only 1: easy; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.136979	48	17	4	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	40	3.007232	1896	438	0.3.0.0.1.1.0.2.2.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: intros; only 1: red; only 1: discriminate; only 1: intros; only 1: easy; only 1: easy; only 1: simpl; only 1: intro; only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	22.106617	13004	3714	0.0.0.0.17.0.4	synth with cache (only 1: intros; only 1: unfold continuity_pt; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.070250	14189	2683
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	41.535461	24237	5519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.177556	8657	4495
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	40	40.221499	30254	5793
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.095651	24858	6214
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	0.288196	106	31	0.0.6.0	synth with cache (only 1: intro; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rle_0_sqr x)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	9.951166	1197	42
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.081915	27545	3318
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.826800	19583	5346
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	40	0.771198	138	70	0.0.0.1.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.087298	26540	7255
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.067362	18935	6338
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.931260	15372	2850
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.049893	11915	5663
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.038692	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.159810	63518	3801
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.083095	18574	5035
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.035910	6987	1645
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	40	0.134191	30	6	2.6	synth with cache (only 1: red; only 1: exact Qmult_comm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.012678	2	2	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.134680	48757	8049
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.098278	33817	6747
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.068042	19335	5920
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.103109	6941	2241
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	40	40.196134	57307	4407
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40	43.207470	10990	1518
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.066996	19768	7120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.025768	5061	771
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.084427	24827	9364
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.107961	24383	5404
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.088552	11625	7009
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.065662	18040	7151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.137969	23425	5635
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	40	40.046066	10812	6568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.037850	13061	2432
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.078543	25649	2696
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	9.147834	7000	1187	8.16	synth with cache (only 1: intros EM A B; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	40	40.088574	25611	9397
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.109857	23939	7168
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.060227	15994	5045
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.550875	69793	4826
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.324291	15524	3127
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.039092	24	9	0.1.0.1	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.038657	22	8	0.0.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	0.059807	24	10	1.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.053173	26	12	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: tauto; only 1: subst; only 1: auto with rorders; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	0.176802	88	38	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: tauto; only 1: red; only 1: auto with real; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.053968	27	11	1.1	synth with cache (only 1: intros r1 r2 H; only 1: eauto using Rnot_lt_le with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.768528	14610	6540
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.105801	35985	5513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	40	40.905951	25525	3998
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	4.669336	3085	341	0.23.5	synth with cache (only 1: destr_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.083184	24389	6991
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.710125	5729	2017
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	40	40.040016	13115	1621
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.042320	12017	3406
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	40	41.496716	37492	3590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.026963	3	2	1.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.090229	5	2	3.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.067112	13884	7422
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.049225	12574	5422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.069943	21158	5997
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	40	40.055567	6914	1039
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	40	17.282846	16806	3734	14.0.7.9	synth with cache (only 1: intros P exnot allP; only 1: unfold open_set; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	17.723059	9534	3556	0.0.1.8.6	synth with cache (only 1: intros E x lpo sig_not_dec; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.320217	19999	4935
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	1.115496	493	121	0.0.0.0.1.5.2	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.039177	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.186534	25021	3252
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.395786	3839	946
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	40	0.078744	350	20	26	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	41.006065	35892	3254
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.251043	13712	5937
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	40	40.048911	14379	2175
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.117805	37908	6662
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.110801	43433	1547
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	40	40.115199	35541	4802
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	40	0.741128	343	131	0.0.6.0.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.870673	28118	5673
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.025039	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.056291	15089	2417
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40	42.843184	17043	2670
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	0.344507	115	38	0.0.0.2.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	40	1.246591	745	209	3.6.2	synth with cache (only 1: intros n1 H' H'0 H'1; only 1: simpl; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	41.940586	14388	1894
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.083003	25397	4733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.131927	46229	8172
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.061648	18862	3874
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	40	40.275190	11898	1295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.045392	10854	3905
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	7.634922	1742	52	58	synth with cache (only 1: easy || now destruct Hm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.029048	6824	1445
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.063131	21906	3491
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40	42.528176	13617	2393
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	2.005359	290	86	2.0.0.0.0.0.0.8	synth with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	40	10.155529	2401	640	0.0.6.0.0.4.0.0	synth with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	40	16.784852	14272	2818	2.5.0.0.8.8	synth with cache (only 1: red; only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: apply limit_plus; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.093528	30443	4606
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	40	40.124174	44378	5069
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.317991	44120	8030
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.055471	16202	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.051995	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	0.096153	15	9	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	40	40.180014	24568	7148
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.625906	28952	7699
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.995063	793	97	1.15.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	40	6.229969	1344	95	0.0.10.22	synth with cache (only 1: intro EQ; only 1: repeat red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.107697	19	9	1.1.1	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.100024	33184	5447
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	39.344536	13642	3616	0.0.0.0.0.0.0.0.2.1.1.0.0.0.4.1	synth with cache (only 1: intros; only 1: destruct (Rcase_abs x) as [Hlt| Hle]; only 1: apply Ropp_lt_gt_contravar, Rlt_le in Hlt; only 1: rewrite Ropp_0 in Hlt; only 1: apply Ropp_le_ge_contravar, Rge_le in H; only 1: rewrite Ropp_involutive in H; only 1: rewrite (Rsqr_neg x); only 1: unfold Rsqr; only 1: intuition; only 1: apply Rge_le in Hle; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.228209	44301	3487
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	40	2.526064	971	308	1.0.3.9.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.802401	124380	4990
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.477513	5195	1294
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.031732	19	5	1.1	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.061017	18604	5981
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	40	40.093961	7534	1966
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.005202	1	1	0	synth with cache (only 1: exact eq_equivalence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.089678	28636	6374
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.119466	5068	604
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.057303	13051	7976
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	40.077821	29082	2537
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.285788	112	41	0.0.0.0.1.2	synth with cache (only 1: intro H; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.745706	6222	3275
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.069085	17713	7217
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	41.146164	43951	4172
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.187536	24123	3200
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.069130	16111	3099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	40	40.092854	11861	3488
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.023798	13	4	1.0.2	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	40	40.240783	18110	3279
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.052987	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.087877	25292	6519
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.041095	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	11.074004	12272	1469	8.3.0.0.1.4.7.3.2.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: eauto; only 1: simpl in *; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: reflexivity; only 1: apply le_n; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	0.357084	269	34	13.1	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.090139	19441	4571
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.156291	16631	5688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	40	40.083984	25694	3915
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.180354	67269	6128
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40	40.428485	9604	3878
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.877134	18539	5423
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	40	40.191981	74221	4220
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.043518	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	40	40.110454	38202	7484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.072288	18333	7965
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.053889	12158	6062
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.186390	32938	4963
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.035105	4108	1624
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.027794	7726	1427
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.067405	17416	7846
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40	40.303919	29918	4639
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	40	40.091148	22230	2362
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.079245	25641	6579
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.131916	47550	5680
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40	41.501147	53262	5650
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.363491	21811	6382
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.118835	18132	5800
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	40	40.680183	18837	5695
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.069058	18853	6513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.340979	43340	3973
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.059369	14286	6335
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.578743	13656	4624
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.466874	12260	2380
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.022861	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.024617	5	4	0.0.0.1	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.023412	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.309070	10	5	1.0.1	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.296601	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	40	0.020336	6	3	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.659072	15351	5283
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	40	0.020383	7	3	0.0.4	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	40	0.010979	3	2	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.009977	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.068197	14732	2148
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.036350	5	4	0.1.0.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.143559	43220	6415
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.846547	35638	4290
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.065761	18672	6992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.759666	5862	2617
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.101531	33888	6610
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.133503	27499	3838
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.066884	16777	3840
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.036264	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	40	40.928236	81843	6261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.224881	11276	3332
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	11.464309	9685	1513	0.1.0.9.1.9.4	synth with cache (only 1: intros x y z; only 1: compute; only 1: intuition; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	40	0.087832	25	10	3.1.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.116156	2633	546
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.502959	208	86	3.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.018937	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.051125	13728	2587
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.102274	38190	2421
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	40	0.059776	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.749735	713	137	0.6.10.0	synth with cache (only 1: intuition eauto  3; only 1: destruct H; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.019475	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.232079	26378	5776
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.347066	21104	3553
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.095548	31336	6365
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.179602	38706	5084
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40	40.106661	20820	2710
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.036355	7702	3223
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	40	40.071786	22031	9098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.091303	21144	2830
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.882627	27690	4400
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.143299	54251	6818
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	40	33.326858	18223	5434	3.11.2.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.163217	27946	4475
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.017775	3476	1451
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	40	3.259447	1487	504	0.0.3.0.4.1	synth with cache (only 1: intros; only 1: unfold continuity; only 1: intros n; only 1: apply continuity_pt_mult; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.053037	12487	7792
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	40.489450	76790	3321
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	40	40.051691	8915	3224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	40	3.558435	2318	703	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.150432	57020	6882
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.282085	36852	6569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	2.924079	1131	189	4.5.1.5	synth with cache (only 1: intros A eq_dec; only 1: intros P Q H l; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	40	40.351353	155280	7582
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	13.102044	6533	1721	4.9.0.0.0.1.0.1.3	synth with cache (only 1: intro n; only 1: case n; only 1: intro H; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.250094	52437	4881
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.067984	19544	6827
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	40	40.960140	23845	6714
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.073169	19075	6509
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	44.711283	16203	384
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.688621	66159	3498
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.087409	28847	6673
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.060002	15841	711
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	40	40.126804	32424	6301
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.067109	16721	4888
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.729477	18823	6611
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.512987	14450	4431
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.091031	28769	5553
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.123249	11680	2631
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	40	40.145357	56258	4276
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.257963	28732	5870
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.187971	17139	3782
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	40	41.262233	63201	7680
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	40	40.060277	18774	1706
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.330146	12389	1684
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	40	40.567415	40009	4182
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.056783	13263	7520
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.106813	38546	4462
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.079080	13974	5753
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.101827	31757	3854
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40	40.353247	69306	1124
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.043622	14733	1826
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.155339	8	5	1.1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.285262	180	58	1.3.1.1.1	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.066855	17237	8901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	40.108400	37338	7435
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	40	41.119956	13846	4924
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.067474	15594	7942
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	38.525021	31532	6686	1.2.1.22.0.1	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros; only 1: intro; only 1: intros; only 1: generalize (H x y H0); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.228692	82869	3709
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.189339	68948	6730
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	40	40.077459	16101	2310
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.097076	34023	7183
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	40	0.251264	189	31	0.0.6.5	synth with cache (only 1: intros n m H1 H2; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.155123	52709	7693
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	40	40.086187	14966	6116
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.216147	26543	5827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.800132	31854	4478
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.131115	49062	5085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.043167	43	8	0.7	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.069745	22427	4339
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.281060	24481	3606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	0.719483	234	98	4.6	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	40	7.346063	5957	1246	2.1.3.1.5.1.2.3	synth with cache (only 1: intros n m Hn; only 1: red; only 1: intros; only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.104090	30414	7041
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.995627	111	68	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	40	40.043446	2570	1136
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.267751	114193	5008
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.113336	36334	8686
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.038991	2280	590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.111715	23454	6328
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.062330	15899	7904
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.049256	11318	7030
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	0.115325	67	29	0.0.0.0.3.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.698831	14918	4713
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.059567	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.090179	31221	2276
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	8.773642	56532	952
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.057841	12136	1878
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.068513	20070	5854
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.114399	17657	7530
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.247183	85	41	0.0.1.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.149808	31660	5494
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.151477	16036	3122
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.440760	286	82	0.0.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	40	40.106962	31594	3218
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.355399	43	16	0.0.0.4.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	40	40.994727	15959	2565
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.640664	214	61	0.2.0.1.3.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	40.272416	17129	2827
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	40	40.064403	19030	3847
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	0.227923	230	41	6.4	synth with cache (only 1: destruct x as [xn limx]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	40	40.145007	52032	7450
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.085283	27016	4521
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.108060	35601	6891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.403142	19428	4313
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.083852	25377	6993
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40	40.378944	17442	5204
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	40.143107	48947	6982
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.033903	7681	4377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.908153	97	55	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.898354	26165	6053
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	40	40.052119	12722	7683
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	40	41.039099	22912	4319
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.135161	44265	4901
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	40	40.044758	12905	2859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.127692	20597	2023
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.066236	22644	3440
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.041117	7	3	0.3.1	synth with cache (only 1: intro n; only 1: intro x; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.062230	14	4	2.1.1	synth with cache (only 1: split; only 1: auto with fset; only 1: auto with fset).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	44.735857	57556	3777
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.425249	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.432946	3	2	1.0	synth with cache (only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.131860	14623	6987
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.064325	15081	8189
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.109699	37113	8106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.095274	14938	1092
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.912107	36000	3905
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.066287	19828	6172
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.087524	22883	9297
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.678144	441	108	9.1	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.330441	63	22	1.0.7	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.127599	9732	1193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	3.760864	970	185	0.8.0.5	synth with cache (only 1: intro H; only 1: intuition; only 1: subst; only 1: discriminate || simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.159181	80	16	0.7.1	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.028040	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	4.396059	1378	350	6.0.0.0.0.5.1	synth with cache (only 1: intros a Ha; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.269576	72	16	0.1.5	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	40	40.658433	57386	3896
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.119336	43473	6117
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.062933	10106	1191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.602832	18404	2722
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	40	40.095992	15350	5166
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.064949	14945	6847
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.061161	15887	7818
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.073254	14	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	3.854143	1665	284	2.3.9.4	synth with cache (only 1: intros p1 p2; only 1: intros P Q H xs H0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	41.330777	7901	1745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.403775	8391	1008
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.155731	32955	5419
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.070794	15690	3093
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.076797	23232	6452
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.140947	19141	5675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.015816	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	40	40.715966	13760	2761
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.043772	18	4	1	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.046949	9676	6079
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	40	40.092648	28565	5785
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.101115	5899	1509
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.041790	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	40.111706	16424	3495
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	40.655485	22160	4393
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	4.197611	2721	385	5.10.2.5.4	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: compute; only 1: intuition subst; try ring; auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	40	40.799736	29014	7047
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	40	40.061116	14581	7688
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	40	0.031753	12	4	1.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.031239	11	4	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	28.966693	6030	1100	20.2	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	40	40.044203	6957	4308
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	40	40.070390	18836	8692
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.490552	104	26	2.3.5	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.165942	63649	5644
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40	41.007306	15230	3124
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.024718	4187	1736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.319713	46965	1715
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	40	40.089776	28128	6862
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.074750	22015	4576
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	40.919887	16709	8217
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	3.746743	1374	299	0.0.9.2.3	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.807647	384	138	1.0.6.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	40	41.039617	35269	4173
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	9.454209	5384	1082	0.1.4.4.1.5.2.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: simpl; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.309560	535	98	1.2.8	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	40	4.995685	2581	633	1.0.8.0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.093089	30893	6165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.081520	19153	6389
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.588479	766	262	0.1.2.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.317914	29482	7507
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.061113	15180	7007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	40	40.099784	25500	3440
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	1.415570	651	257	0.0.0.0.0.0.1.3.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.059995	17866	3653
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.180605	26878	3073
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.064661	15435	5037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.071704	15135	3448
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	40	0.025373	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.010601	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.032695	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.025738	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.144049	60	41	0.2.2.0	synth with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.082970	10253	1565
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	1.736628	1016	213	0.0.0.15.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.743149	8287	1926
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.147747	55050	5907
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40	41.563931	40356	3586
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.855536	24424	8308
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.094248	23771	5233
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.058787	14861	8032
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.051570	12025	2688
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.017003	7	3	4.0.0	synth with cache (only 1: red; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.033161	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.047127	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.011550	7	3	0.4.0	synth with cache (only 1: red; only 1: intros y LT; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.081826	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.038572	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.028284	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.031628	12	5	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.039833	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.041941	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.061409	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.034332	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.030471	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.134562	7	6	1.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: destruct 1; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.046610	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.036628	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.083882	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.919559	1816	313
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.281062	10	4	0.2.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.055613	17024	2226
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.114513	9	5	2.1.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	40	40.048099	14075	2383
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.306168	14	5	1.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.333933	153610	5505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.110082	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.258733	11	4	1.2.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.127599	23457	3542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.077527	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.053475	2355	559
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.074453	22188	5684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	41.983633	9712	3189
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	40	40.221704	11712	1615
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	40.126685	21165	6397
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.041930	10349	4181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	0.111979	10	3	4.0	synth with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	15.057411	1816	581	0.3.0.0.0.4.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: Dec.fsetdec; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.025462	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40	40.234378	15440	2651
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.021731	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	40	40.099268	24755	3205
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.711781	21639	4141
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.723245	21457	9143
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	40	40.731520	18204	4809
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	40	40.157696	40411	7469
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.100743	22257	3885
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.315014	22350	3372
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.027440	3499	1278
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	40	40.423491	8814	4529
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40	40.581808	18498	4536
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.007441	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.309601	42967	3262
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.079127	23477	6661
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.078524	10728	1712
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	41.218636	14256	4449
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.088555	19198	6163
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	41.147960	24554	5397
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.362497	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.089424	12581	2890
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.151351	27557	4611
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.166951	27954	4977
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.082482	26079	3214
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.060280	14977	7544
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.051076	13844	3034
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.760634	161	82	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.077325	3765	1648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.189500	40537	6522
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.120309	39704	6721
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.181268	25452	1243
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	40.039637	11145	2110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.099833	34985	2991
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.004483	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40	43.158846	9558	2996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	0.548611	269	118	0.1.0.0.0.0.4	synth with cache (only 1: intro n; only 1: simpl; only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	6.479393	946	427	2.1.1.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: destruct (Rcase_abs (y - x)) as [Hlt'| Hge']; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.057662	14259	6480
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.090341	25730	4703
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.233164	14479	5946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	19.878123	4079	998	0.4.1.1.0.0.4.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.227736	12049	2452
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	42.290668	13989	4846
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.109412	9755	2718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.144303	22087	4162
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.116659	19826	2012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.079494	56	17	0.1.4.1	synth with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.080159	12370	1504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.035885	4778	762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.073046	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.070689	24920	1247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.055249	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.368401	18	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	2.131744	941	298	11.4.0.0.2.0.0.1	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now reflexivity; only 1: red; only 1: intros; only 1: auto with *; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.085094	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.156190	34464	4237
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.048472	6473	781
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0.256712	7	3	1.0.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	40.149113	25278	1842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.097228	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.254772	6	3	0.0.3	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	41.234365	12700	3771
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	40	22.036781	10402	1950	0.0.0.3.2.3.14	synth with cache (only 1: intros n m; only 1: red; only 1: simpl; only 1: case_eq n; only 1: trivial; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	40	40.143134	15062	3414
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.076618	19477	3379
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	0.465202	116	42	0.0.1.0.4	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.043794	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.061535	8932	3271
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.038235	11231	1211
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.322615	5961	2114
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.681701	7068	1795
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.737784	20889	3943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.527663	26983	6487
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	40	40.056897	11504	6452
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	40	40.378140	9478	2365
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	10.010056	1799	428	10.2.3.2.4	synth with cache (only 1: intros a b; only 1: case a; only 1: intros Hj; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.005749	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	40	40.206741	35501	6933
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.075901	23333	6130
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.029143	6540	2776
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.115690	26894	6543
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.290944	21414	2046
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	40	3.149146	1215	230	0.1.7.10	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.005668	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.825669	19183	2750
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.062984	21	7	0.0.5	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.347566	13625	1471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.017487	3	2	1.0	synth with cache (only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.046195	9825	6698
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	40	0.790099	8	4	0.4.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.832038	21	6	0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	1.441808	57	14	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.057958	13490	4476
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.102533	11	7	0.1.4	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.088640	16689	5430
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.043243	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.066194	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.053080	18	11	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.118471	11	4	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.168183	32	13	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	41.687788	14664	5609
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.133922	24	8	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.050642	18	10	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.967259	37	13	1.2.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.048064	13447	2571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.034697	4	3	0.0.1	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.010598	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.068169	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.133476	11125	1475
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.031762	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.148954	6	2	3.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.057502	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.039452	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	40	40.130354	46439	7267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.035780	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.062637	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.080750	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.076781	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.047231	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.031024	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.153101	59052	6059
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.344434	31	11	1.2.2.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.070899	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.048905	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.303217	10085	5604
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.253590	20	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.057287	19082	3119
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.251220	46466	6145
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.102032	32653	7181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.097882	20208	2079
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.080925	25657	5327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.042397	11869	1815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.306909	134	34	0.7.3	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.208953	19410	6707
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	41.315867	62117	4867
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.076929	23457	5456
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	40	40.123132	13879	3462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.078729	10263	1950
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.356123	39933	6611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.040466	11838	1748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.042897	10	3	3.1	synth with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.084560	27164	4880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.031535	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	15.376919	941	282	1.1.7.3.3	synth with cache (only 1: intros E; only 1: repeat red; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.029066	7	1	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.023453	2	2	0.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.007282	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.008188	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.694566	39500	3686
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.650744	29	11	3.0	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.080764	23255	4141
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.217820	13342	1778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	0.742222	1148	41	47	synth with cache (only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.419456	16	5	2.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.095081	26481	3753
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.206303	15124	2602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.110706	37815	4013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.638690	447	80	8.7	synth with cache (only 1: unfold base; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.456701	20	5	2.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.128793	1382	432
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.928792	31	14	1.3.0.1	synth with cache (only 1: constructor; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40	40.196604	7091	1829
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.510086	33	9	1.1.5	synth with cache (only 1: generalize (F.is_empty_iff s); only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.908181	11236	4378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.102625	11291	5159
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.104504	15805	4741
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.062315	23132	1224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.079474	13357	4131
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.392871	11338	3281
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.322494	9402	3486
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	40	40.101472	30740	5809
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	40	40.098813	33552	7425
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	40	40.287870	16463	3987
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.512898	17027	2133
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.007134	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.162005	60605	6824
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	4.039453	1784	751	0.0.9.0.0	synth with cache (only 1: intros x y; only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.024075	5480	2850
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	0.409302	218	70	1.0.0.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.158932	18318	2543
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.043243	8889	3764
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.674652	12779	2740
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.707386	20035	3268
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	40	40.989139	10437	2987
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.072095	20702	5237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.703594	17259	2789
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	41.545179	33227	7466
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	40	40.761277	5376	1131
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	40	0.811678	14	11	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.114442	16216	2055
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	40	1.685613	183	75	1.1.5	synth with cache (only 1: split; only 1: ring; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.130425	46175	7843
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	40	1.568400	22	12	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.042358	13989	1893
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.283972	20465	7021
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	16.804735	2279	713	1.4.0.0.0.0.3.0.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.058422	17114	3647
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.232230	44440	3461
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.054307	11113	4880
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	40.109963	38735	2728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.068871	22629	3423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.004890	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.135691	28168	5745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.039749	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.042905	6	6	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.029678	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.063659	15733	6233
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	40	40.071071	21304	4814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.066605	10963	2587
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	28.008088	16768	886	57	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40	43.094060	10935	2493
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40	40.305337	60362	4640
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.131905	48774	6044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.102453	18238	1234
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.119114	28229	2788
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.078652	2351	583
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.087712	29376	3597
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.107524	27630	7111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.028131	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.229912	34513	3373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.049865	13413	1050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.028011	5	4	0.0.1.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.009482	2	2	0.0	synth with cache (only 1: intros n m Hn; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	0.022713	8	4	0.0.0.4	synth with cache (only 1: induction x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	40.023226	3206	831
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.025441	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.026149	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.052661	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.045260	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.048051	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.064047	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.059418	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.043087	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.104946	37261	3159
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.023866	3535	658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.079869	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.060998	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.096440	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.085867	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.073862	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.202334	5	2	0.3	synth with cache (only 1: intro LE; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.197372	5	2	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.267001	16100	5415
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.994143	11951	3971
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.105630	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.531087	13	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0.759523	28	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.188027	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	1.006526	37	18	0.0.1.5	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0.938644	33	13	0.0.1.5	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.242888	14333	5907
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.386626	15	5	2.2.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.153645	57629	8758
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.509524	41	12	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	41.254343	11092	2844
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.037975	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.040526	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.026695	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.054994	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	40	40.296770	22457	3900
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	40	40.322142	26876	6814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.046296	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	0.671218	480	135	7.0.1.1	synth with cache (only 1: unfold open_set; only 1: intros Ext A B Equiv; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.005014	2	1	1	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.052446	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	40	0.023332	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.060897	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.040565	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.104384	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.104500	12203	5469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.210330	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.095838	33588	6081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	16.784803	3629	893	2.2.1.1.1.0.2.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.134709	10172	4580
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.033457	5690	2070
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.050776	11993	7002
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.963584	29391	7849
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	41.256153	22644	4298
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	7.650276	336	70	1.8.5	synth with cache (only 1: intros E; only 1: rewrite union_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.436857	8859	2260
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	3.479183	483	45	2.1.25	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.260872	7	4	1.1.0.1	synth with cache (only 1: unfold Equal; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.928585	267	86	2.6.2.1	synth with cache (only 1: split; only 1: intro H; only 1: fsetdec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.922257	94	27	0.0.9	synth with cache (only 1: intro EQ; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.702155	49819	6154
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.078872	23980	5840
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	41.489844	17115	7926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.824029	8431	1198
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.126906	43211	9088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.024294	16	3	5	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.045759	11662	4584
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.903389	6315	2444
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.077517	16512	6406
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.096168	32892	4917
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.019061	10	3	4.0	synth with cache (only 1: intros x y z; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.133897	10	4	2.2.0	synth with cache (only 1: intros r r1 r2; only 1: intros ->; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.648264	72666	2749
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.397463	164	96	1.0.0.0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.482560	51206	2371
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.020856	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.034566	8516	2872
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.028349	8	3	2.1.2	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.024965	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.313493	18	5	0.4	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.050249	7843	2007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	12.810565	1072	262	1.1.5.2.4.1	synth with cache (only 1: expAdd; only 1: split; only 1: intuition; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	4.448457	528	324	1.2.0.2.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.077580	23420	5093
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.094801	2	2	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	40	0.054785	7	4	0.1.2.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.044968	7566	1795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.117844	3	2	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.931253	79	48	0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.029668	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.008866	2	1	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.050334	11462	5765
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	40	40.127447	23739	5678
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	40.034645	8007	771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	2.355532	198	53	2.0.0.8	synth with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.084136	10816	1475
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40	40.160434	61470	3636
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	16.165684	2912	1543	0.0.1.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.076861	25581	3517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.069681	20853	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.065969	22968	1564
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.076774	23329	3722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	40.041589	11221	2074
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.065030	6435	1596
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	40.328889	48166	8056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.040107	12912	867
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40	40.159214	38495	4839
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	42.786099	54418	3305
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.043571	10579	2769
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.286106	15273	7736
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	0.028128	11	3	3	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.043778	8	6	2.0.0.0.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.136317	3219	2092
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.695723	11616	1481
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	40	40.397370	87488	4949
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	40	40.624951	25642	3500
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.123932	21177	2019
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.806717	14309	6019
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.102776	31896	4009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	40.137195	13779	3926
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.285694	112021	2807
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.055657	5671	2225
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.052474	12443	7232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.474523	257	35	0.11.3	synth with cache (only 1: intro; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.008746	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.076392	28283	2055
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.053504	4	2	0.2	synth with cache (only 1: apply mem_1; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.448906	249	52	0.0.0.8.2	synth with cache (only 1: intuition; only 1: induction H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	40	0.018939	8	2	6.0	synth with cache (only 1: Z.bitwise; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.046718	2	2	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.018450	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.977220	84	49	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.025970	1450	279
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.727941	23564	5563
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	41.296215	11723	5000
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.494440	8716	2329
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	40	36.308277	31693	5498	0.0.0.0.0.15.3.8.2.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite (H (S N)); only 1: rewrite HrecN; only 1: ring; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply le_n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	40	40.241142	38349	4636
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.070179	18814	5555
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	41.989584	31334	5590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.045719	13929	3041
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.280036	10835	5351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.041661	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.077420	25778	4078
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.132825	13	13	1.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.698845	20027	3819
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.564485	18298	3149
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.511477	15441	1499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.108472	10	9	1.0.1.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	0.036614	5	3	0.2.0	synth with cache (only 1: intro x; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.297862	34	32	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.602700	34	31	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.030328	4151	822
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	40.144255	40421	5156
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	0.322223	107	45	0.0.0.1.0.0.0.1	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.049337	6458	1421
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	40.380201	2354	1659
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	11.396032	4726	1873	0.0.4.0.0.2.0.0.3.0	synth with cache (only 1: intros x y H _; only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: apply Rlt_le; only 1: now apply Rle_lt_trans with x; only 1: auto with real; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.062495	15741	3171
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.028653	7306	1605
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	40	40.274659	31889	4964
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	40	40.051669	13236	2429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	24.595873	6893	2174	0.21	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.252264	63371	2911
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.513531	59	25	0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.071665	23716	2093
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.677407	71	42	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.006263	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	0.743403	3713	79
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.120741	30246	5460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.104990	33017	5701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.106166	39035	3050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.025381	5537	1493
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.089813	25125	6223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.027109	9	6	1.1.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.140646	42552	7656
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.057376	7231	1039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.105906	25320	1310
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40	40.070019	5050	1157
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.117968	40994	4974
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.303928	12278	6692
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.536186	18708	5677
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.576020	14673	1894
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.067269	7112	2419
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	40	40.074005	15170	8511
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.123829	17489	4195
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.832029	10778	2307
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.062830	19216	2811
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.715238	15853	4084
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	40	40.113250	13835	3644
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.099999	36052	4127
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.127940	27650	2575
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.082811	28269	3451
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	40.018257	1833	320
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.040058	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.040152	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.062451	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.069573	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.066591	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.194251	5	2	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.079090	22169	7069
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.082836	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.070686	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	7.288247	4053	803	0.6.0.1.1.2.4	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rdiv; only 1: intuition eauto  2; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: eauto using Rle_trans, Rle_refl; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.195300	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.080479	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.564970	16	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	40	40.135875	50102	5437
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.552075	12	5	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.526062	22527	2792
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	41.598877	39992	3176
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	40	40.858865	36225	7051
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.069930	20669	5304
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	1.165528	38	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0.910434	24	10	0.0.2.1	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.800887	23	7	0.0.2.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	40	0.067768	14	4	2.0.2	synth with cache (only 1: unfold Rdiv; only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	40	40.071379	20929	6442
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.058832	14309	7655
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.395304	13828	1725
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.559436	8292	4037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.187799	38034	3874
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.268120	98	26	1.1.1.2.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.242999	25894	4523
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	40	5.078650	2078	543	18.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.027095	3702	738
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	37.604178	3026	1854	0.0.2.0.0.0.0.0.0.0.1.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.083129	25768	4387
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.142441	16473	4972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.057738	19855	3044
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	41.926107	14543	7083
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	40	40.338044	29843	5307
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.033635	2374	556
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	40	40.139461	10112	918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	40.140612	2394	1436
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	40.196983	60466	6581
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.116086	41069	4769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.085644	22197	6984
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.085922	31693	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.665129	352	71	0.7.3	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.074664	21918	5657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.088484	22	8	1.2.0.0	synth with cache (only 1: unfold to_Z, zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.031927	12	4	0.3.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.023446	10	4	4.0	synth with cache (only 1: intros n m; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.064396	6883	2771
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.303686	38935	4290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.041974	10405	3899
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.016939	4	3	1.0.0	synth with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	40.116697	39050	4544
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.298435	13347	5885
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	7.988857	878	546	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.653398	16239	8033
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.148591	50388	8203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.025464	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.019923	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.007467	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.098978	7969	3323
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	20.462181	17169	1285	0.6.6.6.4.20	synth with cache (only 1: intros x y H; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: inversion H; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.071026	22067	3046
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	40	40.099725	31510	3881
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.114605	33128	3568
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	22.134412	2473	1557	0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.114790	41012	5087
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.015353	5	3	0.0.2	synth with cache (only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.160520	15	4	0.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.818573	30309	7570
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.094742	23795	3688
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.105285	12	3	4	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.100287	16939	3317
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.159187	3519	2041
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40	40.160001	67399	2325
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.212963	105337	4805
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.097017	33269	5430
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.069317	22757	2693
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.072400	19187	5309
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	40	40.726336	28022	5101
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	40.028464	2118	394
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.540036	11	5	3.1.1	synth with cache (only 1: intuition; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.064458	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.049649	12700	4906
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.068119	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	10.444687	2254	623	4.2.0.4.2.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.047107	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.041977	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.058050	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.077497	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.102999	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.112365	29070	3433
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.050823	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	17.856093	2277	1486	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.018952	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.517586	21	6	7	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.256529	23	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.005167	4	1	3	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.123560	43403	4842
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.365804	4017	794
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.058140	12284	2448
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.443324	15	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	24.414510	29367	4000	1.3.10.0.0.13.0.3	synth with cache (only 1: destr_bool; only 1: unfold make_last; only 1: induction n using Pos.peano_rect; only 1: simpl; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.661623	3617	831
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0.401207	7	4	0.0.2.1	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.389534	7	4	0.0.2.1	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	2.309412	788	205	2.4.0.2.4.0.0.1	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	5.169581	3474	351	2.15.13	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.023026	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.016314	8	3	0.1.4	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.005754	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.041696	10	2	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.738683	301	97	0.0.3.10	synth with cache (only 1: constructor; only 1: rewrite add_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.985071	20361	5767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.036433	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.107195	4897	1024
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.612077	37	11	1.0.4	synth with cache (only 1: intros H; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.210049	83703	4466
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	40	40.163079	21962	3725
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	42.084440	5290	1282
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.056346	13025	2674
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.025079	2922	480
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.074848	26478	1733
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.086282	28737	3262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.138555	49493	3469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.078363	14861	1815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.071083	22438	2336
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.076443	18834	6284
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.073336	10902	3176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.043516	13522	1347
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	40.112934	30680	8122
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.335265	21283	4739
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.697520	12100	5400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.863262	60955	4653
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.012719	3	2	1.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.136139	25951	3625
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.107091	16081	2162
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	40.097230	8997	1374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.113497	19061	7216
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	40	40.098687	35252	3914
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.148883	53520	5903
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.069650	21728	4083
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.041903	10757	3124
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.992453	29414	5646
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.188851	25675	5823
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.047406	11369	5610
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.115532	37500	6464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	7.860924	1970	1004	0.0.3.0.1.0.4.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.042377	11126	2607
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.114337	11026	1672
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	40	40.502688	29470	3841
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.066775	18009	4990
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.094540	17617	2437
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.098536	33792	3390
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	40	40.366863	24676	1800
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	40	5.742360	4040	848	1.3.1.0.0.14	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: trivial; only 1: simpl; only 1: intro; only 1: rewrite Hrecl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.216633	14451	7376
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.303541	28661	2843
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.797218	9853	1670
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.066958	16099	2629
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.018637	5	3	0.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.056990	22	7	0.4.2	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.005861	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.301119	219	28	12.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.220229	12365	2097
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	5.987750	2042	666	0.2.0.1.0.4.2.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: field; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l; only 1: auto with real; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.024715	11	3	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.079676	26286	2407
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	40	40.068611	13038	6934
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.035089	2120	374
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.105640	39830	3032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.059616	15420	3645
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	40	8.696632	897	350	0.0.0.0.0.0.5.1	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.186134	18	9	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	40	40.165229	19980	3344
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	40	1.115654	18	9	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.026849	9	3	1.2	synth with cache (only 1: intros l; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.019327	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.107002	15034	2335
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	41.171607	20855	6235
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.023788	2207	433
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.149732	42906	2560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	4.627043	3944	775	0.15.2.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.038150	7237	2277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	11.214592	4156	920	0.9.2.0.1.3	synth with cache (unshelve (only 1: intros H a; only 1: apply subset_1; only 1: red; only 1: intros; only 1: eauto with set); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.010754	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.079909	19876	1221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.122029	25594	4889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.045851	2	2	0.0	synth with cache (only 1: zify; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.183083	63114	1889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.006172	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.125711	43493	6340
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.066918	16176	1277
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.086945	22477	3059
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.347563	12762	5038
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.626224	15195	8082
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.917105	19978	2773
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	40	1.045681	310	121	5.1.0.0.0	synth with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.121209	28257	4293
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.086657	15861	2369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.024745	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.022490	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.020228	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	40	40.133594	40410	6996
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	40	1.734471	1046	278	1.0.10.1	synth with cache (only 1: intro n; only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.092303	17846	2452
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.092361	30714	2104
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.064773	21656	3627
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	0.703901	149	37	5.4	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	0.254023	81	16	5.4	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.080517	10891	2670
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.640999	543	128	0.1.5.3	synth with cache (only 1: intros a n; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.092985	35691	2332
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.462417	141	28	5.6	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.825766	54589	7138
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.117191	14312	5488
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	3.508189	1301	545	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.125661	23495	2826
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	2.115217	806	318	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.074574	11898	4210
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.145682	47298	8436
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.074377	20710	3504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.120561	43120	4593
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.368307	11743	1170
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	40	40.591743	12272	1798
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.083663	27482	2621
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	12.897470	3304	464	7.11.5.1.1	synth with cache (only 1: intuition; only 1: compute; only 1: intuition; only 1: intuition_in; only 1: L.MX.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.693293	38	14	0.0.6	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.008236	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.016419	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.011128	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.023509	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.071269	19816	7056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.278301	46641	1983
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.217220	75888	6062
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	40	40.064935	14969	6736
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.023109	2664	500
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.216894	88664	5076
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	40	40.035283	6729	1081
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	2.149270	2011	96
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.013431	7	2	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.016474	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	40	34.529717	5039	1777	1.2.2.0.13.5	synth with cache (only 1: intro n; only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	0.080634	12	4	0.0.3	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.016412	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.007950	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	0.037673	9	4	1.3.1	synth with cache (only 1: intros r r1 r2; only 1: intros ->; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.068730	19321	2393
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.137440	7633	1817
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	40	40.096310	24384	3249
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.078641	22742	6085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.038115	7797	1526
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.569543	11922	6097
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.015996	4430	776
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.354021	438	56	9.15	synth with cache (only 1: intros H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.186608	72913	3819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.110845	28340	7654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.146629	56190	3930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.256611	40937	4885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.096665	35576	2501
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.238760	29345	2398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	2.442587	3799	349	0.0.0.0.0.0.30	synth with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	41.440025	22495	1594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	1.296299	1228	211	0.0.1.14.0	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.169674	10313	5102
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	40	16.025734	6028	1485	2.2.4.3.0.0.1.0.0.0.6	synth with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: intros; only 1: simpl; only 1: auto; only 1: intros H; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	1.929367	1332	347	0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.665730	11870	4564
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.107413	12790	2061
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	41.003751	30667	5522
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.022303	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0.298626	21	5	4	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.228299	9	2	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.091435	28795	2778
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.065024	23506	2150
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	40	40.070331	8915	6693
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40	40.059324	12674	6952
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	40	40.122494	35668	4321
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	40	40.112631	24927	7278
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.142220	52439	6280
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.076337	15882	6995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.061903	17855	3323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.055820	15379	4546
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.101287	13535	2129
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.084630	24026	7300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.111582	39448	5094
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	6.068797	3434	949	0.0.1.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.125599	42312	7924
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.446202	96111	3876
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.072004	22773	2920
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	40	3.001430	1894	520	0.1.2.0.1.5.0.0.2	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	40	40.495333	15081	3730
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.095240	30865	5145
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.886343	1814	357	4.10.5.0	synth with cache (only 1: intros x y z; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: inversion H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.135298	15	4	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.052234	11993	5452
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.046964	11	8	0.1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.019734	3	2	1.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.031659	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.006776	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.752193	916	130	8.11	synth with cache (only 1: intros a b; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.150573	50232	4797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.157439	174	25	13	synth with cache (only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.043985	8	2	6.0	synth with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.079109	18993	5933
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.072982	16575	3067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.023640	3064	477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.672768	2409	390	1.1.6.3.8	synth with cache (only 1: intro n; only 1: intros x y z; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	0.291471	449	92	13.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	40.315122	3811	908
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.151607	57313	5383
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	41.105423	27813	3036
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.830033	198	67	11	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	21.560166	1949	859	0.0.2.0.1.0.0.1.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.261733	49019	4580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	2.379849	2702	407	1.21	synth with cache (only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	40	11.341808	8985	1943	0.0.1.3.0.1.11.0.0.2	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.164046	12907	2328
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.065644	23688	1656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.112076	42270	3490
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.051502	4334	572
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.091730	32788	2226
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.085111	9132	3183
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.015929	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.018123	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.906224	33113	5476
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.352734	115	18	0.9	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.137541	33363	5798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	40	2.668243	3964	281	0.0.0.3.0.1.27.4	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.046457	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.165945	46325	4293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.076559	25804	1913
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.104136	20581	7221
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	40	40.107521	37111	6027
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.045159	10339	4522
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.094478	12757	657
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.421140	28097	2445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	42.211569	15059	2303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	6.694362	12137	723	0.0.0.33.26	synth with cache (only 1: intros x; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.309717	11418	4414
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	40.146199	10095	1238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.841183	13715	2171
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.020464	8	2	6.0	synth with cache (only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.077417	28060	3121
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.054642	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.025977	4	3	0.0.1	synth with cache (only 1: intro n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.077576	25934	3027
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0.728670	240	70	10	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	32.521665	13627	3493	0.0.0.1.1.2.5.1.1.0.0.0.2.3	synth with cache (only 1: intros m1 m2; only 1: functional induction (merge m1 m2); only 1: intros; only 1: auto; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: intuition; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0.116814	13	3	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.205734	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.065594	21067	3992
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.608669	14	3	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.225683	24	4	5	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.048606	10432	7021
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	3.459799	718	130	10.3	synth with cache (only 1: intros n m; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	29.227019	2106	514	0.7.3.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: repeat rewrite Rrepr_plus; only 1: repeat rewrite Rrepr_mult; only 1: repeat rewrite Rrepr_plus; only 1: rewrite CReal_mult_plus_distr_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	40	40.087408	23989	7172
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.121168	15134	5485
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	21.896144	2044	898	0.0.2.0.1.0.0.1.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	40	40.375108	31610	3856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.076669	19058	4988
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.115587	40317	4472
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.104545	37154	5429
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.122682	44516	4711
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	9.255427	7786	1133	26.4	synth with cache (only 1: intro n; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.112386	38961	6840
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.117764	35335	4848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.131732	48657	4030
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	40	40.097323	33146	4377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	0.031787	14	3	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.156663	48480	4293
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.124963	34768	6047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	40.115111	39638	5269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.024700	7	3	0.3.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.007792	3	2	0.1	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	1.254205	771	263	0.0.2.1.0.0.0.1.0.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: simple induction r0; only 1: simpl; only 1: intros n IH; only 1: reflexivity; only 1: intro; only 1: vm_compute; only 1: intros b Hb IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.009584	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.077090	18478	3274
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.184668	489	41	3.23	synth with cache (only 1: vm_compute; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.019007	3318	728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	1.254474	870	273	0.1.5.4	synth with cache (only 1: destruct m as [| r x e l h]; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	1.434758	1138	302	5.0.0.5.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: discriminate; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.005219	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.111114	26	9	1.0.3	synth with cache (only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	40	41.181514	17158	4230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.142679	48144	4567
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.170884	4866	639
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.430641	6621	1509
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	40	40.077505	26764	3941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.107125	36469	5306
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.040524	6856	2171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	8.628655	10135	1681	29.1.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	40	8.063336	6918	1030	27.2.2.0	synth with cache (only 1: induction l; only 1: intro H; only 1: easy; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.055344	9895	833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.083358	26161	5870
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.338473	147879	7951
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	40	41.232678	9233	1614
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	23.324455	18241	3515	13.11.6	synth with cache (only 1: intros p Hp IH n m; only 1: apply Rge_le; only 1: now apply growing_prop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.034420	9827	1934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.084156	26704	4311
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	40	40.980462	16610	3844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.155737	56594	4687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.080085	27628	2430
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.079232	27513	3066
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.336282	22644	5209
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	3.316690	516	69	0.16	synth with cache (only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	1.863132	290	61	0.0.7.0.0	synth with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.103372	33398	2611
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.216953	31378	4881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.104699	23134	2679
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.115702	16014	2865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	3.266694	2045	225	6.16.0.0	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.146754	54964	3462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.028708	4	4	0.0.0.0	synth with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.436511	13462	4358
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.071809	24599	3097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	13.710172	11181	2648	0.29	synth with cache (only 1: rewrite <- Unsigned.to_of; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.122202	38033	4514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.462308	19403	2651
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	40	40.066742	4461	1562
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	25.862994	28659	3144	9.1.23.7.4.4.13	synth with cache (only 1: split; only 1: intros n; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.030022	10	2	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.055458	9835	1218
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	0.028057	10	2	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	40	40.079550	14915	8267
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.400472	62814	4172
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	4.822963	603	156	4.9	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.097749	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	40.022837	2015	1214
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.151455	16407	6225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	40	40.437021	33836	5255
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.101236	19009	3629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.010745	2	2	0.0	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.076779	25765	2807
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	40	0.295617	82	24	0.1.5	synth with cache (only 1: simpl; only 1: intro n; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.073940	28172	1884
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.608783	8019	1679
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.083672	26198	6136
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.134513	43799	4357
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.565071	30904	3177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.025616	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.024528	3689	859
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.074033	17566	2766
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.071926	24032	3627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.072306	25569	2607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.118904	28735	4336
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.054351	8613	2216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.045440	13161	1088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	0.356183	357	80	5.7	synth with cache (only 1: vm_compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	6.110542	4558	302	0.2.10.22	synth with cache (only 1: intros n Hn; only 1: apply Zeven_bool_iff in Hn; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	0.658178	497	141	1.0.1.2.0.3.2	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.216164	4093	598
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	40	41.014599	15239	6080
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	1.772194	334	118	1.0.0.0.5.0	synth with cache (only 1: intros; only 1: destruct z; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	40	40.422726	9794	1689
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.123715	44440	5011
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.186062	14153	5334
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	40	40.137566	50645	5393
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	40	0.012778	4	3	0.1.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.118237	30069	4294
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	40	42.167750	2713	626
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.125981	50351	1387
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.060791	17748	2526
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	40	2.277622	801	204	1.0.11.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.856290	39884	5119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.126208	26664	6689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	42.612307	17238	1880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.157879	54289	3915
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	7.468381	1180	262	0.4.0.4.4.0	synth with cache (only 1: intros; only 1: intuition; only 1: subst; only 1: ring; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	1.741789	669	226	4.3.2.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	41.058520	17306	4198
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.016617	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.005379	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.051266	15	6	2.0.1	synth with cache (only 1: intros n m; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.132455	1016	155	1.15.0.0	synth with cache (only 1: intro n; only 1: red; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.114712	3419	886
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.063594	20778	2557
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.067676	15844	8452
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.105105	33110	2884
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	20.084479	2759	1486	1.6.6	synth with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40	40.087254	11052	2692
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	1.004857	342	73	0.1.0.0.1.11	synth with cache (only 1: ring_simplify; only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.216421	21727	4027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.104209	33801	3704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.090069	10457	1072
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.092081	31067	2841
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.028819	5	4	0.0.0.1	synth with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.138002	51369	4787
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.728555	12021	4148
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.080186	23758	3225
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	36.408031	1770	1106	1.2.0.0.2.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: trivial; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.084222	25783	4204
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.024981	7763	2345
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.266163	110211	5830
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.051855	6411	1027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.036488	13	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.009718	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	40	40.152985	39031	7378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.521474	75383	4660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	1.756560	727	128	1.1.8.5	synth with cache (only 1: intros x y H a; only 1: intros E; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.037193	6990	877
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0.095514	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.029128	11	3	1.1	synth with cache (only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0.121251	22	5	6	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.259535	34	11	3.3	synth with cache (only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.127986	6	2	4.0	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.130230	18260	3800
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40	40.107143	16582	6534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.264230	61	14	10	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.286738	46382	5777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	40	1.557833	419	139	9.0.0.2	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	40	40.118307	40743	5326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	40	0.038159	12	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	6.626548	4521	605	15.12	synth with cache (only 1: intros x y H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.212562	12	3	0.4	synth with cache (only 1: vm_compute; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.072334	21054	4758
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.059895	14729	2835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.544792	31	9	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.055435	12476	7515
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.098419	34435	5118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.532843	16	4	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.865525	141	39	1.7.0	synth with cache (only 1: intuition; only 1: apply inter_1 with s'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.117738	44226	4337
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.344588	99459	1339
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.058883	19288	2761
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.262221	111951	4429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.064800	17921	3495
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.077074	23916	4205
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.211848	9738	1702
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.020209	2	1	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.020005	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	40	19.485930	7157	2911	1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	6.828240	1575	273	3.14.4	synth with cache (only 1: intros; only 1: contradict H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	40	40.104936	26124	7964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.103635	34939	4463
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.177488	68701	5741
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	3.334025	1014	322	0.1.1.0.1.0.1.0.0.0	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.160287	16941	5017
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.120083	16851	1859
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	40.155998	42247	3676
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.152341	57547	3867
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	40	40.086646	24782	3218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.063129	17407	4172
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	40	40.222592	40105	6060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.381693	11604	833
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	40	40.726120	24696	4514
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.468452	12148	3170
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	41.101941	28151	2675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.135364	40149	3103
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.040970	8234	2827
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.115194	30523	3455
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.112941	23581	2657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.211618	10714	3167
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.426843	236	95	0.0.0.0.6	synth with cache (only 1: intuition eauto  2; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.006522	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.029039	6	3	1.2.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	40	0.586539	292	65	0.0.0.0.1.0.5	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	1.246595	25	9	4.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	2.283663	3918	189	0.48	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.006289	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.104623	34172	5319
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.104279	3065	915
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.065579	16614	6678
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.022499	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.023702	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.006761	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.139337	11952	3756
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.006450	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.197520	12656	1978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.006441	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.260788	102043	4419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.016715	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.005914	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.034502	9663	739
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.006312	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.249422	4	3	0.1.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.009792	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.021064	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.798475	273	79	0.4.1.4	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.029284	6	3	0.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.008515	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.084318	25047	3541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.006489	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.007221	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.168303	290	40	0.12	synth with cache (only 1: compute; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.007054	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.122125	7	3	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.103349	31677	9035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.009202	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.018557	6	3	1.1.1	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	3.462549	1012	460	0.0.0.0.1.2.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.174958	36	21	0.1.0.1.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.505688	12295	4138
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.247576	19294	4867
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.045949	12678	3691
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.024384	2727	980
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.137343	51895	4037
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.261512	61	34	0.0.0.2	synth with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.119384	42500	6346
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.549767	38319	6462
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	6.664377	3608	448	0.8.4.12	synth with cache (only 1: induction x; only 1: red; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	40	0.015248	10	6	0.2.0.2	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	40.140847	20712	4850
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40	40.074067	18902	6071
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.040427	10128	2887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.008030	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.082694	25219	4329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	29.645855	23158	2891	1.0.16.2.1.14.2.1.0	synth with cache (only 1: intros m x; only 1: functional induction (L.find (elt:=x) m); only 1: intros; only 1: now f_equiv; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.525586	40532	5228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	19.867292	12608	1590	0.0.28.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.058393	14690	3568
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.110798	39585	3916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.073603	19372	8190
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	40	9.612668	50560	2959	0.42.13.17	synth with cache (only 1: intro H; only 1: intros; only 1: apply H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	2.145997	1943	80	1.1.0.0.55	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.056569	13522	6638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.221422	45264	4074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.155200	61105	3903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.030341	13	4	0.2.2	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.069774	19939	6491
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.065423	20737	2894
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.726655	1308	136	2.23	synth with cache (only 1: vm_compute; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.052828	12313	3034
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	18.334186	20993	1688	3.1.4.0.1.2.5.2.1.17	synth with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: split; only 1: intros EQ; only 1: intuition; only 1: intros EQ; only 1: apply add_2; only 1: auto; only 1: intro n; only 1: intuition; only 1: exact (add_3 E H)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.303166	39796	2919
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.011085	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.023856	7	2	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.027854	10	3	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.044735	10	3	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.007271	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.007022	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.007031	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.022342	6	4	1.0.0.1	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.007196	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.049254	5572	826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	40	40.105008	23629	7330
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	17.865657	12674	2334	6.0.3.2.7.1.2	synth with cache (only 1: induction x; only 1: induction y; only 1: intro H; only 1: unfold eq; only 1: vm_compute; only 1: intros (x1, x2) (y1, y2); only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.988534	6076	481
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.330255	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.038821	6	3	1.1.1	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008191	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.020779	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.009050	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.008896	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.286201	26	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.011373	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.012128	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.012131	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.125379	23	5	6	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.123837	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.069806	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.122700	41051	6465
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	23.086557	939	310	10.2	synth with cache (only 1: intros x; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.095140	13241	2315
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.018062	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.284106	75	38	1.2	synth with cache (only 1: intro r; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.079782	21958	1977
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	0.260648	79	27	6.1	synth with cache (only 1: intros x y; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.064986	17788	5003
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.022225	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	40	40.153520	15486	1623
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.128866	46490	1264
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	40	40.092646	16005	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.077247	23732	4208
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.089974	9101	1898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.716576	387	76	1.6.0.1	synth with cache (only 1: intro n; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	40	40.880996	53015	6741
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	40	40.634830	25671	4993
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.064133	10077	1220
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.172084	11909	3874
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	40	40.081878	11515	1212
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.081823	23510	5349
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	40	1.854649	487	216	0.0.0.1.0.1.0.0.0.0.0	synth with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.475798	14251	1824
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.143541	20056	2638
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.028825	3973	1209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.057143	18192	1763
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.094051	28712	5969
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.102204	12956	1767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.055059	14502	4138
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.082246	3910	601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	41.170365	73343	1635
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.005844	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.006318	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.067667	7	3	3.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.006328	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.025213	4	2	2.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.006114	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.006173	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.006192	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.065537	21771	2410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.254477	17098	5026
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.105500	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.072480	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.692245	12341	3975
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.260873	23670	2380
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.046208	11595	2734
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	10.976361	2422	315	8.22	synth with cache (only 1: intros a n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.038537	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.284406	13876	1443
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	4.172347	798	413	0.0.4.6	synth with cache (only 1: destruct pi2_int; only 1: prove_sup; only 1: Lra.lra; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.188179	33366	3138
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.074491	24703	4149
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.074774	19732	6091
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.843190	56	34	0.1.5	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.089223	11	3	0.5	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.065991	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	40	40.090573	32376	2334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	40.078677	25162	3651
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.086298	25416	5236
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	0.067286	15	12	0.0.2.0.0.0	synth with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	37.945630	10217	4554	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: now discriminate Hb || clear Hb; only 1: destruct a as [| a| a]; only 1: now destruct Ha || clear Ha; only 1: compute; only 1: now split; only 1: now destruct Ha || clear Ha; only 1: unfold Z.rem, Z.quotrem; only 1: pose proof (N.pos_div_eucl_remainder a (N.pos b)) as H; only 1: destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: now apply H; only 1: now destruct Ha || clear Ha; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.121390	20319	4647
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.102340	20	15	0.2.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.638818	556	117	0.1.0.4.1.0.1	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intros; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.052399	10323	4547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.160155	7	4	1.2.0.0	synth with cache (only 1: intros; only 1: zify; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	2.617306	837	389	0.6.2.0.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intros Hab; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.138835	31	16	0.4.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.064784	15850	8125
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.383141	151913	15998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.087050	28623	3093
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.071346	20329	4779
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.110699	26670	7949
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.027093	8	6	0.0.0.1.0.1	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.056690	16723	3170
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.049626	14759	2103
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.114339	40838	5002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.113922	34839	4655
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.124159	46247	3417
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.843618	407	85	0.3.5.2	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	0.230428	67	18	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.035278	9188	1295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	40	40.095331	15898	2206
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.240890	3880	404
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.007410	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	41.202143	8450	1284
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.007291	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.186597	4	3	0.1.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.007326	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.018551	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.007078	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.006613	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.006985	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.102890	36941	5195
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	40	40.099694	18249	5767
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.099250	7926	793
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.039951	6427	1229
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.116840	19382	3961
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.161148	59780	3978
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	40.162293	20403	2780
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.585274	9188	1997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.089703	27931	4415
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.067817	17474	8378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.389877	8365	2184
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.111827	19905	1855
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.137819	8135	1110
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.006321	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.006370	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.005169	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.005086	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.005198	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.048780	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.088196	23158	3861
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.320959	6294	1208
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	0.441242	174	28	1.0.0.10	synth with cache (only 1: split; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.480832	24282	3683
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.004224	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	40	0.018300	4	1	3	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	40	40.815497	52138	5043
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.041819	12226	1751
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.020955	2528	812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.072863	24539	2046
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	14.327692	10288	1381	0.0.0.1.0.0.2.2.1.8.4.1.11.2	synth with cache (only 1: intro; only 1: destruct x; only 1: split; only 1: simpl; only 1: auto with zarith; only 1: Z.order'; only 1: simpl; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.063582	23041	364
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.129766	17926	3641
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	41.410185	20411	5202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.121570	43908	3522
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.100090	22427	4097
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.205456	6227	642
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	4.744832	539	68	11.4.1	synth with cache (only 1: intros; only 1: cbn; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	40.274296	26568	5800
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.338748	49128	3617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.061957	17828	4355
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	8.398905	9646	1031	25.4.3.1.0.7	synth with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: cbn; only 1: induction l as [| r0 l Hrecl0]; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.097231	26572	5141
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.335819	27931	3161
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40	40.069189	19561	6817
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.143253	15392	3473
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	12.898990	4620	1019	2.21.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.063576	17308	7897
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.045857	27	7	2.3	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.099030	24453	5718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.069931	21138	4674
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.634142	26731	3764
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	40	40.066480	17454	3958
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	40	1.239824	466	165	2.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	40	0.575445	163	67	1.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.157712	15172	3819
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	40	1.182348	391	112	1.0.0.0.1.5.0	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl; only 1: auto with zarith; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.006049	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.041260	10149	1307
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.142347	22909	2561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.128360	48029	6739
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	40	2.790442	1173	388	0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.371067	142413	12627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.067337	21990	3262
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	34.404604	53574	3217	4.0.51.0	synth with cache (only 1: split; only 1: eauto with *; only 1: destruct 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.021495	6	3	1.2.0	synth with cache (only 1: intros n; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.009160	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.067014	18484	5390
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.143956	35296	8078
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.070918	21542	4524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.065896	20233	3458
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.144633	42404	3222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.166928	38827	5542
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.134964	52663	4874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.066705	18398	3204
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.138682	52106	4800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.205913	82874	5651
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.328814	5817	602
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	0.092261	61	16	0.7	synth with cache (only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.090750	28472	6451
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.080167	26299	4106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.110247	17726	2154
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	2.337011	613	128	15.1	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.196838	85131	3142
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	40	40.218168	15998	3441
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.037254	2183	903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	8.924898	7717	728	0.24.0.5	synth with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.136426	12983	2402
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	40	2.126150	997	308	11.0.2	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: intros A; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.151268	39	7	5.2	synth with cache (only 1: intro m; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.412838	129	37	0.6.1	synth with cache (only 1: intros a b Hb H; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.070330	21952	3821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.063099	18395	4423
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.973593	11288	7151
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.152099	61692	4604
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.085446	24286	4135
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.074163	17872	4244
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.023472	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intro H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	40	0.022321	5	3	1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.007723	2	2	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.010949	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	23.474892	15514	4142	0.0.0.9.0.0.0.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.073178	10672	3954
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	7.924057	1827	669	0.0.0.0.3.1.0.2.0.2	synth with cache (only 1: induction l as [| x l]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intro y; only 1: destruct eq_dec as [->| Hneq]; only 1: rewrite IHl; only 1: intuition; only 1: rewrite IHl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.100836	19729	2279
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.069740	23641	3570
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.092171	11139	935
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.080184	21823	7238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.097601	34247	4259
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40	40.686081	19631	3542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.150133	13293	2953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.010739	3	2	0.1	synth with cache (only 1: apply fold_1b; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.032881	2126	491
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	40	40.180580	32559	2432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.004108	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.241737	14521	2466
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.897340	717	417	0.0.0.0.3.7	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.139599	13765	4996
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.191660	84	47	0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	40	40.815021	29078	5283
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	0.011057	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.059251	12309	7329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.023771	5	3	0.0.2	synth with cache (only 1: induction m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.105625	26809	3131
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.360984	32755	4434
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	40.230070	92161	3811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.106988	10447	3596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.131692	45766	8285
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.599402	26799	3098
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.024764	4	2	1.1	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.024105	13	3	3.2	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.023158	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.052731	10363	2717
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.028285	10	3	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.111270	31836	9711
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.023373	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.022685	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.020091	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	40	40.048878	14021	3124
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.027801	11	3	3.0	synth with cache (only 1: intro n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.019329	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.027353	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.021717	5	2	2.1	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.032128	6	5	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	2.319484	281	133	1.2.6	synth with cache (only 1: intros n m H; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	1.350554	1508	205	1.1.0.16	synth with cache (only 1: Nat.cases ltac:(n); only 1: simpl; only 1: Nat.order'; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.019198	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	40	0.107836	46	23	1.2.1.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: intro; only 1: discriminate; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.046563	6	4	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.090567	21747	7911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.082252	29205	2314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.063266	18778	3227
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.083579	22057	4241
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.071612	22061	3751
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.117586	38233	8351
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	2.026197	1119	155	0.0.1.0.1.0.1.0.16.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.056365	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	40	1.585527	512	155	0.7.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.598653	115	61	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	40	40.084029	28085	1278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	18.075395	13798	3443	17.16.0	synth with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.165942	57006	4284
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.120585	31121	3374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.054127	13810	6652
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.046017	11	8	3.0	synth with cache (only 1: intros x z; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.209342	79888	3056
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.020272	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.167089	30201	5140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	2.163199	2082	377	9.3.3.6	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.095778	26892	6565
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	0.020309	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	0.020995	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	0.035235	9	2	3	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.200553	71418	5348
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.084646	23772	6221
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.122176	58	17	8	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.064394	6	2	4.0	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.097317	5	3	2.0.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.026498	10	2	4	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.060790	24	5	4	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.178942	6267	2389
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.035080	9	2	3	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.025225	6	2	1.3	synth with cache (only 1: apply fold_1b; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	0.215939	106	51	1.0.0.0.2.1	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.093768	25439	4197
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.137003	23930	5051
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	40.154863	56828	6339
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.964830	266	109	0.0.4.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.342513	9775	3160
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	40	40.308303	13840	2158
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	0.026939	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.088360	9569	2506
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	0.023782	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	0.026004	9	2	2	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.022276	3	1	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	0.026580	5	2	0.3	synth with cache (only 1: intros x y H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	40	40.068030	20229	2812
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.069145	21645	2868
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.101754	30712	10588
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.099414	30373	3399
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.020723	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.051944	12693	6017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.076658	20735	6692
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.164822	55114	6239
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.184444	69810	10564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.470421	7932	2168
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.082259	22001	5754
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.120629	49471	3849
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.283526	206	54	12	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	41.076912	46956	7463
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.023291	12	3	1.4	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	23.390647	5685	1086	0.1.0.6.2.6.3	synth with cache (only 1: intros z; only 1: unfold toRad, toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.079832	17834	1246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.047543	12	4	0.0.2	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.181876	20626	2401
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.055772	13279	1351
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	1.084386	620	197	1.3.1.5	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.009945	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.007119	2	1	1	synth with cache (only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.120575	47151	4480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.181524	15670	4040
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.098096	16108	2879
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.445825	261	69	0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.124222	30720	6867
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.006971	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.070347	11045	1897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.126879	45952	4544
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.110659	22	13	0.0.0.1.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_In; only 1: destruct (multiplicity (list_contents l) a); only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	1.302583	1711	142	2.32	synth with cache (only 1: intros P Hrec p; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	1.512595	1623	138	2.33	synth with cache (only 1: intros P Hrec p; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.086502	27189	5194
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	40	0.018294	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	40	1.040518	979	231	12.1.6	synth with cache (only 1: constructor; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	40	0.086766	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	21.389874	12342	2044	0.12.0.3.6.4.1.0	synth with cache (only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: elim H; only 1: intros; only 1: decompose [ and ] H1; only 1: clear H1; only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	40	0.099365	323	21	0.24	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.042761	4	3	1.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	40	0.016120	4	3	0.0.1	synth with cache (only 1: constructor; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.571674	287	73	1.9.1	synth with cache (only 1: intros a n Hn; only 1: intuition; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	40	0.008593	3	2	1.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.047041	47	12	7.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.320247	40	13	2.4	synth with cache (only 1: intro n; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	40	0.009779	6	2	4.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	40	0.017142	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.113118	32879	3587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	43.217056	21437	815
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.050946	8128	4258
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.505756	4144	422
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40	41.552423	23912	4990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.026173	15	4	2.2.1	synth with cache (only 1: intros a b; only 1: destruct a, b; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.165999	30193	7604
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.129709	14849	5458
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	40	11.182034	6422	1966	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: induction m as [| m Hrecm]; only 1: right; only 1: trivial; only 1: elim (Nat.nle_succ_0 _ H0); only 1: cut ((m <= n)%nat \/ m = S n); only 1: intro; only 1: elim H1; only 1: intro; only 1: apply Rle_trans with (Un n); only 1: apply H; only 1: apply Hrecn; only 1: auto; only 1: intro; only 1: rewrite H2; only 1: right; only 1: reflexivity; only 1: inversion H0; only 1: right; only 1: reflexivity; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.479610	211	75	0.0.0.0.0.2.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	1.242298	3272	108
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.006611	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.286621	20782	3021
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	0.072968	97	22	0.2.1.0.3	synth with cache (only 1: intros n H; only 1: constructor; only 1: intros y [H1 H2]; only 1: elim H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.058490	17078	4047
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.748920	18138	4569
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.039230	6	4	0.0.0.2	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	18.018851	9499	1724	0.27.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite !Z.leb_le; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	12.326783	4954	1292	4.4.0.1.11	synth with cache (only 1: induct s x; only 1: intuition; only 1: intuition; only 1: intuition_in; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.318584	20686	6579
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.275483	13344	1392
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.068429	6	5	1.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.031646	6737	3283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.073633	13606	4734
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	40	0.034150	6	4	1.0.1.0	synth with cache (only 1: induction a as [| p]; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.157467	59891	5208
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	40	0.013597	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	3.807333	921	80	23.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.006376	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.178021	61173	5795
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.011819	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.027092	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.093323	31169	4621
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.166885	5328	1532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.084317	26897	4887
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	3.885732	673	155	1.1.2.2.4.0.7	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: auto; only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.952263	164	39	0.4.0.0.5	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.160385	6	4	0.0.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.303863	126498	5765
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	40	40.038514	9867	641
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	0.775124	383	32	16.5	synth with cache (only 1: intros x y H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	3.260993	2056	303	0.29	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	1.174006	3627	78
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.026531	3	1	2	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.354467	6406	2526
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.026707	5738	852
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.046686	12774	2254
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.911806	347	98	7.0.2.1	synth with cache (only 1: generalize 1; only 1: unfold Z.pow_pos; only 1: intros; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.059054	13061	8067
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.278580	18262	2425
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.033954	6287	962
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.044425	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.004428	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.067239	21562	3065
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.112251	35745	5508
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	29.251395	27409	2142	5.0.5.0.2.0.43	synth with cache (only 1: destruct x; only 1: intros H; only 1: auto with relations; only 1: symmetry; only 1: now subst; only 1: symmetry; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	0.116303	7	6	0.0.1.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.044521	8	6	0.0.0.1.1.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.127379	41089	5767
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.040618	6	6	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.033958	3	2	0.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	0.044965	17	4	2.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.017919	9	2	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.079466	26746	2345
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.205659	63906	9669
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	0.424522	205	66	0.0.1.0.0.0.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.152380	39492	3998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.075355	24045	5558
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.124811	43829	4453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.075630	23584	3228
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.166550	33983	2949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.077716	23006	4973
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.203259	81376	2271
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.028655	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	40	40.129581	46817	2217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	40	40.195797	72578	5272
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	40	40.069455	20820	2811
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	40	40.078232	6295	719
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	40	3.332293	3662	516	9.1.2.0.14	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	0.384871	260	50	3.0.0.14	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.086215	27417	4222
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.231571	25101	1404
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.291742	110502	6531
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.066183	19613	2367
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.098168	26111	8199
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.062603	21617	1148
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	41.649857	1695	346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.059727	18855	1546
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.111387	56	15	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.159480	46816	4316
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	40	8.434370	5611	1037	2.0.0.2.0.0.0.0.0.16	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.386351	8706	635
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.012148	4	2	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.006885	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.717452	751	211	0.0.0.5.3	synth with cache (only 1: split; only 1: intros H; only 1: trivial; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.103150	27673	5571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.009686	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.060450	108	9	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.145435	60420	3404
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.021961	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.371869	36932	8635
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	4.930716	2506	452	0.21.1	synth with cache (only 1: repeat intro; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	40.257817	16322	2104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.301212	155	60	0.2.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.044901	10722	1038
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.107069	18059	2814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.097330	28132	5572
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.081164	19714	2409
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.234407	95405	5934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.012777	4	1	3	synth with cache (only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.007308	2	1	1	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	3.420493	3031	416	0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.098699	33167	3196
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.027063	2	1	1	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	30.027066	20825	2795	0.0.0.1.0.0.0.0.1.0.20.0.0.3.0	synth with cache (only 1: intro n; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.085270	25751	5804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	1.010912	593	167	0.0.2.8	synth with cache (only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	42.600451	6773	1287
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	1.164018	1377	253	4.2.10	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.089899	17458	7297
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.114859	37153	8276
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.114971	34464	3960
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.116014	136	30	9	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	40	9.590221	19312	1300	1.1.0.20.24	synth with cache (only 1: intro H; only 1: induction n; only 1: auto; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	0.293108	59	26	2.4	synth with cache (only 1: unfold D_in; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.122027	48053	4878
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	1.811166	1222	405	0.0.0.1.0.0.0.1.1.0.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.076990	25264	1765
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.524826	19029	5731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.401905	7474	1374
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.077957	19784	4814
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.120537	31783	2615
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.039849	12	5	0.0.0.1	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.157598	60480	4803
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.247083	17068	3497
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.063800	11730	3031
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.215191	5290	2105
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	3.730288	1577	644	1.1.0.2.0.5	synth with cache (only 1: intros f g D l x H; only 1: unfold D_in; only 1: intro; only 1: unfold limit1_in; only 1: elim H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	40	40.024101	5474	1502
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.005375	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.006322	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.004600	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	40.131863	44448	3129
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.095441	27477	6420
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	40	40.091050	27140	3833
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	38.396999	79907	2325	94.12	synth with cache (only 1: intro p; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.564787	85	26	2.3.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	4.485745	1829	240	0.4.2.2.11.1	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	8.173292	4163	997	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.063469	13891	7175
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.062173	19423	3696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.017946	4	4	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.088990	45	15	0.1.2.0.1	synth with cache (only 1: destruct (n ?= m); only 1: intros; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.088731	21716	3666
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.023666	6	5	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.453624	192656	3502
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	40	13.622912	11437	1711	0.0.6.0.11.3.2.1	synth with cache (only 1: constructor; only 1: destruct (CRltLinear R), p; only 1: destruct (CRltLinear R); only 1: intros; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.087606	25591	6163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.047205	12383	1436
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.041594	8741	583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	41.285662	8914	2552
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	40.692783	34385	3807
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.191649	30508	8489
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.098854	90	14	0.8	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	40.095748	11952	1850
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	5.909533	1736	276	3.4.1.8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.767440	21286	5902
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.006921	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.367767	32287	6883
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	1.089711	535	82	0.4.0.4.4	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.202962	13677	3221
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.060570	17045	4348
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	3.822422	5225	95
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.183315	66745	4429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.346961	16025	3296
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.457445	17879	3298
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.386106	625	145	0.0.8.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.989624	15872	2539
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40	40.062887	22464	2650
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.125281	40519	6910
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.073354	21348	5751
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	40.120428	41221	8219
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	40	0.030999	11	4	1	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.118797	42671	4138
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.096395	32114	3881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	7.716194	6716	1360	0.0.5.15	synth with cache (only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.091645	26311	6014
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.145037	5870	1491
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	40	5.795082	2803	508	0.3.0.6.3.0.6	synth with cache (only 1: destruct x; only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.133365	40475	10577
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	0.326707	176	32	0.6.3	synth with cache (only 1: intros a0; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.096085	30131	1993
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.262230	97433	3114
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.484383	52005	3189
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.022622	3	1	2	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.635956	297	155	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.220079	19539	316
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.383313	5768	2059
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	40	0.242630	76	14	12	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	40	0.145605	21	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	2.118442	574	99	0.2.9.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.069497	23046	3112
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.103029	24732	6545
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.065904	15851	8121
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.981117	149	49	4.0.1.1	synth with cache (only 1: red; only 1: intros; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.424684	183	58	1.1.0.1.2	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.553825	45	13	2.3.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.022350	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.190550	35999	2696
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.127978	27721	5704
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	1.954167	1231	195	0.1.0.2.5.7	synth with cache (only 1: intros a b n; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.754811	21	6	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.151566	29844	5334
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.190724	94	24	0.0.0.3.3	synth with cache (only 1: intros a; only 1: qc; only 1: red; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.056648	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	35.382893	44094	3198	0.1.4.2.3.2.3.0.63.31	synth with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: intro H; only 1: Z.swap_greater; only 1: subst; only 1: Z.order; only 1: now Z.swap_greater; only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.159283	20477	2892
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	6.842723	1265	371	0.0.0.0.0.0.0.8.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.171130	19960	1678
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.081694	26367	4273
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.165692	44571	2970
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.383581	143	52	0.5.1.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.093337	23877	8067
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	2.587660	307	110	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.142383	48064	4273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.216865	77582	6353
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.232766	26595	4556
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.649618	1282	336	0.0.0.0.11.1	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.153642	52657	4781
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.136365	46168	8552
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	40	40.114814	8437	2441
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	10.024725	36726	706
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.007968	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.090965	22350	5426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	3.322055	2977	436	2.1.10.9.0	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.519053	15882	886
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.200855	67552	6701
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.069869	21050	3326
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.048888	4225	1989
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.065636	11013	3299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.312508	59	25	0.0.0.0.7	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	40	3.805881	1001	213	6.0.0.0.1.3.4	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	40.102467	22632	695
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.115757	36446	5035
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.095586	33394	4529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.062402	20400	2388
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.104814	38869	5562
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	40	0.369136	22	11	0.0.0.1.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.090304	29266	2510
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	40	41.759362	3212	504
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.173872	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	40	0.204695	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	40	0.008111	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	40	40.202259	38165	2895
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	40	0.039319	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.034806	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.090288	7572	486
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.427721	42336	8372
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.158237	13	5	1	synth with cache (only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	40	0.046105	4	4	0.0.0.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.008048	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	40	0.029967	3	3	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.131774	46970	6270
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	40	40.135020	15477	3373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.100671	11803	687
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.123129	46290	5940
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.154393	61223	1994
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.019370	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.088838	27311	2768
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.134676	16786	2797
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.026312	2	1	1	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.082144	23715	4962
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.080092	21517	3726
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.111747	35592	4796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.036055	10537	773
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	40.104914	33448	3773
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	40	40.078886	26946	1711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.669426	299	78	2.4.0.1	synth with cache (only 1: intro n; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	5.001169	1770	365	13.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	7.386136	5366	711	1.0.4.24.1	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	9.903012	21984	697
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.119475	46814	3967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.113533	33164	3735
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.100633	8606	1068
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	40	42.573250	9541	2328
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.075152	18540	5074
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.504447	10239	5979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.170217	7434	2071
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.045283	12054	2813
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.289858	24956	5991
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.242432	17482	2399
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.088953	73	23	0.4.2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	40	40.102867	15827	4938
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	7.589357	853	254	10.0.1.0	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.137035	52181	2728
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.007113	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.063402	4	1	3	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.056463	15901	1781
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.365104	28886	5971
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	40	8.361063	16410	1464	3.0.1.2.0.0.5.24.0	synth with cache (only 1: intros A B R H; only 1: pose (D := (A * B)%type); only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: destruct (H x) as (y, (HRxy, _)); only 1: easy; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	8.435587	5944	1205	6.0.0.12.1.0	synth with cache (only 1: intros; only 1: unfold Empty, empty; only 1: induction 1; only 1: simpl in *; only 1: discriminate; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	6.014890	1577	374	13.4	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.321596	23923	2812
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.093648	28497	4698
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.328464	2416	495	12.0.0.0.0.0.4	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	23.426036	7540	1200	0.2.0.10.0.4.2.2.0	synth with cache (only 1: intro n; only 1: qc; only 1: rewrite Qmult_comm; only 1: red; only 1: simpl; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.096351	30857	4415
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.044316	8	4	0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.926999	847	188	0.0.5.2.0.1.2	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.084228	25921	4754
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	40	0.494952	125	45	0.1.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.108450	32246	3138
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.004561	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	4.618617	3212	73
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.156435	66133	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.074262	18690	6816
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.667145	1792	328	0.14.2.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	1.535997	233	70	0.2.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.150268	45764	6537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.469969	12785	1559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	0.749333	95	11	14	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	6.037138	711	65	24.0	synth with cache (only 1: rewrite rsub_def; only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	1.382808	188	62	0.2.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	40	40.094162	37375	1723
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.063954	12376	8941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.069176	21116	2707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.275651	11625	3265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.056278	41	11	8	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.459038	142	65	0.0.0.0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.133897	69	27	0.0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	40.241517	48860	11108
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.346592	12223	1686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.113488	24978	3852
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	0.782385	4437	87
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.079338	23557	4817
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	40	40.447127	64355	3041
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40	40.309462	9768	1636
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.090187	12484	2567
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	40.153362	53144	6548
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40	41.089926	19608	2929
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.203085	10767	4837
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.347185	11354	2071
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	40	40.170096	66643	7242
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.227888	84815	6776
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.086735	30063	3752
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	40	40.070999	19238	4678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.082670	23002	7545
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.171761	431	171	1.3.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.019137	2	1	1	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.269941	106637	5493
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.071258	8987	557
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.432557	41300	2798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	9.455372	5128	971	31	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.006044	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.020969	9	2	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	40	40.684645	8774	2691
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.013564	11	2	3	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.088462	29748	2414
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.456792	163	19	14	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	8.546600	6601	1014	7.16.2	synth with cache (only 1: intros a H; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.112913	38578	6685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.046145	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.319436	2018	651
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.048161	15834	1326
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.396269	168	24	12	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.042888	12	2	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.198923	28227	2131
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.104789	34003	3339
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.046501	13865	2246
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	40	40.388034	12062	1405
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	40	40.115626	41503	3143
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.203101	18736	2444
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.369693	52	24	5.1.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.161149	63260	4461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.122193	14850	2718
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.120572	41305	5929
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.059762	1	1	0	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.081969	30166	1541
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.082608	29	15	1.2	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.108019	28489	7368
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.270287	74872	6101
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.110581	34000	5438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	30.541752	24619	4516	14.4.11.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.087428	27351	2175
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	0.012777	6	1	5	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.022798	17	4	0.7	synth with cache (only 1: unfold Empty, empty; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.092607	22042	5522
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.225012	18797	1662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.082067	29551	1814
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.119817	12593	1115
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.057399	6384	1151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.057626	16642	2508
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	40.116568	36806	5429
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.021870	3	2	0.1	synth with cache (only 1: intro x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.078140	22310	3126
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.085026	30091	3194
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.067441	22723	2833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.151094	57549	5468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.089600	61	11	4.4	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.497895	152	40	1.1.4.2	synth with cache (only 1: intros E; only 1: intuition; only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.086022	18348	10360
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	41.421743	3153	403
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	40	40.134481	46513	2355
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.026488	15	4	7	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	40	40.152665	9293	3276
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.085245	28705	5943
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	40	40.034744	5017	3158
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.898391	159	57	0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.091690	11887	1928
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	40	0.841776	133	72	1.0.0.0.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	40	40.095942	31806	5414
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	40	0.056000	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.234184	32789	3072
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.380488	3831	953
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.756171	174	44	0.0.0.0.1.2.1.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.169526	55939	6831
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	40	40.112559	38852	3332
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.148218	27071	3438
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.217790	70458	2244
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.009547	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.097062	22304	5083
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.170421	19557	2405
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.224696	27530	3161
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	40	42.160045	41606	3303
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	7.863010	9282	182
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.995825	554	174	1.0.5.4	synth with cache (only 1: intros E; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.073438	19835	2919
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	36.836807	38751	4366	26.11.0.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: red; only 1: do 2 rewrite multiplicity_In; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.212014	11029	2218
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	40	43.407751	19070	3058
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.048278	12803	2164
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.011431	4	2	0.2	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.005561	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	1.465860	877	311	0.0.0.1.0.0.1.0.0.0.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: intuition; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.005338	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.008613	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.008517	1	1	0	synth with cache (only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.289919	28492	5456
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.005924	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.005638	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.007377	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.079779	27164	1559
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.915413	1116	94	1.4.21	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.054152	12156	4872
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.033714	3	3	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.058910	16656	1886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.049743	9679	1599
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.086023	7590	1332
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.121655	29583	4689
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.546313	19429	4595
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	5.071691	6672	150
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.066470	17752	4369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.056691	11245	6948
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.095632	25747	3881
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	40	0.004284	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.093746	36534	3082
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	10.038111	4459	534	4.23.2	synth with cache (only 1: intros a H; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.085752	14506	2718
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.198684	52673	7336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	9.338364	8044	1196	0.0.0.13.4.11	synth with cache (only 1: intros a b c Hb Hc H; only 1: subst; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.358541	179	52	0.0.0.0.0.0.7	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	5.894111	3871	735	16.7	synth with cache (only 1: intros n m p q H1 H2 H3 H4; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.349047	269	108	0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.794917	923	141	7.0.2.13	synth with cache (only 1: destruct l; only 1: intros; only 1: trivial; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.120834	49569	1085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.100581	29427	10800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	1.053957	29	10	2.4	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.054013	11379	4789
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.028293	6419	346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	2.070194	515	115	0.0.0.1.0.2.1.0.0.1	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: repeat split; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.084744	15293	1738
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.206934	30704	1203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.071210	16	4	1.3	synth with cache (only 1: intros x y H; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.084569	21601	4778
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.284666	21	8	7	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	40	0.973785	310	106	2.0.0.0.0.1.0.1.2	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.280680	14181	2512
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.105794	37280	4716
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.260321	30811	2325
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.186916	67175	6528
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.098462	16949	2529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	8.335191	6551	1581	0.1.0.5.0.1.0.0.0.1.1.0.8	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros [? ?]; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.200354	22925	7335
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.048720	13300	3710
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.111495	39167	4802
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.055453	15265	4225
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.129274	46042	5437
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.988382	15064	4951
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.526114	15460	3618
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.087701	28041	7504
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.158265	7196	1505
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.076117	25885	3543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.084029	27557	2422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	40	41.144767	99751	5694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	0.022301	3	1	2	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	40	24.681621	14146	2158	1.3.3.0.17.0.3.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: revert m; only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: intros EQ; only 1: now elim H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.124016	39937	3513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	40	0.020755	3	1	2	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.655344	37326	3559
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.063318	15443	1102
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.418070	53800	2477
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.094108	36843	2254
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	0.025315	10	3	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.069571	17460	5453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.154115	11	11	0.1.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: rewrite Z.add_shuffle0; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.050763	14288	2613
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.026294	5	2	3.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.023376	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.066940	18910	2981
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.018555	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.044544	9	6	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.195220	24205	2849
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.197978	25875	2978
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.031637	6801	1056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.075635	26497	1649
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.369771	13823	2995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.116702	41766	2834
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.432099	5	3	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.146111	14139	4679
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.023361	3586	503
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.187431	23038	5238
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	17.555425	39889	1368	87.8	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.079196	22833	3111
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.018186	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	40	7.510203	3477	1000	1.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intro; only 1: intros (x1, x2) (y1, y2); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.198217	48136	3778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.069149	24817	958
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	40	30.152297	130687	2835
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.042885	3458	822
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	2.623694	852	227	3.2.0.9	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.135611	54722	2047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	1.140908	326	98	6.1.0.2.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec_bis; only 1: auto with *; only 1: auto with *; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.193900	51314	4939
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.182140	51117	5075
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	1.011908	43	20	1.3	synth with cache (only 1: Z.nzsimpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.117760	34448	4784
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.068196	21003	2994
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	40	40.137267	20584	2226
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.115543	5912	482
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	3.418330	2391	421	3.1.0.0.1.0.1.0.0.1.3.3.4	synth with cache (only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: simpl; only 1: apply Z.le_refl; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	2.761066	1468	472	0.1.2.2.2.0.1	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros p l inlist; only 1: inversion_clear 1; only 1: intros p l inlist; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.089060	13461	8645
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.062043	6285	1006
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.142515	47554	6845
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.214669	30841	964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.106980	20705	5360
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.206910	86313	3611
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.058427	17496	934
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.121280	41497	5799
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.101788	36119	3463
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.101322	35321	3866
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.027831	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.006134	2	1	1	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.103068	51	25	0.1.2.0.1	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.144432	19	8	0.0.1	synth with cache (only 1: intros a b; only 1: simpl; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.004789	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.343440	28564	2130
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.178482	37802	2229
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.077087	22944	3405
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.254144	27314	3729
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.255430	26090	2751
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.130133	44212	6137
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.094635	29411	4171
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	17.383250	13752	2089	7.1.3.0.21	synth with cache (only 1: case n; only 1: trivial; only 1: intros; only 1: now apply Pos.iter_swap_gen; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.079967	11777	1142
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	44.028570	14778	2742
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.144245	52557	5215
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.097812	25801	3798
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.066013	13661	3559
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.139391	41341	5669
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.070121	108	9	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.053932	7362	2564
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.378840	30819	4828
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.060842	14846	2599
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.299945	18540	1622
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.208402	74873	5131
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	40	42.294504	34319	1742
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	4.761854	2397	736	11.3.1	synth with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	31.168346	31353	11769	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.3	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.023611	2402	996
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.148059	183	15	19	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	40.102331	36363	2260
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.089525	31078	1856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.263427	21987	4548
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	2.140614	1200	261	0.0.1.1.5.0.0.3	synth with cache (only 1: induction l as [| x l IHl]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.109023	33943	6467
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.083148	23162	775
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.095451	28797	1361
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.339005	8971	3514
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	0.010377	5	2	3.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.010102	5	2	3.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.023243	10	3	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	18.408795	1994	353	0.15.9	synth with cache (only 1: Z.bitwise; only 1: rewrite Z.mul_add_distr_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	40	0.154228	109	37	6.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.065202	3	2	0.1	synth with cache (only 1: Z.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.006820	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	40.080373	21421	6474
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	40	40.068836	17991	1739
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	40	0.199855	182	26	4.10	synth with cache (only 1: intro n; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.014380	8	2	5.1	synth with cache (only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	40.071490	26237	2527
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	0.715460	583	150	0.1.0.1.0.0.3.1.0.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.019822	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	40	0.005103	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.004926	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	40	0.045229	9	7	1.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	40	0.020923	8	5	0.0.1.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.102985	34414	2564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.067319	18942	2966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	0.385109	239	93	0.1.0.0.0.1.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.007393	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.147171	31021	3650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	40	0.471018	253	125	2.0.0.1.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	40	0.006190	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.279380	167	76	1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.245607	50497	5297
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.155265	52088	8214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	0.372625	100	56	0.0.6.0	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intro H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.100566	37707	5068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.070634	15565	2309
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.039731	10093	1194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.102377	31447	4545
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	6.026178	4539	372	24.7.2	synth with cache (only 1: intros n m H1 H2; only 1: elim H1; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.093154	14268	1271
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.258715	12958	1815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.085141	18409	4287
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.459659	9583	3400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	40	40.157656	30325	3144
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	2.416231	3580	127	0.9.68	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.006732	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.005122	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.354197	16354	5942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.089047	42	26	0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	40	4.630672	1985	287	6.5.1.1.14	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	10.169379	8363	1838	0.3.1.0.0.0.8.0.1.1	synth with cache (only 1: intros a Ha; only 1: split; only 1: intros (e, H); only 1: exists e; only 1: apply elements_1; only 1: auto; only 1: intros (e, H); only 1: exists e; only 1: apply elements_2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.039922	8124	3122
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.099629	36706	3502
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.106588	37149	3370
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.065813	18521	2479
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	2.886712	811	161	4.5.5.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40	40.139578	53869	3501
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.749499	22154	3388
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.187219	254	66	0.0.7.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.257079	63104	2459
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.040360	9760	3058
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	40	3.868477	1731	518	5.0.0.0.0.1.0.0.4	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: now destruct 1; only 1: now destruct p; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	40	40.121937	38891	5192
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.612563	11493	1704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.114752	31997	10298
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.717888	537	166	6.1.0.0.0.10	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy'; only 1: easy'; only 1: simpl; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	2.812608	445	74	15.0	synth with cache (only 1: intro n; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.220549	82128	4774
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	8.098271	30952	717	110.2	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.016347	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.018151	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.232721	141	29	6.5	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.085128	14517	6892
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.016343	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.018289	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.056255	6512	2110
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	42.356029	14327	3332
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	1.847947	648	107	30	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.453106	56470	6119
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.059688	16533	1855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.082745	25103	7483
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.065274	23783	1937
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.085155	29523	3412
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	40	40.059417	21883	578
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.337271	8862	1369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.220839	15224	3970
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.025803	6443	1303
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.069653	23957	1734
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	25.030220	5590	1111	0.0.0.1.0.12.1	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: intros (c, Hc); only 1: exists c; only 1: subst; only 1: auto with zarith; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.007224	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.005081	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.040586	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.004782	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	2.342415	1018	558	1.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.024702	5	3	0.0.2	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.018603	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	40.124088	45082	5114
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.045102	9609	1365
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.311227	16	5	2.2	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.027410	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.081994	21611	4575
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.078351	9	5	1.4.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.048800	38	13	0.1.2.2	synth with cache (only 1: split; only 1: firstorder; only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.010204	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.007976	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.007680	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.009622	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.007594	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.013763	3	3	0.0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.200157	71662	2800
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.084119	8	3	0.2.3	synth with cache (only 1: intros x x' Hxx'; only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	1.795633	899	232	1.3.1.0.0.2.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: intros x y z; only 1: auto; only 1: congruence; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	1.881041	939	194	0.1.1.0.4.7	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.098248	14608	1034
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.249747	71678	9609
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.065456	17387	4788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	6.817290	5165	737	56	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	1.667318	486	97	9.5	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.165576	58613	2122
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.084142	29	8	4.2	synth with cache (only 1: intro H; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.339412	347	48	3.12	synth with cache (only 1: intros x y z; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.011573	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.029351	6125	3262
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.082459	31175	1153
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	3.142999	507	123	0.1.8.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.066780	8632	1616
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	1.947664	1424	96	0.0.0.0.0.1.34	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.009402	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.008814	2	1	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.637012	347	114	0.3.0.2.4	synth with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.097677	26431	1896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.692594	44693	3637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.072396	21450	4838
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	40.065249	12213	2566
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.010384	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.029023	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	2.320299	325	74	2.7.4	synth with cache (only 1: red; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.013032	5	2	0.3	synth with cache (only 1: induction 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.018558	12	3	5.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.006053	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.008786	3	2	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.020936	4	2	1.1	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.116257	71	20	4.2.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.716195	57	15	1.1.5	synth with cache (only 1: red; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.432329	188	44	0.1.3.3	synth with cache (only 1: intros x y; only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.460721	169	44	4.1.3.0	synth with cache (only 1: intros x y z; only 1: intro LT; only 1: intro H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	3.994386	1585	95	3.3.2.42	synth with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.159339	32289	4748
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.011007	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.061910	19	6	1	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.057513	14	10	2.3	synth with cache (only 1: unfold Zlength; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.051253	10106	1402
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.088038	13325	7230
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.184085	63718	5009
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.037817	11654	1297
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.316327	13988	1433
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.189383	71859	5040
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.024654	10	3	0.1	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.170350	17992	920
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.077764	23874	3242
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.072063	24568	1845
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.225020	87	15	9	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.073225	24444	3047
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.091155	31568	4311
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.730409	453	67	0.0.20	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.381225	8685	2014
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	40	40.164429	19394	3671
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.108336	38944	2689
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	15.074366	9481	1094	31.3	synth with cache (only 1: unfold Z.le, Z.max; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.113766	37406	4706
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.256476	28628	3352
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.064096	15365	5747
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.298342	121704	6087
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.040229	10356	880
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.377685	19017	2332
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.110672	18251	2094
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.113487	24417	3117
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	4.763173	875	264	0.0.0.0.0.0.1.0.0.1.2.1	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.042825	10100	3596
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.179153	42650	5531
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	6.474852	2270	431	10.11.1	synth with cache (only 1: intros; only 1: destruct H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.103688	37337	3389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.108341	39509	5282
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.089967	30562	4393
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.024145	5125	1159
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.206633	88488	2198
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.126130	42461	3498
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	36.665542	70694	3362	0.5.1.48.18	synth with cache (only 1: intros a; only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_0; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.138377	33761	8709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.167340	31460	1471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.087590	9529	1222
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	5.905276	2664	1239	17.1	synth with cache (only 1: revert m; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	42.365128	26690	3233
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	17.891851	3969	1652	0.0.4.1.0.6	synth with cache (only 1: intuition; only 1: transitivity (r2 * 1); only 1: transitivity (r2 * (r1 * / r1)); only 1: ring; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.144719	24366	1893
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	40	0.010543	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinPos.Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.914088	1047	192	0.0.0.3.7.0	synth with cache (only 1: unfold if_zero; only 1: intros l n d H; only 1: rewrite recursion_succ; only 1: trivial; only 1: auto; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	40	0.033884	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinPos.Pos.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.098941	28450	1436
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.262977	12553	2326
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.120666	40911	5147
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	23.157924	19750	2145	1.3.0.3.7.1.10.1.2.3.1.0.11.1.7.3.10	synth with cache (only 1: constructor 1; only 1: repeat red; only 1: induction x; only 1: auto using Sorted, LocallySorted, HdRel; only 1: constructor; only 1: reflexivity; only 1: trivial; only 1: repeat red; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: intuition; only 1: auto; only 1: eauto; only 1: repeat red; only 1: intros; only 1: firstorder; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	1.163462	557	93	1.0.11.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.250438	94109	3406
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.065025	23207	2210
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.056425	13	8	1.5	synth with cache (only 1: intros x y EQ WF; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	6.381090	1289	570	0.0.1.3.4.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: auto with datatypes; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.153857	60342	2725
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.122465	26341	2374
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	1.587304	603	81	0.0.0.0.13.2	synth with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	39.827218	33092	4122	0.1.0.0.0.1.0.0.1.0.0.15.0.2	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: intro H; only 1: auto with relations; only 1: split; only 1: trivial; only 1: discriminate; only 1: split; only 1: discriminate; only 1: discriminate; only 1: intros (EQ, EQ'); only 1: rewrite EQ, EQ'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.045103	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.190558	46694	5863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.038320	10896	2573
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.061822	6	2	4.0	synth with cache (only 1: intros x x' Hx l l' Hl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	22.711641	3306	2144	1.2.0.8	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.039503	8234	567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.072936	19110	5015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.932918	8064	1067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0.023428	1	1	0	synth with cache (only 1: apply subc_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.234459	47412	4028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.010578	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.598796	10510	1340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.354604	3140	519
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.079877	27368	2181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.187356	19253	5355
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.106618	23646	7896
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.156919	51452	5361
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.084188	29525	2264
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	43.428219	12766	3087
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.081297	26409	2427
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.060155	18764	2870
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.066833	15170	2488
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	40	40.208045	35855	3654
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.115809	27434	3749
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	40	40.044113	9505	4235
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	9.405615	7955	2114	0.0.1.8.0.0.0.3.5.0	synth with cache (only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: constructor; only 1: trivial; only 1: auto; only 1: auto using Sorted, LocallySorted, HdRel; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	9.615038	1425	244	2.0.1.19	synth with cache (only 1: induction l; only 1: auto; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.094215	29939	5771
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.615415	23750	3154
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.447188	16897	3586
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.107637	40426	2494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.007143	5	2	2.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.003915	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40	40.491641	40821	4251
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	2.675677	1977	435	0.0.12.1.1	synth with cache (only 1: intros; only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.158694	54095	3848
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.015150	6	4	1.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: inversion_clear H; only 1: induction 1).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.099033	34149	2194
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.004932	3	1	2	synth with cache (only 1: exact PeanoNat.Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.025897	10	5	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.052931	21	8	4.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.113688	41477	2619
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.422083	38027	2750
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.080468	31741	2393
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.132567	48028	6453
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	17.341629	14134	1973	0.0.0.0.1.0.0.15.3.18.3	synth with cache (only 1: unfold In, MapsTo; only 1: intuition; only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: firstorder; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.674756	390	136	1.0.0.0.0.2.0.3.0.0.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: trivial; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	40	40.090082	33483	990
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.019251	8	2	5.1	synth with cache (only 1: intro x; only 1: easy || now symmetry in HR).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.254567	17440	4847
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	40	0.568138	397	95	8.2.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: now rewrite Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	41.194962	11455	2722
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	40.067880	18888	2809
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.285697	19410	2717
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	1.129993	6077	103
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	31.805841	12852	2796	3.4.0.12.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros f g l H; only 1: intros; only 1: subst; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.051535	10	7	1.1.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.041114	8	7	0.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.127494	46505	2849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.071754	12	8	2.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.087838	70	24	4.0.4	synth with cache (only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.005310	4	1	3	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.206233	64205	3996
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.063037	21840	2500
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.312026	19811	1697
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.159598	44242	6668
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.060589	17573	2274
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	6.365993	4345	1406	0.1.2.3.0.6.1.1.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: induction 1; only 1: firstorder; only 1: induction H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	40	4.083237	4755	659	23.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	40	40.266586	51440	4912
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	1.744088	791	209	13.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	5.127788	956	331	0.0.0.0.1.1.0.1.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.026308	327	97	0.1.2.4	synth with cache (only 1: intros; only 1: compute; only 1: intros P Q H l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.093433	18780	4477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.129621	40738	2541
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.168483	48591	3562
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	40.217359	30980	5810
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.177527	68946	3278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.079097	21509	6088
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.141747	10181	1896
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.327899	118	33	1.5.0.0.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto; only 1: repeat red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.031171	5	4	0.0.0.1	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.182253	46762	4832
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.099406	29562	8000
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.094381	17467	4177
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	2.911607	1793	260	0.3.5.7.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: induction H; only 1: firstorder; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.179239	64703	6496
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	40	0.017173	4	4	0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.060248	19525	2192
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.193083	71274	3969
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	22.073303	77122	1414
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.079446	23819	2719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.164850	56482	4785
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.023776	4	2	1.1	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.365283	14736	764
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.022325	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.056236	19429	1890
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.089479	27322	5683
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	2.507642	1771	290	0.2.0.2.10.3	synth with cache (only 1: intros x y z; only 1: destruct 2; only 1: eauto; only 1: intuition; only 1: rewrite <- H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.090002	18787	3254
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.073665	21274	6446
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.172417	34597	5274
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.043810	13711	1514
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.450455	25241	2153
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.200425	458	60	4.15	synth with cache (only 1: intros x; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.004477	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.147231	15664	1765
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.004400	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	3.453639	6159	774	17.6.2.6.12.0.8.2	synth with cache (only 1: split; only 1: repeat red; only 1: intros n; only 1: intuition; only 1: intros P H0 HS; only 1: intuition; only 1: repeat red; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.113495	39391	4532
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	40	40.073549	19514	4115
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.080787	22378	5034
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.055673	16010	2248
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.054071	11087	989
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.031836	9171	1249
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.138598	56391	5039
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.055039	17455	965
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	19.646816	26028	2453	1.1.1.0.3.2.20.0.5	synth with cache (only 1: intros m H; only 1: eqb2eq; only 1: destruct H; only 1: destruct a as [| p]; only 1: intro; only 1: discriminate; only 1: now destruct p; only 1: intros <-; only 1: discriminate || simpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	2.275449	826	205	0.0.2.7.4	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate || simpl; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	41.232601	17185	3734
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	2.517263	439	159	0.0.3.1.0.11	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: simpl; only 1: now apply Pos.iter_swap_gen; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.124307	36108	4480
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.050878	12	6	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.011121	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.112558	38805	3124
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.037287	11146	1338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.039095	11737	2175
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	0.521236	251	49	0.7.2	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.089303	11290	1514
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.166676	57658	17998
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.084030	2521	743
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.269582	74157	5770
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.105519	14435	2056
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0.006094	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.097413	30203	7297
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.033028	6702	1617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.074388	9124	1695
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	40.696747	63280	4590
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	40	40.113222	37063	5581
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.359573	22988	4104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.092031	25975	7736
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.569387	13521	2537
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.229637	87361	4747
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	42.225954	24632	1564
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	2.197924	678	109	7.10	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.038709	162	12	18	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.117331	14811	2124
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.008732	2	2	0.0	synth with cache (only 1: symmetry; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.052944	13225	3213
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.099317	33990	2230
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.067295	23263	2394
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.140049	22596	3762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.326664	23475	5024
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	40.077170	4408	646
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.013053	3	1	2	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.032331	6732	3221
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.036949	10238	760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.052503	12746	3627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.145513	14853	3415
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	40	40.252193	36511	4373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.165931	6546	452
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.094661	36743	3065
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.482567	17669	2285
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	6.581241	5961	148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.084295	21211	4820
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.354597	26535	4020
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	40	1.153914	1386	135	24.7	synth with cache (only 1: intros Hb H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.670054	42	18	2.2.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.037213	7293	1968
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.240046	9745	2395
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.600269	12	8	2.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40	40.120390	42985	3934
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	5.732871	3319	576	0.0.0.0.19.9	synth with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.083687	54	19	3.1.0.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.025295	12	5	0.0.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.118025	38113	9028
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.701101	21918	2244
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.114487	14378	3955
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.269155	27779	3198
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	12.595745	3259	675	1.1.0.8.7	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: vm_compute; only 1: intuition; only 1: MO1.order; only 1: MO2.order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.083901	71	16	4.3	synth with cache (only 1: simpl; only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.050390	11579	4647
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.442973	266	61	0.0.2.1.3.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simpl; only 1: intros; only 1: case n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.020710	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	40	3.432933	412	61	5.4.8	synth with cache (only 1: intros a H; only 1: rewrite H; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.070595	17130	4782
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.044544	33	8	2.5	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	34.441562	37251	3385	0.0.0.0.5.2.18.10.67	synth with cache (only 1: constructor; only 1: simpl; only 1: intro H'0; only 1: intros n m H; only 1: elim (le_lt_dec n m); only 1: intro; only 1: intuition PeanoNat.Nat.order; only 1: intro; only 1: intuition PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	5.172038	4437	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.094190	31037	3591
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.531206	3752	1077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.077721	25122	3795
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40	40.088859	15207	7155
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.545186	12834	2545
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.124239	35166	10293
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.094319	29894	3091
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.877450	562	158	8.4	synth with cache (only 1: intro x; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.064685	21211	3855
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	3.827688	995	330	1.1.0.1.0.0.0.0.0.0.5	synth with cache (only 1: induction 1; only 1: induction l; only 1: intuition; only 1: intuition; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.162347	48014	5938
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.136112	44136	5137
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.032356	4	3	0.1.0	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	40	0.614071	115	42	3.0.3.0	synth with cache (only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.318736	30881	4378
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.046944	12642	4568
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.120185	29645	5141
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.342998	5815	911
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.163304	61291	3935
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.158189	44491	9598
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	40	40.041747	11870	2300
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	40	40.109955	30699	7418
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.329253	262	58	3.5.3	synth with cache (only 1: intro Ha; only 1: firstorder; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.206850	47	25	0.0.1.0.0.1.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	0.064243	21	8	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.411197	10981	1790
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.544486	14649	4618
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.094715	29086	3752
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	40.063455	12838	2565
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.035384	9098	2033
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.092357	30877	3253
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.014138	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.008641	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.010219	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.171622	19	12	0.4.0	synth with cache (only 1: simpl_relation; only 1: unfold relation_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.016574	3	2	1.0	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.007261	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.309282	10503	830
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.104190	13344	2807
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.217935	52451	3564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.079884	20230	6817
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.854468	284	84	0.3.2.0.1	synth with cache (only 1: intro n; only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.167238	35722	4338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.104702	17278	3461
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.062406	15289	5276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	5.440912	1189	267	3.0.1.4.0.0.12	synth with cache (only 1: N.induct n; only 1: trivial; only 1: intros a H; only 1: destruct a; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	40	16.626519	25974	1842	1.5.2.12.0.7.0.12.0.27	synth with cache (only 1: vm_compute; only 1: intros; only 1: destruct x; only 1: easy; only 1: induction n; only 1: reflexivity; only 1: f_equal; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.167305	64912	3339
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.182957	101	38	0.9	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.008557	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.004974	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.004154	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.052715	16071	2315
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.145477	39453	8851
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.109344	39608	3141
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.068584	19609	1923
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	1.370817	331	130	6.3.0	synth with cache (only 1: intro H; only 1: unfold Z.pred; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.021952	3	2	0.1	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.024056	3	2	0.1	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.071342	21183	3617
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.063457	20864	1870
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.220687	18314	1025
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.164106	54194	7140
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.006913	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.072208	19451	4055
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.075349	24690	4582
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	40.454941	9388	2946
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.288302	72685	6484
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.059595	25	15	0.0.0.0.0.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.067593	20684	3360
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.273494	109340	4392
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.360959	73042	4096
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	0.384075	1154	110	4.0.0.0.0.22.2	synth with cache (only 1: split; only 1: repeat red; only 1: intros; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.097793	34390	2077
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	40	40.161367	30479	3099
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	5.188860	13234	734	16.0.25.13	synth with cache (only 1: intros n IH; only 1: induction n; only 1: reflexivity; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.255569	101718	7772
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.067666	22627	1932
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.058079	5114	764
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.241250	99266	8750
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.053408	15987	2508
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.100942	16788	1153
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	1.109985	627	274	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.533887	46801	3461
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.131197	34338	7688
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.134765	38302	4516
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	40.029831	8529	2071
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	20.742035	8983	989	0.0.6.0.15.70	synth with cache (only 1: revert l; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.170604	643	297	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.055931	14146	6727
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40	40.040464	7903	6167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.976436	8676	620
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.079970	27209	1748
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.155271	56593	6283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.112348	22197	4808
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.044162	4273	685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.100711	38988	2204
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	40	40.144415	27059	3239
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	40.587503	31472	5864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	4.450521	7547	748	1.0.0.11.4.1.0.0.11.4.0.31	synth with cache (only 1: destruct n as [| n| n]; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	40	5.935749	4471	799	0.3.7.9	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.042668	5789	1233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.073559	20902	4510
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.115621	38305	1962
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.073100	39	10	1.5.0	synth with cache (only 1: intros Ha; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.029164	5	4	1.0.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.178975	29722	1265
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	40.080713	23359	5237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.493845	116	35	2.3.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.167191	63022	3774
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.752882	11295	2029
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.063129	4345	786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.018515	2770	1631
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.029204	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.027152	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.286937	29184	5275
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.058532	17297	1205
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.173079	17306	2591
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.112034	11	3	0.2	synth with cache (only 1: inversion 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.177664	31625	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.046474	12314	5307
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.621629	377	57	0.0.6.7	synth with cache (only 1: intro Dec; only 1: intros; only 1: inversion H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	40	40.228953	29841	1292
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.145258	10	3	0.3	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.057926	20	5	0.3	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	1.244450	522	48	15.3.1	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.367274	99	42	3.0.2.0.1	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: auto; only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	27.762732	19750	5488	1.1.0.0.0.0.0.0.0.2.0.1.1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: intros [a [Ha1| Ha2]]; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.389187	124	50	3.0.3.0.1	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: auto; only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.080205	18828	4391
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	41.575102	12014	700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.918852	817	84	10.11.0	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.023078	6	3	1.2.0	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.021911	7	3	1.3.0	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.017892	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.034110	7524	2827
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.014599	5	2	1.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	40	40.534573	14528	3562
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	24.755727	29874	5424	1.0.1.0.5.6.2.1.0.1.0.0.1.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.596250	313	95	0.1.0.6	synth with cache (only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.011800	4	2	2.0	synth with cache (only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.103448	109	17	0.0.9.0	synth with cache (only 1: unfold empty; only 1: repeat red; only 1: intros a H; only 1: inv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40	40.167766	17284	2833
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.065680	22227	2450
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.471698	3206	498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	7.553440	4891	1538	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	40	0.720755	44	17	0.0.0.4.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.068896	18428	5027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.171653	5545	1714
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.117427	11757	5116
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.134968	44516	4537
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.806804	33580	3194
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40	40.382339	21926	2535
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.063299	16027	1519
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	2.009400	1596	564	4.4.4.0.1	synth with cache (only 1: intros n m; only 1: destruct m; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	40	0.465423	975	98	1.18.1	synth with cache (only 1: intros n; only 1: red; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.252649	51184	6817
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.173551	73806	1102
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	9.757358	3333	408	0.9.2.15	synth with cache (only 1: induction 1 as [| m ? IHle]; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	40	0.235621	216	52	11.0	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.098309	33640	2488
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.056270	16684	1338
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	40.270159	22681	1470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.075158	22152	5681
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40	40.091019	29100	4697
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	40	40.268825	76633	7862
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.112858	39554	8204
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.187636	292	58	0.0.10	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.130010	37135	10219
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.068477	16667	6142
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	0.024747	9	3	2.3	synth with cache (only 1: unfold eq, lt; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.077210	21763	7612
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	14.773315	26329	3265	0.0.0.1.0.1.8.0.0.0.1.0.1.4.0.37	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.061384	15712	2745
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.061891	19578	3966
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	5.002375	5253	668	4.12.5.1.0.3	synth with cache (only 1: destruct x; only 1: easy; only 1: intros; only 1: destruct H; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	40	40.224997	23097	2503
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.118907	36562	4641
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.129537	34882	6810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.321591	7657	1910
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.269835	58471	6335
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.105604	34099	5558
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	40	40.090526	26327	4904
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.040837	19	8	3.0.2	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	0.769350	426	138	9.0.1	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.174483	7871	431
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.123450	41594	4706
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.045526	40	11	0.2.4	synth with cache (only 1: induction l as [| a l IH]; only 1: discriminate || auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.476644	11202	4624
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.808650	33625	5835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.113726	16337	2074
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.197605	52135	3783
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.089030	29747	3627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.066117	15121	3005
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.087559	25408	7237
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	3.745741	2738	534	16.2.0.0.1	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto with *; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.095086	24245	6215
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	40	40.152560	37436	4425
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.090083	27768	5482
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	15.542069	1823	663	1.4.2.0.0.0.0.0.1.1.0.1.0.0.1.0.1.9	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl; only 1: red; only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction; only 1: red; only 1: intros n m p; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.135809	50786	2572
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.060133	19196	2494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.185591	68623	6378
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.070225	19772	2060
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.121906	19	6	0.5	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.045544	10	3	0.2	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	40.096061	29063	5037
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.137584	46640	4997
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.039295	10750	2234
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.260620	6464	1649
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.352499	278	103	0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.076021	22124	6157
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.203930	80360	3750
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.155463	54339	8699
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.106692	33051	6749
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.114026	25776	2222
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.314588	35854	4652
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.228607	68218	4853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.082463	27445	1566
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.652718	75	19	8	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.217820	86013	4413
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.140855	48839	2429
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.207158	71756	5567
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.045998	54	10	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.074263	11310	1060
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	0.521787	573	90	0.0.8.6	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	12.194115	3751	626	10.0.0.36	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: now constructor; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.128290	49417	4742
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.056097	15648	2542
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.216917	23576	4384
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.133146	41331	3976
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.067779	15271	7557
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.123555	43247	2980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	6.430301	1823	374	0.0.6.1.0.0.4	synth with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: intros Hb; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	41.597106	25680	3304
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.114357	42037	2446
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.230600	91923	6152
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.056373	5146	1024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.089588	27821	5462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.078435	14602	2151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.043641	7536	1836
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	40	40.295214	32175	4228
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.192038	30302	5665
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.104503	35189	2110
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	0.372524	210	25	0.0.1.16	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.085124	23064	5565
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.105886	38211	3135
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.569462	32023	4404
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.196278	13352	686
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.089018	25348	1589
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	40	40.507014	19076	3283
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.130974	15015	1626
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.028631	5096	2835
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.274598	22606	4238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.150973	4595	1281
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.088199	16803	3589
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.124882	48196	3816
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.100181	25373	7882
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	3.059768	2052	57
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.041833	11704	459
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	40.132661	46072	8251
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.173183	62671	4657
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	40.305448	28701	1831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.084921	21338	3394
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	40	41.312313	10978	641
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	40	0.126962	8	3	0.4.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.298732	53358	4461
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.117814	37468	6477
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.044094	19	10	0.3	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.006901	5	1	4	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.006105	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.089373	33899	3017
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	1.118279	2196	113	41	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	40.092928	29109	2859
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	7.309180	4706	985	0.6.4.8	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.430143	4469	896
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.106238	9611	1638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.071412	18264	2764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.007743	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	1.479401	634	246	1.0.2.0.0.0.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.832289	17262	3188
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.076555	15419	4233
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.060914	16515	3628
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40	40.309652	27376	3277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.072918	21525	4629
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	40.108487	15887	1519
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.074779	29201	539
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.203883	74201	5961
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.600526	24461	3645
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.059512	14657	2668
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	40	1.551445	310	58	0.0.1.8.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.282495	6367	1052
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	40	40.086826	33153	2371
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	40	40.121292	23161	2257
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.657356	255	116	2.0.1.2.0	synth with cache (only 1: unfold Rle; only 1: intros x x' y y'; only 1: intuition; only 1: elim H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.075062	21623	5879
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	40	40.193306	71221	5813
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	3.514568	1726	442	0.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: auto; only 1: intros Hx; only 1: now destruct Hx).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	1.643977	792	207	2.0.1.9	synth with cache (only 1: intros x y H; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.494206	166	44	2.3.1.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.021666	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.112902	38024	6056
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	25.225154	3733	751	19.4	synth with cache (only 1: intros m1 m2; only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	1.919858	294	106	0.9.0	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.077616	21397	6091
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	40.167785	64331	3053
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.065280	15788	5733
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.241035	76702	9563
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.059091	12050	1829
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	1.440142	501	112	1.11	synth with cache (only 1: intros x y; only 1: apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.067823	22713	2572
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.070278	34	14	0.0.0.4	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.176668	77975	1240
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.059480	22134	1478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	1.632429	1578	387	6.0.1.1.0.6.0.1.1.0.0.0.9	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: tauto; only 1: auto; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: tauto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.276612	36459	5734
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.093861	29402	3794
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	40	0.559280	267	147	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.123895	40529	3920
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.115265	6229	1438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	2.123010	1184	584	0.0.0.1.1.0.0.0.1.0.0.0.1.1	synth with cache (only 1: intros H; only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: tauto; only 1: tauto; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.029512	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.241865	39572	6570
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	40	40.078197	24839	4757
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	8.220743	4789	99
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.080631	7509	2147
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.086592	8859	286
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.163333	53528	8254
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.278476	1308	351	0.0.1.0.0.1.0.2.4.2	synth with cache (only 1: boolify_even_odd; only 1: intro H; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.160471	133	31	1.9	synth with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.161060	94	37	0.1.8	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.524631	32015	3611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.105167	27402	10690
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	40	1.984986	4806	558	1.2.12.1.18	synth with cache (only 1: induction l as [| x xs Hrec]; only 1: split; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.050684	12788	1648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.051928	14288	4064
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.798693	18547	2489
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	10.493857	14114	1575	7.8.1.2.17.0.2.4.3.4	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x0 H'; only 1: red; only 1: elim H'; only 1: intros; only 1: rewrite H0; only 1: firstorder; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	2.288116	1273	566	3.0.0.0.0.5.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto; only 1: auto with *; only 1: auto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.085486	23959	7917
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.039578	9158	1400
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	40.108781	39792	3583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.091484	26096	8495
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.097442	32717	4733
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	40	40.069026	21942	2921
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	7.175125	4672	1209	0.0.4.1.0.1.0.1.0.0.2.5.1	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: trivial; only 1: easy; only 1: easy; only 1: simpl; only 1: assumption; only 1: now destruct p; only 1: now destruct p; only 1: simpl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.117344	37001	4132
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.173385	56575	5752
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.112188	16	6	0.0.3.0	synth with cache (only 1: intro H; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.059889	11	6	0.0.2.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.080517	25251	5738
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.135647	45679	5997
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.143838	52603	4782
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.081819	24701	795
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	40	8.101336	8779	1754	18.1.0.0.2.1	synth with cache (only 1: induction l as [| a l IH]; only 1: split; only 1: auto; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.142551	17207	3804
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.279864	115222	7235
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	40	2.479086	1519	423	0.0.1.0.0.1.0.2.6.1	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.228512	83590	8272
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40	44.206856	3935	598
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.109127	29561	3213
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.005394	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	40	1.942729	2022	465	0.0.1.0.0.1.2.8	synth with cache (only 1: intros n Hn; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.519627	96350	4808
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.273504	109643	5369
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.129241	43967	5240
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.093265	11051	2318
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.066686	17213	2726
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.205622	77467	4514
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.101135	28329	6612
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.049453	4981	738
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.079029	26577	2671
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	29.789975	17846	398
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.066971	11876	1532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.129256	41383	3882
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.113251	26745	11354
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.064543	18361	1159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.069427	18897	5389
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.031450	3	1	2	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	0.117070	50	5	11	synth with cache (only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.116991	24302	5260
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.026007	5150	1465
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	40	6.916505	5423	1319	0.0.0.1.0.1.4.1.0.0.2.8.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: trivial; only 1: easy; only 1: now destruct p; only 1: simpl; only 1: assumption; only 1: now destruct p; only 1: easy; only 1: simpl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.122247	7463	1203
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.186337	68405	6568
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.275232	22	10	2.2	synth with cache (only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.043037	8401	2637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.163271	28200	4676
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.088587	11269	6391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	7.057218	6143	715	0.4.12.15.8	synth with cache (only 1: intros Hn; only 1: destruct n; only 1: easy; only 1: now destruct p; only 1: now destruct Hn || easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.472641	132	25	0.0.9	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.095758	30350	4313
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	40	40.431918	20384	3564
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.104171	35250	3529
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	0.004783	1	1	0	synth with cache (only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.004707	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.123823	36770	7418
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.117718	44573	3375
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.038261	5675	1847
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.184843	60522	5615
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	9.737648	9777	2688	2.0.0.1.0.0.4.1.6	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: simpl in *; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	40	9.010770	8375	1465	0.0.1.1.14.0.1.3.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	40	0.181484	84	49	0.0.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	4.293746	5477	864	0.0.1.1.2.3.0.0.7.9.2.0.0	synth with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: intros; only 1: destruct H; only 1: constructor; only 1: simpl; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	40	40.604202	39409	6326
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	40	0.068443	40	24	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	40
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.149247	14954	2025
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.033537	5893	4274
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40	40.218450	7974	3609
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	13.244789	5985	2389	6.1.1.0.0.0.1.4.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.268127	31539	3908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.102641	34685	6118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.266935	26580	7758
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.136735	45012	5311
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.160484	52413	8664
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0.016947	17	3	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.027518	4	3	0.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.047027	12263	1301
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	1.545728	1746	246	1.4.1.3.1.2.8	synth with cache (only 1: induction x; only 1: vm_compute; only 1: constructor; only 1: vm_compute; only 1: constructor; only 1: vm_compute; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.028522	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.037649	12	5	0.0.0.2	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.024061	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.019519	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.023788	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	40	3.458521	474	92	8.5.0.1	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.171831	55596	4887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.086308	10078	656
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.048443	11522	1606
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	40.061109	22386	1706
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	40	0.054049	3	2	1.0	synth with cache (only 1: decide equality; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	18.301963	11285	2876	0.0.0.4.0.3.0.0.0.2.0.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: intro H; only 1: auto with relations; only 1: intro H; only 1: easy'; only 1: intro H; only 1: easy'; only 1: intros (EQ, EQ'); only 1: rewrite EQ, EQ'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.333433	24844	3387
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.047040	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.105331	15	8	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40	40.111391	14476	2258
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	40	10.624731	1902	866	9.2.4.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.447041	3852	602
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	40	40.431224	19874	3368
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.654041	63	17	4.1.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.079501	22741	2499
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.098392	20	8	3.1	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	0.032463	5	2	2.1	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.081300	24654	3676
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	27.809830	15617	3980	0.0.0.1.9.4.0.0.0.0.5.3	synth with cache (only 1: intros x y z; only 1: induction 1; only 1: intros H; only 1: inversion_clear H; only 1: intros; only 1: simpl; only 1: firstorder; only 1: simpl in *; only 1: destruct 1; only 1: auto; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	1.578409	1159	253	2.7.0.3.2.4	synth with cache (only 1: destruct n; only 1: auto; only 1: revert p; only 1: intro n; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.106138	14980	5470
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.006200	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.140254	47732	3746
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	40.083427	15321	3374
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.100745	29077	7646
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.044918	12199	2398
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	4.676373	739	175	8.5.0.3	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.244530	57260	3501
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	41.377999	2464	456
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.313470	18887	969
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.191593	78007	4570
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.053692	32	14	4.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.107287	27310	4004
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	40	40.142710	45950	8374
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.097471	32807	2890
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.255969	29270	4402
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	40.191541	73760	5283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.154622	54155	2792
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.138424	52098	6944
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.144828	39283	5598
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.913119	11550	5328
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	11.596948	12642	1581	1.0.0.0.0.1.10.0.4.1.10.1.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: intro eq; only 1: intros; only 1: subst; only 1: auto; only 1: intros h1 h2; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.426002	10925	1708
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	40	40.048251	19033	707
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.100723	37231	4121
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.195126	72389	3326
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.469511	22882	5640
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.061359	15	6	0.3.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.027185	4	1	3	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	40	0.029268	3	2	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.019834	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.094942	8	4	0.0.0.4	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: induction 1; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	40	0.014386	5	3	1.0.1	synth with cache (only 1: intro n; only 1: intros; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.311503	36712	5024
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	1.228694	549	225	3.0.0.1.0.2.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.074014	24335	3242
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.062363	17199	3379
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	4.637117	2052	57
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.188411	5962	1619
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	2.831601	1335	435	0.0.5.0.5	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	0.032735	15	4	5.1	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.010712	4	2	2.0	synth with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.023688	8	2	6.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.020028	7	2	5.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.093210	30588	4174
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.267785	47195	8000
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.159592	35083	7135
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.097842	10493	987
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.327453	352	83	2.0.0.0.3.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity ltac:(y); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.126393	141	28	0.9.2	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.548065	17705	4247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.071030	19623	5604
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.032727	3614	1382
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	40	40.536918	112300	8237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.393620	13722	5977
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.084914	20553	9038
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.045606	7551	1885
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	40.129072	40152	5591
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.228640	42485	4018
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.064938	16454	7159
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.071379	18	10	0.1.2.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.230471	89571	4675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.044948	15248	1440
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	4.331422	2843	1135	0.0.0.0.0.0.9.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.041307	9333	965
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.011238	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.222567	137	29	0.1.6.1	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.120549	44396	3059
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.039357	6	5	1.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.088662	30520	5316
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	40	5.841159	7669	1286	10.11.4.0	synth with cache (only 1: intros X f x H'; only 1: elim H'; only 1: intro H'5; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.154519	26240	7107
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.239724	96330	6487
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.168284	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.005304	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.006367	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.134053	30949	3917
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	41.374739	23900	2039
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.061543	5	4	0.1.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.176944	24835	6921
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.021430	7	5	0.1.1.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	40	30.795521	33726	8047	4.2.0.0.6.7.1.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: intros H; only 1: induction l; only 1: firstorder; only 1: subst; only 1: auto; only 1: firstorder; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.081984	17549	2134
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.396232	38115	4314
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.103544	32384	4231
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.186124	69508	5481
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.387051	117553	5712
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.056444	16782	2015
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40	41.425528	13130	4742
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	40.687887	10952	1727
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.083062	30174	3607
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	40	3.275050	5451	870	15.14.1.0.0	synth with cache (only 1: induction F; only 1: intros; only 1: red; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	17.921379	10988	3478	3.0.1.3.2.1.1.1.0.1.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intro Ha; only 1: tauto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: intro eq; only 1: easy; only 1: intros H1 H2 [H3| H4]; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.131796	46998	3394
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.102450	26727	12000
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.180095	11071	1424
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.139435	14531	2888
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.256575	41317	3876
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	41.455874	25879	824
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	4.252744	1339	596	1.3.3.2	synth with cache (only 1: intros B C x H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	2.630735	1629	546	0.0.0.0.4.0.0.1.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: intros h1 h2; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.081310	26645	3233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.041735	7551	1417
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.036057	5075	3119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	0.781924	1142	142	0.1.18	synth with cache (only 1: unfold def_mul; only 1: intro; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.366369	8097	1921
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	40	5.078479	8124	1235	16.3.3.0.2.1.0	synth with cache (only 1: induction F; only 1: simpl; only 1: tauto; only 1: intros A B H; only 1: simpl; only 1: intros R L n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	26.274397	12759	6832	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.012077	6	3	0.2.1	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.087957	25898	7312
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	40.075101	23121	3561
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.143518	51213	3357
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.110625	40354	695
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.118100	33524	8442
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	40	40.790053	22416	5507
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	40	2.001318	2650	489	0.1.0.3.0.9.1.2.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: CRelationClasses.simpl_crelation; only 1: intros A B H; only 1: intros Az RS; only 1: simpl; only 1: apply IHF; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.127858	39426	4571
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.446429	5747	1020
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.005799	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.118934	36161	7080
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.073378	20669	7198
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	40	40.149117	48191	8364
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.067412	10403	1289
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.484759	204	18	1.18	synth with cache (only 1: split; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.038957	7353	4208
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.299502	514	51	27	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	3.088685	9082	754	1.4.29	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.031116	7	5	0.0.0.0.2	synth with cache (only 1: constructor; only 1: congruence; only 1: red; only 1: auto with *; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.008248	5	1	4	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.006903	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.069058	17080	4759
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	10.797186	15774	2884	1.0.0.0.1.0.0.0.1.1.2.9.0.0.2	synth with cache (only 1: split; only 1: red; only 1: red; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: red; only 1: apply compare_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	40.229455	13745	2522
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.219252	14329	3591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	22.583449	9676	2572	0.0.1.0.1.3.12	synth with cache (only 1: intros a b Hg Hb; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt [|a|] [|b|] H0), (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.044436	13470	1235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.692740	45	14	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	41.312926	13542	4864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	14.739616	18760	2395	0.15.0.0.0.0.0.0.0.0.0.0.15.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.45	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.413061	83	21	1.8	synth with cache (only 1: compute; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.021034	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.086161	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.069561	6	3	3.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.194728	25801	2430
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.146705	36541	7220
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.182735	17492	3654
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	0.615241	343	127	0.0.1.0.0.1.7	synth with cache (only 1: intros N; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.403527	16	4	5.0	synth with cache (only 1: intro n; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	3.398714	3137	397	0.1.8.4.0.1.8.4.2	synth with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite Hy; only 1: auto with *; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite Hy; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	38.665009	14180	1699	12.1.0.0.0.0.15.1.0.0.17.0	synth with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.121884	12770	506
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.199857	11	8	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.038739	8418	2494
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.164114	6	4	1.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.071120	25416	1884
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.455822	55	26	2	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.109540	17093	3111
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.346733	31849	3526
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	40.172602	39433	5481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.062385	15368	3970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.107076	10386	1986
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.327818	3714	899
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.144756	22568	5206
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.112218	12413	5208
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.645037	48279	2944
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	40.464028	34811	1580
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.004176	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.021298	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.008211	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40	40.155793	20611	3916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.007958	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.108183	34602	5551
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	3.648228	4096	675	0.0.0.0.0.0.0.0.18	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.323141	31499	3174
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.745310	223	89	0.5.0.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.049226	14114	2265
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.321833	475	276	5.2.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	14.835155	2074	1115	0.2.0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.684996	984	115	0.0.11.15	synth with cache (only 1: intro n; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.057193	20767	1997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.070727	19629	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.041325	10636	3451
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.025943	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.308287	124768	6857
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.092944	34049	4455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.103200	16490	2615
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	41.416205	36292	4297
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.110742	35573	8020
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	6.610167	3990	551	10.30	synth with cache (only 1: intros n m LE LT; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	40	3.967237	2493	300	1.0.0.4.1.0.0.0.6.0.25	synth with cache (only 1: destruct n as [| p| p]; only 1: now Z.nzsimpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.218696	36453	3419
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.077591	21130	6597
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.102785	39519	1260
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.079200	16051	6801
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.044905	3	3	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	40.105080	31349	3636
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.125827	11	10	0.1.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.031900	7	4	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	40	0.044541	4	4	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.047368	3	3	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.297622	123628	4544
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.022785	5	2	2.1	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.059497	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.031124	7	4	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.307418	33150	5642
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.257279	17243	5509
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.093191	20265	2634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.451722	124	34	8.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	11.595041	10388	778	20.8.4.13.6	synth with cache (only 1: symmetry; only 1: rewrite rdiv_def; only 1: symmetry; only 1: rewrite rdiv_def; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.092936	2	2	0.0	synth with cache (only 1: intro n; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	1.591282	915	164	0.0.14.3	synth with cache (only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.390177	19069	745
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.282209	4321	878
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	40	2.430020	1187	137	1.4.6.8.6	synth with cache (only 1: unfold Zne, not; only 1: intuition; only 1: contradict H; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.066691	17094	5318
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	40	40.126509	36144	13029
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.601841	9929	1701
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.245635	17626	2567
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.099389	12399	1641
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.371431	24752	4981
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.068797	13759	2326
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	22.987282	9033	1913	0.0.1.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.2.0.1.0.2.0.2.0.2	synth with cache (only 1: induction e; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction e; only 1: simpl; only 1: i2z; only 1: trivial; only 1: simpl; only 1: i2z; only 1: reflexivity; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	13.705523	21102	2271	0.0.0.25.0.11.2	synth with cache (only 1: intros n H; only 1: absurd (false = true); only 1: discriminate; only 1: induction n; only 1: tauto; only 1: tauto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.053617	11225	4285
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.144162	44615	11527
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.168173	54025	3104
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	20.217078	2631	469	0.7.1.5.4	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro; only 1: simpl; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.043829	11461	2723
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	40	40.283906	35491	3240
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.058876	17115	3203
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.107038	26068	4950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.162279	260	86	8.0.0	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.104824	28630	9988
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	36.897525	14771	1235	0.13.20.6	synth with cache (only 1: intros n m p; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.078407	18124	7833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.100900	33889	3475
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.096652	33805	4192
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.008921	3	2	1.0	synth with cache (only 1: intros; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.004965	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.386993	11705	1112
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.216694	77000	5929
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.052708	24	8	0.4	synth with cache (only 1: repeat red; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	40	40.206509	75364	7895
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.207267	74663	10061
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.103944	30211	7184
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.233855	79387	8349
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.038631	6243	917
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	40	40.581867	19542	4655
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.295977	123773	8222
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.260801	98942	7296
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40	41.161361	14194	5226
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.208277	70235	4791
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.238315	58592	7476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	6.935239	726	122	0.1.4.5	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.106891	22233	3348
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.056288	16210	2802
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	21.207046	13196	1599	14.5.31	synth with cache (only 1: intros LT; only 1: intros x y z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.093017	34438	1425
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.011816	7	2	0.5	synth with cache (only 1: intros a b H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	6.551199	1654	256	0.8.1.8.0	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: rewrite <- ring_add_assoc; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.138577	66	15	0.0.0.9	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.007320	5	1	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.005453	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.005416	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.534269	431	96	3.1.1.1.1.3.3.2	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.048925	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	40	40.231123	91859	1113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	1.801323	419	121	9.0.1	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	40.327138	38939	11897
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.140369	41148	8224
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.051732	11576	5625
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.011285	4	3	0.1.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.091831	27636	7055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	2.551203	1686	393	18	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.130209	5647	1039
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	40	40.099041	6411	2433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.119562	26134	3470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.093022	31597	4895
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	40	40.171906	13623	4476
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	40.082993	26184	2283
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.153464	55844	5895
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.113011	19353	2605
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.158482	52610	7588
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	40	40.174383	59933	6468
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	40	40.796866	20094	3562
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.073521	14638	2211
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.021735	3332	2567
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.070874	20005	1793
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.115155	19615	5476
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	0.416504	113	17	0.13	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.037516	9716	2310
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	40	41.506084	31375	6862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.081729	19050	3409
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.384592	25296	4050
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	4.251168	1344	698	2.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.237620	29983	4966
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.152031	21880	3641
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.119488	7558	1528
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.098322	14743	3644
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.056756	16799	1144
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.097761	34035	3816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.099956	25536	4398
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	40	0.771436	397	138	0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: left; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.095733	25081	5126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	42.011114	15447	1705
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.341036	25800	2683
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.073484	22126	4579
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	40.127305	9120	2883
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.226840	61019	6842
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.312241	2666	560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.010078	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.443848	35	8	0.7	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.185163	63202	9277
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.026882	12	3	6.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40	40.510351	6502	2449
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.646308	36665	4379
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.685626	329	111	0.1.1.0.0.7	synth with cache (only 1: induction l; only 1: intros l l' Hperm; only 1: simpl; only 1: assumption; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	40.279686	9027	3849
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	13.336501	3568	1923	0.0.0.0.1.1.0.1.0.1.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.710085	269	43	16	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.005548	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.063774	18679	2900
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40	40.117379	12443	4125
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	40	0.057771	98	13	3.10	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	0.228096	345	57	3.0.5.9	synth with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.455040	122992	11763
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.094957	6004	3421
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	7.813360	17120	915	0.0.0.2.57.4	synth with cache (only 1: symmetry; only 1: symmetry in H; only 1: rewrite H; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.208672	69203	4809
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.060827	22961	1198
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.061323	19964	1744
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.070210	14164	11230
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	15.579782	12175	3969	0.1.0.6.1.0.4.2.0.0.1.1	synth with cache (only 1: simple induction x; only 1: constructor; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: intro H; only 1: elim (Aeq_dec b a0); only 1: left; only 1: subst; only 1: auto; only 1: right; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.127645	46642	5939
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.963313	622	115	3.0.0.0.0.18	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.143155	49856	4241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	16.874545	1189	265	0.4.0.8	synth with cache (only 1: unfold Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.103405	28092	9947
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.151922	56947	7492
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	1.079211	681	256	1.1.1.0.0.3.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.052370	14351	2564
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	41.226129	18760	4655
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.085014	24617	4289
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.122341	42444	5616
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	5.105179	3953	448	33.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	0.023156	6	5	0.0.1.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: intro H; only 1: intros; only 1: discriminate; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.897899	23255	5037
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.274117	16597	5171
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	10.722797	19441	1376	0.1.0.1.1.0.1.0.1.1.1.1.0.0.35	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: now N.nzsimpl'; only 1: now N.nzsimpl'; only 1: now N.nzsimpl'; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: now N.nzsimpl'; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.089181	28624	4945
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.119937	37757	4761
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.120484	31534	2796
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	40	38.219997	19797	1640	4.8.4.1.9.1.12.7	synth with cache (only 1: intro H; only 1: destruct x; only 1: left; only 1: easy; only 1: left; only 1: now destruct p; only 1: right; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.023704	3667	2788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.084084	23268	3806
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.069300	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.233034	37555	2976
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	1.618502	3376	233	0.12.24.4	synth with cache (only 1: red; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.104300	7575	911
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.004993	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.013931	6	3	0.3.0	synth with cache (only 1: unfold hd_error; only 1: intros; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.021499	17	5	0.5	synth with cache (only 1: CRelationClasses.reduce; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.290328	3985	883
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.022747	20	5	2.3	synth with cache (only 1: right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	40	0.048414	9	6	3.0	synth with cache (only 1: simpl; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	40	0.007047	4	2	2.0	synth with cache (only 1: intro n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	40	40.082884	24453	5413
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.220869	66831	4982
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	0.880823	199	79	2.0.0.1.0.0.3	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: revert H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	6.889921	4298	873	2.4.0.0.0.14.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	40	40.658871	27909	3783
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	0.347044	86	26	0.0.0.6	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	12.267885	5905	2612	0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intro H; only 1: left; only 1: left; only 1: trivial; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: auto; only 1: intro; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.030971	4	3	0.0.1	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.068328	17339	950
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.070542	8602	1541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	2.115302	500	166	0.3.5.0.0.0	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	9.032054	9634	1540	4.4.6.5.7	synth with cache (only 1: intros m x y e; only 1: red; only 1: intros; only 1: simpl in *; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.440712	14289	996
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.042672	10588	2090
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.081996	25044	4112
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	21.701002	15139	2241	0.0.1.13.22.2	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	40	40.085547	26804	4902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.737091	8870	643
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.030131	4160	1875
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.087562	29806	5007
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.083604	22174	992
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.029427	6159	2716
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.067288	24702	2087
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	40	40.208928	55935	3684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.064375	15601	4660
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.095690	31269	2211
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.071966	20849	5082
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.090708	21869	10876
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.324147	112176	10112
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	11.580179	7032	267
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.196003	71991	11648
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.157689	13230	6409
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	40	0.129003	217	45	4.5.5	synth with cache (only 1: intro CDML; only 1: intro NP; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	0.019627	13	6	0.0.4.0	synth with cache (only 1: unfold not; only 1: intro CDML; only 1: intros P H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.024593	21	8	3.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	40	0.861684	442	197	4.3.2.0	synth with cache (only 1: intros A; only 1: intro NP; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.224823	160	80	1.0.0.2.2	synth with cache (only 1: Bool.destr_bool; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.058357	32	21	2.0.1	synth with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	40	0.017100	6	4	0.0.1.1	synth with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.154998	7598	1259
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.039545	28	12	0.3.0	synth with cache (only 1: intros; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.007104	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.007720	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.005751	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.012364	5	3	0.2.0	synth with cache (only 1: intros x y z; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.217432	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.011343	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.012282	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	18.122788	16332	4030	8.2.3.0.1.3.0.0.0.3.1.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: unfold not; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.045895	14	4	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.149709	38747	5326
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.233146	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.056859	27	9	6	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.008281	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.213627	51628	7096
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.222690	82648	5125
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.008093	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.222633	59467	9392
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.007583	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.007158	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.008725	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.007269	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.007281	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.100615	14524	1673
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.243585	6	2	3.1	synth with cache (only 1: intros; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.030024	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.038632	15	2	7	synth with cache (only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.763739	547	184	0.0.0.1.3.0.0.2.1	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.197935	81703	5818
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.147676	44465	13152
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.176800	51906	4899
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.125466	47127	3334
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.127168	43042	7855
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.126029	27370	1976
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.162509	15966	6227
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.096553	32442	3244
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.074076	22616	755
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	8.458631	6115	651	0.0.11.0.0.7.7.3.0.1	synth with cache (only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: unfold Z.rem; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: unfold N.modulo; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.239032	186	46	0.0.0.3.2.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: unfold N.div2, N.to_nat; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.017241	4	3	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	40.100745	35371	3720
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.195625	76185	4342
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.045310	10639	4771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.105319	18501	3837
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.057739	11945	1747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.045202	6910	1132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.184442	22954	4103
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.088005	29020	5671
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.108455	12229	3005
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	7.911077	5380	1845	0.4.0.2.3.0.0.0.0.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.224450	88453	6995
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	7.797580	17207	1060	5.1.5.21.18	synth with cache (only 1: intros x y; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.154649	51453	5303
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.388517	826	215	4.1.0.1.0.1.3.0	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: unfold not; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros _ _ [=]).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.115137	35989	6921
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.117336	38949	5142
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.152374	522	192	1.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.015340	10	2	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.078149	14906	2009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.027761	6010	2643
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.525251	255	136	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.124421	20617	5863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.060887	16848	5933
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	41.020102	35753	4083
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	14.663033	2247	1289	1.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.043389	10917	4068
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.051125	10764	4132
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.286072	30557	6580
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.730961	259017	16576
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.192013	30936	6957
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.226425	77997	5726
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	17.763123	7429	2289	2.2.1.5.0.1.0.2.0.0.1.0	synth with cache (only 1: induction n; only 1: intros a m; only 1: now rewrite <- plus_n_O; only 1: simpl; only 1: Nat.induct ltac:(m); only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros p q H; only 1: clear IHn; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.083972	23152	6088
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.087629	24555	3340
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.121637	43751	4298
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.174461	37940	4398
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.098448	30637	5386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.066141	17234	3065
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	40	0.006283	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.545129	25395	4676
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.266212	107796	8851
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.123872	28385	5683
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.428237	15057	3260
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.471935	2065	448
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.072780	19946	3153
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.266750	28464	7284
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.815818	30573	3140
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.097096	15939	3551
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.287645	23316	7592
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.213236	27223	3949
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.089875	28252	3129
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.153644	8756	2029
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	1.273962	262	111	0.0.0.1.0.3.1	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: revert H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.532517	368	149	0.0.6.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.123578	19064	3266
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	40	2.908507	4122	365	18.17	synth with cache (only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.862143	915	454	0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	40	0.328572	500	58	10.3.11	synth with cache (only 1: destruct y; only 1: apply le_n_S, le_0_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.142258	52590	5638
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.108212	33865	10779
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.132986	51149	8472
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	40	0.523137	451	63	0.7.12	synth with cache (only 1: right; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.160393	57706	7649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.224667	3075	787
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	40	0.459767	699	63	0.2.1.24	synth with cache (only 1: exists (n + m); only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r; only 1: apply Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.118613	40684	7451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.050795	13	8	2.0.2	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.084594	26499	727
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.109250	39710	3731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.293403	25487	3731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.005658	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.006983	2	1	1	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.917066	738	159	2.5.6	synth with cache (only 1: intros; only 1: generalize dependent m; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.130320	32779	3567
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	4.228404	3924	1495	0.1.0.1.2.1.0.0.1.1	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.108235	86	15	9.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.006799	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.047477	12126	3451
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.100772	31455	4633
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.238273	109	20	6.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.351161	30511	7664
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.080279	13156	3942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.401543	16250	5984
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.091858	30772	2401
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.123200	17219	2369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.086732	19683	3584
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.364853	52524	3624
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.018297	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.005812	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.484065	1139	415	0.12	synth with cache (only 1: simple induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	41.411081	13803	1872
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.080049	30024	3145
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	40	40.257577	101228	6585
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	40	0.004616	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	40	40.073543	22182	4717
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.067309	18343	6405
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	2.487356	912	372	0.0.0.0.0.0.0.5	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.048916	12	7	0.0.2.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	8.287763	4805	436	15.0.3.24.3	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: f_equiv; only 1: Z.bitwise; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.136567	38	21	0.0.3.2	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.522562	18226	2556
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.242885	4758	274
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.080996	18503	3079
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	9.706543	1885	767	0.3.0.0.0.0.1.0.0.1.0.0.0.4	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	2.372838	1205	229	4.2.3.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with *; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.499625	26266	3517
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.175057	50420	6060
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.079442	25145	2700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	40	8.594564	13555	227
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.032388	7508	1540
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.602147	115	27	0.0.8	synth with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.147154	50112	6944
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	40.099489	8136	1821
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	2.064264	1200	387	4.0.0.5.1	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: trivial; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.036233	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.058792	19652	1246
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	14.485466	7738	1476	1.1.0.1.3.0.0.1.3.11.0	synth with cache (only 1: intros; only 1: repeat rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: left; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.048287	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.044979	7370	3589
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	22.393624	11907	2554	12.12.0.2.3	synth with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.165931	32210	5654
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	2.770388	1010	173	1.0.0.5.9	synth with cache (only 1: induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.138305	47851	2755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.138990	44999	5779
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.269834	16256	2881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	17.379579	8051	2135	0.0.3.1.0.0.1.1.3.3.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.079871	21363	6223
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.141404	52413	3089
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.066911	12542	9874
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.444002	61476	8804
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.160974	15397	7508
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.234489	89022	9363
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	40.087881	9949	2159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	6.334666	2064	410	0.0.0.1.0.0.0.0.0.5.8.0	synth with cache (only 1: intros; only 1: constructor; only 1: exists 1; only 1: Z.pos_or_neg a; only 1: Z.nzsimpl; only 1: Z.order'; only 1: Z.nzsimpl; only 1: Z.order; only 1: exists 0; only 1: Z.bitwise; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.216072	15198	2247
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.249414	38525	8280
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.100217	12636	1074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	6.416915	12800	1210	17.3.20	synth with cache (only 1: intros x y; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.155829	51242	2943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	40	9.766687	1537	393	0.0.0.0.2.0.0.0.0.0.0.0.6.0	synth with cache (only 1: exists (Z.div2 n); only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.146328	60633	4551
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.148665	44218	11797
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.207382	69921	5388
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.953223	726	116	1.5.1.0.7.0	synth with cache (only 1: intros n; only 1: constructor; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.028147	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.091392	33079	2953
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.102281	31555	7029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.250274	39	15	0.0.1.1.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.147913	32393	5740
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.085222	7	5	0.0.0.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.045501	6000	830
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.025595	6	5	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.155880	10780	4051
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.022417	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.110783	34641	4639
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.141000	53	39	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.020098	5	4	1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.166110	54511	4029
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	40.682615	38618	4025
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	10.712543	8145	725	17.0.0.0.17.7.0	synth with cache (only 1: intros; only 1: apply fold_1; only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	3.892215	1973	286	0.0.0.6.0.12.3	synth with cache (only 1: change 2 with (1 + 1); only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	40	40.018929	5451	1474
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.033981	4220	1301
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.084075	18474	3323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.063828	18311	2487
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	40	1.813781	1537	204	22.3	synth with cache (only 1: intros Ha Hb H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	0.511157	166	91	0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.008839	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.028323	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.005462	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.591872	586	123	6.0.0.6.2.1	synth with cache (only 1: induction p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	2.071857	2235	173	27.6	synth with cache (only 1: intros a b H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.068858	20898	3458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.210151	13804	2058
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	2.068242	787	232	1.1.0.0.1.5.1.1	synth with cache (only 1: destruct x; only 1: intro H; only 1: easy; only 1: simpl; only 1: intros H; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	40	1.231742	1033	141	21.0	synth with cache (only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.365250	137	74	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	0.091425	54	18	1.0.2.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	40	40.139297	48035	7604
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	1.908857	5858	101
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.185286	61404	5027
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.131485	28151	6401
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.238477	89541	6503
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.179957	66713	4222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.048623	10122	5387
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.051434	13608	3760
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.018026	7	4	3.0.0.0	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.100520	30084	8948
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.069150	4277	1316
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.015306	9	2	2	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.055856	13933	4367
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.130191	8955	4472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.852674	892	235	5.0.2.1.0.2.1.0.4.4	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: trivial; only 1: red; only 1: intros; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.041987	9084	4213
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.014340	19	3	5	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	40	40.607655	21376	3302
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.611361	18681	3220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	0.891016	1655	213	21	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	41.225137	338615	19434
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.031352	5382	4032
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.095543	28401	6587
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	1.639719	1161	300	3.6.1.2	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: intros Eqf Lef x y; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.228193	90958	6034
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.020311	11	7	0.2.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.008883	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.010806	5	4	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	40	0.255888	130	54	0.0.0.0.1.0.1.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	13.937772	10093	2366	0.1.1.0.1.0.0.1.1.8.3.0.3.0	synth with cache (only 1: induction n; only 1: split; only 1: auto with arith; only 1: now exists 0; only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.058331	16781	4217
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.101036	30574	3158
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.146956	52390	3746
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.101290	17429	3977
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	40	0.008391	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.032977	4874	1150
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	40	0.009891	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	40	0.004698	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.026244	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	13.695226	3680	1484	2.1.1.0.1.1.2.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.048049	22	13	0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.114489	34733	5743
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.545344	23535	2460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	5.098708	2962	464	3.4.0.1.11.4.4	synth with cache (only 1: red; only 1: reduce; only 1: induction n; only 1: simpl; only 1: assumption; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	2.776334	3741	280	0.1.0.1.0.1.22.5	synth with cache (only 1: intro H; only 1: destruct H; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	40	40.725450	45960	3342
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.033403	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.041270	15	5	0.0.0.4	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.102166	20395	3739
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.024059	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	42.482074	15204	1224
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.027219	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.033452	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.341274	39851	4349
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	40.433054	14927	2861
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.248862	23362	5718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.048042	12462	1756
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.109020	33196	8496
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.125156	47066	4530
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.093318	20163	6637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.142678	51047	4388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.155440	19052	2185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.016893	10	3	2.0	synth with cache (only 1: intros; only 1: apply BinInt.Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	4.272523	2724	911	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.21	synth with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	6.937239	5823	1535	0.1.1.0.1.0.1.1.5.0.3.2.0	synth with cache (only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.odd_spec; only 1: inversion_clear 1; only 1: induction n; only 1: split; only 1: do 2 constructor; only 1: now exists 0; only 1: rewrite PeanoNat.Nat.Odd_succ_succ, <- odd_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	7.648677	6429	1646	10.2.0.1.0.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: unfold munion; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.127577	17	10	0.1.1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	1.079333	429	208	0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	0.580501	205	82	2.5.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	40	0.032095	14	4	1	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	40	0.012231	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.025582	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	40	0.006027	2	1	1	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	40	0.019855	7	4	0.3.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.014113	4	4	0.0.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: destr_eq H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	40	0.012313	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.113230	31808	7157
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	18.903213	22996	2184	0.34.0.0.1.0.1.0.0.2	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: congruence; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.006320	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	0.008139	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.404936	36252	3414
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.005299	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.117897	42204	2470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.060609	19703	2700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.082068	20419	8281
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.114221	27591	3019
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.040896	10188	2398
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.401143	32764	4662
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.475234	226987	3545
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.006184	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.051855	14686	2958
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.675122	38958	10162
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	40	40.068985	24065	2674
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.542370	19616	3988
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.109988	30434	5061
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.187195	65602	8594
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	40.147651	47940	6262
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.068652	21086	3081
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	1.681549	1659	641	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.068022	12249	1819
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.034472	5	3	0.2.0	synth with cache (only 1: intuition; only 1: invlist InA; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.138292	4376	1631
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.536674	20681	2582
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.451937	6987	1858
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.229479	25128	2887
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.063188	17251	4685
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	2.077756	538	82	0.4.18	synth with cache (only 1: rewrite InA_alt; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.091139	10	4	2.0	synth with cache (only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.045203	10678	1490
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.069972	18093	8622
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.063829	11844	2162
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.036815	9904	1997
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.234797	106441	1400
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.175656	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.144456	46743	1743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.153803	54461	7578
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.132519	38943	9491
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.117554	39607	4887
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.133125	64	16	0.4.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	0.687409	383	110	3.0.1.1.0.0.2	synth with cache (only 1: simple induction l; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	2.288408	1298	307	0.0.0.0.0.0.8.4	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40	40.043232	8873	5351
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	40	40.175817	31735	4104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.169619	64682	5286
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	40	40.082169	22381	7582
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.878003	1438	340	2.15	synth with cache (only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.035604	36	13	0.0.4	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.485097	38880	3346
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.408134	32338	6222
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	40	23.151628	16315	4634	0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert p' n; only 1: induction p as [p IH| p IH| ]; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.059325	18	15	3.1	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	40	3.069137	865	228	0.1.0.1.9	synth with cache (only 1: destruct x; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: discriminate; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	3.941207	3536	635	0.0.7.6.0.0.4	synth with cache (only 1: destruct l; only 1: auto with *; only 1: right; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.135518	14188	3389
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	40	40.116701	16123	3073
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	40	40.237913	26571	4164
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	40.067912	12655	7734
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.336464	24517	6120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.225195	70262	4058
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.026608	2970	567
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	3.655868	4069	653	18.5.0	synth with cache (only 1: intros x y z; only 1: intros H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.172120	67607	5833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.287304	86979	4496
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.180194	71124	4421
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	29.252614	16940	2413	1.2.0.1.6.13.5	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: split; only 1: apply In_1; only 1: trivial; only 1: apply In_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.254896	99405	9308
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.081900	22734	3635
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.216351	14902	1976
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.602258	24764	891
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	40	40.101804	33046	8049
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	39.455908	26002	10474	9.1.0.0.0.3.0.1	synth with cache (only 1: intros; only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	19.649070	12875	1662	0.0.4.5.20.3	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.118692	31694	1286
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	17.935166	30124	2050	14.1.25.6	synth with cache (only 1: firstorder; only 1: destruct x as [| a l]; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	40	6.000227	1333	271	4.3.6.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.121270	11324	732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.100295	3046	1133
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.131424	40389	1853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.514850	210	48	1.2.1.2.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	40.141073	25755	5481
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.045736	5	4	0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.046458	6	4	1.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.190335	30527	4983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.014137	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.121827	10681	3441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.032454	12	3	0.3	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	5.872539	10417	1164	0.1.1.13.0.1.0.2.1.7.4.1	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro H; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: trivial; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intros; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.074710	22140	4634
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.204111	68770	6228
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.243857	44859	2972
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.144276	49024	6204
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.243793	90455	6624
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.366565	65259	9217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	2.130024	601	79	0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	0.628114	418	153	1.0.1.0.1.1.0.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intro eq; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.061873	16	9	0.4	synth with cache (only 1: intuition; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	2.837865	160	30	2.9	synth with cache (only 1: intros n m; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.050550	7	4	0.2.1.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.140991	40446	11448
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.252908	42971	3402
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.021842	3	2	1.0	synth with cache (only 1: unfold eq; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.157984	60677	4257
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.042059	6463	589
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.168600	21222	4942
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.073704	22775	2622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.363724	16637	3237
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.094128	28983	3246
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.140082	129	64	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.029708	8	3	4.0.1	synth with cache (only 1: intros; only 1: unfold sub_carry, to_Z; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.158953	8674	2193
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	0.986203	679	160	1.1.0.0.11	synth with cache (only 1: intros l1 l2; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	40.066969	18322	4850
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.080053	26382	4674
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.360644	7513	3963
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.755695	276146	15909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.083439	20084	5044
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	40	40.237698	11754	2571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	36.777123	235017	2940
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	1.954570	435	179	0.1.0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	40	10.131482	7842	1134	12.0.0.1.0.10	synth with cache (only 1: nzinduct p; only 1: intro H; only 1: trivial; only 1: intro p; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.071556	22109	4562
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.026379	4974	1056
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	11.603739	2635	1094	0.0.1.1.1.0.0.0.0.2.0	synth with cache (only 1: intros m Hm x y e; only 1: functional induction (remove x m); only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: clear e1; only 1: inversion_clear Hm; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	40.067540	14015	1725
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.060114	12135	2064
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	2.793581	1235	137	2.1.0.0.17	synth with cache (only 1: intros Ext A Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.020985	5927	1449
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	0.415691	1768	146	3.1.0.25.6	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.231521	90383	11658
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	40	0.009224	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.721282	30214	3353
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.091699	21308	2038
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.113973	9058	4004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.383035	21489	1258
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.120109	38319	9188
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.379281	24578	2748
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.101697	35996	4324
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.069073	17884	6440
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.194994	72439	7446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.079280	22320	5222
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.173583	48390	5407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	0.213515	76	39	9	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.238039	13380	2302
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	40	1.961080	951	178	4.4.2.8	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: intro LT; only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.397596	46166	4523
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	4.840701	2659	835	0.0.0.0.1.0.0.5.0.0.0.2.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.008000	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.009813	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.030678	8	5	1.0.0.0.2	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	2.195558	1216	286	0.0.0.0.0.0.0.0.14	synth with cache (only 1: intros [| ] [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.110814	35515	9810
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.164393	32	8	1.6	synth with cache (only 1: intros q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	40.208426	31372	5315
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	40	0.009324	1	1	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.223551	80695	6473
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	40	0.005518	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.005707	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.015336	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	40	0.007386	3	2	1.0	synth with cache (only 1: intro H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	40	0.004284	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	40	0.008803	1	1	0	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.015853	7	3	0.4.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.045543	13653	1112
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.087929	22617	2832
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.056095	17467	3059
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.391864	32347	4236
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.006539	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.188534	54482	4744
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.727017	1381	498	0.5.1.0.1.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.110897	39663	1293
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.032692	6563	2368
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.545576	22430	5303
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.337161	152798	1789
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.034375	8	7	0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.050619	14426	3083
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	0.193749	77	31	0.0.1.1.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.007739	3	2	1.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.015143	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.014901	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	40	8.069385	8878	1420	3.0.15.0.1.0.9	synth with cache (only 1: destruct n; only 1: intro H; only 1: auto; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	40.159651	56262	8509
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	40	0.066720	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	9.214100	5643	896	0.17.0.5.1	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	40.101286	30677	5543
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.842988	398	127	0.0.0.0.0.1.0.1.0.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.087443	26017	3970
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	0.271070	119	32	9	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.792488	482	263	1.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	0.420057	230	56	11	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.138744	46006	6568
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.241623	1371	569
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	40	41.345898	25782	6373
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	4.882743	3594	217	13.34.0	synth with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: let rec mul_permut := let rec mul_permut_rec := let rec mul_push := gen_mul_push rmul Rsth Reqe ARth in fun t => match t with | rmul ?x ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- ?t == _ => mul_permut_rec t end in mul_permut).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.143825	30656	4283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.077529	21827	6143
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	41.624744	19388	2424
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.083532	6802	1945
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.202696	12791	3898
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	2.886593	2221	1038	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.099151	53	34	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.090088	51	33	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.140892	29435	5484
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	1.788562	839	72	14.11.0	synth with cache (only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: let rec mul_permut := let rec mul_permut_rec := let rec mul_push := gen_mul_push rmul Rsth Reqe ARth in fun t => match t with | rmul ?x ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- ?t == _ => mul_permut_rec t end in mul_permut).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.044444	10079	2036
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.071205	17920	6762
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.033303	7803	2116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.004688	1	1	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.005968	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.005749	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.096566	28686	8452
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.133100	36796	1408
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	40	5.759944	7311	1424	3.10.11	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.071255	4	1	3	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.006257	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.006949	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.013068	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.005577	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.005383	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.005308	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.006470	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	5.513817	1765	239	24.0.1	synth with cache (only 1: induction n; only 1: auto with bool; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.004884	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.004798	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1.980363	696	158	8.0.2	synth with cache (only 1: intros n m p q; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.345170	933	47	2.2.36	synth with cache (only 1: induction n as [| n IH]; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	40.115107	22275	3426
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	40	40.191491	40855	4524
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	40	0.010020	4	2	2.0	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.004385	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.011131	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	40	0.029526	20	6	0.1	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	40	0.009296	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	40	0.010645	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.011390	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	40	40.092359	33230	4233
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.090720	27642	5154
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.283202	122	34	9	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	40	0.008791	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	40	0.070460	55	13	1.4.1	synth with cache (only 1: inversion 1; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.077259	17	6	4.2	synth with cache (only 1: intros E; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	40.067347	24388	2703
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.043345	10243	2055
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.047160	11	9	2.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	40	0.524261	844	135	1.0.2.0.11	synth with cache (only 1: induction n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.107824	28625	7835
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	40	11.566171	30129	1690	1.17.0.25.13.3.0.3	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: compute; only 1: destruct l; only 1: auto; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.244202	1170	304
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	40	0.020174	16	4	0.1	synth with cache (only 1: inversion 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.231630	106	61	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	40	0.026295	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	40	16.024749	36207	1890	5.0.5.13.1.0.6.12.0.10.31	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: intuition; only 1: left; only 1: now exists n; only 1: induction n; only 1: left; only 1: exists 0; only 1: reflexivity; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.534953	79741	9844
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	40	0.500680	322	100	1.0.4.3.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.204907	54225	2527
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.032778	8	7	0.1.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.005221	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.132899	83	24	1.0.7	synth with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	2.725448	4426	470	0.4.0.8.13.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.016971	7	4	3.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	15.919648	18228	1457	5.0.6.0.0.12.0.2.1.26	synth with cache (only 1: destruct n as [| p| p]; only 1: intros a; only 1: easy; only 1: intros H; only 1: induction p; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	40	7.447529	6017	990	1.0.25	synth with cache (only 1: induction 1; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.141717	47173	4650
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.346332	13266	5471
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	14.721284	15621	2406	2.2.0.0.0.0.0.0.0.24.0.0.0.17	synth with cache (only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.178173	59647	5453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.502121	988	171	0.21	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.015015	3	2	1.0	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.009716	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.087293	45	19	0.0.0.1.0.0.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.012425	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.006783	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.263947	102453	4668
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.047397	13608	1936
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	40	0.947234	408	194	0.4.0.0.0.4.0	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.108916	36113	3673
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	40	40.151319	59425	4135
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.876787	1002	166	3.4.1.1.7	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: right; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	40	4.830720	4877	948	3.7.3.5.0.0.0	synth with cache (only 1: induction n; only 1: intros; only 1: trivial; only 1: intros a; only 1: destruct a; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	40	1.202405	810	149	3.1.3.5.1	synth with cache (only 1: intros; only 1: induction n; only 1: intuition; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.237353	22368	3626
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.174102	63783	5016
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.080190	10392	5083
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.066233	20907	2795
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	40	40.148913	55072	4541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.604716	17681	2579
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	19.610063	16206	3306	12.12.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.086847	21666	9952
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.173702	38420	3186
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.240543	74682	10397
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.138019	35672	5404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.177944	5498	786
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.120493	48124	1636
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.119374	29534	8627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.118201	26608	6094
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.193921	72973	5692
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	0.971294	965	122	0.0.1.7.5.5	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: auto; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.204300	316	84	6.0.0.0.0.0.1	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.089057	28337	1434
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.090544	24252	5231
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.216151	89009	4136
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	1.489119	1678	201	0.0.1.4.3.10.1	synth with cache (only 1: red; only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now try Z.order'; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	40	40.063048	18675	3544
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.264990	50017	8569
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.203117	70596	8242
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.116425	38698	6693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.533207	8741	1218
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	2.525259	1961	271	6.6.10	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	2.191265	2318	61
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.104458	20898	6399
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.969429	587	200	14	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.206207	7671	2370
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	0.790197	303	41	8.6	synth with cache (only 1: intros Az RS n H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.110352	40693	5003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.067142	18434	5753
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.123344	25607	5548
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.088023	499	65	20	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.130424	48572	1736
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	40	40.065330	17164	4994
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.066962	15	6	0.3.1	synth with cache (only 1: intros; only 1: generalize (mem_in_iff m x), (mem_in_iff m y), (In_iff m H); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.128613	32036	5570
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.085766	30084	3312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.143095	34788	5699
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.200263	9101	2088
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	1.535308	1080	109	22.2	synth with cache (only 1: intros a b H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.038874	15	4	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	41.366490	10275	2026
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.049634	2896	588
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.093325	24765	4933
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.140885	5241	849
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	40	40.149424	56561	9589
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.343929	149244	6558
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	40	40.113670	36871	8545
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	40	0.034873	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.143922	46794	10447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.072730	16155	9986
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.058039	14128	6807
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.188258	71827	8955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.007285	2	1	1	synth with cache (only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	0.009280	2	1	1	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.006843	3	2	1.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.135359	34477	5389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.351204	15315	4029
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.007769	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	0.023643	9	3	2.0	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	40	1.872812	2042	199	4.1.28	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.110616	38499	6799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.083657	26014	6162
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.173607	10556	1771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.108694	35925	6092
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.725203	29771	3436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.340836	13987	2089
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.063437	20505	2239
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.118348	30416	6594
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.004102	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.141711	37729	3542
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.032656	7469	1203
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.085292	20467	2586
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.075579	20301	5636
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.107021	33494	8848
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.041444	9770	2620
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	4.210616	5005	301	0.9.0.2.3.0.72	synth with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intros n; only 1: intros p IH; only 1: reflexivity || apply f_equal || exfalso; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.139758	50637	5629
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	5.349282	1518	215	19.0.2.1	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Morphisms.solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	42.538623	25855	3689
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.051767	9172	1213
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.029910	6751	1963
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.078116	25279	4645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.598715	37146	5484
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	40	2.864443	1835	395	4.5.0.0.4.8	synth with cache (only 1: revert m; only 1: destruct m; only 1: left; only 1: auto; only 1: right; only 1: apply Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.178985	54141	5028
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	20.100491	13064	1766	17.14.4	synth with cache (only 1: intro; only 1: unfold Z.le, Z.ge; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.061578	18543	4614
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.517806	21744	4556
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	40	41.277190	33059	4355
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.199951	69416	12538
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.027251	7824	1351
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.081065	26509	1386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	40.375540	22091	2100
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	6.321416	8452	213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.094592	20645	4778
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.150884	33644	3704
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.285050	32781	3995
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.057413	14887	4411
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.007234	6	2	1.3	synth with cache (only 1: intros; only 1: apply CMorphisms.reflexive_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.155335	35228	4320
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	41.046184	1468	647
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.192791	7205	3875
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	2.757193	503	149	0.9.3	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.113055	36039	7074
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.016461	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.167284	35	15	3	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	40.215020	48656	7667
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.085736	29451	4542
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40	40.861862	14463	1561
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	2.798930	2220	389	6.0.7.4.3	synth with cache (only 1: intros A C h1 h2; only 1: induction n; only 1: firstorder; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.125354	39054	7663
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.019430	5	3	2.0.0	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.003278	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.106431	36539	3187
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.003561	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.020591	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.003355	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.028780	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.003443	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.143343	24575	6211
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.005161	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.013427	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.012827	8	5	0.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.112895	27898	7443
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.244803	97705	6380
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.235744	104	61	1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.273334	7238	806
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.118892	33670	7762
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	28.197425	32856	6334	1.3.0.3.8.4.7.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intro ND; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro H; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: intuition; only 1: now subst; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.263445	87783	3508
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.089088	28604	3848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	24.691709	11388	3137	0.0.0.0.9.0.3.3.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.074949	21032	3032
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.117941	22960	3560
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	3.057984	3274	807	1.1.4.1.0.0.5.5	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: now destruct n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.159589	58403	3948
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.002842	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.335550	33596	5724
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.134638	44110	4372
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.174997	67924	4068
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	40	40.058663	16207	2581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.093967	30405	5424
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	1.055175	416	121	1.4.0.3.0	synth with cache (only 1: simple induction x; only 1: easy; only 1: intros; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.178323	59526	8861
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.023764	3467	506
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.098818	33707	3744
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.065878	17449	5113
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	17.213756	21638	2817	4.0.0.0.0.0.0.18.1.1	synth with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: Nat.cases n; only 1: intro H; only 1: auto; only 1: intro n; only 1: now Nat.nzsimpl; only 1: intro n; only 1: now Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.056722	17104	2472
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	40	40.168748	63699	5130
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.178635	21650	7483
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.105941	28752	10493
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	40.189670	32369	1738
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	40	0.483603	166	41	2.2.9	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: Morphisms.solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.011547	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.136797	21502	2551
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.627892	11087	1902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.149569	33658	2980
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.188221	46338	7575
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.231865	135	42	0.2.4.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.167324	64270	3569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.227896	15119	3211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	40	15.531131	6376	1933	3.0.0.0.9.5.0.2.0.0.0.0.0.1.10	synth with cache (only 1: unfold Z.min, N.min; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: rewrite N2Z.inj_compare; only 1: now case Z.compare_spec; only 1: discriminate; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	1.450512	476	166	3.1.0.4	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: intro n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	1.662564	594	117	2.0.9.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	40	1.770019	1043	350	0.0.1.0.2.1.0.1.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.718693	2433	214	32	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.033061	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.008465	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.034145	3	2	1.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	40	6.297814	5896	858	2.2.1.19.0	synth with cache (only 1: intros x y z; only 1: induction 1 as [| * [| ]]; only 1: trivial; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	0.027255	24	6	0.0.3	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.151776	62028	2001
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	5.409515	2486	784	0.0.0.0.3.11.0.1	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.112915	15946	886
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.019867	6	5	0.0.0.0.1	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.006344	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.242232	87753	6110
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.121963	44771	2693
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.133727	41677	7801
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.138552	42927	8285
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	40.516196	225833	7744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.079815	24303	5900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.278981	5602	1394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.066209	18093	4827
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	40.117984	38112	9129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.213763	10160	2372
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.556155	175	86	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.021800	3	3	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.094050	26741	7123
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.134174	42602	5615
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	40	18.034258	46003	4106	1.0.9.0.48	synth with cache (only 1: Nat.induct n; only 1: left; only 1: constructor; only 1: intros n IH; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	40	0.019903	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.136186	30729	6426
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.100118	36978	3676
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.092482	27240	7889
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.044849	17	3	3	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.069186	17539	1822
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	40	9.554540	5914	1434	0.0.0.11.13	synth with cache (only 1: generalize dependent n; only 1: intros n v; only 1: induction v; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.285052	19641	2690
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.048099	14078	4079
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	40	10.369471	7300	2730	0.0.1.0.2.1.0.1.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.099350	27300	5544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.085901	21648	2986
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.153887	10310	1680
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	40	40.164939	65712	7187
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.154137	60964	1917
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.077495	23353	4253
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.082851	24802	5777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.202100	11757	2084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.210169	16974	1947
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.102149	35763	5007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.085591	29427	3258
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.139410	21440	4975
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.128095	47139	5247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.078827	24448	5037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.151823	4300	832
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.163761	58843	6773
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.097729	31384	5111
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.251005	23968	3349
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.095184	27323	6326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	1.137432	180	47	5.5	synth with cache (only 1: red; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.090678	28446	4011
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.124471	38947	3863
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.046804	13034	3105
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.160018	61827	3894
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.091565	21736	5097
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.084117	24565	6810
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.030390	7098	1536
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.049543	12888	3001
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.106527	22577	3644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.320244	16558	2987
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.207645	82504	6633
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.614164	24421	6363
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.101257	36192	4955
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.005224	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.365860	13437	3464
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.181714	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.006823	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.192030	40429	3064
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.104048	31843	6656
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	40	40.145787	12395	2033
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.522882	23370	2950
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.070987	21974	3078
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.068758	21456	1140
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.061552	14443	7461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.428201	28121	2997
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.338108	38495	1199
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.105179	34701	6441
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	27.140245	10808	2591	0.0.0.0.0.0.0.1.0.0.0.0.8.0.0.0.0.0.0.6.7	synth with cache (only 1: unfold Z.max, N.max; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: case Pos.compare_spec; only 1: intro H; only 1: now subst; only 1: trivial; only 1: intros; only 1: auto; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.241936	12233	3306
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.067213	17325	2849
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.046312	3879	1644
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.071685	20732	4762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	4.181476	6686	730	2.3.26	synth with cache (only 1: compute; only 1: intros m x y; only 1: auto using Proofs.find_1, find_2).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.219982	84422	8825
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.009731	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.046702	10895	6581
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.191372	34135	5294
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	41.527343	9431	1283
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40	40.045292	10402	4532
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.163783	63064	5446
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	1.227933	1342	113	13.17	synth with cache (only 1: intro H; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	16.315370	19325	2435	1.1.0.9.25	synth with cache (only 1: intro H'5; only 1: inversion 1; only 1: auto; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	40	23.014546	42639	4674	18.8.11.0.1.6.2.3.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	40.136364	51735	4844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.028963	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	40	1.903932	1153	408	0.0.0.1.0.0.0.0.0.7.0.0	synth with cache (only 1: induction n; only 1: intro n; only 1: induction n; only 1: now left; only 1: auto; only 1: destruct m; only 1: auto; only 1: destruct (IHn m); only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.019654	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.626125	179	77	0.4.3	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.158868	129	19	1.0.13	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.085649	26365	5173
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	1.001394	395	70	0.13	synth with cache (only 1: rewrite add_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.146490	40880	5524
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	40	40.267792	108010	7685
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.120601	28607	8418
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.537406	4098	455
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.112792	41510	3888
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	1.408051	1328	266	3.0.0.0.0.0.7.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.251990	20560	5694
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	40.064322	17035	4187
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.142186	44148	9975
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	40	40.089804	31975	3174
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.581848	79490	4008
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.901064	628	148	3.4.1.1.0	synth with cache (only 1: rewrite add_spec; only 1: intro; only 1: intuition; only 1: elim H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.035689	7398	3110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.378331	88	13	0.11	synth with cache (only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.234030	35412	14226
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.102753	24	6	0.3	synth with cache (only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.029978	2	2	0.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.032991	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.008475	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.349007	13820	1148
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.179480	69543	3610
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.066663	20165	3204
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	40.142358	57176	3725
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.140494	44686	7342
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.155593	55274	8252
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.103824	106	23	0.10	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.484469	29749	1154
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.014702	3	3	0.0.0	synth with cache (only 1: intros x y z; only 1: intros H; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.005527	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.015294	5	2	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.005489	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.010800	3	2	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.026354	6	3	0.3.0	synth with cache (only 1: unfold eqk, eqke; only 1: destruct 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.218662	83454	5467
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.617821	438	79	1.12.0	synth with cache (only 1: intros x y z; only 1: unfold eqk, eqke; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.103757	27146	11332
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.137138	29699	2747
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	5.719845	6069	803	0.0.1.26	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.150436	57562	2730
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.116312	5973	1124
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	41.391071	3602	971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.264955	29513	4503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.028477	24	5	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.081227	21570	4981
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	40	40.127628	42833	6846
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	40	0.031276	16	5	3.2	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	40	0.031488	29	8	6.1	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order || (right; PeanoNat.Nat.Private_Tac.order) || (left; PeanoNat.Nat.Private_Tac.order)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.112098	36164	3817
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	40	42.562662	49476	3330
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.058095	14786	7400
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.096723	30734	4283
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.154711	13713	470
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.129797	25346	2716
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.089548	26272	6457
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.067649	20989	4623
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.121582	37127	9690
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.318705	134377	7840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.059330	13995	5303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.258076	5633	1624
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.234419	17779	2915
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.090163	30036	4105
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	0.184120	136	30	1.0.0.11	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: intuition Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.285103	23151	8232
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.080715	20565	2267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.129572	28827	3852
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	40.048936	16698	2359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.221746	87458	7315
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.006214	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	4.005062	1680	514	0.0.0.2.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H0 in H; only 1: elim (StrictOrder_Irreflexive x); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.046206	11137	1232
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	40	40.214684	71653	2981
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	40.467707	15035	2700
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.140693	53413	5753
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	2.492131	1390	454	0.0.0.0.0.0.2.0.6	synth with cache (only 1: destruct s; only 1: intros; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.012934	6	3	1.1.1	synth with cache (only 1: unfold elements; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	40.127085	37517	5918
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.033272	7952	3762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.044349	7701	2197
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	40	40.141061	55061	5538
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.045346	11854	4228
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.198642	84763	2735
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	40	20.337348	28754	4078	2.0.0.3.2.0.1.0.1.0.1.1.11	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: intro H; only 1: intro; only 1: discriminate; only 1: intro H; only 1: auto; only 1: destruct m; only 1: easy; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.107777	37034	4861
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.260855	38139	5521
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.053493	12172	1857
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.085602	28130	4881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.215486	72976	2679
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.129876	44607	5674
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	5.606910	15733	600	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.200201	6144	1080
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.046193	9749	2203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.084823	30219	3036
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.725825	40850	6564
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.238501	68207	4488
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.102117	30436	8916
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.187902	34728	4560
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.055879	16695	2915
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.100069	27128	2120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.426990	312	66	2.1.8	synth with cache (only 1: intros P H x Hx; only 1: apply <- add_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.176089	63970	6431
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.090269	26890	6949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.191989	8488	1452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.033731	8302	1992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	40	4.331335	6195	629	1.0.0.22.12	synth with cache (only 1: intros x; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.107060	39155	1946
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.085374	24967	3381
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.133093	24216	3187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.346619	25989	5601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	6.275353	9214	477	0.23.22.32	synth with cache (only 1: apply to_Z_inj; only 1: rewrite !add_spec; only 1: f_equal; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.010082	2	1	1	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40	40.096193	37187	1256
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	40	8.577993	8643	1063	3.0.0.0.0.0.7.17	synth with cache (only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.357393	22781	5175
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.099595	35584	5130
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	6.218384	699	296	1.1.0.0.0.0.1.1.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.030654	6	5	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.262472	13552	2449
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.108695	36835	5627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.007946	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.330650	18382	4257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	0.702765	378	118	0.0.0.0.2.0.1.0.1.0.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: now f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.671362	337	55	0.1.10.0	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.122033	36506	9517
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.035480	8972	2368
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	40.300694	127101	6008
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.004996	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005220	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.005242	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.057289	17237	1657
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.542059	26261	4664
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.389685	30399	3212
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.276884	6902	320
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.099139	10574	4636
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.148872	18603	6015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.285905	24992	5947
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.327454	100128	3467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.345426	19720	4573
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.047894	8673	3860
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.216149	18578	5487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.158767	28068	1854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	1.005148	230	130	0.2.0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	3.336264	904	356	0.0.1.4.2.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.400987	94	58	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.142158	52252	4774
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.051360	10720	4377
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.077916	24657	4542
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.115589	29256	5651
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	40	40.098367	37925	3576
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.020597	5	3	0.0.2	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.209977	17	5	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	0.062120	10	2	3	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.094014	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	40	0.058483	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.065666	9	2	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.102494	29999	6212
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.138145	34231	8499
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.027035	6771	2385
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	41.394912	27964	5290
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.225218	92324	5203
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	1.272335	97	31	1.0.0.0.6	synth with cache (only 1: split; only 1: split; only 1: parity_binop; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.025452	5728	2546
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	2.275487	2612	320	2.9.13	synth with cache (only 1: intros x Hs; only 1: inv; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.351495	54832	8600
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.057456	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.027921	3	3	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.077491	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.056384	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	38.663483	48377	12857	0.0.0.24.0.3	synth with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.057538	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.155338	37545	4351
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.062218	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.056555	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.057155	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.080149	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.071198	16007	6432
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.096908	28733	1886
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.109358	38792	2196
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.314814	22490	3887
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.199128	2038	635
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	40	40.052972	13158	2090
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.063004	20376	3174
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.468984	23975	1732
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.104819	20047	8731
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.062011	10769	1982
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.027876	13	3	6.0	synth with cache (only 1: intros x y z; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.009501	4	2	2.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.083389	6	4	0.0.2.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.119688	79	25	2.0.0.7	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.090393	22896	9663
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.039623	5	4	0.0.0.1	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.155160	7238	1446
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	40	40.119343	38870	5247
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.141375	34550	4157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.049912	12232	3334
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.109756	29799	3164
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.142620	9988	2408
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.070724	21357	3660
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	40	0.009496	7	2	5.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.008798	5	2	3.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	40	6.705922	2242	325	5.3.2.0.20	synth with cache (only 1: split; only 1: split; only 1: parity_binop; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.043761	12	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	40	0.037395	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.114606	41449	4988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	40	0.059531	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	40	0.086478	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.058572	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.036536	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.070381	16354	5987
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.044337	11	3	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.328925	127412	2082
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.029513	2032	465
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	6.311954	12778	991	0.3.7.28.13.1	synth with cache (only 1: split; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intros; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.075758	17347	6759
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.440277	79615	8510
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.078393	27335	3251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.313951	20985	2251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.068176	20227	6591
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	40	40.128550	50159	3850
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.004614	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.271492	7796	1700
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.036595	12	3	3	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.091300	28641	4597
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	40	8.822519	11318	2802	12.1.0.4.1.6	synth with cache (only 1: induction l; only 1: simpl; only 1: intros x y H; only 1: firstorder; only 1: simpl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	40	0.758783	911	136	0.0.2.0.0.0.14	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: intro H; only 1: right; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.090455	31520	4116
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	40	0.021745	19	4	7	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	40	0.004793	3	1	2	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.036911	11880	1998
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	40	0.008867	4	1	3	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.182169	71363	6451
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.005963	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	40	0.062215	21	5	5	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	40	0.018785	9	2	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	40	0.010961	11	2	3	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.014620	10	2	3	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.122565	36667	6698
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.127201	47572	3572
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	40	40.131920	46078	8206
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.090887	9438	1666
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	41.026302	11855	2518
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.108752	32379	4377
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.010146	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.059601	6064	1552
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	40	40.130297	52260	3783
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	40	3.766380	3128	1139	2.2.0.0.1.1.1.0.0.5.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intro H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	3.255140	6920	820	9.20	synth with cache (only 1: intro A; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.043745	10193	6244
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.155336	43034	18049
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	6.748234	6879	1512	0.3.4.17.2	synth with cache (only 1: intros; only 1: injection; only 1: intro e; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.042656	12188	1753
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.123662	41233	7706
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.072823	11838	5928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.242859	34062	4970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.102572	35784	4617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	40.260586	12401	5163
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.066216	5587	1106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.286692	5548	1088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.970941	177	111	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.110368	15645	4790
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.097394	31635	4850
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.039512	9584	3996
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.137767	46280	9091
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	40	40.097138	35750	3151
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.005894	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.348995	35707	6267
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.006382	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.308207	4883	586
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.004607	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.007290	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.799248	46576	2969
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.082526	22428	7865
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.080842	21458	2212
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.183314	49055	5287
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.280627	39712	4076
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.107132	6350	1570
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	6.739921	7858	922	2.3.0.19.5.0.3	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: induction l; only 1: auto; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.127605	34914	3092
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	40	1.708635	2017	227	11.0.2.15	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	22.048285	20659	938
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.169898	54872	6912
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.006006	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.008744	2	1	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	40	0.367928	325	58	0.0.0.0.12	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.038155	7104	2064
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.024704	6	5	1.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	4.502769	4925	390	52	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.042742	10453	2806
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.098166	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.035353	2	1	1	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.118004	13239	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.361783	30865	5891
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.067156	21685	2903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.238330	12881	3322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.198110	34894	1505
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.360862	17903	2784
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.166201	67430	5793
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.318978	20736	2204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.373428	13504	4142
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.107923	18700	6059
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.009696	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	17.536236	8762	1907	2.18.0.0.0.0.0.0.1.3.0	synth with cache (only 1: intros; only 1: destruct x; only 1: cut (1 <= 2 ^ Z.pos digits); only 1: intros; only 1: trivial; only 1: apply Z.le_trans with (Z.pos digits); only 1: lia; only 1: apply Zpower2_le_lin; only 1: auto with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	0.005459	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.264771	33508	3904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.314762	10458	2228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.118262	18	8	0.4.0	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.070300	18360	4920
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	40.222412	88140	4546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.024234	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.027399	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.250501	337	55	2.0.0.8.2	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: invlist InA; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.024389	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.024433	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.023841	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.034583	7734	2740
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.319589	20418	3630
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.064308	15921	5665
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.055992	5872	2599
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.533033	24816	1952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.279394	18142	5691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.543005	107	59	0.0.1.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.047218	9145	3987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.306826	31182	4485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.208851	31564	2200
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.067465	17403	2794
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	0.080555	43	15	0.3.1.1	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.277179	10922	3820
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.202182	45511	5046
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.134453	41705	8824
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40	40.215298	6016	3462
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.194565	46294	6133
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	40	40.068600	18686	5824
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.071079	26539	2997
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.118930	35794	3874
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.099400	28447	4955
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.050591	12580	6202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	8.614276	1384	461	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	40.249996	44578	5243
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.368713	37849	8039
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.317286	43352	9528
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.125232	28264	8013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	18.411213	4854	1083	5.5.5.6	synth with cache (only 1: intro H; only 1: intro; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	29.169430	10333	1865	16.7.6.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	16.215257	10106	3437	1.0.0.10.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.119616	30801	11175
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.113490	38653	2532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.220799	44809	2691
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	41.747963	20740	5434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.372833	13444	2334
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.060951	10628	4737
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	40	40.101175	15586	3472
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.174447	44186	7728
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.070942	14897	9668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.099046	29317	7137
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.087866	32545	2294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.302342	26701	3736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	18.451740	7060	2626	0.1.1.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.151636	7628	2775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.435944	123680	2664
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.083249	346	84	0.0.0.8	synth with cache (only 1: intros a b H; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.224433	86951	8838
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.021257	8	5	2.0.0.0.1	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.144343	30	29	0.0.2.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	21.929697	20395	930
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.006211	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.007163	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.168412	62854	3608
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.064691	14440	5816
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.656330	75	12	9	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.290011	49378	3181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	8.721712	4017	760	4.1.4.1.0.0.0.6.4.1	synth with cache (only 1: intro n; only 1: intuition; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: tauto; only 1: tauto; only 1: tauto; only 1: apply (lt_irrefl n); only 1: order; only 1: apply (lt_irrefl n); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	9.281804	5505	1100	0.0.0.0.0.0.0.14.2.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: vm_compute; only 1: destruct (eq_dec x y); only 1: rewrite add_eq_o; only 1: auto; only 1: auto; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.142344	35	13	0.0.0.0.0.2	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.642965	66	12	9	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.032568	15	3	7	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.021079	10	2	5	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	9.061944	6604	1351	2.0.1.0.2.5.1.7.0.1.0	synth with cache (only 1: simple induction y; only 1: unfold set_In; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.099990	37	9	1.7	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.022216	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.091676	36	15	4.2	synth with cache (only 1: intros l m a; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.138069	27114	3151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.061497	10470	1890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.107213	38424	3650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.276106	34440	3923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.095735	19659	2794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.265878	7696	2332
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.312376	27166	3930
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	40	40.118955	48858	3324
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.087957	28584	6688
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.091223	27329	8479
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	16.676909	28179	2449	4.12.29	synth with cache (only 1: intro H; only 1: intros m IH; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.254837	18438	3811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	24.216556	9117	2623	2.1.0.4.11.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.088315	27799	3795
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.065814	14962	3158
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	1.236174	4628	89
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	40	0.009835	5	2	3.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	40	40.117645	45774	4567
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	40	0.007851	5	1	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.166151	15343	3352
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	40	40.169557	57623	7066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.112857	40557	4271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.331106	21462	3012
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.839912	10441	2187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.152457	10232	3069
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.033275	8594	3086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	10.664277	11430	1604	5.7.0.0.18.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: left; only 1: order; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	40	40.281008	44703	10703
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.373925	129160	8115
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.188594	65373	6684
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.124795	39319	8774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.202616	16882	5492
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.115359	33642	4435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.262066	12866	4774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	3.636796	2988	474	0.13.7	synth with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.138714	46826	8461
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.155233	17207	2252
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.064152	21769	881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.340253	21329	4750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.230360	5985	1157
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.104576	6316	1479
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.171741	9825	1651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.137980	459	81	0.12.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.117062	22256	6469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.023914	4	4	0.0.0.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.110300	23414	5089
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.029526	8	6	1.1.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: subst; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.287012	21538	3977
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.102334	29980	3902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.129055	12293	7156
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.830288	45456	6398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.100115	31209	5053
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.046541	11992	2485
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.130750	49214	6012
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.083924	26207	3200
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.073982	12162	1315
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.131045	46129	3668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.136818	7295	1470
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40	40.196921	21463	3661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.098508	31226	5285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.229435	89095	3575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.060127	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.044486	14639	2640
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.146636	37070	5478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.085692	24383	4041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.389156	25329	5274
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.005650	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	40.265544	24901	6592
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.144513	10358	2061
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.044083	6480	1302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.241086	10009	4202
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.190630	17795	5933
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.397814	14077	3054
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.153297	15196	2718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.070938	21741	3508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.292676	26630	6267
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.087435	22173	6960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.431440	47768	2302
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.047595	6263	1412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.009398	2	2	0.0	synth with cache (only 1: intros m Hm x y; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.006577	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.061687	24	9	0.0.0.1.0.1	synth with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.042177	14	7	2.1.0.0.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.070543	25	12	0.0.0.0.0.1	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.280030	10104	3010
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.088579	28890	2931
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	1.169982	418	122	1.0.0.2.1.0.0.2	synth with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: destruct n; only 1: intro H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.226672	79665	2790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.325364	12482	5383
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	40	40.159621	27599	2575
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.113681	31746	8980
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	40	40.066344	7830	4425
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	1.917368	3071	264	1.30.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	0.010130	1	1	0	synth with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	6.398303	2561	1009	0.5.0.1.1.1.0.0.0.1.1	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.019217	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.095640	30452	5426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.311468	19607	3575
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.078156	26764	3424
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	17.972820	18637	2359	0.0.7.13.13.0	synth with cache (only 1: unfold MapsTo; only 1: intros H0 H1; only 1: generalize H1; only 1: rewrite gso; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.082975	18392	6264
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.076656	18440	3310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.357972	16544	2712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.162104	60728	5290
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.083764	23594	4738
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.120494	34366	4440
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.356266	39510	7291
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.367678	4261	1858
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.009101	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.006866	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.007305	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.050386	9540	4923
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.042854	9929	3489
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.054911	14013	2427
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.288469	43567	3461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.063977	11356	2158
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.081147	25103	4655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.362111	25304	3376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	18.583683	7213	2929	0.8.3.0.2.0	synth with cache (only 1: intro n; only 1: intro; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.737212	21226	7807
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.214269	51333	7503
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	4.521980	1694	407	0.0.0.0.1.9.2	synth with cache (only 1: intro s; only 1: induction s as [| x s IH]; only 1: unfold Empty, empty; only 1: intuition; only 1: inv; only 1: intros; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.103504	30871	5542
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.065572	25218	2582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.252460	32652	4602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.309956	24187	2958
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	5.681013	7222	1064	0.0.8.11.4.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros x y H; only 1: induction H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	9.124203	4215	1494	0.1.0.2.1.0.1.0.1.0.1.1.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.136391	33021	6444
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	40	40.114603	33149	9631
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.084840	9542	2891
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.135391	48662	3963
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.375531	15813	1525
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.081330	11308	4445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.180669	7245	1956
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.335644	70194	3247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.047105	7481	3675
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.167675	63	27	0.3.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.078499	19	14	1.1.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.534321	40003	2331
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.338251	32552	5256
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.071211	19639	5672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	10.506271	9957	1913	0.7.7.7	synth with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	16.995625	28599	2206	8.0.0.49	synth with cache (only 1: induction m; only 1: destr_bool; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.108973	5249	901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.144491	55615	3571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.094339	23575	6879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.241644	12762	2616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.297231	13727	3667
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.304638	22896	3722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	7.782632	3871	1099	0.0.0.1.0.0.1.0.0.1.3.4	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.019037	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.066472	12	6	0.0.0.1.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.144103	59407	3505
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.012788	10	2	3	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.109916	40090	3988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.108404	32136	12662
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.189669	73272	5585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.306689	11885	3527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.143282	14947	3844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.078024	9520	1974
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	4.505632	2996	616	5.14.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	40	40.087388	25364	3821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	0.514659	321	72	1.2.3.6	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	40	40.102396	39225	4610
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.059393	9529	2429
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.186763	65225	6900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.124679	39200	7500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.187548	12825	4517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.088052	52	24	0.2.1.1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.330240	18941	3190
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.255363	2546	719
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	40	1.949287	963	214	6.1.0.4.2	synth with cache (only 1: intros; only 1: induction v; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.750445	276	81	0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	3.857151	1077	398	0.0.0.0.6.1	synth with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	0.495290	170	122	1.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.054764	12879	6745
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.017614	7	4	0.0.0.3	synth with cache (only 1: intros; only 1: induction v; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.004874	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.313772	97172	11272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.210582	12215	4718
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.389915	159984	3283
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.123591	32906	5030
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.311256	70629	5964
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.286050	205	46	0.0.9.0.2	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	7.258695	10594	728	3.32.9	synth with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.284242	20536	5037
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.091421	26394	6935
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.059776	40	20	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.029221	8842	1523
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.036851	23	12	5.0	synth with cache (only 1: revert m; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.158863	37326	3758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.206332	11056	3014
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.365211	28654	5971
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.817081	101	62	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	40	25.952583	22036	3651	19.0.6	synth with cache (only 1: intros [| n]; only 1: reflexivity; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.155047	20631	7185
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.024965	10	3	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.085587	22902	5590
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.008422	4	2	2.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.094492	26974	5943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.115133	10957	3542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.091369	25839	6822
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.851025	40209	4597
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	40	0.838487	396	185	0.3.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intro; only 1: simpl; only 1: trivial; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.342784	52345	7708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.068581	23020	3377
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.142066	746	236	2.0.0.0.0.0.0.0.0.9	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.051973	9722	1632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	1.206233	1101	205	1.3.4.3.5	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: unfold norm; only 1: now destruct nzhead).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.139701	47950	5869
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	40.051114	13958	3251
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.580804	121	31	4.3.0	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.059750	20461	1909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.105104	33705	4571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.203431	20088	918
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.077390	22440	6323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.435840	24674	5112
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.088883	8071	1638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.115930	43029	1969
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.094304	34722	4325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.127822	5	3	1.0.1	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	40	7.032396	9978	1065	2.13.4.7.0.64	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl'; only 1: intro H; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.062042	14317	6360
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.108497	19339	5821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	6.647105	1034	269	0.0.0.4.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.275740	24744	6532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	11.603642	6938	1931	0.3.2.0.1.0.3.1.1.0	synth with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.194630	68929	11173
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.050253	10105	2508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.219767	8349	3710
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	6.524913	3735	914	1.0.1.3.0.0.0.9.0.1.0	synth with cache (only 1: destruct n; only 1: intro; only 1: simpl; only 1: now N.nzsimpl'; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: discriminate; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	40	3.091245	5137	479	0.9.2.3.4.55	synth with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: intro H; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.214611	17975	5604
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	0.419938	158	59	0.0.4.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.031124	13	6	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.322888	37409	5245
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.044213	11927	2589
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.091880	19123	1574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.600557	45235	3799
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.071818	17333	3086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.161061	10939	5438
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	2.472175	1606	543	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros a n; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.435982	24424	3232
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	33.660243	13020	2283	0.31.0.1.1	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	40	40.042357	6637	2574
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.337115	39290	3704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.090469	17538	2091
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.240697	41369	8644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.336987	20194	2248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	40.251585	37209	6914
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.126131	45955	3261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.086072	15591	2991
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.125792	47999	4906
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.040104	9033	3865
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.052026	7936	3083
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.197875	24244	6950
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.014168	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.069123	25667	1664
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.242306	53317	3690
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.063884	15930	2288
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.085729	24929	6609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.192781	11016	1887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	40.239522	29995	6157
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.111929	19786	6077
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.227046	71837	7143
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.080239	22287	4215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	40.078106	23097	3330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.133968	183	16	1.17	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.090594	31291	3149
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.186020	61612	6158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.262587	37381	4767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.382564	46582	3514
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.181944	70537	5376
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.154234	42196	3108
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.129162	41993	6493
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.082040	5966	1004
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.024217	4356	885
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.107867	34664	5514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.187747	7195	1582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.333812	48906	2905
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.038572	7818	4203
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.560896	41091	2306
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.460986	74432	8411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	40.263375	31902	7146
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.096706	30913	7058
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.076060	7539	1277
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.214544	14	4	6	synth with cache (only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	12.294469	12105	3290	0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.3.2.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.039126	923	252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.073346	21813	3523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.277253	10914	4008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.229554	11590	2880
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.275905	16485	3999
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.097000	30415	9017
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.079223	27106	4526
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.242906	6917	2729
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.382517	151666	11813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.064427	12	8	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.121258	40334	4836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.070415	22357	4193
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.043827	14455	3316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.285074	21191	4570
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.415635	941	537	3.0.1.0.1.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.093537	31270	3787
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.115413	27764	3007
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.231768	27471	3434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.331232	115059	6187
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	40.162106	6264	2995
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.018149	6	4	2.0.0.0	synth with cache (only 1: simpl; only 1: intros n l d; only 1: revert n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.233756	21000	3837
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.018520	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	40.132869	10336	3611
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.101491	33829	4250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.491556	110	42	1.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.197677	13623	3478
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.113067	27991	10870
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.063223	20808	1724
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.161090	58882	4406
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.142755	44660	6154
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.022902	7	6	0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	2.436731	8173	213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.145433	13433	2716
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	16.443537	15152	1568	2.6.10.0.10.15	synth with cache (only 1: intros A f assoc a0 comma0 l; only 1: induction l as [| a l]; only 1: destruct y; only 1: induction H; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.234432	6816	2423
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.135161	39781	10782
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.078651	26234	2765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.220224	31993	6044
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.071013	24821	2361
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.044785	6864	994
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.240340	22836	6555
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.223903	62200	8200
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.469064	8694	1311
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.053518	12307	1606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.093647	23024	5873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.093129	31085	5591
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.054327	14926	3300
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.178945	61859	7360
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.901640	39508	4796
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.238576	9851	1248
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.056824	16648	1607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	40.263020	39448	4917
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.086201	26196	2954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.259334	6014	769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.444421	29267	6662
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40	40.104501	36834	3927
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.111043	41856	4474
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.070635	23464	1648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	24.844638	42907	1869	0.0.3.50.0.14	synth with cache (only 1: unfold even; only 1: destr_bool; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.158832	24217	7424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.213039	11410	1219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.269330	27949	3881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.074263	22948	3042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.299510	21897	4627
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.167407	45058	6915
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.162599	58954	6316
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	5.140752	1131	84	2.2.7.6.21	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: eauto; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.254535	9079	3728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	6.137168	3912	1017	1.3.1.0.4.0.2.0.1	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros hyp; only 1: destruct a as (x', e'); only 1: simpl in *; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.126736	40329	10842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.764736	114	48	0.0.6	synth with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.282421	46318	5294
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.249095	22640	4531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.049151	14534	2657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.362831	43537	4939
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.059083	17352	3430
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	37.357171	89864	6085	1.13.0.4.0.0.0.33.12	synth with cache (only 1: intros P notall; only 1: apply notall; only 1: auto with sets; only 1: intro X; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.054545	13761	3171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.128543	10246	2293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	3.570655	652	288	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.095858	31138	4439
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.019912	3130	1918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.225770	15555	6235
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	40	9.178335	4894	929	4.11.1.0.1	synth with cache (only 1: unfold Qeq, Qcompare; only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.543199	36324	3713
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.055133	8150	4292
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.357516	51696	5773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	4.713968	3075	898	4.0.3.3.1.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: inversion 1; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.122112	18938	1874
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	3.903600	954	472	1.0.0.1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.026219	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.025535	13	5	1.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.015207	9	2	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.006198	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.005457	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.005185	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.004976	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.025430	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.296659	22192	673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	40.277431	43828	6783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.084418	27970	3654
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.095613	35995	4251
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.220601	361	155	0.0.1.0.0.0.2.1	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.176172	67931	4864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.422368	147	73	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	20.861593	50781	6945	14.0.1.4.0.0.1.9.3.4.0.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: simpl; only 1: intros; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.042356	9	9	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	18.465027	64205	1713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.198593	71551	6246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.331020	232	81	0.0.1.0.0.0.3.0.0.0	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.036044	11148	1250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.145270	26065	6885
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.226195	53957	4031
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.042389	4	4	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.054883	16490	2344
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.070796	8	5	0.0.0.0.3	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	40	40.204636	80509	4583
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.181276	10308	3445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.385601	14000	3331
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	40	0.914311	1013	246	1.11.1.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.184627	48667	6023
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.947240	18094	7185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.131098	9851	2655
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.105113	36692	4293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.253175	33586	5731
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.098146	31946	4370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.424896	55004	5166
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.131014	31620	5080
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.200641	78077	3059
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	40	11.739611	1941	1234	0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: trivial; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.068624	11714	4806
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	21.687761	29678	4768	13.0.0.0.0.1.0.12.0	synth with cache (only 1: unfold not; only 1: induction l; only 1: simpl; only 1: intros l x HF; only 1: apply Permutation_nil in HF; only 1: discriminate; only 1: simpl; only 1: intros; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.083330	10190	1247
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.075088	26325	2093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.208584	8911	2076
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.028280	5	3	0.0.2	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.399781	90232	4505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.089708	25885	3359
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	14.262244	2110	1250	1.1.0.0.2.4	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.110475	41806	3013
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	34.277334	22107	3654	0.5.1.3.6.3.3.2	synth with cache (only 1: unfold permutation; only 1: intros x y z; only 1: rewrite multiplicity_InA; only 1: unfold permutation, meq; only 1: intros H a; only 1: rewrite multiplicity_InA; only 1: setoid_rewrite  <- H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.418713	52131	10965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.728324	373	37	0.19	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.383815	24850	6140
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.537020	15	4	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	1.789228	717	236	0.0.0.0.0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: simpl; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.113404	25615	6009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	13.658058	9088	1773	0.0.0.8.9.3.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.114952	24906	3026
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	2.234717	859	317	0.0.0.2.0.0.0.1.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.017064	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.256026	40850	13901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.282944	11717	3018
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	12.583632	3214	763	1.0.3.0.0.1.0.0.5.2	synth with cache (only 1: revert l; only 1: induction M; only 1: simpl; only 1: intros; only 1: intuition; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: intros; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.246755	18637	4980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.306547	2104	776
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.105231	32841	9236
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.095944	14538	3636
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.169265	66264	5068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.301408	5358	1912
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.025686	16	6	2.0.1.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	1.429817	1460	201	0.0.1.1.0.4.1.9	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.109890	27989	4097
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	40	40.107219	38268	6594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.217901	25214	4508
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.747725	231	72	11	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.017450	14	3	4	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.315856	17977	3059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.021837	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.156242	53564	9412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.055091	12831	2447
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.282396	19766	4909
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.246488	21819	5326
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	10.019858	10074	1673	0.1.2.0.4.1.3.6.3	synth with cache (only 1: intros l1 l2; only 1: unfold permutation, meq; only 1: intro a; only 1: simpl; only 1: intros H; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.091911	28300	4817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.252271	29790	4729
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.091398	29948	4348
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.053159	16918	2014
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.096239	17663	3441
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.049078	18	8	1	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.025861	9	3	7	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.055028	14	10	3.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.141677	39806	9729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.122290	10255	2649
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.113989	37362	3320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.275563	14913	5203
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.150702	53265	4789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.230591	35237	5742
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.070585	14957	6465
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.039033	11743	2153
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.075257	23202	3289
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.213608	24742	7768
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	0.295658	111	25	2.1.6	synth with cache (only 1: destruct x; only 1: norm; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.280355	105656	15248
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.205328	18931	4060
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.065625	18299	7663
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.071918	24285	1984
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.170929	46019	5192
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.123890	25617	3003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.272825	59773	7084
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.095028	47	16	0.0.6	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.756929	23545	6327
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	4.980685	2459	448	0.0.2.20.0	synth with cache (only 1: intros x y z; only 1: intros H; only 1: induction 1; only 1: constructor; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	40.215106	4914	374
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.468819	22822	2819
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.091140	29985	4389
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.129489	47904	5107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	2.466190	1174	367	0.0.3.1.0.0.1.2	synth with cache (only 1: intro n; only 1: intro; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.587195	8219	207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.058829	15175	2226
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.268265	467	145	0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.128002	31412	7987
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	40	3.786252	1761	378	0.0.0.7.0.2.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.323426	6535	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.082436	24722	3989
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	6.527808	3804	1133	1.0.17.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.307887	11085	3875
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.079401	25486	2592
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.228254	84120	6144
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.170173	8	5	0.0.2.0.1	synth with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.287443	5903	1630
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.759795	938	73	0.0.3.30	synth with cache (only 1: red; only 1: intro n; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.089152	32630	3101
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.179812	20	9	0.0.3	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.221796	10104	5397
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.070798	19934	6312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.279039	41903	5265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.369660	27330	7036
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.066785	19966	3132
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	40	1.240923	1105	240	8.0.0.6	synth with cache (only 1: Nat.induct n; only 1: repeat split; only 1: trivial; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.120283	36656	9550
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.070265	22636	3521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	40.142597	8931	1511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.217623	5032	908
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.060167	11051	3126
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.073164	22292	3137
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.028920	7	1	6	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.249762	15957	3780
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40	40.039912	6370	3389
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.081783	25443	5417
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.448243	27595	3445
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	10.771968	2248	398	0.0.2.20.0	synth with cache (only 1: intros x y z; only 1: intros H; only 1: induction 1; only 1: constructor; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.266295	13692	2540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.348884	112	37	0.1.0.4.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.089249	17023	1943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.243578	37459	5233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.010194	3	3	0.0.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.079313	20923	2844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.063685	5385	2118
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.239947	82642	12634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.346284	16746	7658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.431109	39179	4849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.092091	24798	7106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	6.077852	1335	615	1.0.0.0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.063081	15422	2198
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.190774	67630	5140
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.090272	28194	5024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	3.474815	1646	372	0.0.2.1.0.1.0.2.4	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	40	35.441861	5969	3300	0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: reflexivity; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.242143	21231	5099
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.423510	24806	4115
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	40	0.161427	83	39	0.1.1.1.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.227034	22878	2839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.320223	59645	4129
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	12.727726	6673	1987	0.0.0.0.8.1.1.0.1	synth with cache (only 1: unfold Nleb; only 1: intros H; only 1: rewrite !N2Nat.inj_succ_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: apply le_S_n; only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.087953	31767	2769
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.226228	11768	3795
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.248176	18697	6014
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	0.780422	428	94	3.8.1	synth with cache (only 1: unfold eval_cnf; only 1: intuition; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.016301	6	3	2.1.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.131149	50193	2995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.246568	26965	7076
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	40	40.187502	66006	8798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.148334	37600	5180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.355140	20493	4443
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	4.323980	4220	563	0.0.0.0.8.10	synth with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.074443	19594	5731
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.103693	34106	3703
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.070731	24413	2758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.122403	17251	2507
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.247754	7843	1781
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.183846	10545	1823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.250446	11883	989
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.043077	9550	4277
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	43.196200	16137	2924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.225203	15252	3997
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.063900	17904	3245
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.316828	38684	2771
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008386	2	1	1	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.143802	40613	7487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.279761	42621	4985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	4.722357	2338	677	0.0.1.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.296170	25260	2894
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.239268	19350	3882
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	40.350426	38117	8468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.289997	11619	4958
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.045363	13732	1297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.302178	32407	5412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.166909	11460	1378
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.070037	21198	5530
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	1.773943	1473	494	1.3.0.0.0.0.0.3.1.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.097299	27963	5508
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.021606	9	9	1.0	synth with cache (only 1: revert m; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.288264	13163	4126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.253544	43	11	2.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	40	40.302029	130626	6937
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.090193	25862	7409
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	40	0.011456	5	3	2.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	40	0.032227	18	7	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.245549	15925	3394
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.060943	7401	1599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.062707	16823	4744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.269608	5728	1936
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.059345	1630	638	0.0.1.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.063740	19298	3580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.251116	9575	2336
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.139849	36955	5385
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.841618	1396	590	0.0.1.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.270886	31768	5207
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.134118	39847	8821
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.040732	12286	1552
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	40.144454	44328	2804
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.019756	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	40	40.185652	58107	12437
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.020300	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.017426	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.145864	8677	1795
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	40	4.271702	2126	522	0.16.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	41.357318	1493	838
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	2.492138	1619	665	0.0.0.0.1.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	40	40.133242	41642	6553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	40.333136	21229	5147
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	7.621315	5237	1099	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	20.165083	11062	3312	0.0.0.0.7.4.0.2	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	13.734040	6649	1894	0.4.0.4.0.2.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.063243	14200	2351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.604366	254	105	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.035814	9695	1803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.084264	26	19	1.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.624554	295	112	0.2.0.1.3	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	40	1.836566	1633	531	0.0.1.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.057012	16454	4214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.209439	10458	2175
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.395804	162131	13520
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	26.046281	5391	1310	1.0.0.0.6.8.0	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.023400	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.013457	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.013427	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.535372	531	181	1.0.1.2.5	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.021261	13	5	1.4.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.063149	17532	7092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.036373	33	11	0.1.2.1	synth with cache (only 1: intro H; only 1: intro; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.010739	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.073370	24962	1833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.140348	33159	4072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.205548	29613	5097
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.381419	9631	2163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.178218	8382	1120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	26.054907	13977	2075	7.0.0.0.0.17	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: red; only 1: apply eq_sym; only 1: red; only 1: apply eq_sym; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.152416	61483	2286
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.492412	12234	2159
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.173579	23307	4173
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.110742	12910	1847
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.076908	9633	1958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.157181	60337	2284
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0.016694	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.150397	32084	7501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.256496	17539	3679
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.028836	23	4	6	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.004458	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.277616	24286	7315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.319920	18739	4250
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.007734	2	2	0.0	synth with cache (only 1: intro n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.011143	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.027042	5342	962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	41.040693	5871	1134
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.075942	4700	1032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.230901	10671	4701
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.070005	19482	6144
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	38.625924	11734	2040	9.9.0.0.3.3	synth with cache (only 1: intros a b (Hb, Hab); only 1: destruct a, b; only 1: red; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.272259	35359	5396
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.052370	13416	2379
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	1.211565	322	67	0.2.3.3.3.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.061709	21566	2678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.372599	16261	3117
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.092835	27377	3619
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	0.397435	113	15	14	synth with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.156994	15130	3188
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.079016	21419	6484
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	40	2.570408	1141	144	0.0.0.17	synth with cache (only 1: induction x; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.311428	10641	2341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	12.487051	4074	1317	0.4.0.3.3.2.0	synth with cache (only 1: intros; only 1: assert (H' : b <= c) by order; only 1: destruct (le_exists_sub _ _ H') as (d, (EQ, Hd)); only 1: apply pow_lt_mono_r; only 1: trivial; only 1: apply le_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.146450	19013	7351
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.072577	16931	2094
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	1.286437	622	259	1.0.1.2.0.0.0.0.1.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intros x y z; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.119707	23629	2469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.331191	38040	3826
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.330523	93	51	1.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.123242	38538	3431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	9.903720	2483	92	38.19	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.128375	20551	7783
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.116003	39097	5319
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.019570	6	4	0.0.0.2	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.085469	22355	6203
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.317285	115811	7116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.015892	10	5	0.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	40	4.761393	1430	328	0.4.7.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.259626	11424	1542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.150271	18341	4700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.688655	870	205	2.10	synth with cache (only 1: intros x y H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	15.563912	13591	2338	0.8.5.3.0.1.4.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.186607	184	37	1.6.6	synth with cache (only 1: intros; only 1: setoid_rewrite  <- H; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.231654	86088	5310
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.086430	25595	6534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	40.336020	26688	8496
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.485044	557	182	1.1.1.0.4	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.159360	7061	2803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.008932	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.009219	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.422352	11086	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.885182	225	70	0.0.0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.671171	283	110	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.063668	39	15	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.062654	19	12	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.359157	18048	3526
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.088781	25405	4546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.153975	14260	2310
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.008499	4	2	0.2	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.009628	6	2	4.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.083716	27180	3384
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.480366	16833	7546
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.125817	44277	4323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.305285	33930	5521
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.161444	25524	3066
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	22.712141	14771	4139	0.0.0.0.7.5.0.2	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.247340	25810	3795
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.103074	15933	3864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	40	40.024182	7508	1030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.131678	12764	1929
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.063810	16446	1602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.042589	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.211789	9735	1870
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.288513	12095	1789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.241529	15914	6163
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.020528	3352	1975
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.382743	31609	4988
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.136716	45983	7640
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.072073	17589	5823
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.097765	36038	2947
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.008102	2	1	1	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.033419	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.239977	141	22	7.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	40	10.523713	5243	754	8.10.2.1.4	synth with cache (only 1: unfold Qeq, Qplus; only 1: intros n m; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.268391	20527	6135
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.192110	82	15	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	40	0.040617	20	6	0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	0.034437	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.306143	52883	5964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.066517	18658	3713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.018900	8	3	2.2.1	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	4.735421	1662	982	0.1.3.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	40.067854	17976	4843
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.286480	23829	8777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.074388	5713	2033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.292684	11385	4278
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.035147	10680	1670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.296319	32946	6726
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.077233	26842	4148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.306779	3038	388
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.006443	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.232986	10016	2844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.108745	8054	2388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.132428	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.040850	4400	1566
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.074992	23026	6518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.169505	50806	7034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	40.249841	26202	5872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.318194	23775	3166
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.964282	160	81	4.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.059499	5075	2816
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.049074	6815	1795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.304273	35844	5196
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.156605	37827	5716
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	13.398041	57553	1847	1.4.75.17.1	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: subst; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.230060	28066	3472
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.037239	11167	2383
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	31.374162	6991	936	5.2.10.6	synth with cache (only 1: intro n; only 1: destruct n; only 1: destruct y; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	5.739524	14000	433
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.252628	84708	3435
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.276343	102104	10972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.177495	12861	1618
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.019651	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.019832	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40	40.418646	29928	3485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.128017	16412	2422
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	40	40.133582	41194	6706
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	40	0.521948	204	98	1.0.0.1.3	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.446082	190946	8087
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.040530	11670	2167
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.056150	15018	3777
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	17.265228	47411	1309
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.103281	30708	5471
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.225140	15506	4437
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.214290	78871	10645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	40.075459	17736	6569
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	40	8.213736	9924	1413	0.3.1.1.3.1.0.1.1.0.0.0.8.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intros; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros EQ; only 1: rewrite IHn; only 1: trivial; only 1: apply Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	40	0.032500	26	6	2	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.076962	27148	1857
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	40.072809	23885	3242
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.330579	151	30	0.12	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.007321	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.157794	48751	1892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.253686	27705	4867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.412940	9297	1678
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.457217	14656	3479
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.067095	22066	2571
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.020203	5876	1612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.402471	17869	2736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.075136	20012	2153
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.163692	24433	10065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.269713	28215	6372
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.262842	31724	6740
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.376370	73203	4406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.187182	9442	3468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.198615	10131	2009
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.092942	26960	9021
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	40.066081	12573	1471
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.041449	9078	1665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.372301	32153	5338
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	40	40.055269	16242	4743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.093816	42	21	0.0.0.0.0.2.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.370521	18835	3476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	0.057947	88	16	9.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.058488	19830	536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.268028	41906	4968
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	40	0.009931	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	40	0.097587	2	1	1	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.098867	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	42.536955	35445	4768
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.105211	6135	932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	40.247151	25315	5738
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.353086	116	34	0.0.1.5	synth with cache (only 1: intros a n m H; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.081618	22403	3059
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.119325	40465	5889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.298910	31703	3354
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	40	3.785891	918	38	0.41	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.127240	42462	6862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.105373	5345	659
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.167070	61495	5656
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	40	0.518290	8	3	0.0.5	synth with cache (only 1: intuition; only 1: subst; only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.172259	45689	3287
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	40	0.186186	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	40	0.126629	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.269472	50483	3588
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.065222	17232	4962
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.155261	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	40	40.185825	55524	12351
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	40	0.283502	3	1	2	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	40	0.215911	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.243921	17198	2742
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	40	0.006963	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.168824	20976	3794
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	40	0.022905	23	9	1.0.0.2	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: apply (symmetry (x:=_)); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	40	0.037594	22	16	3.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.040094	91	18	2.10	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.145655	40241	7751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.323288	124589	13987
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.014873	467	72	3.14.1.0.0	synth with cache (only 1: constructor; only 1: now trivial; only 1: auto with *; only 1: intros H x y Hxy; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.333320	126007	3636
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.845938	294	95	0.0.0.1.0.0.1.0.1.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	5.580390	3018	973	0.1.0.1.0.1.8	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	42.420065	17657	3839
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.065563	10619	6622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.199345	23589	5626
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	40.347889	32822	6076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.078104	24744	3563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.415433	24989	6266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.189919	24801	4384
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.216316	15332	4411
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.064088	17305	6442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.243955	17668	4328
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.634712	18454	5403
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.123241	25629	2804
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.405803	33360	5115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	40.314454	29379	4885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	40.109337	9740	2507
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.037166	7609	1570
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.095221	6218	743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	40.203735	10084	1837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	20.759252	4152	1644	0.0.1.2.0.0.0.0.1.0.1.9.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: symmetry; only 1: rewrite add_comm; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.515199	2392	352
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.035016	7163	4091
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	40	9.016018	4421	174	39.37	synth with cache (only 1: inversion 1; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.398295	6745	1126
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.287513	103894	9029
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.118543	33953	4695
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	23.683062	11027	3224	4.0.0.0.0.1.0.2.0.1.0.1.1.2	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition; only 1: now apply Nat.lt_irrefl with 0; only 1: simpl; only 1: split; only 1: discriminate; only 1: easy; only 1: destruct m; only 1: intuition; only 1: simpl; only 1: rewrite ?IHn; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.085400	46	18	0.0.0.0.0.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.060959	15941	4170
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.089794	25989	5089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.347825	36810	2329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.287376	38897	4916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.044471	7633	2363
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	0.176983	140	21	9.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.019086	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.006842	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.017127	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.006231	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.031312	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.030874	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.166773	6748	2775
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	40	2.391089	704	79	21	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	5.223355	4302	1157	8.9.1	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.123483	21810	4048
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.017163	9	3	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	12.415993	14121	3391	1.2.0.2.0.1.9.0.3.1	synth with cache (only 1: induction l; only 1: intros n l d; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.062185	14722	2951
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	40	0.619664	242	34	2.11.1	synth with cache (only 1: intros; only 1: subst; only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.268386	15446	3304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.122920	11409	3110
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	40	0.403274	215	90	0.0.0.0.4.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	5.116497	425	78	5.2.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.145876	976	174	3.2.7.2.10	synth with cache (only 1: intros n; only 1: intro H; only 1: induction n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.637414	134	64	1.0.2.0.1.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 x0 Ha0; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.048321	73	20	0.3.2.1	synth with cache (only 1: intros; only 1: transitivity y; only 1: trivial; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.395898	9988	3754
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	40	1.297729	633	281	0.0.1.0.3.0.0.1.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: trivial; only 1: simpl; only 1: auto; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.027227	7548	1995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.350340	31272	6431
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.069930	20305	5930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.306951	6863	2227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.121380	15452	3273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.444650	1859	348
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.159518	37251	11004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	40.207880	10605	2572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.029459	39	6	10	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.019664	21	5	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.040031	5816	1992
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	40	5.731159	1707	114	3.27.9	synth with cache (only 1: intros; only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	40.322653	19952	3764
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	40	0.073175	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	40	0.072593	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	40	0.009575	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.076998	8189	2544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.279671	15696	2840
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.121657	26807	4744
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.048087	5810	1691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.270765	27310	7437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	3.036506	1421	348	3.0.7.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: intros; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	2.016554	306	30	3.19	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	40	0.071385	2	1	1	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40	40.057499	15965	3291
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	40.184443	72386	3968
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.044508	11456	5208
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.010803	5	3	0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.143402	8186	1936
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.167651	34361	13146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.157252	18	13	0.2.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0.005645	8	1	7	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.951745	401	36	5.20	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.184294	64162	4349
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.448046	282	82	0.0.0.7	synth with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.102923	30001	8236
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	41.215151	69624	6191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.347657	1147	137	19.2.1	synth with cache (only 1: Bool.destr_bool; only 1: apply lt_eq_cases; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.699444	763	160	0.0.6.10	synth with cache (only 1: intros A x P H y H0; only 1: transitivity y; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	13.740127	12578	2141	0.0.0.1.0.0.0.0.1.6.0.0.0.0.0.0.4.3	synth with cache (only 1: split; only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: discriminate; only 1: intro H; only 1: case compare_spec; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.171161	67298	6041
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.035367	9620	2188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	16.013355	2815	1026	3.0.0.0.3.0.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0.023097	11	2	3	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	0.012262	9	2	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.248200	94408	10353
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	0.023701	9	2	2	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	0.023013	10	2	6	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.033682	9365	2018
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.281151	15404	3831
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.223553	78161	11979
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.512137	17369	6076
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	40.071578	24364	3270
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.045711	12689	2512
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.141445	36949	4141
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.231747	78745	12214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.287336	23854	2487
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	2.534138	2117	58
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.069479	19	4	4.2	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.066841	12049	5659
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	0.052573	3	1	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	40	0.007950	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.018135	24	4	5	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	3.866465	1645	466	1.0.0.1.0.0.0.0.0.0.1.1.1.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.467483	48850	4302
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	40	40.060940	15815	4744
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.069441	21	9	3.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.517242	391	82	1.0.2.9	synth with cache (only 1: intros; only 1: red; only 1: intros y LT; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	3.982578	3607	1390	0.0.0.4.1.0.2.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold max, gmax; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: rewrite le_lteq in *; only 1: destruct H as [H| H]; only 1: elim (ge_not_lt x y); only 1: rewrite le_lteq in *; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.393755	17217	1791
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.010539	3	3	0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	3.375891	1653	489	1.16.3	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	22.089738	1551	362	1.3.0.15.0	synth with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: apply Add_app).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.230957	38090	10296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.221823	5268	2216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.801426	22194	1921
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.034262	1533	475	0.0.0.3.1.0.0.0.0.0.1.2.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	11.462387	3829	1967	0.0.2.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.269307	44072	4657
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.273810	28667	7256
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.014992	5	4	1.0.0.0	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.070911	20196	6066
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.062289	18429	3472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.238956	16881	3038
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.046397	22	6	0.1.4	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.054775	14344	1847
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.122683	12307	1854
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.387807	50	21	0.1.2.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	40.097762	35161	4270
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.284564	39	21	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.293324	55552	2848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.393840	24980	5930
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.198820	2081	475	0.0.0.0.0.2.1.0.0.0.1.3.1.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro EQ; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.256193	21479	3506
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	6.867963	1975	303	13.0.0.6	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.611681	22119	4222
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	0.401779	515	70	21	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.008415	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	8.376215	1522	457	2.2.0.2.0.4.0.1	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	0.008884	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	7.663809	9274	2710	0.0.2.1.0.0.0.21.0	synth with cache (only 1: intros; only 1: compute; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	40	0.151677	34	20	0.1.0.0.1.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.180699	163	71	0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.107447	39013	3305
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40	40.374265	9796	3126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	19.533604	4073	1398	3.2.0.0.6.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.004346	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.007769	7	2	1.4	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	6.851951	4741	2197	0.1.0.1.7.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.003731	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.003935	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.060514	16829	2575
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.003679	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.606237	1605	362	17.0	synth with cache (only 1: intros a b Hab; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.124492	41848	6513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	40.268878	18296	2477
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.053430	15261	1061
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	40	40.137350	43317	5043
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.040301	10822	2863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.282777	240	28	4.0.15	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.134342	32775	4295
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.063517	13275	7161
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	4.307144	5379	306	1.47	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.008580	3	1	2	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.012058	10	2	3	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.083914	28084	4251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.327186	8115	966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	40.064030	14309	4226
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.002338	2	1	1	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	0.962256	744	103	9.10	synth with cache (only 1: intros x y H'; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.006772	14	2	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	3.154546	1042	142	1.1.3.13	synth with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.002111	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.009294	2	1	1	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.010910	2	1	1	synth with cache (only 1: auto  7 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.102065	28124	14666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.198460	7	6	0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.171602	59499	4064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.251355	18	10	1.0.0.0.0.1	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.332523	110734	4732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.460871	78	30	0.1.3.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.230833	42817	2298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	40.322964	37964	7881
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	13.415341	11561	1347	1.34.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.288600	25357	2194
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	40	40.071494	16902	5981
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.147476	7374	2112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.388268	19700	5347
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	9.503410	1145	466	0.6.0.0.1.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.026423	2	2	0.0	synth with cache (only 1: unfold Rge; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.102906	10	8	2.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.079073	8	7	0.0.0.0.1.0.0	synth with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.193818	15331	3130
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.252573	25035	7566
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	2.992589	1186	208	3.2.8.0	synth with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.124094	16057	1661
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	13.650329	7887	2490	4.8.0.0.0.0.0.0.0.2.0.0.3.2.0.4.2.0.0.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: destruct H; only 1: apply eq_S; only 1: rewrite <- plus_n_Sm; only 1: rewrite <- plus_n_Sm; only 1: apply eq_S; only 1: rewrite <- plus_n_Sm; only 1: apply eq_S; only 1: auto; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: simpl in H; only 1: now inversion H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.180284	10	4	0.2.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	40.121240	45374	2396
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.301147	15853	2816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.090637	30040	4576
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	4.524259	12418	1847	8.3.7.4.7.6.5	synth with cache (only 1: split; only 1: intros; only 1: intro z; only 1: firstorder; only 1: subst; only 1: apply H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.005944	6	2	3.1	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.007299	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	40	24.185809	401	36	5.20	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.002493	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.003057	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	0.296954	480	70	14.1.1	synth with cache (only 1: red; only 1: red; only 1: intros A B []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.260813	19384	5936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.197075	18549	4412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.132762	6230	682
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.043481	13433	2118
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.771131	12899	6420
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.080174	26253	3799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.230792	8276	1849
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	2.382660	1055	126	2.2.5.14	synth with cache (only 1: intro H1; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.005096	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007315	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.034234	6872	4737
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.005091	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.004352	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.074574	16740	7801
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.512264	5839	2441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.054114	14164	4087
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.057067	15080	3197
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	40	0.112692	8	5	1.0.2.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.027668	35	6	8	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.137594	20	7	0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.295832	39684	5689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.434240	40702	5932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	6.348807	2433	413	0.5.10.2	synth with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.106432	8892	2928
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.350823	42155	2621
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.456190	40518	8197
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.171245	61473	9271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.150936	10279	5217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.351244	6515	2279
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.266867	55170	2796
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.183567	60415	7972
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	16.578813	62040	6134	4.0.14.5.3.0.10.0.12.12	synth with cache (only 1: intro H; only 1: intro H1; only 1: split; only 1: red; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	13.062434	4134	1145	4.0.0.2.4.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.074036	112	29	5.5	synth with cache (only 1: reduce_goal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.095983	29339	6075
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.020743	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.005537	4	2	1.1	synth with cache (only 1: reduce_goal; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.004632	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.007295	5	1	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.004124	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.254682	69622	10058
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.006382	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.435349	23427	4464
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.191691	102	19	8.2	synth with cache (only 1: red; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.016150	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.251531	10	4	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.007572	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.010213	12	2	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	9.087486	75360	1626
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.005620	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.335685	22741	5579
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.005461	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.005545	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.045718	11504	5470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.070173	7202	1892
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.953476	397	39	26	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.140979	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	14.699980	13103	2843	1.5.0.1.3.1.2.2.1.3	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.007147	4	2	1.1	synth with cache (only 1: intro X; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.037589	12747	1018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	14.114958	3249	1510	0.1.1.0.0.0.7	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.157020	24454	4342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.052582	3439	910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.071836	3616	1320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	40.270060	5407	714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	7.228584	3939	657	2.3.0.0.6.9	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.069524	20323	3917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.315938	16138	3125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	25.813520	36848	2696	0.20.37.2	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: right; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.157169	50410	7555
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	18.951349	17944	3182	0.0.0.0.1.0.20.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: symmetry; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.229673	20660	6449
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.201757	68872	7297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	40.162546	19246	3508
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.006511	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.192374	8855	1782
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.090091	32164	4288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.211878	81697	2963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.069655	51	20	0.0.0.2.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.101918	30248	9464
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	40	27.675057	12959	2869	0.0.0.0.0.0.0.0.0.21	synth with cache (only 1: rewrite add_comm; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.195478	72173	8069
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.013805	5	3	1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.005425	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.018844	21	6	0.0.2.2	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.007768	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.004890	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.006756	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.340347	5246	1064
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.050429	16431	1056
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	0.119711	3	1	2	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	40	9.667684	14324	3114	0.5.0.1.0.0.5.2.0.0.2.1.2.3	synth with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros [| a l] H; only 1: red; only 1: inversion_clear H; only 1: inversion_clear H; only 1: simpl; only 1: auto; only 1: intros [| ] ?; only 1: red; only 1: discriminate H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.043217	11211	3294
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.155427	9655	1975
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.271568	95204	12533
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.511552	11522	2120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.543844	15389	4652
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.266121	94838	2044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	2.208925	301	162	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.225192	25789	2285
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.082005	30454	1523
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.216748	79729	5701
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.123776	15552	3172
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.154607	22	6	1.3	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	21.386393	14461	3879	8.2.2.1.1.0.5.0	synth with cache (only 1: intro n; only 1: induct ltac:(m); only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intro; only 1: intros _ H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.420657	30153	3925
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.068416	6359	1713
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	1.428915	1785	366	4.5.0.6.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: rewrite <- Wf.Fix_F_eq; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.213517	23998	1277
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.134544	14737	4930
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.277166	27627	5324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.079519	22169	7178
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.035965	10039	1911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.258019	25420	3077
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.112876	34737	2653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.211400	17478	7155
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.154757	49621	5963
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.008881	6	2	2.2	synth with cache (only 1: autorewrite with order; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.684080	185	99	1.2.0.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.247469	10699	2588
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	40	5.728801	567	27
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.211418	4	1	3	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.067224	4	2	2.0	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.358883	23740	3961
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.003680	4	1	3	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.003322	1	1	0	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.004772	6	1	5	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.014311	24	6	3.0.3	synth with cache (only 1: intros H H'; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	37.118090	143912	2383
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.311664	121912	7345
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	40	0.005940	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.044906	9897	5023
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	40	0.002616	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	40.066964	21222	2726
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	40	0.133333	250	39	5.7.1	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.085022	27408	6523
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.075732	19733	8605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.049898	10520	1212
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.129984	35892	6169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.328049	547	65	0.3.0.18	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.108880	36109	6015
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	40	42.610113	44174	3504
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	40	33.494962	450	38	3.23	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.307333	20947	2992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.137742	11544	2298
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	40	2.237164	12247	745	0.45.2.3.0	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.080716	17034	3862
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.110440	42303	1821
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.132058	12084	1822
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.117072	42750	1963
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.159641	58071	4770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.112055	24165	5621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	40.209922	30326	2213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.034395	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.079661	26272	4287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.186245	17626	1573
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.080937	19576	6055
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.055634	15138	4051
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.066541	15659	1896
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.024957	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.026224	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.025230	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.024976	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.027006	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	2.299206	628	165	1.0.1.2.5.1.1	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	40	5.238813	2631	597	1.0.0.0.0.0.0.0.2.0.0.0.3.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.373057	20518	5083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.173751	24492	2598
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.036404	9945	2719
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.311071	36290	9477
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.127877	47019	3985
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.317798	9119	2255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.200690	5798	2368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.088244	24211	4764
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.074085	22665	5426
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.055112	18933	2656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.191613	6329	1517
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.092565	17	7	2.0.0.0.1	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.616197	33390	6545
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.041712	8591	4917
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	40	40.307833	113921	15523
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.132801	10667	444
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.103646	35084	4941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.060162	16923	3760
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.056713	14427	3112
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.264497	21923	2360
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.065494	18352	3853
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.509985	124	44	0.2.0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.107723	17943	5068
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	40	0.058025	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.319529	28268	1957
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.387963	14055	4252
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.549970	46	17	0.0.2.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.082752	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.407748	33065	6248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.132556	35815	7409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.136368	14543	5605
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	0.087560	68	14	8.1	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	16.268602	4360	1953	1.0.1.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	4.049129	19436	1284	0.15.13.41	synth with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	14.259626	15108	2030	0.0.0.0.39.0.8	synth with cache (only 1: rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.204751	68961	11728
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.265268	38631	3697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.329702	10186	1572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.061906	16909	4053
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.286989	106959	13085
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.068641	12350	751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.364384	35526	5665
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.122515	248	16	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.086979	10257	2670
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.311691	24	3	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	3.925883	2661	703	10.10	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.285077	14905	6134
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.074034	54	13	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.151728	89	27	8.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.255453	91363	8910
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.065879	25465	1680
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.273671	9421	3450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.127875	15736	2632
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.005714	3	1	2	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.252220	38	20	3.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.090139	4073	1561
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0.938811	778	399	4.5.1	synth with cache (only 1: transitivity x0; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.024882	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.062090	33	17	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.459740	55	28	0.0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.026377	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	40	1.436350	424	98	13.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.371041	26652	3124
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	40.356139	10039	1241
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.031595	7003	1426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.289880	25118	3475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	40.306977	22379	4991
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.103622	28285	7294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	42.277806	12558	2680
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.149423	8687	542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.433641	191	54	2.1.1.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n EQ; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.259904	34052	7331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.152765	51192	6613
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.230726	82727	6534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.218282	25311	4235
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40	40.069413	21080	4060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.290558	111350	8244
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.007553	5	2	1.2	synth with cache (only 1: intros n m; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.132295	42644	6084
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	40	40.272931	39457	5851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	19.669322	6808	2977	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: auto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	2.783081	3224	1145	0.1.4.5.3	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	40	40.139436	45492	7667
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.060361	19557	3406
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.456425	178678	11297
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.068837	18901	4511
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.244763	25667	3465
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.147329	36292	2878
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.375173	141077	14333
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.541945	13327	5104
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	40.213757	4203	1145	0.0.1.0.0.4.0.0.1.0.0.1.4.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.073164	21119	4229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.248714	72740	4380
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.227592	81137	6499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.351131	15470	3800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.400921	42398	4862
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.003372	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.107118	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.036886	6588	1519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.259260	27918	4659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	15.250820	4831	1068	0.0.0.5.0.0.0.9.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	34.442803	14048	491
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.191266	73074	5309
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.061386	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.018112	7	6	0.0.0.0.1.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	6.415165	11594	1234	0.4.6.26.0.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: setoid_rewrite H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.908553	268	60	0.7.3	synth with cache (only 1: intros; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.131168	12992	8937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.099022	18716	1886
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.260566	37302	3252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.120108	23007	7021
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.037764	9907	2151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.163445	22835	2848
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.050146	13671	2107
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.160770	48004	9010
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.356792	19321	7814
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.208250	4499	1979
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.092116	5	3	0.2.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.382912	16281	2123
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.088252	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	9.393427	1251	550	0.0.1.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.016459	29	7	1.6	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.153311	57747	2320
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.037599	6262	1145
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40	40.366031	10482	3628
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	40	40.119082	40372	6287
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	0.483101	236	112	0.2.1.0.0.5	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.411794	172445	13213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.151345	47006	2892
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	40	40.091718	143	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.084763	17220	2247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.158786	5760	1041
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.091268	28945	6863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.340122	25934	5241
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	17.726998	1477	283	0.5.3.3.2.1	synth with cache (only 1: intros x y z; only 1: intro H; only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	40	1.469219	2314	381	0.2.0.9.1.0.1.4.4	synth with cache (only 1: intros A P H; only 1: split; only 1: red; only 1: auto; only 1: red; only 1: induction 1; only 1: auto; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.136920	38000	4444
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	40	40.759369	327663	7909
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.635489	25	7	5	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	40	0.032944	106	16	0.9.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.142221	50015	12333
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.136914	44654	9301
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.102675	9269	800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.115976	18321	3783
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.196435	76902	4224
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	0.752604	2600	65
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.088914	27938	6505
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.138179	20438	3285
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.308606	1023	358	0.0.0.2.0.0.0.0.1.0.0.0.1.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	25.503059	6005	3290	0.0.1.0.9.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	40.048689	10362	2721
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.124664	16206	5824
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.019302	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.255009	17140	2445
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	0.043058	18	11	0.0.1.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	0.024258	5	4	0.0.1.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.588618	88	39	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.135460	23178	5173
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.125899	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.221866	28682	5243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	5.621431	3023	722	9.2.6.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.248535	29613	6099
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	40.147738	55603	4995
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.086189	27991	3822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.082093	23015	6291
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.066740	20223	2634
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	3.297638	2608	809	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.1	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	40	42.618434	49418	3451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.229940	22081	3714
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.068449	21488	4797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	2.704226	439	160	1.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.350875	968	332	0.12.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.116252	13108	1760
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.021588	3549	2359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	12.951825	822	286	0.0.0.3.0.0.0.1.2.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	0.675504	138	37	1.1.0.1.2	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	2.100325	2440	466	0.1.2.0.0.4.0.0.3.2.6	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.055772	7164	869
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.615124	22454	6466
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.015020	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.087891	9	2	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.042079	27	10	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.170598	56180	3461
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	0.451997	326	194	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.072506	21482	4187
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	0.209790	145	80	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003291	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.099800	10875	4517
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.061631	19087	2617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.268920	24657	4517
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	40.067550	23784	1720
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.009486	2	2	0.0	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.429079	223	34	11.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.054699	16195	1989
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.450082	7083	2185
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.102172	17010	5897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.183741	12263	5258
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.144872	7277	1154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.158137	7041	853
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.086100	6775	2548
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	7.482042	2927	716	2.2.7.4.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold make_conj at 2; only 1: repeat rewrite make_conj_cons; only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.167847	30335	2782
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.046244	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	5.443628	695	304	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.393470	13474	4467
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	5.576487	3451	2766	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.343259	25299	6002
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.203157	69149	15805
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.166755	16336	3469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.228119	17187	4401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	38.868249	5955	1917	0.1.0.0.1.13.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.179952	17191	3273
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	1.007393	587	427	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.050625	14836	4702
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.118527	37121	6970
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.134000	73	24	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	40.107215	28341	16053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	24.282279	11045	4551	0.0.1.0.13.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.449386	86	39	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.501669	29676	8535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.374098	28654	3645
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.048524	22	8	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.045477	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.403937	41672	5752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	40.153267	9447	4496
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.064536	18997	3904
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	40	0.039695	125	23	1.3.6	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	40	0.026838	80	12	0.8.1	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.248141	33490	8343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.312558	44193	6483
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.375856	11069	1955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.443332	8731	2356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.150289	37198	5858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	40.158416	8783	1903
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	40.241807	28297	3391
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	34.643958	7287	1894	3.0.0.4.3.0.2.2.4.0	synth with cache (only 1: intros n m p q; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.164191	55245	8694
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.267646	41606	5904
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	40.153606	48097	16030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.418631	20397	4110
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.120834	41324	4509
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.063958	17270	6316
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.330909	122100	15203
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.255577	27283	5038
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.084553	26702	2096
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.213192	43435	2952
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.267372	98021	16448
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.269820	12369	4473
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.098663	33066	4000
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	0.662278	802	254	5.5.0.0.0.0.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: intros; only 1: assumption; only 1: left; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.146034	9027	2226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.673900	260	109	1.0.1.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.011325	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.011652	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	25.062081	321648	9003
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.006195	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	1.033156	76	32	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.510361	48360	5562
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.072730	21348	2766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.245558	27112	4587
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.622735	268341	15574
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004489	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.155226	59764	2519
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.003783	3	2	1.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.021970	42	9	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.017780	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.018404	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	5.238769	3138	639	0.0.17.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.028625	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.250395	18472	1833
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.033234	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.002986	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.003672	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.623254	266198	14558
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.002932	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.003653	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.005058	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.487043	16753	3648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	0.903827	278	45	7.0.1.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.013705	7	3	3.1.0	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: induction (Rwf x); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.067629	17409	7000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	39.147857	22378	1705	0.53	synth with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.108730	27381	3499
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.071472	20402	3565
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.111652	33072	6124
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.302367	112686	12561
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.128643	59	18	2.0.0.3	synth with cache (only 1: induction 1; only 1: exact eq_refl; only 1: apply Inhabited_intro with (x := x); only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	40	0.005171	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	0.996118	832	226	3.0.0.0.0.1.2.2.1.3	synth with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	10.729812	2594	960	0.3.0.0.0.0.3.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.194416	4753	826
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.198704	2945	1183
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.469116	12707	2266
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.263841	98496	7085
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.547700	234954	13108
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.134784	8027	1401
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40	40.195410	9653	3489
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.359940	635	130	2.1.0.14	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.013160	20	4	3.4	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	40	40.106433	31681	7289
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	7.208869	20379	1525	1.35.3.11.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.006408	2	2	0.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	8.617868	4127	975	0.0.0.7.4.3.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.358711	55	25	1.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.110823	43296	1946
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	40	40.003926	999	110
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	40	1.233813	673	219	0.1.0.0.1.6	synth with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.102992	19467	2586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.177572	8802	2297
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.107825	36192	6133
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.109714	19240	1954
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.115199	30613	9293
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.176716	33601	7291
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.114269	21794	4029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.177953	20593	4329
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.086373	22753	4233
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.609132	273	47	2.15	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.066010	18877	7223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.268571	23743	4631
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.245007	86622	20697
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.090574	3687	1060
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.076717	23231	6106
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.467387	26816	1409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.201824	10482	3071
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.351678	34172	4538
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.385605	21174	3215
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.043524	10061	4546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.242551	4951	2308
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	2.671493	9756	1065	3.7.0.5.5.4.7.3	synth with cache (only 1: intros A B []; only 1: red; only 1: repeat split; only 1: intro p; only 1: intros; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.089539	27927	5694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.145033	13260	3599
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.060630	106	19	11	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.003894	2	1	1	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	12.284608	2583	809	1.0.0.5.1.0.0.3.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.082060	29805	2897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	40.092597	9614	2414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.997699	1015	218	0.3.0.0.0.0.6.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.344967	25643	5697
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.775655	1756	335	2.3.1.11	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.067240	19484	3191
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.017930	25	8	3.2	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	13.782328	30213	1397	29.0.46.29.18	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: iorder; only 1: intros x y z; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.032946	7055	3712
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.115285	39602	7785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.135056	47010	4678
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	5.245666	1839	353	18	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	2.508167	494	203	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.672921	11588	6381
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	0.621712	308	147	0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.079914	20138	7055
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.145697	24092	3556
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.788879	399	80	4.9.0	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.752292	337585	13220
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.004576	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.004258	2	2	0.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	40.066195	17843	4584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	12.084362	15532	472	1.0.0.1.1.15.1.91	synth with cache (only 1: apply log2_unique; only 1: order; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.916744	589	119	15	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.064283	87	26	0.6.2	synth with cache (only 1: hnf; only 1: intro x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.028107	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.027746	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.158308	14018	5597
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.044276	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.087163	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.073279	26139	2571
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.089047	17249	2642
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.003521	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.004504	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.067928	9274	2525
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.109622	15221	7118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.248362	10983	2787
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.197472	7391	970
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	0.273348	1007	38
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.023235	4	3	0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.510377	2733	762	16.0.0	synth with cache (only 1: red; only 1: intros x y; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.128375	6270	1168
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.147012	28444	3315
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.067333	4006	1949
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.007189	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.091743	30155	6156
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.813469	701	143	2.12	synth with cache (only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.008003	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.364513	3532	573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.397713	13057	4585
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	26.287343	2089	221	0.10.8.1.2	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	40	0.071118	3	1	2	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.165822	17793	4371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.350622	20647	7398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.087415	7426	1787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	40.262016	11788	5281
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.276934	103020	15295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.179986	20001	4748
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.164837	20764	4551
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.112113	27670	19545
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.046949	10268	3617
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.015188	12	6	4.1	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.043262	125	10	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.028431	53	12	3.0.5	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.415883	35799	5121
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.144193	25352	15307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	40.136786	47314	3640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	11.819350	3006	682	0.0.0.0.4.7.3.0	synth with cache (only 1: intros n m p q; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.317695	14268	2685
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.009596	5	2	3.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.289037	17125	4581
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.126422	378	21	27	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.509915	26	14	0.0.0.0.0.1	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.023723	14	5	6	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.044623	9374	2754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.037235	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.642279	267555	9373
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	40	0.006215	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	40	0.006382	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.273856	36079	4802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.465121	27642	7292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.095143	21201	5937
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	40	9.099935	6169	867	22.21	synth with cache (only 1: unfold Qeq, Qplus; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.177915	9659	1613
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.035760	9	7	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.006700	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.092592	2418	313
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.005812	3	1	2	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.003646	3	1	2	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40	40.138025	25297	6326
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	40	7.196958	1863	54	60	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	40	0.129575	3	1	2	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	15.240186	98664	5897	5.45.15.1	synth with cache (only 1: unfold Add at 1; only 1: intros; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.068759	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	35.856149	18269	6014	10.0.0.8.0.0.2.1.0.0.4	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: Nat.induct n; only 1: trivial; only 1: intros a H; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.023337	13	4	2	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	40	0.016238	6	5	0.0.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.348187	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.307280	17943	3445
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.264437	31132	7039
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.129662	23458	6892
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.127529	44073	9767
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.098440	32401	5903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	15.158994	3277	657	2.0.4.2.1.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: apply max_l; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: apply max_r; only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.920048	146	65	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	1.779437	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.371443	79	39	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.252984	11967	1172
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.069987	23247	2632
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.297347	6061	1033
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.808781	81	48	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.098459	22202	3942
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.113110	39	24	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.338713	129802	14771
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.014191	5	1	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.024810	2	1	1	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.448536	181152	25396
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	15.007582	7255	2576	0.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.478276	211233	20528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.217467	59405	6069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.381223	46033	6222
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.162320	58827	4945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.033830	5	5	0.0.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.326672	30347	4395
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	31.575231	23327	4069	0.1.1.1.1.1.1.16.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.120421	45039	4817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.172005	40591	4136
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.005662	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.012956	4	2	1.1	synth with cache (only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.036924	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.277803	25069	8304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.389073	46135	4689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.131701	9595	4110
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.032567	4	3	0.1.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.057078	19	5	0.1.3	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	13.945237	2838	1008	0.4.0.0.0.0.0.0.0.5	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.097944	33848	2758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.191316	55941	3368
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.140346	43287	7383
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	36.025985	17463	395
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.068195	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.698306	296108	6482
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.046596	4416	1191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.443844	24716	4818
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.224726	87499	3861
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.078107	6079	740
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40	40.049024	10695	4906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	12.308139	2821	816	4.1.0.0.1.4.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.992210	574	103	1.10.4.0	synth with cache (only 1: inversion_clear 1; only 1: intros; only 1: firstorder; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.039154	7	5	0.0.1.0.1	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.200611	66147	11731
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.373167	40288	2211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.327306	133651	8388
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.356493	12956	2882
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	4.604907	2376	145	0.45	synth with cache (only 1: inversion 1; only 1: by case  def_b: b ; constructor; rewrite ?def_b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.004302	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	4.752403	12572	533
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.173562	32391	8074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.579954	27494	4816
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	40	0.808241	2337	91
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.064140	17343	5552
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	40	0.006987	3	2	0.1	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	40	0.004936	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.007080	10	2	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.005255	4	2	0.2	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.005185	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.168637	27471	5517
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.321017	129855	5487
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.344560	101	53	0.0.0.0.1.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.094390	16093	5007
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	3.376905	5277	335	58	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.953988	2429	1072	1.1.3.5.0	synth with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: auto; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.130806	22351	5467
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.202071	3	1	2	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.078592	47	20	0.2.1	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.278802	12804	4977
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	40	0.081720	35	16	0.0.0.0.3	synth with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.263147	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.230357	82622	15039
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.071330	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.038041	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.266341	5	1	4	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.081354	22064	3239
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	0.602373	396	90	3.8.1	synth with cache (only 1: intros a Ha; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	14.252246	7638	1879	0.0.1.1.1.1.1.9.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.063906	17990	5711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.212061	30787	3608
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.206304	40902	3061
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.098089	30532	6878
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.087394	22764	4471
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.022714	4	2	0.2	synth with cache (only 1: apply cardinal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.356769	50888	7163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.254915	156	69	0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.340612	161	77	0.6.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.076156	35	19	5.0	synth with cache (only 1: intros; only 1: auto using mod_small).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.103690	13380	2599
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.061388	18454	4232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.368292	25679	2998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.818056	439	192	0.0.0.0.0.2.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.064432	15275	4482
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.045141	10285	5078
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.091648	24272	2339
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.104753	33138	11333
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.268763	49503	4327
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	6.476258	4004	803	1.6.9.3	synth with cache (only 1: intros r1 r2; only 1: intros (x1, x2) (y1, y2); only 1: apply derive_pt_eq_0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.506811	196945	13879
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	40	40.242605	16867	1963
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	40	27.581756	27378	4594	3.0.1.2.39	synth with cache (only 1: destruct (lt_eq_lt_dec n m); only 1: intros H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H; only 1: intro H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.759146	340034	11627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.017031	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	40.217842	14138	1794
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.173044	18454	5730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	40	0.187177	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.103760	31477	4756
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.161347	14222	4836
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	40.108915	42200	1869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.017913	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.238740	8659	2104
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.108241	15993	2761
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.100562	5776	877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.141708	3834	1154
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.013272	4	3	0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.139870	4755	1552
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.211809	40509	4887
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.077918	8	6	0.1.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.080960	24084	5008
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	40	40.311025	122961	9226
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.048524	7280	2620
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.174581	52509	6673
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.009352	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.003712	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.315646	7510	2287
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	4.841375	669	154	7.6.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.341379	10765	3439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.099646	11817	3903
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.072917	574	317	0.0.5.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.035114	7	5	0.0.0.1.1	synth with cache (only 1: intros x y; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.088061	7873	1918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.285761	11258	5269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.201325	6510	2963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.242968	20401	7454
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.509945	185	61	7.2	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.013424	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.078412	25390	4273
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	5.455855	27646	2013	5.9.17.33	synth with cache (only 1: intros n m; only 1: apply Acc_rect; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.009054	11	3	0.5	synth with cache (only 1: constructor; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.095901	4785	669
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.013704	17	5	0.1.4	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.010044	20	4	3.4	synth with cache (only 1: apply H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.009098	7	2	2.3	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.002937	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.137680	291	41	0.7.4	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.002847	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.397257	26805	4971
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.009101	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: firstorder; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	35.850110	168788	14657	1.13.9.6.3.12.7	synth with cache (only 1: red; only 1: intros; only 1: inversion_clear H; only 1: elim (Noone_in_empty x); only 1: red; only 1: subst; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.002411	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.002537	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	40	0.037654	64	17	0.5.3	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.006533	5	3	0.2.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.089711	28208	3676
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.052798	40	27	0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	40	0.042314	37	23	0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.288752	13771	2977
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.133199	6910	1469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.114506	35756	4607
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.229691	81	25	0.2.1.3	synth with cache (only 1: compute; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.243183	29131	4581
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.402539	1176	99	0.27.5	synth with cache (only 1: intros; only 1: subst; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.035327	92	13	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.164195	312	25	5.18	synth with cache (only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.005268	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.310052	48025	5164
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.008564	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.637962	268671	9925
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.003168	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.013612	3	3	0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.003527	2	1	1	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.143823	27163	6649
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.006718	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.006728	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.004576	2	1	1	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.003505	2	1	1	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	40	0.020430	41	10	0.4.2	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.004675	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.070525	16734	2499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.186239	12278	1788
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.004288	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.057978	9246	2626
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.144533	163	43	0.5.1.4	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.388221	158873	15024
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.004044	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.003955	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.250896	21735	4798
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	7.660289	12740	1549	2.0.10.23	synth with cache (only 1: intros n m; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	0.888401	335	124	2.0.3.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.013608	11	5	2.0.3	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.008072	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.560109	238059	15581
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.008443	4	3	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.048734	14508	1983
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.006469	3	2	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	40	0.649664	1043	194	0.0.2.2.3.1.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destr_bool; only 1: destruct b; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.018298	6	4	0.0.1.1	synth with cache (only 1: intros; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.017509	19	5	2.3	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.005967	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.010652	2	1	1	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	40	0.509485	521	142	6.3.1.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	0.624539	3753	114
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.135249	197	44	0.3.3.4	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	40	0.746169	686	246	3.1.2.3.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: destruct x; only 1: destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.563036	3817	700	2.2.1.0.1.0.7.1.3	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	9.826776	4379	687	9.10.6	synth with cache (only 1: repeat red; only 1: intros A B H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.085272	22893	5556
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	40	40.176979	41613	6825
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.083872	29189	3434
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	40.026676	3465	268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.070890	15612	3392
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.273275	17066	4377
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.147933	39860	14350
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.382039	23919	3801
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.321302	21460	4508
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.361728	146155	7923
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.307112	105821	18339
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	40.103878	36765	6132
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.205899	77001	15714
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.008234	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	40	4.097786	4885	1262	1.0.6.2.1.0.1.0	synth with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	1.501317	283	73	11.0	synth with cache (only 1: intro; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	1.470199	1127	494	3.0.1.0.0.0.3.1	synth with cache (only 1: intros; only 1: compute; only 1: case_eq (x <=? y); only 1: repeat split; only 1: assumption; only 1: intros [? ?]; only 1: congruence; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.168284	38021	1593
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.071382	19561	3835
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	40	0.390680	250	128	1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	40.389182	60816	6787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.361043	26066	6632
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	1.246369	5197	143
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	40	32.415081	157263	12187	7.6.19.7.17.12	synth with cache (only 1: intro H; only 1: red; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intro x; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.799900	357336	12775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	0.145783	323	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.144723	33030	3211
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.176837	703	182	1.3.0.0.0.1.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.318182	57558	8456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.124032	10891	2955
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.060705	16995	2166
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.125104	119	27	2.7.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	40.109419	33107	7684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.451640	48163	6288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.058566	19261	1285
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.838091	3825	265	2.8.24.5	synth with cache (only 1: intro x; only 1: intro H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.214744	56049	6964
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.223252	15968	3179
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.171401	56374	7758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.553559	37887	6751
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.247821	26804	4020
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	1.130704	436	117	8.1.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	2.858336	9752	1090	0.22.10.1.2.14	synth with cache (only 1: constructor; only 1: simpl; only 1: reflexivity; only 1: intros [x y]; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.504066	8626	1689
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	0.091001	6	3	2.1.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.013284	7	4	0.1.1.1	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.270381	99157	8258
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.160005	52660	12192
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.053591	14474	5778
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	1.777383	1197	209	13.1.0.0	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.642184	48495	5106
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.451723	187292	4779
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	40	0.006587	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.193216	78966	2623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.116406	26144	9922
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.564614	245936	8609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	40.176797	21724	4261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.357553	20409	2218
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.013801	2	2	0.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.018937	5	4	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.286821	28583	6092
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.205675	72817	16640
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.634548	294	42	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.177761	20	5	7	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.217956	3182	158
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.042967	9927	1101
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.012578	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	32.765516	5840	2970	3.6.4.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r1 r); only 1: rewrite (Rmult_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.006811	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.107297	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.209779	81109	8512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.380456	25203	5269
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.199004	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.204799	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	2.404142	797	337	0.0.0.2.0.1.0.0.0	synth with cache (only 1: intro; only 1: intro n; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.139432	15629	1698
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.077778	11857	5760
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.340128	31676	5467
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.215186	67215	4216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	40	13.590840	12175	952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.116696	12751	1592
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.069154	24622	2811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.276230	20562	6266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.374020	52302	6259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.028476	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.227793	1577	270	17	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	13.370761	12712	1407	0.0.1.0.0.0.12.12.19	synth with cache (only 1: intros l l'; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.058162	12631	5890
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.080992	26052	4147
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.109082	34154	12820
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.417175	172259	17902
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.269012	51466	4830
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.072362	17192	2643
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.156950	47196	17847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.208377	13347	2946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	13.464389	2773	745	5.0.0.0.4.3.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.467477	31034	7186
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.083795	24741	5045
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	40	40.232804	8742	1552
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.078353	27360	1897
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.177843	20229	5154
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	1.225577	388	125	6.4	synth with cache (only 1: unfold Z.le, N.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.237032	8625	2094
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.146075	36373	3352
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.005234	4	2	0.2	synth with cache (only 1: intros [x y]; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.430536	5699	627	3.14.18	synth with cache (only 1: intros A C h1 h2; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.184070	32739	4354
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.056385	19437	3207
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.267777	44642	2787
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	1.019679	322	97	3.9	synth with cache (only 1: unfold Z.lt, N.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.007878	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.160054	58468	4347
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.017432	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.154191	11500	1600
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.142958	45776	6379
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.066251	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	0.510846	14	9	3.0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.019248	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.498062	5341	968
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	0.494763	11	4	5.1	synth with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	40.422522	14811	3985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.171495	13670	3619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.073475	5426	1743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.266694	23897	4117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.291825	17867	6690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.168467	14626	3077
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.081313	25408	5428
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.396906	159633	10424
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	3.245307	2613	272	0.0.0.0.0.0.0.0.0.0.0.0.0.1.29	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.217606	39513	3129
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	5.762258	17303	2165	1.3.1.0.1.30	synth with cache (only 1: induction n; only 1: intro x; only 1: exact eq_refl; only 1: intro p; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	40.385350	26749	6469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.089874	21106	3905
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.471167	193053	16934
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	40	9.762730	10860	1554	0.0.6.6.11.0.2.0.4	synth with cache (only 1: intros m; only 1: unfold Nless; only 1: destruct m; only 1: reflexivity; only 1: induction p as [p IHp| p IHp| ]; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.286602	13119	3748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.055528	13227	3974
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	1.051239	396	156	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.285983	32963	5540
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	40	40.088220	8672	1085
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.446802	190543	6090
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.045092	9589	1795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.179713	19149	5154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	40.184408	9271	2036
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.096802	41	9	3.1.3	synth with cache (only 1: intros; only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	2.030203	6371	890	0.4.10.7.1	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.008575	4	3	0.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.059391	12399	3952
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.013766	16	5	2.0.2	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.223149	77527	19088
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.287845	438	113	1.2.6.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.325374	16392	2133
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	0.359255	469	150	0.5.0.1.1.1	synth with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.007321	4	3	0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.119890	13533	2403
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.012503	7	4	1.0.1.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.006202	4	2	1.1	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	1.713284	504	99	0.0.8.6	synth with cache (only 1: simpl_relation; only 1: apply H1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.036905	42	18	1.1.2.1	synth with cache (only 1: intros A B []; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.074543	19075	2530
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.034741	56	15	0.1.5	synth with cache (only 1: intros x H; only 1: apply H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	10.865837	1881	661	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.172048	47	13	2.3.2	synth with cache (only 1: intros; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.071867	23835	2152
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.324675	23882	4045
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	40	40.178704	43659	6736
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.078353	25779	4306
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.297193	108614	16595
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.040127	6188	470
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	2.322985	816	310	8.7	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.563997	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	40	0.112255	602	28
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	12.108181	14961	2980	5.0.3.0.15.0.0.0.0	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: firstorder; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	40	0.151883	833	34
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.073497	21601	3960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	40	40.290951	21107	5703
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	40	0.150475	1148	41
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	40	0.097971	962	37
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.221202	24275	4540
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.118534	35187	7714
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.262981	90103	17764
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	40	2.985720	1452	501	0.2.0.0.3.3.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: easy; only 1: intros [| a l] H; only 1: auto; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.157386	56987	7542
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.216230	84653	12241
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.204016	75922	4317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.219664	57313	4612
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	40	16.844396	2538	1043	0.0.0.0.0.1.1.0.2.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	40	40.551913	59363	935
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.151103	48203	11371
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.130652	35792	9816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.435036	46499	5904
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.661715	286642	16042
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.468437	188225	14868
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.199228	78222	3497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.127575	32766	3437
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	40	0.119764	110	20	6.4	synth with cache (only 1: intros A P H p q; only 1: eauto using @functional_extensionality_dep).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	40.288669	26040	7918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	16.668938	2635	690	0.0.0.5.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	40	0.094493	321	41	1.17	synth with cache (only 1: intros H H'; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.045945	11396	1954
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.394728	4964	592	3.28.2	synth with cache (only 1: intros H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.167274	23556	6450
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.247703	90479	7598
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.279434	47505	7319
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.117526	18292	5469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.045766	10929	752
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.760863	340687	12883
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.011343	5	4	1.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.598411	36211	4199
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.007429	4	2	1.1	synth with cache (only 1: intro X; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.004378	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	0.938050	203	83	0.1.0.0.0.0.0.8	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: exact eq_refl; only 1: rewrite Pos2Nat.inj_succ; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.658411	131	50	0.4.4	synth with cache (only 1: intro A; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.011915	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	4.933971	1245	540	0.0.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	3.069639	16936	1026	0.1.16.25.23	synth with cache (only 1: red; only 1: destruct p; only 1: intro H; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	40	0.242292	608	138	7.1.7	synth with cache (only 1: induction 1; only 1: auto; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.005108	6	2	3.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	40	0.004420	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.393397	888	187	6.2.3.3	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	40	0.626963	1282	439	6.12	synth with cache (only 1: unfold decidable, not; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	40	0.019563	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.133353	529	76	0.14.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	40	0.016913	15	6	4.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.006853	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	40	0.014700	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.162760	64350	3137
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	40	0.151330	22	7	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	40	0.015073	18	6	2.3	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.198691	176	63	0.1.0.2.2.0	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	40	0.006976	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	40	0.028469	10	6	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	40	0.019301	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	40	0.017072	7	2	1.4	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	40	40.024845	2609	323
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	40	0.063750	5	2	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	40	0.005030	3	1	2	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	40	0.003486	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	40	0.015506	5	2	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	1.687261	13565	462
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	40	0.013479	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.019921	5	2	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.014858	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.018870	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.017637	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	40	0.018871	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	40	0.011766	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	0.668854	4981	137
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	40	0.008958	3	1	2	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	40	0.021219	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.659337	276430	8720
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.006496	4	3	0.1.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.006097	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.062722	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	0.333838	1863	54
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.092114	31066	5732
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	0.494796	2457	63
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.198821	9313	1525
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	11.411066	11522	1243	7.0.0.0.30.0	synth with cache (only 1: intro H; only 1: induction n; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.312807	30558	1840
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.228805	80542	10507
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.124429	73	14	6.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.108679	25249	4599
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.090279	25918	6814
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.186536	333	109	0.0.0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	35.473918	29512	4223	1.1.2.14.0.0.6.2.2	synth with cache (only 1: intro; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.450448	23641	3070
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.104942	262	40	1.0.12	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	40	23.420914	31725	1831	0.0.1.4.52	synth with cache (only 1: inversion 1; only 1: destruct a as [| p]; only 1: discriminate; only 1: exists p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.338915	36071	6929
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.009853	6	3	0.2.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	2.388126	328	50	0.13	synth with cache (only 1: inversion 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.728444	338	85	0.0.0.0.0.1.2.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.041172	6	2	2.2	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.018885	4730	1327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.013798	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005512	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.013970	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.022684	8	2	4.2	synth with cache (only 1: intro H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.006397	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	18.436159	307	41	8.8	synth with cache (only 1: intro H; only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	3.697080	12142	1746	0.16.0.13.2	synth with cache (only 1: unfold not; only 1: destruct H; only 1: auto; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.407816	17629	4321
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.082999	28891	2429
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.152325	1618	91
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.176578	12535	4342
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.478187	141143	6544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.019285	6	4	2.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.195106	21670	3694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.013232	6	4	1.0.1.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: apply le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.065375	18765	4228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.112771	33736	9479
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	2.016844	630	134	0.3.4.1.1.7	synth with cache (only 1: destruct m as [| m| m]; only 1: intro H; only 1: now destruct n; only 1: intro H; only 1: easy; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.010164	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.107344	39977	5215
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.084381	14683	4728
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	40	0.736787	177	65	1.0.2.1.0.2.0.0	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.179514	10749	2493
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.071183	24934	3873
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	40	40.844735	382098	7079
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	40.044354	13179	2522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.342298	18955	5009
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	3.822109	1869	488	0.1.1.1.1.2.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.127784	39441	6510
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	3.887719	128	21	4.6.1	synth with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.047072	11296	2404
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.486697	194130	6850
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.108769	29320	4358
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.086233	155	27	11.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.016876	25	6	2.3.1	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	40.131238	44893	11452
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.318013	120240	11095
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.010544	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	6.080557	17020	436
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	40	6.374828	21988	3545	2.18.12	synth with cache (only 1: destruct H; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.151995	47432	14575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.214827	20009	3433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	2.936148	652	220	0.1.1.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: intro H1; only 1: now apply H; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	0.201665	1053	39
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.121772	42785	3713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.084088	21807	4368
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	0.156516	225	17	0.20	synth with cache (only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	40	0.007568	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	40	0.010348	4	3	1.0.0	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	40	0.007740	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.273634	49805	2453
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.005786	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.095194	252	54	0.2.2.8	synth with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.007226	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	40	0.009857	4	2	2.0	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	1.176151	1328	155	0.20	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	40	0.007259	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.172603	33263	3599
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.189631	312	25	5.18	synth with cache (only 1: apply max_r; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.192285	16964	2510
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.556562	231883	16426
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.233983	10591	1363
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	2.451509	26422	838
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.010970	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.027301	16	9	4.0.1	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.056269	17696	2121
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.214236	50749	3560
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.006409	6	2	1.3	synth with cache (only 1: intros; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	3.530548	17193	1458	0.1.1.5.16.3.16	synth with cache (only 1: intro; only 1: intro H; only 1: reflexivity || destruct H; only 1: auto; only 1: intro H; only 1: induction n; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.009486	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	40.391872	22123	2323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.599976	13329	6981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	7.017066	9420	1097	0.2.1.13.3.15	synth with cache (only 1: induction m; only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.084104	228	41	1.10	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.156760	11182	2897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.072036	15248	3218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.271888	11320	5289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	40.230829	21497	5335
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.058857	20880	1961
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.051361	16571	3556
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.192269	46404	4279
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	11.702440	4949	796	3.1.0.1.0.0.0.1.1.4.0.9.7.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct 1; only 1: subst; only 1: simpl; only 1: now split; only 1: simpl; only 1: subst; only 1: now split; only 1: simpl; only 1: easy || now destruct Hb).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	0.739397	2581	265	1.2.21.9	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.167300	57749	9794
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.021481	24	7	2.1.3	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.275941	99693	15985
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.008556	4	3	0.0.1	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.469199	16176	5317
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	31.797844	33682	6048	0.0.0.1.1.0.1.2.4.6.6.4.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: intros; only 1: inversion H; only 1: eauto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.140754	11553	2035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.326438	27979	4769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.070859	16104	2972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.300152	30749	6782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	17.945570	17102	2846	1.0.9.0.0.0.1.0.0.16	synth with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.049784	11401	3090
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	5.146371	47379	1296
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.006277	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.135290	48710	5244
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.018049	9	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	40.182737	7091	1711
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.019246	9	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.395733	162497	6296
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.232055	377	42	1.19	synth with cache (only 1: intros f [x]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.652523	281352	11488
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	18.724647	125864	5204	0.22.25.42.7	synth with cache (only 1: intro x; only 1: intro; only 1: intros A B []; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.256340	3635	1030
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.296580	101088	6777
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	40	2.755136	1221	534	1.0.0.0.0.0.0.3.0.1.0.0.1	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: easy; only 1: simpl; only 1: intros; only 1: easy; only 1: intros [| n] d d'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.439043	1315	137	0.25.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.075684	23556	4355
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.445879	8525	2129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.199216	7921	2579
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	40.074220	10091	1473
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.089924	18945	2847
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	40	40.565553	243547	16482
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	40	0.003611	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	40	0.003418	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.032779	10766	679
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	40.162947	10303	1863
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.236047	81473	14540
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	1.807834	318	120	3.1.7	synth with cache (only 1: intros A P; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.121413	4711	513	3.25.11	synth with cache (only 1: intros Hfst Hsnd; only 1: subst; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.016347	6	5	0.0.1.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.071659	18524	5842
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	40	0.039119	66	14	0.2.6	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.093695	29358	4488
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.009265	5	3	0.2.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.092945	32062	3144
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	11.940430	22053	3663	4.2.3.2.16.1.1.2.2.7.10	synth with cache (only 1: intro A; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: intros H H'; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros H H'; only 1: red; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.032604	39	11	1.6	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.007813	4	2	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	40	0.413799	134	66	1.1.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.007972	4	2	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	40	1.035692	1732	419	1.2.2.3.4.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.336064	69481	2544
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.014127	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	40	40.138108	41312	13983
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.004660	4	2	2.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.005617	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.004544	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.098200	30295	6410
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.031637	65	17	0.1.1.1.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	0.427979	430	108	2.1.2.1.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.382589	151530	22961
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	40.213715	73384	21133
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.266008	591	70	0.16	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.005687	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.005570	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.076764	76	37	0.0.2.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	40	0.450821	793	143	13.4	synth with cache (only 1: intro H; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.134672	50455	7654
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	40	0.005028	5	1	4	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.014354	9	3	4	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.127784	40992	10300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.092348	27258	5382
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	40	0.000567	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	40	0.001633	3	2	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.000948	2	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.100176	14512	6310
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.011536	43	18	0.0.1.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.004646	22	9	0.0.2.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	40	0.008465	50	12
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	40	0.143976	88	37	0.0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	40	0.046589	380	121	0.0.0.0.0.0.0.1.0.0.3.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.014837	132	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	40	0.109705	1145	268	0.1.1.0.1.0.0.1.0.1.1.0.1.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.052166	572	70	9.9.1.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.048862	476	108	0.1.2.0.0.2.1.0.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	40	0.039959	20	7	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	40	0.148503	1619	197	4.7.4.5.5	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	40	0.049798	51	12	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.393412	35565	5087
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	40	0.007626	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	40	0.009527	9	2	6	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	40	0.434557	3622	580
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.004683	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.007632	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.006242	5	1	4	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.162700	13016	2697
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	40	0.004985	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	40	0.004823	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	40	0.067420	204	24	14	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.023956	12	5	0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	40	0.011648	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.077859	25865	2360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	40.359933	20867	5142
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.051112	13350	2397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.125021	10252	3274
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	40	0.217882	72	27	1.1.1.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	40	0.026033	6	5	0.0.0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.290424	108774	6648
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.723189	326202	18967
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	0.228776	1802	53
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	40	0.298549	190	69	2.2.2.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.066263	6295	801
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	0.155735	918	36
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	40	0.263932	140	52	2.1.1.2.1	synth with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	40	0.042067	28	13	2.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.267487	31871	5712
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.011990	10	5	2.1.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.622559	18219	3760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	2.217307	1074	337	1.1.9.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	40	0.043691	26	13	1.5	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.163705	50472	4829
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	40	0.004844	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.102113	31161	7931
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.004635	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.193506	36920	2989
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.004763	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	40	0.004582	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	40	0.004778	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	40	0.004899	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	40	0.007301	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	40	0.018616	6	2	3.1	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	40	0.051503	16	7	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	40	0.065672	13	6	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	40	40.357594	145278	10565
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.054780	34	22	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	40	0.007252	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	40	0.008031	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	40	0.005085	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	40	0.004601	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.145856	54909	2676
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.004754	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	40	0.004877	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	40	0.004742	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.262056	145	75	0.0.0.3.1.0	synth with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.040688	29	14	0.0.2.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	40	0.004793	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	40	0.007303	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	40	40.258308	33779	3316
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	40	0.013088	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.013474	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.013225	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.013210	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.098789	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	40	0.007269	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	40	0.007212	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.304388	115826	12916
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.005225	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.004652	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.545809	218081	13063
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	40	0.004919	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.003288	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.004688	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	40	0.007196	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.013050	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.008412	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.056627	15509	3082
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.093294	70	14	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.014500	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.014547	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.912040	419489	6049
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.014581	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	40	0.007686	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.640476	5672	1708
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	40	0.013358	6	5	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: exact eq_refl; only 1: exact eq_refl; only 1: exact eq_refl; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.155455	14199	1874
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.007144	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	43.169936	25381	2655
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.391403	161	69	1.1.1.1.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.176847	52837	3459
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.467772	358	114	4.4.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.335202	21100	5437
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.008134	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	40	39.767597	1108	90	10.20	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.495528	59148	5640
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.008197	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.011535	10	2	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.333688	32245	6297
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.038353	64	10	5.5	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	40	0.025323	14	3	6	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.007635	7	2	2.3	synth with cache (only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.061922	20958	1672
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.005336	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.005160	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.236226	25657	4379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.223674	24959	6212
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	40	0.012172	12	2	7	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	40	0.012917	5	3	0.0.2	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.269503	381	143	0.0.0.0.0.2.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.321438	26001	2339
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.063071	17436	5189
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	40	0.720905	432	148	0.0.0.0.0.3.0.0.3	synth with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: right; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.006906	2	2	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	40	0.042670	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	40	0.236297	178	79	1.2.0.2.0.1	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: auto; only 1: inversion_clear H; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.557771	574	134	0.1.3.1.3.1.5	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	40	0.018998	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.469955	64287	6051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.241632	9376	2758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.122435	39133	7809
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.067660	21224	6269
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.205799	25445	6563
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.353144	239	59	2.2.6	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.014985	4	3	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	40	0.010583	5	3	0.0.2	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.084679	13437	2443
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	40	0.007757	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.093843	30109	5238
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	40	0.008404	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.009686	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.097495	27230	9178
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.167555	7733	306
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	40	0.008377	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.036331	6712	3346
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	40	0.005246	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.007576	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.003623	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.092646	10351	1606
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	40.156155	57628	6481
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.495989	199331	10247
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	40	0.992879	456	143	2.0.0.9	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	40	0.387270	342	58	5.5.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	2.934030	1297	332	7.9	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.406443	174	38	1.0.8	synth with cache (only 1: induction 1; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.321406	28931	4905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	40.413771	12247	3317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.055935	15717	3444
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	40	0.235124	248	48	1.3.3.1.7	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.466266	128014	7420
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	40.031320	6712	727
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	40	40.446254	171688	25297
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.128982	12109	1303
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	40	0.201132	144	31	0.7.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	40	0.012042	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.014091	6	4	0.0.0.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	40	0.012738	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	13.073269	42317	952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	40.046571	9084	1621
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	40	0.008562	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.285111	35511	3605
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.773768	1641	224	0.18.0.6	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.003207	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	40	16.964021	10772	1375	6.16.7.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.002428	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.064115	13155	951
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.160641	58054	5646
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.832411	366337	10217
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.007942	4	3	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.040339	45	8	0.8	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.116297	39349	5493
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.366161	12972	4440
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.208108	83984	4450
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	32.748017	211192	9118	14.35.3.22.20	synth with cache (only 1: intro z; only 1: intro H; only 1: intro x; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.012097	13	3	1.4	synth with cache (only 1: destruct 1; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.187264	10360	3382
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	22.524624	15272	3663	3.1.0.1.0.8.0.3.2	synth with cache (only 1: intro H; only 1: intro H2; only 1: split; only 1: apply Pos2Nat.inj; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: tauto; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	4.470296	1811	555	3.2.2.1.5	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.693636	13538	7166
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.011908	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.221119	16	10	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	1.250670	3701	256	0.32	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.265660	13238	2818
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.152649	88	28	0.0.6	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.064557	2337	371	0.3.0.0.13.3	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.432675	35261	6348
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.009247	4	3	0.0.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.009002	4	2	1.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.197116	19223	3936
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.044106	15749	1776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.088778	29240	5325
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.144311	30103	4910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.083697	28650	4442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.008884	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	1.359342	1958	378	0.9.0.0.7.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.304993	113617	13908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.425817	9763	3870
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	40.758191	339130	25527
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	1.177603	484	139	0.0.0.0.8.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.027298	18	15	0.0.0.0.0.0.1	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.055613	78	33	0.0.6	synth with cache (only 1: case H1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.142904	11170	2140
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.155110	52538	12140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	40.063607	14043	5032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.307754	18419	6022
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.267145	29971	3821
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.054923	13750	3509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.254683	22457	3406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.412264	19011	2491
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.406933	171212	6697
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.561555	229617	11480
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.385736	155725	18008
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.052841	94	25	10	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	6.079446	1899	532	0.0.0.0.0.1.1.1.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.060119	12756	3913
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.066283	17798	5192
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.404158	81594	8460
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.254656	94835	13778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.221369	17624	6069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.680731	3099	766
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.061798	20391	2911
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.146274	20683	2380
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.018293	3640	1132
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.135055	4473	915
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.189812	60967	17021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	3.757695	1321	406	0.0.0.0.0.1.1.1.0.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.074673	22583	3595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.754094	231	90	2.2.0.2.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.357652	10135	1855
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.216489	83003	2965
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.077251	19399	7586
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.430135	188192	24093
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.241393	94255	12440
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.167159	36556	16734
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.159565	52182	10482
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.057040	13380	4186
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	40	40.925313	431332	15773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.368731	13673	2969
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.119143	14118	3333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.137335	29672	5687
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.985582	695736	76613
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.121238	8	5	0.0.1.0.2	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.183913	71155	2802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.136503	10960	2266
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.138416	45296	8596
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.532993	213266	5073
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	40.814141	364814	10329
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.056747	20429	1552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.312539	24264	6031
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.303672	115300	13874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.211606	39532	3144
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.104190	32224	7334
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.776230	41325	4778
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	0.649307	5190	190
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	40	40.277855	110929	9639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.178756	60067	7873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	2.575011	1210	255	0.7.4.3	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.095227	38	13	1.1.2.1	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	1.782855	1247	412	0.5.0.0.1.1.2	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	40	7.997522	50434	8122	0.0.1.2.1.0.0.0.1.1.1.2.0.2.0.0.1.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	40	35.854434	3736	147
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	40	0.186477	736	221	1.0.0.1.0.1.0.1.4	synth with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.688096	294569	7143
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.064339	17335	3829
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	20.453959	205852	6048
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	40	40.232799	6107	2048
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.191282	22245	3522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	15.533132	6546	1567	1.1.1.4.0.0.6	synth with cache (only 1: intros b; only 1: intro H; only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.027148	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.549327	135	56	0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.607637	2223	441
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	40	40.188788	22281	2421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.316015	17253	5476
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.490117	54171	6087
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.058081	18265	2267
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	32.672319	28144	635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.170363	17989	2656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.315035	18139	3222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	2.648026	636	219	0.0.0.8.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.104342	26146	6291
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.083991	24822	7408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.479165	66	28	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	2.475730	776	115	0.12.8	synth with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.366447	28444	7644
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.045299	6621	1287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.251111	6326	1971
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.479029	62038	6937
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.009774	1275	83
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.343201	24464	6155
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.037025	9112	2426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	18.553200	18731	2245	1.0.36	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.156275	53407	8551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.122734	56	26	0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.183288	67099	11305
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.054284	52	22	4.1.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.581857	471	211	0.8.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.060702	18	12	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.191235	51376	18673
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	40	10.563777	203	14	20	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	3.699407	863	268	0.0.0.0.4.4.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.979788	382	91	0.0.0.0.0.7.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.017080	6	6	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	27.039267	15767	3284	1.3.3.20.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.019004	8	6	0.0.0.0.2.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.092515	29122	4569
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.070097	20532	5313
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.070670	32	9	2.4	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.349982	35904	6504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.066398	13832	3934
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.912245	1412	491	1.1.1.8	synth with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.015761	5	1	4	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.325578	60287	10891
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.116244	53	26	0.0.2.4	synth with cache (only 1: red; only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.088073	26535	4173
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	2.437100	3130	959	1.4.10.2.1	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: trivial; only 1: apply op_ass).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.161149	10034	4827
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.029653	215	70	0.4.4.0	synth with cache (only 1: unfold Equal; only 1: intuition; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	40.082355	26718	1933
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.220807	78567	15583
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.277831	29100	3060
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.582660	79	22	9	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	3.705218	577	185	1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	15.070658	94581	9675	5.9.8.0.3.0.6.0.6.1.0.2.0.8	synth with cache (only 1: intro H1; only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: assumption; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.081403	14831	1540
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.173681	53832	2070
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.886162	1910	308	0.1.0.3.21	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.010362	3	1	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.043629	26	10	0.0.2.1	synth with cache (only 1: split; only 1: solve_max; only 1: revert m; only 1: apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.019623	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.161449	7	6	0.1.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	10.462490	22753	496
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.215339	1744	78
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.010392	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.368148	16158	5404
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.336213	140311	6536
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	40	41.264235	15561	2000
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.015456	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	21.685981	85310	7804	0.0.3.20.1.32	synth with cache (only 1: intro z; only 1: split; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.183576	17574	3412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.274883	134	42	1.3.1.4	synth with cache (only 1: intros m; only 1: intro H; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.089285	25539	8575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.262070	23650	4455
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.616480	23678	3687
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.486087	198024	9756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.126304	29178	5458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.177406	6768	2533
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.145514	25796	6187
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.039562	12169	2080
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.203114	20725	3125
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	40.292267	108236	11219
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.344341	134248	17627
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.008812	3	2	1.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.085889	26603	7188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.362718	9959	4493
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.125980	148	41	0.7.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.154770	6	2	2.2	synth with cache (only 1: intro H; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.007474	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.012417	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.094500	27674	4838
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.418502	18	5	4	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.058688	17860	2928
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.106205	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.056378	13569	3793
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.196399	16100	3753
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.107922	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.279750	18187	6179
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.107650	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.117485	11318	2856
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.037941	19	7	3.2	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.021600	10	4	4.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.105517	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.063305	34	16	5	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.005690	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.006320	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.042404	13	7	0.2	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.005516	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.005715	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.004433	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.005413	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.483508	47174	4424
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.068678	24623	2311
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.841754	368605	7910
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.407778	167255	19806
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.043136	8513	2614
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.291828	37536	6728
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	3.003799	734	263	1.4.2.1.1	synth with cache (only 1: unfold Qeq, Qmult, Qplus; only 1: intros a n Hn; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.250599	23544	3594
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	0.046609	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.038258	1975	480
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.045282	12130	3685
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	18.543302	5177	718	1.2.7.2.0.0.5.5.2.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: nzsimpl; only 1: rewrite one_succ; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.190249	50935	6282
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.038142	7296	1588
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.089649	9051	1326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.087335	25857	3792
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.195454	63893	15810
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.071280	11904	1484
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.377511	16873	2642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.070882	18211	8300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.108835	81	18	0.6.1	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.172229	44755	16485
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.094228	30352	8509
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.137741	43259	10382
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.375373	158562	13296
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	1.878401	2610	693	0.0.1.0.0.1.1.0.0.1.2.3	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.148901	46648	7952
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	40.737042	324428	14731
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.339607	1645	108	0.19.20	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.004985	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.005258	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.150837	15476	3400
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	40	0.014485	39	7	1.8	synth with cache (only 1: intros A B []; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.126518	7256	2310
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.067953	19669	2054
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.180961	12324	2913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.056330	13152	7411
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	40	22.714735	1174	97	1.15.3.14	synth with cache (only 1: red; only 1: intuition; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.341850	110879	10647
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.006866	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.118085	39359	4509
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.532489	332	99	0.1.0.0.2.0.8	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	40	1.702317	109	12	1.13	synth with cache (only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	40.391763	38433	6482
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.097837	6	2	2.2	synth with cache (only 1: intros H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.280789	71764	3295
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	40	4.832008	6099	1902	0.0.8.4.0.0.1.1	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	40	3.644899	16009	1764	1.15.10.3.4.6	synth with cache (only 1: intros A B []; only 1: intros [Hl Hr]; only 1: simpl; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.350651	138740	10454
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	2.147567	4505	242	6.8.35	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	0.610285	829	99	6.9.10	synth with cache (only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.678760	305662	9750
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.748732	36969	5040
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.211466	48901	5394
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.397250	1423	98	0.9.3.24	synth with cache (only 1: intros n m; only 1: induction n; only 1: cbn; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	17.050638	151740	3550
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.065090	371	28	6.19	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.331841	127046	12557
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.044874	11983	2368
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.512955	17687	3880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.112222	27160	5804
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.134233	1227	95
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.495182	441	87	1.0.11.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	40	40.272682	14843	1108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.451885	35750	3955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.521690	28963	5702
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.112394	44135	1157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	40.185743	20914	3493
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.232083	87	12	13	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.255136	32646	4596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	14.095990	12306	1388	0.0.3.34.0.0.0.2.14.29	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.060922	16031	1880
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.443349	25364	6007
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.129093	29	8	0.3	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.054079	18790	2883
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	43.917399	8515	894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.341222	28315	3462
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.235728	33395	3952
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.491816	4801	564
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.316397	15100	605
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.053805	12303	5108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.046616	12301	2250
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	32.576863	184046	4430
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.123305	36890	8048
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.009822	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.011267	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.021578	7	6	0.0.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	15.582909	7508	2612	0.0.0.1.1.0.1.0.0.7	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.372837	24537	6726
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	20.397372	63520	9733	0.4.6.0.0.0.1.1.0.1.0.0.0.0.0.0.0.0.19.2.1	synth with cache (only 1: intros; only 1: split; only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: intro H; only 1: apply clos_t1n_trans; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.011410	8	6	1.0.1.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.527089	20486	5201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.489052	16230	5083
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.089888	13173	5650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.042753	5585	849
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.051038	7	4	0.0.3.0	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: split; only 1: now rewrite Hxx', Hyy'; only 1: now rewrite Hxx', Hyy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	40	0.087250	98	15	0.2.10	synth with cache (only 1: induction 1; only 1: contradict H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.168364	58690	13939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.305858	19085	5083
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.274036	29	11	1.1	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	0.448884	153	31	0.1.9	synth with cache (only 1: induction 1; only 1: contradict H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.226831	15083	5558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.095574	30080	3182
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	40	40.145424	37900	4034
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.162915	44965	17451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.036329	5859	953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	8.282519	4062	826	0.0.0.0.0.1.0.0.0.0.0.0.0.1.9.0.18.1	synth with cache (only 1: split; only 1: intro n; only 1: apply le_refl; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	40	40.270894	93720	22299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.238023	11231	1597
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.107546	25038	3424
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.143758	34202	5675
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	9.920759	5354	2255	0.1.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: unfold map; only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.115824	5708	1590
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	40	40.780678	342385	31600
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.091198	21331	3644
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.180304	1619	101
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.119030	33050	2980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.096229	14103	2989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.354138	8592	2058
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.255045	91684	10879
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.260916	106771	5613
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.062894	19537	3766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.067862	19580	4042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.172494	20377	2990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.007213	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.205686	12267	4977
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.427698	18908	3648
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.124920	42250	5821
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	42.584851	24308	2726
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.041030	12408	1095
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.099598	24806	10502
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.083372	24652	6611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.005844	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.540675	6309	1219
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.008333	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.007164	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.248161	21201	3419
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.413851	505	118	0.10.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.074479	22165	4422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.248482	9276	3029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.186972	8469	1978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.301813	21337	6573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	11.058053	4503	1098	0.1.0.3.10.0.1.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	40.236948	30552	15340
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.450883	64404	4801
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.672084	286254	6719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.049823	11161	3413
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.577104	247599	8042
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.075135	155	48	1.2.0.0.2.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H1; only 1: elim H1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	40	40.164929	54249	8793
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.057176	14865	3036
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.291789	33262	5037
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.004172	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.042190	10451	3189
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.208650	66678	20553
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	12.254462	11263	1968	26.0.1.1	synth with cache (only 1: intros A x y; only 1: unfold Add; only 1: rewrite (Union_associative A (Singleton U x) (Singleton U y)); only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.287578	12483	2959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.151232	24682	3475
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.030934	8611	454
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.167357	7777	978
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.061499	11726	2072
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.056703	8955	2879
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.068065	17418	7527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	7.029585	5144	1223	0.0.1.0.1.12.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: intro H1; only 1: now apply H; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.297365	25239	3462
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.359539	122489	16090
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.142836	45662	9902
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.146801	48547	6640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.083499	25131	3104
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.163857	23891	4703
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.042900	10735	4717
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.108179	12452	1934
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.260666	87563	14986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.409657	24758	4826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.129055	42030	5700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	40.260944	24553	6979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.280464	63932	2444
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.219554	76203	14899
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.773975	331358	19715
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.007226	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	40	40.173397	53898	15542
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.075989	27430	1686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.189719	56242	5647
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	40	29.583306	152450	4294
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.311384	136943	3742
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.493581	280	101	0.0.4.4	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.169193	179	37	0.0.1.2.6	synth with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.078580	34	14	1.2.1.0	synth with cache (only 1: intros; only 1: case (M.elements s); only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.443018	24182	2340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.037057	7	4	0.3.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	1.319794	2398	414	17.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.012134	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.377476	147772	14261
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.136155	792	33
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.325878	174	46	0.0.0.1.1.4	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.255968	3821	627
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	0.170968	23	5	0.3	synth with cache (only 1: Bool.destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.177179	15087	2130
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.260104	10531	456
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	40	40.323332	37817	7155
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	2.804573	2115	603	8.3.0.1.1.0.2.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.358790	23412	2983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.195446	18782	6408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.236978	3445	1401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.093322	28181	3894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.017764	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.054385	16998	3084
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.563708	31139	6373
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.095153	7268	1758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.326196	27966	3561
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.073174	19693	5906
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.980710	1220	215	0.3.8.1.1.2	synth with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.175249	19138	6459
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.446807	34132	7718
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.009884	3	3	0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.287506	1808	105
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	21.883358	16082	334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.040595	9110	2543
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.143423	44493	9007
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.213612	21381	7018
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	41.561495	21821	4415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.159739	23393	5984
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.223351	81648	18458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	40.568547	26806	5073
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.061002	15035	7745
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.137128	31649	6067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.317015	21457	5595
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	40	40.032561	10400	1665
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	40	40.116751	39489	5954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.110454	34383	6104
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.197585	9633	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.086323	25362	6836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.221160	34619	6722
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.294310	4865	592
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.399131	160990	20938
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	40	0.020216	34	11	0.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.116132	15718	3141
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	40	0.028802	19	14	1.0.0.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.128352	41440	5633
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	40	0.096136	180	43	1.2.2.6	synth with cache (only 1: induction n; only 1: intros n m; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.988733	692	196	0.0.5.5.2	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.017193	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.016695	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.018747	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.016753	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.018039	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.080738	28	12	3	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.026603	15	3	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.474952	78	36	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	40.125850	4939	1390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.265569	44	19	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.027658	12	4	5	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.016066	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.012150	2	1	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.062874	15	11	1.2.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.605987	64356	3107
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.016351	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.024514	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.127659	20515	3636
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.025391	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	40	40.622788	267448	29119
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.071550	22453	3237
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.049168	7	3	0.2.2	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.145521	20925	4038
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.352594	5377	276
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.119930	24838	5017
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	1.511612	3428	576	2.0.2.16.2.2	synth with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: destruct m; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.012317	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.185363	69068	8049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.387392	17012	4112
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.280481	106144	19794
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.108682	24737	4147
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.594493	1956	433	0.3.0.3.3.0.2.0.2.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	1.307087	669	228	0.1.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	11.732517	5054	1946	1.0.0.1.0.5.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.117906	30698	7226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.284137	9838	1677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.267609	13734	2419
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.468611	37390	5356
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	40	40.412841	10121	3645
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.083922	32127	1022
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.140150	16697	1654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.421752	27183	6028
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.157207	48943	11690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.210904	14526	2248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.123383	23578	5654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.214076	15804	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.334043	40880	5591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.419093	10098	4189
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.321579	82851	4797
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.204549	7	2	1.4	synth with cache (only 1: unfold lt; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.425570	46982	6512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.112544	323	129	3.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	1.730199	6425	306	8.1.28.11.23	synth with cache (only 1: intro x; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.653897	8329	1813
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.051468	12239	3228
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	0.101626	263	23	5.16	synth with cache (only 1: red; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	14.930365	15092	298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.259559	12286	5200
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.047530	14438	2347
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.186409	66266	5925
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.344005	131204	15423
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	40	21.894640	23419	3432	0.1.1.0.1.0.2.0.1.15.2.1.12.1.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.116828	41251	7239
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.322241	114975	21020
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.004979	2	1	1	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.346404	18783	3907
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.318680	500	117	0.0.0.0.0.0.0.7.1	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.123306	12757	1229
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.139674	11570	1940
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.132653	31079	2150
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	40	2.169359	1853	442	0.6.3.0.0.0.1.5	synth with cache (only 1: induction l; only 1: symmetry; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	40	0.005536	9	3	4.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	40	0.027952	93	27	3.1.4	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	40	0.035918	297	36	14.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.005925	3	2	0.1	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.122563	900	116	0.7.15	synth with cache (only 1: intro H1; only 1: intros A B []; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	3.220362	5967	102
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.522844	3755	178	3.24.26	synth with cache (only 1: intro H1; only 1: elim H1; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007214	6	3	2.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.005818	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.006830	4	2	0.2	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.025045	85	16	7.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.011781	23	7	0.5.1	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.006195	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.006805	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.007440	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.088037	23010	9710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	40.521644	25401	5311
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.080516	26683	4183
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.365415	1935	84
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.147264	90	15	3.6.0	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	40	0.008687	14	4	0.2.2	synth with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.006174	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.116546	33984	10316
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	40	0.237201	679	127	3.0.11	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	40	0.007000	4	4	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.009820	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.011321	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	40	0.356974	1584	162	0.11.11.4	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.004552	3	2	0.1	synth with cache (only 1: destruct e; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.004391	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.004516	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.004410	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.003949	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.435923	18750	7452
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.169140	51974	8444
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	40	0.965606	4593	460	0.15.10.4	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	40	0.048052	103	30	1.9	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.225792	93644	2077
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.298008	2706	165	56	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.188194	26131	4654
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	1.793936	238	102	1.0.0.0.0.0.0.1.3	synth with cache (only 1: intros Su; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.111767	18562	7333
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.144647	8681	1094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.406441	11928	4690
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.310949	1650	100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.117995	40351	3431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.189818	30003	2661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	40.380922	27149	6620
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.161285	49878	15084
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	40	41.095280	665592	17219
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.008332	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	40.022540	3888	205
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	40	40.345464	134268	15775
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.879391	3748	1188	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.3	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.134763	26531	5684
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	10.600322	7252	3017	1.1.3.0.8.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.479268	37172	4866
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.312119	116351	14924
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	40	10.192328	56238	4028	1.8.21.14.17	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct Fl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	40	0.005080	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.006687	4	2	0.2	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.006642	7	3	1.3.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	40	0.006649	8	3	4.0.1	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	0.252287	1881	106
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.069419	21669	3048
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	40	0.243613	1107	66
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.004198	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.216091	22276	2868
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.280557	33026	1165
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.215592	81019	4319
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.012640	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.012986	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.646503	286594	8347
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.083396	8	6	0.0.0.2.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	40	2.474430	15927	996	1.26.12.21	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.005839	2	2	0.0	synth with cache (only 1: destruct e; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.108665	328	56	0.6.3.2	synth with cache (only 1: intros; only 1: destruct e; only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.006613	10	3	0.3	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	40	0.007815	12	3	1.2	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.244216	26116	2202
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	1.145861	719	282	6.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.313056	12453	2222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.229349	8680	1696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.093328	28744	4791
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	40	7.136619	20786	4388	0.0.0.3.8.1.0.0.0.5.0.1.8.2	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intro H; only 1: rewrite H; only 1: destruct c'; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.278206	22121	6710
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.095799	31323	3118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.336667	212	63	0.0.5.3	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.089158	25538	4441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.294548	6603	3114
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.108222	20338	930
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.379205	22479	4174
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.292666	35187	4660
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.309113	18795	6399
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.409834	24140	3317
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.013967	11	2	7	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.092734	1112	340	2.5.6.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.042752	12134	2640
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.094354	29476	5742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.497442	215	86	0.0.7.0	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.222224	11361	5699
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.081777	30446	3704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.405668	12910	5538
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.228153	83079	19864
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.207124	12157	1918
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.299256	1013	105	1.0.6.11.6	synth with cache (only 1: intro H; only 1: intro y0; only 1: right with y0; only 1: assumption; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	38.161210	40586	5431	12.2.13.11	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.097264	33204	3587
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.034366	6886	2683
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.064216	19	7	0.1.1.1.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.538392	26429	7486
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.109565	23678	4228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	1.147039	927	212	15.1	synth with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.010448	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.302358	8242	1804
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	40	40.046287	13987	3001
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.782188	9752	613	0.0.1.15.29	synth with cache (only 1: intro y0; only 1: intro H; only 1: right with y0; only 1: assumption; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.076845	143	37	0.1.6.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	3.858950	928	135	0.1.4.1.21	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: destr_bool; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.295741	18274	4962
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.038936	12	9	0.0.1.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.133230	14286	2171
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	0.984680	344	62	0.0.13	synth with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.157860	51167	5121
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	2.989205	1358	297	0.5.1.10.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.080142	19967	3376
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.009660	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.107038	15539	2978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.107449	31858	5644
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	40	10.578490	102260	4053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	40.253533	10925	3309
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.219370	17359	2675
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.129065	11580	2477
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.157551	14995	7485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.120275	31638	1854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.208002	23497	6407
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	40	40.237187	79440	17954
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.264886	7985	398
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.213487	67074	7619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.055945	16538	2511
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.091794	29958	5190
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.133519	45712	7274
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.713749	319931	16602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.178275	17300	3436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.590964	42370	5286
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.138069	37021	6327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.247917	10532	1548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.324559	6117	3077
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	40	2.301701	2222	1129	0.0.2.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.520811	25308	7003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.125338	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.079524	31754	1316
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	3.411603	1393	753	1.0.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.049441	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	0.895309	819	365	0.0.1.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	40	40.308059	33276	7082
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	40	0.818165	714	356	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.075161	20343	8004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.495970	28323	3871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.282877	14622	2099
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.196905	21115	4564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.326843	16328	4231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.473010	16128	5491
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.216458	38030	5055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.266841	27025	7158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.036995	21	7	1.0	synth with cache (only 1: intros; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.453999	182437	6880
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.104310	31225	4399
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	40.272604	15546	6667
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.054498	17171	2558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.063802	20138	3510
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.241749	93358	8217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.078794	25669	3377
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.352395	132340	17390
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.014302	15	4	2	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.125453	8076	3135
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.009796	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.295962	104508	14515
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.440343	50139	4612
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	41.618147	16131	1207
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.024042	1089	185	0.0.0.5.3.2.5.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros f [x]; only 1: unfold In in *; only 1: assumption; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.203673	95	29	1.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	8.349059	3117	853	9.10.2	synth with cache (only 1: intros x x' Hx; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.062372	21886	1938
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.133377	45723	6317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.098913	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.357184	1098	136	4.3.1.20	synth with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.008245	8	4	0.4.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	9.374435	11853	1825	0.0.0.0.0.0.0.0.0.1.0.35	synth with cache (only 1: induction d; only 1: discriminate; only 1: trivial; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.429445	32724	6663
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.214097	20236	6187
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	8.634410	34043	3088	1.20.2.1.36	synth with cache (only 1: induction n as [| p H]; only 1: trivial; only 1: simpl; only 1: reflexivity || destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.059392	14120	8004
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	40	12.725378	15947	2310	0.8.13.12.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite app_length; only 1: rewrite IHl; only 1: simpl; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	40	0.433233	578	182	0.3.0.2.2.1.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	11.982331	7978	2417	5.5.2.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: auto using eq_refl, le_refl; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: apply Private_NZDiv.div_small; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.053096	15724	1570
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.100761	31713	4113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	41.372189	18252	8722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.110050	20134	7739
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	19.883987	15798	3506	1.1.6.0.15.2	synth with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: red; only 1: intro H; only 1: induction H; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.116959	39120	5080
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.061664	12749	4261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.075739	23516	4177
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.238379	11289	2199
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.247891	17203	730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.294934	64205	2537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.364203	16748	4336
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.050558	1342	89
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	13.931453	68765	3416	2.10.0.2.13.16.9.33	synth with cache (only 1: subst; only 1: intro eq_rect_eq; only 1: red; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: exact eq_refl; only 1: rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.094616	30566	4191
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.110105	95	18	2.2.7	synth with cache (only 1: intro eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.208904	21139	4855
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.286432	25504	2741
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.623792	701	140	0.7.5.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.144058	48818	4252
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	8.324808	633	61	14.13	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	5.162310	25329	1806	1.30.2.3.9	synth with cache (only 1: intros; only 1: intro UIP; only 1: intro eq_rect_eq; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.326616	20587	659
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.015643	12	5	5.0.0	synth with cache (only 1: intro eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	37.131585	34159	5184	15.0.0.1.75.0.1.1.1.0.1.1.1.0.1.0.0.15	synth with cache (only 1: assert (Proper (eq ==> eq ==> Logic.eq) compare); only 1: repeat red; only 1: intros; only 1: do 2 case compare_spec; only 1: trivial; only 1: order; only 1: order; only 1: order; only 1: trivial; only 1: order; only 1: order; only 1: order; only 1: trivial; only 1: split; only 1: now rewrite ?Ha; only 1: intros a a' Ha; only 1: now rewrite ?Ha; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.172651	33188	4120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	1.424638	2507	83	68	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.063014	20451	2784
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	5.556259	1363	377	0.0.0.1.4.0.5	synth with cache (only 1: unfold min_elt; only 1: intro s; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.257088	98505	4398
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.012922	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.483474	188071	13232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.119780	41050	5401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.270708	16794	4553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.093068	17379	3819
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.057744	17837	1900
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.857591	379227	11397
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.883017	488	130	10.3	synth with cache (only 1: symmetry; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.072392	11370	2453
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.077521	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	3.715644	1079	204	2.15.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.337389	16352	3026
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.313829	20491	1039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.093307	22021	3654
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.324260	40379	5317
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.089288	19396	2326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	40.282149	23118	7085
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.291731	40538	8887
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.151470	58	37	1.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.260868	22274	7222
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.082283	6007	963
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.141611	44360	11219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.443974	16535	3092
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.132995	51	31	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	5.132402	30025	730
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.074258	21248	2893
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.126605	45	25	1	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	40	40.160829	39476	8511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.642573	16606	3562
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.025976	6118	1692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.298009	15311	3592
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	40	1.584716	719	224	10.1.1	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	37.478086	14746	5135	1.1.1.5.6.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intros; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.148505	54	13	0.5.3	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.394193	164770	14275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.124970	28473	2986
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.233899	9345	2954
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.674705	40887	6185
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.081380	28419	2200
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	2.035337	2352	423	5.1.6.8	synth with cache (only 1: intro H; only 1: induction l; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.123104	4002	1638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.089783	18942	1465
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.192076	34528	5950
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	3.871086	22577	594
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.328404	10338	428
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.136979	6715	2440
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.471000	85	41	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.049040	11408	2354
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.565038	243441	24271
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	40	0.030527	123	24	7.2	synth with cache (only 1: intros A B []; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.068418	22067	3557
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	40	0.060206	409	50	5.7.3	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.191699	18500	5489
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	40	0.009991	12	6	0.0.5	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.362064	7280	1553
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.044551	5428	216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.178474	63159	6547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.064156	18368	4084
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.140966	36879	6142
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	2.392911	18258	492
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	6.549970	4236	1627	1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: simpl in H; only 1: reflexivity || apply f_equal || exfalso; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.193757	18778	3400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.111585	19749	4304
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.557912	243867	24064
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.070314	23497	3410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.317373	4267	2418
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	40.215141	15859	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.069531	10859	3375
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	40	40.088666	23998	6999
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	40	0.008656	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	40	0.020850	7	6	1.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.053502	12620	6493
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.326583	20324	5050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.299393	20585	5517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.483497	11584	1711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.467377	51845	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.188911	16728	2661
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	19.347275	11626	311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.494200	13489	4764
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.148768	45	23	0.0.1.0.2	synth with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	40.206984	9938	2043
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.360149	117454	8120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	40	6.653819	39391	5561	11.0.0.1.11.0.1.3.1	synth with cache (only 1: destruct 1; only 1: intros [Hl Hr]; only 1: split; only 1: intros; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.345148	8	1	7	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	16.492460	9299	3520	1.2.0.0.6.0.0.0.0.1.0	synth with cache (only 1: intros a b Ha Hb; only 1: symmetry; only 1: split; only 1: intros Hab; only 1: apply mod_small; only 1: auto; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: intros Hab; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	0.630287	2528	64
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.006461	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.032121	66	10	2.9	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.115073	38127	3863
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.005992	8	1	7	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.048512	15626	2513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.260555	16596	6597
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	9.970194	5191	1164	0.0.3.1.13.0	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.056448	16432	3815
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.095570	30239	4963
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.110908	12286	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.364676	27004	4587
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.214851	69578	17434
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	18.520547	10339	3338	0.0.4.16	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.356147	29790	5918
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.026790	2	2	0.0	synth with cache (only 1: intros; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.164442	47391	9122
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.106934	15810	2882
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	40	20.455538	107895	8780	3.14.1.3.14.1.3.14.1.2	synth with cache (only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.444298	34115	4876
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.096903	32094	4388
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.151032	47772	9378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.098204	24751	9981
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	40	40.425153	69167	8102
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	40	0.050462	19	5	4	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	40	0.003793	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	15.290765	41112	7617	0.0.1.0.0.13.0.0.0.1.1.0.1.0.0.0.1.0.0.0.0.13.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.010042	7	5	1.0.1.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.078743	18232	7879
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	40	40.252282	32897	5782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	16.987769	2548	1097	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: rewrite !(mul_comm _ p); only 1: destruct (eq_decidable p 0) as [Hp| Hp]; only 1: rewrite Hp; only 1: nzsimpl; only 1: rewrite lcm_0_l; only 1: now nzsimpl; only 1: destruct (eq_decidable (gcd n m) 0) as [Hg| Hg]; only 1: apply gcd_eq_0 in Hg; only 1: destruct Hg as (Hn, Hm); only 1: rewrite Hn, Hm; only 1: nzsimpl; only 1: rewrite lcm_0_l; only 1: now nzsimpl; only 1: unfold lcm; only 1: rewrite gcd_mul_mono_l; only 1: rewrite mul_assoc; only 1: f_equiv; only 1: now rewrite div_mul_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	40	0.017497	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.090473	23220	7997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	1.214776	583	221	0.0.0.0.0.0.0.0.0.0.1.8	synth with cache (only 1: induction d; only 1: discriminate; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.211182	59090	8670
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.072352	21518	3075
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.163071	24964	4852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.586261	31183	8618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.277593	22598	7485
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.130096	22422	4657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.626602	17509	3543
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.109554	35373	3708
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	40	3.111367	4384	733	1.2.1.0.17	synth with cache (only 1: induction l as [| x l]; only 1: red; only 1: intros; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.059004	15463	5525
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.156216	266	62	4.1.5.1	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.101443	32419	3057
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	19.714980	1683	51
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.086574	21882	3508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.069636	19224	4248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	5.332875	4165	1281	0.0.0.0.0.0.0.0.0.0.0.18	synth with cache (only 1: induction d; only 1: exact eq_refl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.012493	3	1	2	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	11.686830	6278	849	2.1.14.0.13	synth with cache (only 1: unfold Qeq, Qdiv, Qmult; only 1: intro H; only 1: apply Z.lt_gt_cases; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.385985	19537	5525
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	26.708548	27151	3098	0.11.0.19.0.2.0.12	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition; only 1: destruct (eqA_dec x a); only 1: auto; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.035923	1480	146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.028558	6820	1409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	1.895230	2437	409	6.6.22	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	40	4.037171	7878	887	1.3.10.3.0.0.6.5.2.4	synth with cache (only 1: induction l; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: induction n; only 1: trivial; only 1: trivial; only 1: firstorder  (subst; auto); only 1: induction n; only 1: RelationClasses.simpl_relation; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	25.812110	9441	1126	4.51	synth with cache (only 1: destruct 1; only 1: now auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.092298	32026	2419
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	20.641342	5154	947	0.0.0.5.4.1.2.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.243418	46629	2490
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.357417	137528	15828
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.099070	28596	7273
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.068223	7638	1016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.072917	144	54	0.2.0.3	synth with cache (only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.136694	12	5	2.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.129022	11	5	0.0.2.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.185703	24092	5300
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.203472	31077	862
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	1.437485	1906	531	5.8.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: intro Streicher_K; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.080433	116	25	5.5	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.026898	36	11	1.1.5	synth with cache (only 1: intros A x P H y H0; only 1: destruct 1; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.006618	3	2	0.1	synth with cache (only 1: intros * []; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.074646	17048	4214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.477808	16940	2682
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.492017	199157	16721
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.039630	9743	1339
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.078771	15417	2417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.450411	22181	4064
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	40	5.370053	362	41	21	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.075431	4197	246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.091392	22338	2388
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	25.672390	9381	1496	8.0.14.3	synth with cache (only 1: repeat red; only 1: intros A B H; only 1: intro; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.367222	70623	6250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.097697	55	11	0.6.1	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.093875	32065	4211
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.141861	52194	5491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.157477	108	27	0.4.2.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.051106	13781	2107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	40.532225	20747	3616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.274243	18970	4003
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.151384	21510	6937
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.064276	14204	4306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.336154	8346	2017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.502341	111646	4012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.147307	7215	1323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	29.267024	9506	3359	0.0.1.1.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.173477	64663	6292
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.062155	20106	2827
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.218723	81808	5290
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.691427	29729	8279
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.186952	26742	2056
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	9.575972	1985	688	0.0.0.0.0.0.0.0.0.2.2.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	40.086322	9611	3613
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.125001	11282	3285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.043560	997	239	0.0.1.0.0.9	synth with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.075404	19	11	1.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.097253	28977	2884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.172172	19798	8967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.202748	75487	7333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.097651	30607	4195
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	40	40.246894	9889	246
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.346538	45061	2656
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.099503	28412	4736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	0.117445	54	18	6.1	synth with cache (only 1: intros; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	40	40.097841	32123	6434
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.549928	230454	5815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.220159	25308	3870
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	40	0.005284	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.772842	1568	49
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.095516	27198	7349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.400678	26291	5831
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	40	3.853994	3496	732	0.13.0.1.0.0.1	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: intro y; only 1: simpl map; only 1: simpl in *; only 1: rewrite IHl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.337487	9005	3552
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	40	1.523858	680	208	0.0.0.0.0.1.2.4.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	40	0.015268	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.259412	618587	15445
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.128759	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.005012	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.006806	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.057986	87	20	0.2.3.1.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.004712	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.259635	35032	5505
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.011797	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.068824	18883	5087
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.132695	44090	6215
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	40	0.076455	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	0.178539	184	60	8.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.255690	22249	5364
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	2.420890	1175	450	0.2.0.0.2.1.0.2.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: simpl; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.514919	9695	2550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.546119	47608	4994
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.015994	2579	305
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.397578	15728	6738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.432134	15847	5169
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.338964	3536	598
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.319797	16591	5515
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.449410	9043	2546
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	40	40.981722	468153	11230
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.239448	46726	14771
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.060001	16414	3725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.412269	20682	5570
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.106958	34046	5105
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.045204	13049	2121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.317129	19763	2717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	15.346788	5796	2525	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.4	synth with cache (only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: intro n; only 1: destruct a, b; only 1: simpl; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: easy; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	40	37.454066	58941	5520	12.7.3.0.0.0.0.22	synth with cache (only 1: induction l as [| x l]; only 1: red; only 1: red; only 1: intros; only 1: assumption; only 1: intros; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.262389	89242	17792
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	40	17.708039	1912	171	3.10.14.2	synth with cache (only 1: intro H; only 1: intuition; only 1: inversion_clear H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.122265	26303	15109
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	14.915143	5520	2612	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.1	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.230044	13055	5913
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.048592	15186	1875
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.242848	29621	4047
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	40	40.247087	86256	28206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.458015	5670	1363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	30.690323	12135	999	0.2.18.0.16.9.32	synth with cache (only 1: unfold bit; only 1: apply negb_false_iff; only 1: apply eqb_spec; only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite lsr_spec; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.206057	76528	13615
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.162859	47279	9123
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.598674	14621	4625
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.058463	18847	1917
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	1.689034	5276	588	11.2.4.16	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros H ?; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.011842	8	5	3.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	37.982458	33151	3737	0.0.39.7.2	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.052947	7841	1343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	17.150220	5018	1589	0.0.0.1.6.0.7	synth with cache (only 1: unfold max_elt; only 1: intro s; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	40.530469	28306	6824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.253600	20156	5964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	9.903452	4715	1749	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.125465	20435	2874
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	11.256015	6918	2076	5.0.0.0.2.0.3.3.0.0.0.0.1.0.6	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	40	39.003259	9008	192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.067533	417	180	0.1.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.018678	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.017542	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.068407	16312	3934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	41.537780	9242	3441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.034726	9327	2475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.184122	9679	4332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.058118	11830	2632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	3.396588	1589	197	16.2.0	synth with cache (only 1: intros x y Hxy; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.206227	35972	4503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	40.421290	25020	7727
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.044639	6572	421
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.112832	35215	6858
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	40	40.204351	73962	8637
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.051120	17112	1468
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	40	0.978077	759	249	8.0.1.0.2	synth with cache (only 1: intros x y; only 1: intros l1; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.190127	18726	3266
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	5.624770	2571	600	12.3.0.0.3.1.0.5.1.0.2	synth with cache (only 1: split; only 1: red; only 1: red; only 1: dintuition; only 1: red; only 1: red; only 1: intros x y H; only 1: auto; only 1: red; only 1: red; only 1: eauto using BinInt.Z.Private_Tac.eq_trans, BinInt.Z.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.389226	33369	3718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.018978	7	3	0.1.3	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.023583	4802	2502
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.186107	24055	7686
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.277531	13613	743
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	40	11.125291	7008	900	5.3.4.11.2	synth with cache (only 1: split; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.081260	13769	2552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.083483	23453	4970
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	0.504771	349	52	9.8	synth with cache (only 1: intro E; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	14.548502	15377	2045	3.0.11.1.14	synth with cache (only 1: unfold Z.succ; only 1: intro H; only 1: rewrite Z2N.inj_add by easy; only 1: simpl; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	40	8.797886	10892	1908	3.14.2.0.0.0.5	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.132964	13927	1689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.068085	4822	2192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.069484	12873	3747
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	40	0.521180	430	120	0.0.0.0.0.4.4	synth with cache (only 1: intros l1; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.380936	25024	5464
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	40	40.034872	2645	125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.119174	23175	3985
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	40	1.063585	1126	195	0.3.1.0.13	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.054058	12898	4825
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.418630	163962	15530
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	20.832808	63478	9851	0.1.0.0.0.23.0.0.0.1.0.0.0.0.0.0.23.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: assumption; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.088646	28626	5743
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.099916	32951	8459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.168454	31530	7772
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.044696	12249	2229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.551476	476	131	3.3.16	synth with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.518679	14935	2947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.326958	21939	3590
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.058129	13452	5436
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.172069	391	40	4.16	synth with cache (only 1: subst; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.184784	15226	3041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.165941	3575	1101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.265122	10734	2723
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.063595	16986	3500
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.112375	36842	6470
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	22.627556	17743	2234	3.1.23.2.7	synth with cache (only 1: intros; only 1: unfold elements; only 1: rewrite elements_node; only 1: unfold elements; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	3.574908	761	292	0.0.5.0.3	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.046001	12530	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.550687	12531	2496
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.758995	23019	11139
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.051785	10951	4904
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.030166	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	40	40.056102	12786	3566
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.041736	24	6	0.0.5	synth with cache (only 1: induction n; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.576710	195	133	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	40.234454	9028	3004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.843285	251	97	1.0.7.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.094200	27344	3317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.007230	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.210803	23314	6316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.038774	12	4	3.0	synth with cache (only 1: intros; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.020187	6	5	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.010951	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.130949	37565	3518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.191925	53	33	1.1.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.010767	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.026087	5	5	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	40	40.005277	1343	76
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.148777	10743	3796
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.100929	30156	7986
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	1.684554	210	85	0.2.1.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: auto with real; only 1: intros E; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.103176	20356	2911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	33.406608	36811	3407	5.11.1.8.12.9.10.2.4.5.78	synth with cache (only 1: split; only 1: now trivial; only 1: intro; only 1: intros a Ha; only 1: intro H; only 1: auto; only 1: intros x y Hxy; only 1: compute; only 1: intuition; only 1: setoid_rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.199829	10898	2344
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.331578	504	242	1.1.1.3.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.296507	20902	4272
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	40	40.383749	48865	5225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	1.490342	340	117	0.10.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.340797	4405	2886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.362410	30065	3103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	3.073153	1412	566	0.4.1.0.0.0.1.2	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.153114	18581	7256
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.010701	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.126220	27	8	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.085348	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.080565	20572	3485
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.160155	22465	1764
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.183798	29956	3531
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.247961	16277	4487
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	4.204193	4530	575	3.0.4.1.6.22	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	40	40.023968	744	48
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.537622	10671	3249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.146042	11	7	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.452107	21292	6297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.429681	7316	1958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.466851	35054	5148
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.297893	38324	5983
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.256263	47015	10172
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.007961	2	1	1	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.013794	5	1	4	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	40	0.450930	517	115	0.0.0.3.3.3.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.124270	172	33	7.0.1.0	synth with cache (only 1: induction l as [| x l IH]; only 1: firstorder; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.093293	28945	2795
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.098327	31259	3917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.487361	19744	5939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.339346	12493	3191
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.182381	32017	6343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.075647	25610	2285
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	40	40.069827	2871	618
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	6.468925	2486	752	0.0.4.9	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	40	9.314729	1573	421	1.0.0.0.0.2.0.1.0.5	synth with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	40	40.041845	1260	155
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.249214	86690	15198
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.156241	57865	4782
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.147702	29552	10572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	31.998836	20297	6007	0.0.2.4.0.0.0.6.3	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: apply lt_0_succ; only 1: intro n; only 1: nzsimpl; only 1: intros _ H; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.353891	28938	5192
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	40	0.866338	596	143	0.3.0.2.1.2.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.447115	33095	4232
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.081510	20276	4761
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.704532	500	131	2.0.1.0.4.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.225970	28516	2229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.092144	25477	2307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.539989	8509	2825
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.185274	42	29	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.046739	8	7	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.129374	19497	6083
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.326009	31255	5395
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	7.430152	2188	1241	0.0.0.0.0.0.0.0.7	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.077549	44	13	8	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.014390	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.030503	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.130139	45140	6651
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.156959	35	17	7	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.015229	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.137370	49329	5470
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.066199	9	6	2	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.296698	55635	5695
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.019059	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.085359	22341	5412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.203304	9875	2441
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	5.853650	615	239	0.0.0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.024157	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.041402	15	6	0.2.0	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.016962	3	2	0.1	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.023808	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.168895	37944	3199
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.035895	12	6	0.4	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.342997	19951	6795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	29.243973	10780	3044	4.11.2.1	synth with cache (only 1: intro n; only 1: intros n1 n2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	40	40.024060	1964	140
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.127097	11650	4486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.642595	22053	7519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.201535	10538	4283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.156298	51905	3754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	41.507302	10266	7308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.094970	28349	5560
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.046855	13108	591
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.214804	47304	6452
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.433046	25421	4721
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.162340	61228	4229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.268420	24182	2641
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.061614	18377	3710
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.430835	38928	4872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.105866	17680	2959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	25.939204	19012	3241	1.28.2.0.0.0.0.0.1	synth with cache (only 1: intuition; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.254916	31201	3586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	40.672985	16674	7701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.073590	32	22	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.342936	39	24	0.5.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.041935	11	9	0.2.0.0.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	40	40.078610	2152	167
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.104036	31548	3697
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.231744	37930	5773
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.123169	13902	1788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.229393	19615	2328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.229678	33147	6270
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.129266	43245	4781
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.074471	4702	274
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.484217	25846	4789
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	40	40.107114	37206	4231
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.035913	7475	4277
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.647463	288322	8426
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.117004	36021	5309
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.267467	57326	2508
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.061066	18620	2917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.125380	15987	3933
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.118080	13562	2249
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	1.982823	3462	443	1.2.0.0.6.3.25	synth with cache (only 1: compute; only 1: split; only 1: intros a b; only 1: intros; only 1: trivial; only 1: intros x y H s s' H0; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.302606	9082	2287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.290588	16277	4382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.265169	40	17	0.0.2.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	17.962751	8061	1488	0.7.5.7.4.8	synth with cache (only 1: rewrite mul_comm; only 1: intro H; only 1: symmetry; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: now f_equiv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.555664	99	19	3.0.4	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.971067	9591	7388
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.015230	10	2	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.387769	142	57	0.1.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.084842	23232	7197
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.313226	122795	14457
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.122445	3	3	0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.061081	4	3	0.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.229822	9594	2237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.205095	22397	4599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.270199	12070	3247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.736791	262	100	0.1.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.034014	7	5	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.652107	115	34	0.7.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.063358	15139	5862
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.128359	10	4	0.3.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.096490	28951	4659
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.083859	26473	4970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.493470	19572	3500
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.078766	22609	6800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.045819	7195	1065
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.102927	33387	4036
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.749400	25566	3086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.249341	22469	8547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.024620	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.186262	67121	6673
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	40	40.030915	1648	90
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.190383	26801	6717
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	4.883290	2445	453	6.11.0.0.0	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.080757	27766	2411
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.346907	7	1	6	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.212484	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.096124	27837	9148
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.371605	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.423118	71002	7205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.268269	23935	5611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	40.403622	21985	5287
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	1.711102	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.565503	21387	2473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.313405	55836	7588
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	40	40.183999	62638	8230
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	4.774814	2291	745	0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	6.879208	1496	302	0.17.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	40	40.067838	17471	5897
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	40	0.099657	7	6	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.059596	14533	3989
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	40.196352	46151	8308
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	40	40.014788	479	36
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.248772	15240	3973
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	30.708297	43130	5144	0.0.0.1.1.40	synth with cache (only 1: intro s; only 1: intros x y H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.613508	17783	5865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.500798	10883	4192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.492448	15493	3288
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.352349	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.375296	21312	3365
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.195351	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.160136	33702	7506
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.204193	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.173411	61562	8793
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.227001	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.342435	69200	3114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	11.977121	4032	1576	0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.513475	19564	3737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.092199	26816	2544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.364556	31211	3791
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.198540	21506	4502
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.120094	40024	4296
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.182621	68557	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	40	40.047087	11485	5563
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	40	40.074192	6184	223
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.278773	97560	14128
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.065854	19199	3610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.436406	22987	6004
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.195251	69109	9246
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.069985	365	159	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.067551	22268	2618
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.192256	31437	929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	3.317599	1475	388	0.1.5.1.3.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.182689	26949	3709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.505078	15397	3502
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.163378	22601	5498
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.090252	24526	8421
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.321724	26186	2752
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	2.350963	1976	344	15.4.4	synth with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	6.074425	77	7	13	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.198521	74	34	1.0.0.0.1.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.085404	20296	2884
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	0.325850	204	34	10.4	synth with cache (only 1: intros H; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.209286	81280	6990
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.020797	4	1	3	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.006123	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	40	0.006567	3	1	2	synth with cache (only 1: apply Z.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.006698	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.272204	17160	2919
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.027378	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	2.165498	739	285	0.1.2.0.0.2.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	0.724064	901	158	4.7.13	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.141408	9524	2261
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.109403	27609	9695
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.254140	18324	2304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.254392	18496	5216
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.047504	1490	83
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.257033	17498	5499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.046604	12256	6384
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.084732	22858	9475
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	0.005699	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	6.428811	2729	1188	5.0.0.0.1.0.0.0.0.0.0.1.1	synth with cache (only 1: intros H; only 1: destruct a as [| a], n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.199381	22609	3731
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	4.361669	1470	397	0.7.0.7	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.083448	14322	1554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142745	48014	4944
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.020601	4230	253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.042168	11887	2327
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.211273	32791	7311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	41.512326	16550	6327
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.385182	37266	4772
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.008644	2	2	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.081384	25504	5372
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.070215	20695	3095
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.221929	59960	6479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.065515	14833	2252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.068899	19154	4175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.007930	2	1	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.026875	6	1	5	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.029044	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.007188	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.264210	30022	3373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.007319	1	1	0	synth with cache (only 1: apply Zth).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.060840	3	2	0.1	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.034709	19	6	0.1	synth with cache (only 1: intros n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	40	40.041316	272	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.602326	12614	4461
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.208651	18538	3995
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.206834	27491	2222
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.102216	8442	1248
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.140630	14946	2431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.047550	7457	2399
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	40.117936	3831	93
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.246839	20546	3219
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.133100	45321	5781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.302852	10269	2787
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	40	0.357437	303	131	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.105292	35157	6157
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.310636	122921	15494
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.092961	3251	1117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.223219	33159	5513
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.057643	14082	5722
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	40	25.317389	6895	2884	0.0.6.0.4.1	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.309103	12002	4815
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	1.442214	2527	555	0.0.2.1.0.0.1.1.3.0.0.0.0.3.0	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.765253	11490	4632
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.126848	16974	4731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.232447	18694	3309
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.264940	6993	2271
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	19.821688	2052	57
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	24.013430	1925	55
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.443528	201782	15420
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.127243	39371	3841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.291369	17064	4333
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.135578	29518	8701
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.072309	23644	4864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	42.429910	5637	1537
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.084244	9653	630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.230826	11134	3374
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.510539	20274	3724
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.244214	79447	6400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.024585	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.788545	56197	2953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.232891	34998	7015
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.042868	10282	1757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.063107	8	5	0.0.0.3.0	synth with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: rewrite two_succ; only 1: nzsimpl; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.033780	4976	1208
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.071454	8	5	0.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.056512	14198	4221
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.097712	28289	7729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.359910	29882	6927
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	39.365229	2898	69
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.287378	18472	3168
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	1.007898	200	62	0.0.0.1.2.3	synth with cache (only 1: simpl; only 1: destruct l1; only 1: intros; only 1: trivial; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.289594	10312	4217
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.275024	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.507416	16817	1918
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.018570	1	1	0	synth with cache (only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.007193	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	40	40.211712	51830	6938
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.094383	13069	2976
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	40	0.037430	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.032734	9741	1752
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.327568	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.092293	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	40	0.073564	125	10	16	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	40	0.140730	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	40	40.057885	9381	4118
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	40	0.288225	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.268397	10614	4006
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	40	40.177312	38359	7706
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	40	1.366729	1315	260	0.0.0.0.8.2.0.1.10	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.216179	4099	1711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.347678	40363	6813
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	3.821512	1852	293	7.0.2.0.6.4	synth with cache (only 1: simpl; only 1: destruct l1; only 1: intro H; only 1: simpl; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.461475	7561	2781
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.972641	399	131	0.2.5.2	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.128608	22822	5807
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.508789	14121	2814
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.406136	23285	6877
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	40	40.098030	19606	2180
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.353086	30879	5139
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	11.249951	1863	54
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.041340	12473	1748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.487479	19321	2935
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.083717	28232	2737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.068676	18643	4491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.532594	30220	4912
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	40	0.064340	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	40	0.104942	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.050658	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	40	0.051939	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.004639	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	40	0.195754	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	40	0.011302	8	1	7	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.331525	7628	332
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	40	0.134825	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.049974	14451	1372
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.129349	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.007166	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	40	0.136074	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	0.131408	13	4	6.0	synth with cache (only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	40	0.007621	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.010918	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	40	0.020181	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.085869	30924	2437
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.040801	12255	1882
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	40	0.072331	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	40	0.005746	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	40	0.006030	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	40	0.005216	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	40	0.020385	4	1	3	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	40	0.011272	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	40	0.011717	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.097974	18480	2742
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	40	0.011775	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	32.332431	20171	3155	0.0.1.2.4.4.8.13	synth with cache (only 1: intros z Hz; only 1: intro; only 1: destruct 2; only 1: intuition; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.150799	23730	6303
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.113167	32611	8686
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	40	0.889235	6	2	2.2	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	40	7.227465	5372	959	3.0.1.2.0.0.23	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: firstorder  discriminate; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.331509	28415	5903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.061307	8715	1536
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.198958	26039	3717
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	40	0.011135	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.076171	7756	720
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	40	0.634744	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.066711	25145	1187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	40.088675	17259	3851
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	40	9.283588	924	41	3.38	synth with cache (only 1: intros n m; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.476798	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.384380	23092	5209
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.237085	95717	5125
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	40	0.754538	13	3	7	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	11.336829	4223	609	6.3.1.6.8.0.2	synth with cache (only 1: constructor; only 1: simpl; only 1: intros (H, H'); only 1: discriminate; only 1: intros; only 1: destruct H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	40	0.521236	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.885409	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.276488	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	40.216042	11262	2494
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	40	0.309955	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	15.790864	15258	1850	0.13.8.6.15.1.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	40	0.168609	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.171188	36693	9216
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.103778	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	40	0.200620	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.105279	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.311727	20438	4686
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.743069	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.166610	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.204824	5	1	4	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.244332	12832	3376
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.070612	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.005243	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	40	0.108673	4	1	3	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	40	0.326269	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.360390	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.484419	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	40	0.395763	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	40	0.007761	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.074850	14139	3055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.075033	17479	3476
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.425292	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	1.883260	1921	369	0.0.3.12.3.0.9	synth with cache (only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	40	0.429888	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.049818	14017	4160
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.248651	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	40	0.037075	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.004398	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	40	0.006901	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	40	40.091324	17257	2685
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	40	0.104359	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.197485	24070	3785
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	40	0.012601	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	40	0.811131	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	40	0.012916	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.235477	18120	6250
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	40	0.012927	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.021530	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.013544	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.072127	77	7	13	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.157213	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	40	0.006817	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.027801	6	1	5	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	40	0.015293	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	40	0.004389	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.007111	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.029813	6275	356
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	40	0.134953	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	40	0.297651	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.103801	9769	2008
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	3.657844	1852	394	6.12.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: now destruct compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.046595	11420	2604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	41.925532	31144	3054
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.052119	16570	2128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.005088	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.393140	46157	5431
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	14.777758	10163	1952	0.1.0.2.0.0.4.7.0.0.1.10	synth with cache (only 1: revert l; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: case_eq (f a); only 1: intuition; only 1: congruence; only 1: congruence; only 1: intuition; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	0.047226	8	7	0.0.0.0.1.0.0	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	0.046713	7	7	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.201734	27787	2824
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.145413	47493	12017
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.252348	98819	2591
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	40	4.212462	3672	973	8.1.1.0.0.2.0.9.0	synth with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.182604	53811	3642
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	40.055929	16060	2904
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	5.067164	638	29	35	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.049362	13670	2917
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.237150	24483	3426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.595565	3230	494
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.325219	30170	3132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.649896	13440	7012
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.209419	28131	5710
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	10.598267	5842	1080	0.0.0.0.7.16	synth with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.034700	6279	683
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.680244	11278	278
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	40	12.284722	443	37	0.0.0.0.25	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.093713	18061	1813
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.212279	4	1	3	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.031449	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.131891	21796	3213
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	1.821173	903	283	0.0.0.1.3.8	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.510743	18362	3519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	2.155775	762	249	0.0.5.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.336852	25070	3097
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	40	40.082818	26122	5667
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.226015	3386	111
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.972149	26234	2995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.246968	28889	8142
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.067749	19084	3860
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.135737	23709	5595
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	28.578392	80360	2300
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.373210	157598	15511
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.032676	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.367818	11568	3538
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.091914	7	4	0.2.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.204153	340	99	0.2.3.0.6	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.293663	3461	1217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.026540	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.250964	3122	823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.022198	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.120866	39057	8424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.890438	14431	2548
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.093935	18471	3422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.419231	19038	2017
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.085185	21023	4298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.303622	16219	2982
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.132333	30907	2569
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.176284	4489	261
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	5.788279	2816	620	8.8.8	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.007096	2	2	0.0	synth with cache (only 1: unfold compare; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.003968	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.113345	28956	2931
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.247350	69845	3465
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.321843	43871	5426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.312774	46330	5580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.083163	10192	4912
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.144780	52450	5920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	2.338931	239	91	2.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.067704	20659	2989
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.699892	26910	4764
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.971436	925	178	0.0.3.1.0.1.8	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.117144	35888	10084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.458910	37158	4200
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.128361	2	1	1	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.127245	2	1	1	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.005106	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.763381	808	125	1.6.8.8	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006633	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	15.132527	3293	74
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.309984	13305	1366
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	40	0.231702	2	1	1	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.375539	13605	1783
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.076857	26928	3327
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.108111	31760	6747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.186774	17309	3762
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	6.353166	3314	872	0.0.0.1.15.5	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.090448	13150	1988
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.153777	50569	7290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.420231	23585	4651
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.199482	14107	2131
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.284452	5969	2058
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.019339	12	5	0.0.0.1	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.587131	33790	5275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.459293	21061	3971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	40.089374	27225	5223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.054506	4	3	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.053760	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	41.219813	8475	5308
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.437791	39069	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.339363	53	18	1.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	10.757920	9588	2441	0.3.22.2	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.055212	13086	5214
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.078263	24440	3890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.312439	19241	3744
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.110781	35003	4734
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	40	3.381355	2968	713	0.0.9.2.1.1.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.334885	14059	3550
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	4.719020	1230	682	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.039421	12822	1000
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.032848	8976	2008
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.113815	29524	3576
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.065683	16915	6894
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	40	40.083148	24247	4285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	6.623933	1934	626	0.0.8.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.033467	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.147074	16	8	1.0.0.2.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.287500	28677	5413
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.251330	37587	4185
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	40	40.136505	33869	6873
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.093186	29746	5763
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.033886	7334	668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.043156	11706	2558
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.135795	34413	7933
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.155554	58	30	2.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.359732	20623	4677
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.188843	197	62	0.2.0.2.0.7	synth with cache (only 1: induction p; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.372185	24148	5307
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	40	0.016109	5	4	1.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.174835	63240	7840
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	11.346340	9593	197
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.425178	23402	5514
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.105493	37913	4401
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.076097	6109	2663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	40.232775	12909	3179
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	1.683604	2975	70
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.326711	19291	3503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	40.270400	18953	3955
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	4.378457	1114	429	0.0.0.0.9	synth with cache (only 1: intros l m n; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.197189	71217	5027
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	3.125241	1598	416	1.1.0.0.0.0.1.1.1.0.1.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.120237	20328	1439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.250667	19205	3126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.049270	12680	6145
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.346672	20479	5636
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.051366	11062	493
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	27.350817	3212	73
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	40	40.095231	1071	55
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	40.168567	2251	121
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.407955	17290	7232
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	2.966988	1664	438	1.1.0.1.0.0.1.2.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.965890	999	399	2.1.0.0.0.0.5	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.078578	19204	3213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.065804	18280	3253
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	7.634525	4819	1038	0.14.0.0.4	synth with cache (only 1: destruct 2; only 1: constructor; only 1: constructor; only 1: setoid_rewrite H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.328312	15264	1962
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.094156	32403	2569
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.082254	25579	4638
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.170505	63	6	12	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	9.846800	8689	1252	0.1.0.0.7.1.6.2.5	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: apply le_succ_l in H; only 1: unfold sqrt_up; only 1: apply le_succ_l in H; only 1: case compare_spec; only 1: order; only 1: rewrite <- le_succ_l, <- one_succ, <- sqrt_1; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.057802	15505	4368
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.070840	20750	4048
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	3.836259	1135	353	0.1.0.1.0.0.0.0.0.1.8	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.071542	19482	5751
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.087897	26230	6656
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.165102	39719	4664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.068006	19776	3600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.056022	15896	2919
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.090281	30581	1793
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.283709	24827	2296
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.249587	31631	4414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.096966	4045	1267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.071929	14938	781
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.525592	16092	1940
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.090699	14263	5866
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.030929	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.011264	6	2	4.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.030466	8	2	6.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.136236	16104	2720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.491846	15315	2449
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.108247	29159	4672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.376550	3334	1328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.106622	27	12	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.975932	244	77	4.4	synth with cache (only 1: unfold eqm; only 1: eauto using N.Private_Tac.eq_trans, N.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.027458	7205	861
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.122174	50	23	0.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.127700	39962	6895
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.287876	14721	321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.214762	10294	1425
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	1.358100	620	189	0.0.2.2.2.1	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.207160	45787	4861
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.139111	9257	2526
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.118202	7	5	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.108795	12444	6555
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.462529	194888	15086
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	41.687752	10431	1379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.561562	19526	8741
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.287468	4261	1660
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.035651	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.127302	36972	5224
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	40.103203	31581	5112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.375554	10677	3126
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.266952	37713	643
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.188502	14316	1613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.571442	6805	523
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.063788	17231	2073
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.348472	129478	7765
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.004367	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.006904	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.272234	106780	6290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.253239	19860	6281
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.294578	144	43	0.0.2.4	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.028066	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.027111	6610	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.073773	21328	2674
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.259873	3037	208	0.19.16	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.856923	3167	1171
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.806393	31341	7452
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	22.740203	12466	6205	0.1.2.2.1.3.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: firstorder; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.112427	35161	6382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.389297	17100	1994
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.394615	135	71	2.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.580980	133433	8828
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.010365	70018	1289
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.127358	38744	9182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.323581	15490	3600
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	40	7.496080	9934	1551	0.0.2.9.1.11.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: simpl; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.007061	3	2	0.1	synth with cache (only 1: unfold lt; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.008084	5	1	4	synth with cache (only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.256367	20744	4965
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.101053	42	16	2.0.0.2	synth with cache (only 1: revert q; only 1: intro n; only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.202232	152	41	10.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.005185	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	40	1.632435	1283	345	0.6.1.0.2.0.0.2.2	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: destruct (split l); only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.066469	45	17	1.1.0.3	synth with cache (only 1: revert q; only 1: intro n; only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.053324	9	3	2.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.004710	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.448549	103914	6064
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.129622	41721	6688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	2.122402	1350	159	0.0.0.1.16.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.345112	23365	3792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.027924	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.281114	21363	2959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.017515	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.033417	10712	745
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	3.583595	3452	800	0.2.4.2.0.4.0.3.0.0.0.1	synth with cache (only 1: induction l, l'; only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl in *; only 1: right; only 1: firstorder; only 1: simpl; only 1: intros; only 1: firstorder; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.259019	30693	6552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.397926	12577	3899
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.566018	230	63	0.1.2.4	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	12.458906	4488	1931	0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	14.031004	6246	306	9.16.10.12.22	synth with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: unfold eqm; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.091779	26850	5492
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.508092	18413	2705
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.153003	22239	6268
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.074982	19437	5501
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.080072	18412	3619
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.091747	22343	4302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.064970	16274	4717
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.078019	26572	3368
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.109873	9209	1488
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	40	0.032650	11	2	3	synth with cache (only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.006610	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	40	4.262627	3612	1104	8.0.0.0.1.0.1.0.0.0.1.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: contradiction; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct H; only 1: injection H; only 1: auto; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	40	0.676859	379	141	3.1.0.0.0.0.1.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.074450	24060	3245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	43.603740	6480	1085
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.039528	8094	2345
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	4.529011	1043	326	0.1.4.0.0.3.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.123479	24102	6439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.397876	10726	2083
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	0.647885	537	110	8.2.1.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.158223	35268	3420
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.037729	7575	1882
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.406059	41993	6096
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.047527	13606	2527
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	40	40.097228	35387	2220
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.111809	30759	11585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.026925	6	3	2.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.128928	40631	7382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.021519	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.262808	102463	8350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	40.346430	14458	4209
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40	40.103576	15879	4545
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.314057	21631	2972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	40.256356	9428	2848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.268937	69	32	0.2.0.0.0.1	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	3.929097	762	417	11.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.121330	38230	5152
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.382718	32857	5641
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.023551	1181	65
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.258203	10420	4133
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	26.262557	41045	3558	28.22	synth with cache (only 1: intro; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	40.225456	11516	4070
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.061226	18580	5438
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.218628	14024	2766
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.591315	71550	3674
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.057457	4349	314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	17.515556	5177	1344	0.1.1.0.0.1.0.0.0.0.8.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: destruct (lt_ge_cases a 0) as [Ha| Ha]; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.024250	387	46
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.034464	785	57
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.268283	34498	5502
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.340408	38977	10864
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.211824	81986	6052
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.189257	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.034278	382	46
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.019721	5	4	1.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.007178	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.134237	14716	4215
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.120363	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.115519	28416	4613
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.145262	13895	2927
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.255837	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.106693	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.049416	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.046304	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.374565	29	12	3.0.0.1	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.019591	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.540296	40641	4496
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.540841	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	2.179571	44	8	3.6	synth with cache (only 1: Bool.destr_bool; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	11.177007	5795	1193	9.6.14	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	40	0.054958	14	4	3	synth with cache (only 1: apply N.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.005052	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.371254	18343	1757
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.118953	33197	6840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	10.139651	4164	1283	0.12.1.1.1	synth with cache (only 1: red; only 1: intuition; only 1: simpl; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.100170	29	18	0.0.0.1	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2.049603	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.332566	29570	4956
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	2.104944	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.083093	31585	729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	29.125353	8664	3082	1.0.0.1.6.0.4	synth with cache (only 1: intro p; only 1: intro n; only 1: rewrite mul_comm; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: now apply mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	1.789575	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.117467	38631	6093
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	1.510850	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.061650	17	8	0.0.0.1.2	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.150122	25541	7087
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.187942	68247	7194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.171249	53323	2219
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	1.510365	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1.230646	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	40.092977	28372	5136
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	40	40.190260	71331	7896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	0.257216	48	15	6.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.106295	32705	4185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.116999	21588	5063
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	1.304643	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	1.614749	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.288672	29026	3733
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.287641	36778	6330
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.007125	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.025281	11	5	5.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	7.019619	6199	839	26	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.479360	18363	4184
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	1.819623	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.726296	5792	954
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	2.664459	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.470483	536	182	0.0.0.0.1.0.0.0.0.0.1.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.016886	7	5	0.0.1.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.004711	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.004921	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.004807	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.190956	19467	3127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.024300	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.085274	12	5	0.0.0.2	synth with cache (only 1: unfold sub31c, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.489379	12433	4472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.107159	28	8	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.045396	12312	2842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.107636	27	8	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.159559	29	9	1.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	23.237035	7118	4306	17.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.312673	25524	5357
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.091677	3358	226
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.182001	26961	5787
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.075438	15095	3699
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.227918	80583	11969
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	0.276804	143	48	0.0.1.1.3	synth with cache (only 1: simpl; only 1: intro; only 1: destruct n; only 1: auto with real; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.055869	13868	4232
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.057394	14444	5892
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.174172	32586	2781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.567549	14953	4095
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.230020	39944	5591
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	40	1.022375	397	148	1.0.0.5.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: induction n; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.071479	22297	2612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.256578	18101	3690
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.107206	25908	9920
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.117465	2779	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.073553	19822	3905
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	40	0.079934	34	8	8	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.036282	4	1	3	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.090338	31	13	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.026080	4	3	0.1.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite PeanoNat.Nat.compare_gt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	40.213311	14597	5003
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.043629	18	7	2.1	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.128928	52	24	0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.058644	18474	3017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.667088	9312	1666
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	0.306228	61	16	5.3	synth with cache (only 1: unfold lt, le; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.036836	10	6	0.1.2.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.062919	18246	3488
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.413304	160923	4161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.191696	17724	7373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.010113	3	2	0.1	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.763130	276	115	0.3.0.4	synth with cache (only 1: unfold diff; only 1: intros s s' x; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	1.727394	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.063519	18715	3735
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.784799	17166	5025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	40.497993	10704	2659
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.761834	1	1	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.499191	37474	7658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.306531	8175	3292
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	40	40.164558	57731	5325
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.073958	645	55
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.757741	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.277466	31166	5970
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.123757	36359	9344
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.394691	60466	8298
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	40	0.646977	638	29	35	synth with cache (only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	40	32.669289	51721	7707	6.1.0.16.1.0.1.0.0.0.3.1.0	synth with cache (only 1: induction l, l'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: auto; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	9.316341	2866	993	1.0.0.0.1.11	synth with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	0.480571	313	61	1.0.6.3.0	synth with cache (only 1: unfold lel; only 1: intro H; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.088672	11656	2307
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.112202	110	26	0.6.0.1	synth with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	40	0.009665	4	3	1.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.009896	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.079255	18467	7811
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.005321	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.025392	4	2	1.1	synth with cache (only 1: intros l m a; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	2.391517	2	1	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.523144	25028	5073
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.009955	5	2	2.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	5.665196	7902	708	0.2.37.0	synth with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.006758	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.006618	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.074905	17396	3692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.516884	30384	7040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.411042	25384	3584
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	40.143834	21890	2669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.083640	25375	4652
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	2.456108	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.021762	7	3	0.3.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.369249	124	34	0.7.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	40.239601	28551	3301
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.104607	20389	6221
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.052094	13556	3819
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	40.068486	17297	1298
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.057622	13354	2253
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	1.937130	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.084587	28070	4440
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.102167	40046	1109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.384640	7029	1860
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.112545	25327	6181
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.072692	22659	3921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.419465	12861	7790
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.035363	9762	1583
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.211720	26394	3266
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	40.080440	22101	6801
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.057188	16301	4097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.075216	21686	5180
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.177355	61548	8012
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.103332	32915	5479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	40.316860	5388	1580
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	0.035297	34	9	2.1.4	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.115225	13850	1373
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.192352	20312	3774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.944240	146	70	2.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.770721	223	55	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.104258	34571	5278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	40.297818	11043	2771
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	40	0.014827	7	4	0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.004607	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.163526	1988	134
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.402740	621	67	5.0.0.0.24	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.869391	3997	913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.304220	16761	4714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.030421	5	3	0.2.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.079770	13877	1711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	40.215340	15360	3611
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.015677	947	99
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.041956	10313	5545
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.248670	13363	3584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.487479	28799	3578
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.637805	63902	8700
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	40	40.140176	1041	87
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	2.042667	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.143271	48776	8678
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	40	14.104064	12129	1839	33	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.410626	26173	6734
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.011849	3	3	0.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.507060	2049	517	0.15.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.285837	29403	3059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.283848	4038	1474
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.197670	13764	4262
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.317412	348	66	0.0.1.1.11	synth with cache (only 1: induction 1; only 1: intro; only 1: auto using Sorted, LocallySorted, HdRel; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.558227	29275	5652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.028107	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.191011	23005	2835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.354883	33730	5781
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	18.966758	12216	1222	6.0.6.39	synth with cache (only 1: revert n m; only 1: unfold le, ge; only 1: intros; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.008479	2	2	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.964459	16213	5375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.349444	17395	7370
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	3.167121	1207	366	1.0.0.1.0.2.1.0.0.0.0.0.1.0.0.1	synth with cache (only 1: destruct n, m; only 1: intros; only 1: simpl; only 1: auto; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: intros; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.327729	7248	3846
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.083949	28484	4075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.112003	31201	8664
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.087789	20544	8475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.034265	6325	2152
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.097738	29761	7018
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.142097	50814	3658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.072704	19497	5571
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	40	40.246360	44298	6087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	16.034345	2674	1216	0.0.5.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.069366	18533	2121
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.171652	22060	2450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	0.052772	10	7	3.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.020971	5	3	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.416975	47521	5890
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.099785	32097	3972
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.163967	497	89
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.071667	20382	4576
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	40.184159	378	41
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	2.915068	565	216	0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.256495	24	13	3.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	2.631121	1180	378	0.0.0.3.1.0.1.3.0.1	synth with cache (only 1: induction l; only 1: intros; only 1: induction n; only 1: now simpl; only 1: simpl; only 1: now subst; only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	6.416868	3545	820	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.1.0.17	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.341893	46882	5000
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.120909	25490	4097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.037309	3303	1624
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.209538	19426	5378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.416974	14741	4588
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	0.040652	23	5	4	synth with cache (only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.105784	3	2	1.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	6.493844	4615	511	0.0.1.1.3.26	synth with cache (only 1: intros LT; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.028569	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.030450	16	5	0.3	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	40	1.316260	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.098307	13616	4260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.099245	31651	3866
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.097591	8262	1851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.330079	17818	5287
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.249964	1243	86
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	2.893178	2555	401	0.12.12	synth with cache (only 1: intros EQ; only 1: rewrite add_cancel_l in EQ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.065446	14120	3706
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.214821	75081	15244
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.279045	8	4	2.0.2.0	synth with cache (only 1: rewrite two_succ; only 1: symmetry; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.229888	20811	1692
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.043450	12165	3607
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.197610	62847	5699
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.880313	1192	436	0.1.1.0.0.4.0.1.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.090860	27795	5027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.306046	10095	4869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.109329	17257	2004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.097023	15298	4645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	40	2.521836	1432	662	0.0.0.0.0.0.0.0.2.0.2.0.2.0.0.0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	40	35.219949	40364	7464	17.0.0.14.2	synth with cache (only 1: unfold lel; only 1: destruct l' as [| y l']; only 1: simpl; only 1: auto; only 1: now destruct l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	40.263828	17929	6710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.017622	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.051535	13373	2151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.330315	222	63	0.0.0.0.7.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	40	20.146159	343	46	3.5.7	synth with cache (only 1: red; only 1: move  =>f0 fP; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.196686	46004	2719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.126006	39229	6555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.297013	89664	5380
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.075696	20479	4123
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.587793	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.027171	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.046744	10595	2243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.027129	5	3	2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.008524	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.988017	9852	2088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.317182	27324	2777
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	40	20.803871	17073	3906	1.10.5.6.1.0.3	synth with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: firstorder; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	23.633041	3393	1874	12.4	synth with cache (only 1: destruct x; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.867055	23073	5156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.544488	19190	5066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.358596	20739	3334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	40.470039	54859	10951
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.027363	297	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.331476	30464	4282
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.088782	30430	4623
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.811777	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.344402	39660	8751
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.055232	13267	4618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	40.029231	7085	2999
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.154890	41434	2476
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	1.992892	902	377	0.1.0.3.3	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	12.418908	6365	1294	0.0.0.0.0.2.0.0.4.2.0.0.0.0.3	synth with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: rewrite <- EQ'; only 1: auto with relations; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: rewrite EQ; only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.607020	18973	4525
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.097446	144	29	4.5.1	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.208201	17841	5224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.521508	7388	2236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.519200	17322	3564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.166376	21760	3347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.106206	26815	5467
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.095167	23294	9358
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.330379	13312	1875
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.050014	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.011502	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.199672	60961	4458
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.320955	15227	2039
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	40.057957	323	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.106427	19390	3464
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.055180	14705	3039
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	40	20.062735	2531	1058	0.0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y); only 1: rewrite <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.031996	8253	2628
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	40.090990	20820	2752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.487094	16172	3288
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	40.108441	33269	7714
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.082481	25382	3360
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.352080	20042	2639
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.108611	18896	1966
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.177441	62021	7657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.059816	17420	3222
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.042204	10942	3598
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.063263	20170	2503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.080060	23716	5254
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	25.623588	20442	3736	0.1.0.0.0.0.0.1.0.0.2.3.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: simpl; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.071001	20171	4594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.222016	8045	2431
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.156146	32683	7217
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	1.002482	617	180	0.1.0.1.0.1.7	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.447265	14776	7815
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.196500	26694	2269
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.878073	154	70	1.0.0.0.0.1.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	1.228896	1031	209	0.0.0.2.1.3.1.5	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.075503	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.111407	34113	5444
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.065826	3348	260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.255075	25979	3154
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.040817	10198	5202
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.036074	7229	2047
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.644568	33510	9428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.263787	18432	3992
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.129340	34899	3103
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	40.321603	64378	10958
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	40	20.249126	13351	3918	0.0.3.0.5.0.1.1.9	synth with cache (only 1: intros [| a l] H; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.004605	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.014983	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.005232	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.037902	20	7	0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.312253	18947	6040
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	40	40.271689	495	68
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.142650	15010	3969
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.112067	32926	6225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.188400	23278	2656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.028022	6	3	0.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	0.026987	7	4	0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	40	40.212752	22906	2462
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	40	1.843422	857	418	1.1.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: inversion 1 as [H1| ?]; only 1: rewrite (length_zero_iff_nil l) in H1; only 1: subst; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	0.641594	291	178	0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n as [| k iHk]; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	1.426785	506	88	6.2.3	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.189372	43560	2542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.213652	16963	4391
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.259397	203	42	0.2.7.2	synth with cache (only 1: intros x y H; only 1: apply max_mono; only 1: eauto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.421049	23958	5963
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	40	1.928804	1244	406	1.0.2.2.0.5	synth with cache (only 1: induction n; only 1: auto; only 1: destruct l as [| x xs]; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.759792	7481	1244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.346230	14073	2562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	5.871409	2421	692	1.0.1.16.0	synth with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	3.283973	1036	263	0.0.0.2.2.0.2.0.2.0.0.0.0.1	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: apply testbit_true; only 1: trivial; only 1: rewrite div_small; only 1: rewrite <- (pow_1_r 2); only 1: rewrite two_succ; only 1: order'; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.113300	34844	3913
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	40	1.320731	639	286	0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.121165	86	27	0.0.0.0.9	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.133028	33408	2817
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	40	0.636244	207	97	0.0.0.2.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.147884	40681	6112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.037379	6169	4082
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.053967	14153	3580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.094052	27992	4765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.022650	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.108984	32717	5635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.027756	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.026518	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.103258	33603	5439
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.360896	37845	5690
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	40.013707	350	30	0.19	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	11.991225	1793	724	0.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	40	40.127791	37560	8521
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.532111	27420	5965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.355192	35593	6782
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.869506	23985	2295
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.031457	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.560146	10929	4656
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	40.217253	13588	2316
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.032377	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.130237	3070	248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.145764	28256	3932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.681440	4986	1138
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.071760	20253	4686
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.153232	19078	5500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.320721	15793	2538
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	39.077623	31807	6400	0.0.0.2.9.0.3.0.10.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: simpl; only 1: induction n; only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	40.036080	1491	102
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.271400	19610	4964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.230079	18457	1843
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	40	40.082362	13159	2806
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.086627	18716	4069
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.251618	95120	10736
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.108225	13794	3317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.362308	19908	5467
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	13.744612	15055	1350	0.1.22.9.10	synth with cache (only 1: intros n m; only 1: Bool.destr_bool; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.170638	28074	5367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.287859	26909	3195
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.066882	17448	3759
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.292583	22963	4587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.167370	65060	4574
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.054667	953	77
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	40.062430	17911	3542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	40.059670	20159	2165
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.059125	14497	2697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	9.234772	1487	775	0.5.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.032886	7	5	0.0.1.1.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	28.035715	27886	4930	2.3.4.6.0.1.17	synth with cache (only 1: intro H; only 1: induction n as [| k iHk]; only 1: auto; only 1: induction l as [| x xs Hl]; only 1: unfold firstn at 2; only 1: now rewrite ?firstn_nil; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.072384	18542	5336
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.385101	62177	5933
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.371075	13067	3110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.417344	46892	5570
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.239630	17845	2836
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.951191	39613	6936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.548381	2685	621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.493600	14557	3990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.317369	22012	6266
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.219040	316	37
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.301140	15417	3728
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	40	40.083003	26773	5239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.046184	11566	2535
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.158646	34689	7420
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.237613	28404	4688
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.397819	137	52	0.0.0.6	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	1.574593	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.292262	10156	3395
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.059003	24	12	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.032027	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	3.860393	801	293	0.3.0.1.3	synth with cache (only 1: unfold not; only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.699781	24040	3802
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.223875	21159	4185
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.187923	24416	3332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.534197	8160	1854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.534087	15332	5646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.063834	19132	3386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.100883	26404	2600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.432743	471	174	0.0.2.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.273009	19294	8763
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.104595	24665	2893
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.027745	352	29
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.037105	7	6	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.004969	1	1	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.017780	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.039259	13	8	3.0.1	synth with cache (only 1: revert p; only 1: intros; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.044662	15	6	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.005512	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.037756	8141	1156
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.006339	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.198828	8539	1774
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.009586	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.025795	13	2	5	synth with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.122847	40	28	2.1.0	synth with cache (only 1: revert q; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.108618	33191	3724
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.045144	9144	2971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.087098	13288	1970
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.095722	27966	7558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.236886	15464	6021
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.121714	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.225765	87731	7462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.060259	18032	3229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.156625	21665	2298
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.053479	11230	1600
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.361668	32511	4308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.359169	17244	3818
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.149378	24803	5788
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.265758	11525	2986
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	40.074691	22656	3100
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.143653	38056	3708
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0.015521	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.112157	38106	5121
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.261842	26403	5516
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.283536	42446	6434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.561880	12798	2499
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.371313	25401	4676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.071457	21988	3083
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.169641	29842	5502
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.113815	40314	3000
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	40	13.155853	6284	1702	2.0.8.11.0	synth with cache (only 1: intro; only 1: red; only 1: induction n as [| k iHk]; only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.033403	8122	3634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.286908	17280	6348
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.109455	37004	4611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	4.880250	748	362	0.3.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.289507	9292	2573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.781763	167	77	0.0.0.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.005109	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.106679	41	16	5.0.1	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.181215	208	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.079615	47	18	9	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.006212	2	1	1	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.018748	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.139668	41	37	1.4.0	synth with cache (only 1: revert q; only 1: intros q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.005152	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.004465	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.094117	26	19	1.1.0.1.0	synth with cache (only 1: revert q; only 1: intros; only 1: revert q; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	14.003815	3043	1023	0.0.2.0.0.0.3.0.0.0.0.0	synth with cache (unshelve (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: intros ? ? ? [? ?] [? ?]; only 1: auto); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.284161	27676	5023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.235625	18643	4595
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.004663	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.009923	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	5.192470	1304	52	1.1.46	synth with cache (only 1: exists f; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.403657	669	231	0.3.0.8	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	20.952681	23788	1980	0.11.0.0.0.1.0.32.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl'; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.016584	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.284923	33116	3327
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.299040	25418	7205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.287669	9996	4055
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.358926	37707	2330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	40.410331	21390	4702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	1.423428	466	131	0.0.0.1.1.1.3.1	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.029881	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.304978	11941	2635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.058580	52	23	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.329918	7358	1522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.174101	121	47	0.0.0.5.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.126642	40947	4676
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.026943	6565	2075
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.279728	36583	6546
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.180867	41061	6478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.071697	22078	3066
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.221295	9980	644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.031831	7770	3089
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	40	0.006311	3	1	2	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.317259	15552	2003
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	40	0.341998	161	61	2.0.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.074635	22485	3244
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.081992	25489	2421
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.127213	28551	4299
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.391036	17489	2208
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.017076	449	38
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.133275	11229	2511
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	40	3.019391	3113	807	1.0.0.0.0.1.0.0.0.0.10.0.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.066787	3445	2019
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	40.351799	26139	5380
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.515731	17386	3471
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.019367	971	72
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	10.221140	3166	561	0.1.13.0.3.0.3.4	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: constructor; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.043593	8	5	0.3.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.262619	26062	3361
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.910384	29207	6045
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.176810	29033	5447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.072585	22690	2964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.150348	9620	1288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.428178	20512	2061
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	40	40.116935	37426	6052
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	2.110359	771	117	3.4.0.0.17	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	40.199794	883	99
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.132131	28852	2012
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.105070	21106	5510
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.310597	121925	12422
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	12.327193	12975	2633	0.0.0.9.2.12.3	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.011428	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.114045	21589	2781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.275508	46	19	0.0.0.2	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.016478	6	4	0.0.1.1	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.344985	53598	3711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.341936	8045	2506
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.236168	20764	2442
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.010886	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.014482	8	4	0.0.2.2	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.362962	38905	5933
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.264037	72362	7239
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.010960	606	49
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.060932	17080	3420
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.072539	19749	3081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	40.060148	9075	2276
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.477508	9265	2845
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.046316	9448	3216
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.048923	11436	2108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.213015	29065	3509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	40.441323	39110	6090
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.228548	13449	3967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.357367	77475	11095
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.105372	294	92	1.1.1.2.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case (M.elements s); only 1: case M.for_all; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.650047	23672	5091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	40.250884	16174	977
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	5.406296	6013	1007	1.12.28	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.460770	74014	7939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	40.059268	17624	4884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	3.144479	615	189	0.0.1.2.1.1.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	40	1.009478	218	87	5.0.0.0.0.2	synth with cache (only 1: induction 1; only 1: simpl; only 1: intro n; only 1: tauto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	40	0.157184	132	27	1.8.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.011950	463	39
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.183331	23115	4689
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	13.096138	22671	745	1.54.1.0.0.56	synth with cache (only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: left; only 1: simpl; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.414711	37234	5283
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.454037	27211	8801
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.013623	6	3	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.063235	15	6	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.020236	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	42.379833	22104	3897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.160376	23169	4450
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.156352	28558	4303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.102870	32077	5451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.525994	8116	2148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.624078	14425	2276
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	12.866438	6755	1658	2.0.11.9	synth with cache (only 1: unfold Rle; only 1: induction 1 as [| m ? IHle]; only 1: now right; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.553443	15020	3383
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.359216	20180	8404
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.015035	270	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.618247	208	72	0.1.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.081725	25192	2027
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.320917	8402	2450
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.293111	28300	6746
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.108465	33840	3979
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.075935	11909	2689
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.145118	17702	2971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.761392	452	142	1.0.1.0.1.0.4	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: intro Hn; only 1: simpl; only 1: now destruct n; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.010138	1	1	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.015130	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.004280	1	1	0	synth with cache (only 1: apply inj).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.015188	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.005993	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.049819	12283	3058
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.009988	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.010214	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.015713	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.205028	84657	3615
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.020880	7	1	6	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.006250	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.140943	48320	4567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.071672	12551	2918
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.120066	6747	1029
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.368955	21022	5930
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.082105	23851	6221
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.007815	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006882	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.265826	6565	1781
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.076517	26630	1178
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40	40.072218	15342	1450
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	40	4.401116	454	220	0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intros; only 1: apply Qmult_le_compat_r; only 1: auto with *; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.055847	12508	4426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.150958	21775	1840
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	40.490439	7147	1487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.067006	19870	3800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.117197	33559	4907
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.127413	14054	1837
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	40	40.114618	39259	5873
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.631415	60368	5312
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.036325	7973	4132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.388303	10450	3204
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.429242	25162	4527
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.096617	30479	8222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	41.110039	11869	1558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	40.278647	9590	2151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.369650	14034	3321
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	40.196432	25132	6425
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.009762	469	49
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	40.202345	26061	6603
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.124728	45216	3064
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.218443	3	2	1.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.026377	8	6	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.004832	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.005093	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.029325	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.004740	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.005446	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.004675	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.004488	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.004912	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.005092	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.004857	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.004864	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.277001	17004	2402
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.256459	27266	7696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.040735	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.010032	9	2	1	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.867657	1442	149	0.0.0.0.14.6	synth with cache (only 1: intros H; only 1: inversion H; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.317062	14837	4075
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	40.508813	24036	6711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.500919	13042	2467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.459232	14166	3543
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	13.123636	3487	921	0.0.2.0.1.1.15	synth with cache (only 1: destruct n; only 1: Esimpl; only 1: intros; only 1: Esimpl; only 1: Esimpl; only 1: intros; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.336807	32379	4928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.316051	21806	5413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.362166	14646	3773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.325030	281	99	0.0.0.0.5.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.112266	38655	4954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.101717	17672	2823
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.153568	21595	3701
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.109414	33775	4069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.193035	6589	902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	9.087015	1491	588	0.5.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.285629	18388	5052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.106823	33592	4558
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	24.242303	24024	2729	2.1.0.25.4.9	synth with cache (only 1: destruct 1; only 1: simpl; only 1: destruct H; only 1: auto; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.306843	55533	1492
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.141738	52196	2976
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.219092	12867	3208
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.036604	636	58
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	40	40.184262	36536	9215
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.186403	6011	2009
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	2.480867	1794	215	2.3.20	synth with cache (only 1: intro e; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.386563	28604	4905
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.065400	19547	2946
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.325311	382	201	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.144493	11778	2067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.317141	21910	4798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.052657	13777	2937
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.151851	23898	5822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.067674	18807	4612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.417984	11557	3460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	41.392576	9562	811
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.178791	26165	1563
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.237014	86123	10841
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	40.856454	18066	3403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.025956	551	116	0.1.0.1.0.3.4.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.114281	21656	4431
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	40	40.134136	29519	4613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.357763	9215	2467
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	40.037399	10842	2056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.357438	21509	5607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	40	40.160087	55267	7784
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.092687	13393	2957
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.046316	7077	1578
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.349493	139481	7707
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.207178	40553	5328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	40.286442	13693	2245
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.036827	9229	1819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	40.484657	23249	5069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.453887	47906	10090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	12.917799	3825	1213	0.0.8.6.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.468593	20899	7227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.078994	23381	6892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.279468	49739	8263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	41.281630	9679	1061
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	40.606609	20722	6709
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.195152	68148	9790
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.082416	22716	4972
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	0.036133	14	3	0.5	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.239542	70223	6853
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.041199	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.431129	35492	4427
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.570237	34761	8753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	40.163470	13431	2669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.075142	22734	3726
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.079493	23736	5501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.669511	5123	1485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.534274	12311	1564
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	40	40.092998	26903	4942
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.580425	13932	3037
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.498978	43973	7582
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.073092	21762	1885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.305497	10068	2880
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.066774	18215	5057
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.169790	31794	2866
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.091077	24634	7797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.049971	14885	2942
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.314213	24206	6949
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.140505	8857	3485
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.199388	25634	8123
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.104480	21949	6493
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.260362	8468	1883
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	40.051479	14974	2704
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.443226	13648	4030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.058106	15234	4719
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.952682	13937	2032
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.103448	33788	6294
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.176266	32595	5349
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.074388	22143	4207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.066815	17623	7028
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.226896	25707	6510
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.379313	24839	2713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.076014	13871	2148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.295843	17006	5940
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.060078	15073	3428
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	40	1.237328	459	69	1.0.0.12	synth with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.645054	21748	6291
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	40	7.709877	2634	762	7.10.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.281225	8134	1799
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.305587	106231	6757
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.004453	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.005683	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.059322	14351	4264
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	0.063147	115	15	11	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.009764	3	2	1.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.483117	32974	2257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.595730	38017	2580
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0.012580	4	1	3	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.005434	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.012789	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.014144	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.251529	5284	1384
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.658650	41485	3438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.473373	40259	2480
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	40.250206	95200	7140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.172979	27161	4263
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	2.347049	1262	333	0.1.0.1.0.0.6.11	synth with cache (only 1: symmetry; only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.square_xO; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.574430	31978	5596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.399483	18159	4559
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.071354	6438	2577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	40.271346	11685	3334
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.094602	28	11	0.4.0.1	synth with cache (only 1: destruct x; only 1: trivial; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.053032	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.354656	15644	4409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.072216	24098	2587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.396740	31010	5441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.090445	29775	4705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.153450	15469	3500
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	40	7.861761	3199	927	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Zmod_odd; only 1: destruct a as [| [a| a| ]| [a| a| ]]; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	31.251852	14673	2850	8.2.3.3.0.0.0.1.4.1	synth with cache (only 1: intro n; only 1: induction n; only 1: intros; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: intros; only 1: easy; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.973395	225	96	0.2.4.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.753129	34660	2878
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.083547	15970	2345
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.069468	18063	4136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.097890	22510	2724
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	40	40.150045	51453	5148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.103317	34332	5988
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.600514	13585	2550
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.129369	40280	6923
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.288011	15221	3744
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.141145	29759	4530
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.231020	31883	3970
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.456012	41830	4464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.063003	18806	3564
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.147117	23765	3941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.485899	10507	2418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.047403	13763	2231
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.229473	81300	15003
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.112458	19041	3569
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	40	40.131716	49144	5810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.068679	19244	4083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.369793	6029	1619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	42.854997	21436	4019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.340816	14553	3550
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.290975	44354	6909
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.043745	12306	2514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.055850	14376	5827
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.046783	12363	2803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.359884	15107	4464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.497010	5783	2661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.130334	4836	1643
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.186332	66637	6240
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	41.011624	14045	2639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.060989	18372	4004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.135727	41213	11466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.127516	29993	4378
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.126480	41164	5971
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.539204	19967	5715
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	40	40.082346	27514	5498
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.365265	20392	4557
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.035562	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.144223	22782	3479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	42.751320	6178	932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.013578	2635	1199
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.139275	19094	2365
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.119426	30515	7064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.311151	21036	3715
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.604942	13619	4176
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.477757	21983	4656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	8.296812	2074	696	0.0.0.5.1.1.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	11.366203	3837	1107	0.5.0.0.13.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.893780	25386	7984
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	7.753917	2031	601	0.2.2.7.0	synth with cache (only 1: intros a Ha; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: order_pos; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.010399	4	3	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.285355	111845	7766
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.200367	37860	5196
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.718637	36956	6147
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	2.959160	931	372	0.1.0.0.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.098974	32807	3584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.222950	60	30	0.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.410233	17520	3408
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.348634	33791	4640
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.321888	21196	5948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.235379	8760	4724
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40	40.072592	23615	2556
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.608840	11989	7465
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.499372	8801	2624
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.092321	25556	7535
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.088679	22857	5784
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.229398	89750	7444
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.058808	14789	2396
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	40.166291	9039	1475
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.032115	3207	448
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.089385	25915	7265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.323641	8521	2604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.041334	15	8	0.0.0.3.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.152805	23152	2986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	40.310257	11365	2518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.020426	3	2	1.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.645931	27781	7605
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.212523	74717	5932
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.711743	19291	2645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.119764	22930	3698
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.057647	17530	2879
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.530060	21238	2047
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.089883	12	5	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.085750	5	4	0.0.1.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.085648	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.081726	18405	3911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.078971	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.171034	15998	1842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.432663	29209	5225
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.388708	19360	3879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.453285	17187	4966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.278666	21706	5535
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.072784	6791	3522
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.172382	129	32	1.1.9	synth with cache (only 1: intros m x; only 1: red; only 1: now Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.212309	7502	1372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	1.610788	960	178	0.0.2.0.10.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.187800	19390	6321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.074370	6536	1119
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.224831	16716	6580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.117261	4158	1242
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.132351	46819	3414
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.365532	36055	1459
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.168316	57393	4439
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.109351	43464	6414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.081976	25580	3207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.105419	34992	3982
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.138682	22046	5789
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.102200	15857	5865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.093336	33537	4028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	40.427738	21863	5262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.041258	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.275861	102138	13769
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.131452	64728	7000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.074162	21908	3864
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.110446	32219	7748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.469417	15035	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.226677	22771	3090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.113727	23710	2986
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.994588	22347	1929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.551612	18559	6368
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.116650	31413	7613
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.100431	33366	6386
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.581516	44424	7281
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	40.219667	50388	3553
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.149506	63355	5387
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.491398	30567	5428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.036640	8808	3210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.019950	4274	1934
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.108614	11160	8166
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.038152	12517	2066
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.105378	29	17	0.3.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.078040	26835	2426
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	0.060179	13	6	0.0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.093996	3655	562
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	0.168591	14	8	0.0.0.2.0.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: now Z.nzsimpl'; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	4.372112	3457	799	1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: apply testbit_bitwise_2; only 1: reflexivity; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b); only 1: rewrite max_r; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.006854	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.647754	10559	2115
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.006750	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.628318	5832	2175
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.354005	122	52	0.0.2.0.3	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.355097	31556	4227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.221714	57129	7449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.079955	25288	5452
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.947610	45534	4468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	3.165375	1313	395	2.0.0.9.1	synth with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: auto using mod_small).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.103080	32290	5042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.060366	17955	2729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	40.420392	26869	6070
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	23.094454	17527	921	0.0.0.1.0.0.1.49.0.0.55	synth with cache (only 1: destruct a; only 1: simpl; only 1: now simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.244750	8851	3334
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40	40.123356	14640	3137
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.481600	30134	4224
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.087962	22317	7857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.719850	10619	2715
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.087799	23299	7185
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.526672	13984	3204
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	24.527383	17931	3984	1.2.0.0.1.1.0.2.4.1.0.6.2	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: constructor; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.087356	22068	6781
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.027278	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	39.098499	6652	1040	1.0.0.5.22	synth with cache (only 1: intros x y z; only 1: induction 2; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.028107	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.441063	17545	3945
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	1.512217	176	61	1.0.0.0.0.0.4	synth with cache (only 1: intros [[| n| n] d]; only 1: now try destruct p; only 1: red; only 1: simpl; only 1: red; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	40.140290	51806	3451
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.102691	3431	439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.355040	17181	3922
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.133640	24657	4231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.302521	7824	1888
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.106745	11069	888
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.212670	23726	2666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.073239	21141	4481
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	14.586840	5230	682	0.1.4.0.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto; only 1: apply eqlistA_rev_app; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.056990	18301	1664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.089978	16581	2847
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.049093	8	6	1.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.291988	19298	6444
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.091853	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.102997	40626	1680
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.326778	28840	6763
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.166687	11263	3753
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.069785	20064	4006
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.255951	57699	6938
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.244115	28048	2417
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.089799	29889	2754
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.907645	867	261	1.2.1.0.0.6	synth with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.060310	19145	2257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.115306	20155	3479
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	40	40.096115	11632	2249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.420360	13606	4250
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.070503	18399	3506
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	14.252178	5133	1234	2.0.16.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.492029	221	85	0.1.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.170953	35142	7639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.110105	12010	4335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.520953	12125	1567
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	2.167886	443	88	2.11.0	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.025462	9	2	1	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.073961	17679	3530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.495053	14314	4701
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.121815	39090	8371
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.164566	53529	11299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.068711	21768	3254
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.086978	19331	3817
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.505199	22569	5042
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.188860	15662	3888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.062817	11701	2126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.053816	17529	963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.631985	10631	1973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.103816	32575	6178
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	40	4.106093	7636	768	2.6.1.0.4.16	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: intros a0; only 1: now Nat.nzsimpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.492772	25402	5686
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.081570	2877	709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.721828	19714	4317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.039928	11271	1920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.317826	21623	6916
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.209147	67965	6680
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.598472	19370	9445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.070375	18043	4940
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.136753	23922	3305
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.607310	21156	4322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.463607	12409	2121
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.740678	86240	3051
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.075971	15034	4378
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.083501	24945	2313
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.240168	30106	5358
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.068808	5370	1128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	40.267927	7576	1800
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.243463	19199	4274
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.178467	52553	5736
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.047525	13713	1981
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.162639	28022	2400
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.111792	14676	2793
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.034648	10459	1188
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.448315	4	2	1.1	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	40	0.440572	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.223260	31997	3895
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.039482	12290	2091
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	40	6.969122	4309	1086	1.2.16.0	synth with cache (only 1: unfold le, sub; only 1: unfold lt, le; only 1: rewrite compare_sub_mask; only 1: now case sub_mask_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.279092	15582	5172
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.433519	71	25	9	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.427369	39653	4242
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.078554	24562	3692
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.831980	204	31	11.0	synth with cache (only 1: intro H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.204957	8475	1660
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.121292	14296	2217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.230751	23125	3404
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.221525	17032	2700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	40.083791	26833	2799
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	24.679708	18902	3045	0.6.0.2.3.0.1.17.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: intro n; only 1: firstorder; only 1: intros; only 1: simpl; only 1: rewrite ?IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.023560	16	7	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.150706	40485	3247
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	40	40.075976	17322	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.432350	11836	5007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.061741	17795	3594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.422754	16831	4278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.106975	16881	2555
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.541460	13951	1846
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	40	40.161092	21255	4502
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	40	0.033262	10	2	2	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	40	40.406062	81287	7743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.056767	15850	2773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.447546	24796	8139
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	2.132518	7722	117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.066696	16514	2570
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.069439	22557	3700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.073187	20748	3497
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.068065	17408	6761
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.590988	21317	6819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.348140	10869	1996
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	5.301085	3206	676	0.1.23	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.078311	19493	5015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.645499	17315	4557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.053133	14681	4264
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.125511	29283	7721
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.053251	12632	3019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.657439	4456	2327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.070324	20342	4321
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	32.160958	16740	2717	23.1.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now apply eq_le_incl; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: apply Pos.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.308684	21910	6895
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.563080	25753	7509
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.095425	25022	8276
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.069950	18000	6079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.081742	17823	2062
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.063043	18947	3553
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.062822	15290	5105
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.412619	16238	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.166141	11325	3147
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	40.281191	13283	1931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.644055	21893	5804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.191003	48671	7101
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.038864	9587	2396
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.130361	6173	1026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.055166	16582	2227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.075462	23497	3084
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.163101	29271	4541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.309643	25995	5842
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.720994	36893	4132
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.137806	49076	4254
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.126041	12237	1482
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	2.635788	2330	406	1.3.7.4.2.2	synth with cache (only 1: intros m x y e e'; only 1: induction m; only 1: intro; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.059912	19421	2931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.293876	21811	2361
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	40.232256	21355	2402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.055269	15958	2460
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.150015	48467	8257
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	40	40.087101	31019	2459
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.884444	948	144	16.2	synth with cache (only 1: intuition; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	4.901318	1762	439	2.0.0.0.0.0.0.0.0.0.0.11	synth with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	40	40.056544	15078	2051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.427214	24725	5504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.052285	14886	3349
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	32.711017	14549	2773	0.9.20	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.119870	16136	4180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.252767	5266	1627
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.147439	23785	3849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.088598	27586	3015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	40.438151	20940	8158
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	40	1.219711	370	150	0.0.2.0.1.0.8	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.248341	9212	1951
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.073537	9711	2029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.030749	8321	1570
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.123574	44543	6322
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.261923	37550	6365
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	0.971581	442	182	0.0.0.0.4.0.0.2.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.034414	18	4	0.5	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.489788	254	79	0.0.1.0.0.1.3.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.166273	19992	2915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.644093	28375	5631
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	13.939176	23682	1863	4.0.0.42.1	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.057152	14769	6224
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.153588	34161	5165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	43.201222	8691	2468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	22.639661	30970	3259	1.30.10.0	synth with cache (only 1: intros m x y e e'; only 1: intro; only 1: compute; only 1: eauto using Raw.Proofs.add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.150649	4618	897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.048236	14049	2613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.678040	7072	2867
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.071067	18108	4398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.273673	11626	2838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.043778	12123	2367
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	40	40.213374	4310	2312
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	40	5.044952	3305	1188	0.0.2.1.0.0.2.3.0	synth with cache (only 1: unfold le, min; only 1: intros x y H; only 1: case compare_spec; only 1: symmetry; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.090510	26721	7390
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.658161	23335	4552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.535272	14536	6190
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	40	1.727420	4388	96	92	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.373868	21259	4928
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.038874	25	13	3.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.050393	70	13	3.8	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.058052	31	18	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.271191	11590	2077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	40.637026	15678	5614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.247449	79672	8771
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	40	40.055710	11171	4051
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	3.606965	954	226	3.8.2	synth with cache (only 1: intros m1 m2; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.095394	33037	1823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	3.306354	671	338	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.063746	17298	4290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.194911	17	5	3.0.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.045959	8	3	4.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.058958	17201	3743
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.151517	7184	2131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.341875	18618	2980
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	40	40.179471	45019	6736
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.120795	7240	1116
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.458406	26570	7764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.297997	21608	4685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	40	40.139392	46673	6267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.088976	24410	6391
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.090384	27100	6696
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.076617	24003	2127
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.043741	10874	4077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.500126	11368	5091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.046274	12016	3087
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.289189	90681	1794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.062448	16759	4298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.466803	9002	2596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.093919	21290	4173
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.632622	9111	1456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.146114	17979	3653
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.467492	30042	2595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.053757	15313	3708
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.014379	3	3	0.0.0	synth with cache (only 1: intros a b l H; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	6.600451	7944	1206	1.2.13.8.12	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: destr_bool; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.146395	49654	7701
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	40	40.227398	29100	6404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.109561	39587	4981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.090874	11236	3263
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.059690	18418	2715
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.063740	17408	5529
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.206894	21791	4390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.085683	13293	4342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.742655	6349	2670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.290554	10160	2244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.022888	5987	1590
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.053379	14942	3729
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.666542	17560	3700
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.020716	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	10.223882	11584	862	0.3.56	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.065980	16818	5012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.271280	11981	1612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.474888	13429	1841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.868046	176	35	0.9.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.156610	43733	4409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.071101	20297	4986
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.061368	14838	4015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.468491	11899	4980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.079497	22906	4210
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.093750	22422	3080
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.081445	24478	4990
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40	40.092644	20555	2745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.364134	23278	5162
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.059187	13300	2513
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	18.064380	36255	3498	5.1.1.37.1	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	1.225045	252	111	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.070579	17182	5934
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.097947	38	16	0.0.6	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.023750	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.469617	190	44	2.5.0.1	synth with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.136812	5148	727
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.172137	17876	3934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.188850	22170	3198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.098810	13324	2139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.094770	27953	7593
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.165452	18890	2422
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	40	40.095217	33297	4004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.577741	15267	5428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.028903	3177	1232
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	2.954694	4309	699	0.3.5.3.0.13.1	synth with cache (only 1: repeat red; only 1: destruct s; only 1: auto; only 1: simpl; only 1: descolor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.040504	10907	2548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.274686	5075	1896
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	3.461521	9712	1052	0.1.0.0.7.0.4.0.2.17	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: descolor; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.062919	17414	3268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	40.505012	9734	1310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.031871	2851	1198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.065029	14	7	0.0.1.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.080472	26015	3995
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	40.085543	24657	4444
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.019283	5	3	1.0.1	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.022918	8	4	0.0.0.4	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.051316	6691	1766
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.003389	3	1	2	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	1.165104	859	211	0.1.9.1.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	0.652781	561	142	0.0.0.1.7.0.1.0	synth with cache (only 1: induction p; only 1: intro n; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intro n; only 1: simpl; only 1: auto; only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.155694	5199	1850
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.116430	34133	3990
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	1.472399	2265	221	6.2.2.7.34	synth with cache (only 1: simpl; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.184987	7929	2017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.027635	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.094798	27604	3065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.100187	10801	3035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.249998	11404	2514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.357073	5673	2171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.058702	16251	4646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.060570	19621	2467
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	40.171378	26724	4776
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.363173	21065	3776
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.108451	28155	4803
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.687446	169	36	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.222510	34941	2780
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.089792	10402	1243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.560674	8077	2828
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	34.963534	21423	4509	4.4.3.0.0.0.1.1.0.1.5.1	synth with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.135655	36973	634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.631807	10898	5725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.066800	19034	3379
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	40	1.550434	1148	264	1.0.1.0.11.1.0	synth with cache (only 1: induction l1; only 1: intros; only 1: inversion H; only 1: auto; only 1: inversion_clear 1; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.258292	15158	3734
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40	40.105622	23673	3389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.105680	34863	5020
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.323959	19663	5245
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.030569	7336	1267
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.094578	27566	3835
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.163259	2160	700
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.199761	25851	9743
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.012080	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.012748	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.211534	23989	6584
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.102027	29141	8431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.207506	15597	5301
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.202842	77054	6638
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.181077	40300	5615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.087355	19909	4241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.073414	14641	6147
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	11.018992	1212	436	1.1.2.1.2.1.0.2.1.1.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?(rpow_pow_N pow_th)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.071603	19372	3890
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.233602	50704	4537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.065469	16229	4857
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	27.197727	32867	5212	4.0.6.0.15.0.1.0.0.9.0	synth with cache (only 1: intro H; only 1: induction n; only 1: simpl; only 1: now destruct H; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.559578	50688	5295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.081167	24791	3609
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.211328	76932	8089
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.134096	45377	5319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.067853	19763	5668
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.197629	72931	6479
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.136097	32272	5164
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.284319	12288	2175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.791517	4654	1686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.204154	8333	2748
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.101506	28547	5013
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.030389	2	2	0.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.273032	12899	2665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.435723	10719	3820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.066798	18023	5748
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.171636	33312	4998
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.431132	14835	3252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	40.100544	16571	3570
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	40	40.158862	9402	2521
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.097454	8458	1770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.589934	7227	2168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.673051	10	5	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.651921	11539	5821
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.146534	21141	4726
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.089812	20554	4306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.082489	22860	5075
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.127428	112	30	0.4.0.4	synth with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	40.070195	21966	3637
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.293729	37180	5711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.351564	16852	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.075465	19494	6358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.044144	4	3	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.019408	3	1	2	synth with cache (only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.435966	146	37	0.0.0.3.0.0.1	synth with cache (only 1: intros [| x acc]; only 1: intro H; only 1: simpl; only 1: auto with *; only 1: intro H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.129483	30445	2484
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	40	4.234426	10438	541	16.7.12.23.13	synth with cache (only 1: intros; only 1: induction n; only 1: simpl in *; only 1: tauto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.284413	38043	2631
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	41.150210	35123	5125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.084117	23450	3741
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.435374	27568	2239
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.130171	43147	6376
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.236467	84325	9398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.315423	24069	6222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	2.462761	1253	240	12.2.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	40	40.127566	35042	5320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.158322	27360	4663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.072488	13824	5877
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.006042	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.053710	6462	1568
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.007178	4	1	3	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.004891	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	40.170078	65263	4623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	1.123092	1012	224	1.4.5.3	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.159901	16726	3030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.064107	10595	2728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.086453	11098	3608
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.065274	13436	2697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.483810	34876	8204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.044221	11344	2797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.086310	25048	3359
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.183760	66900	6349
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.095185	29535	4954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.083627	24969	6057
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.076270	27509	1708
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.090270	15165	2826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.040703	5710	1937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.440088	32638	5829
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	2.259309	5185	325	1.34.5.0	synth with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	0.026154	9	2	1	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.412753	53773	7534
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.447703	15149	6364
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.064555	18744	5072
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.115860	35889	4519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.079864	444	202	0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.173725	32269	4322
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.463329	20703	3753
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.074808	18808	2456
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.327595	38162	6127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.587383	11885	3469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.104116	35162	4381
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.188578	52609	8025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.602234	11598	4762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.078330	11171	4387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.317265	25170	5235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.349243	23174	4201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.083206	24673	5063
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.069767	16616	2492
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.128369	33143	4248
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.139390	884	178	7.6.8	synth with cache (only 1: destruct s; only 1: eauto with *; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.041609	7	4	0.2.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.041213	4	4	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	1.109653	560	203	0.0.0.1.0.2.0.0.3	synth with cache (only 1: intro C; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.254111	81	48	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	0.126894	51	20	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.057631	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.889000	16084	3142
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.540438	28423	2167
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.085482	22544	8186
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.855959	2201	577	0.0.15.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: ok; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.150391	46216	6409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.219160	22731	5770
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	40	2.426028	621	192	0.7.0.1.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.149409	13324	3140
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	2.870795	1389	334	0.0.0.4.1.5.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	40	40.073523	14490	2198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.081773	15655	6254
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.067641	23003	2246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.251444	18609	4103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.145647	14719	2230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.170790	61372	4556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.102236	15665	4392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.102116	29748	5560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.080817	20948	5345
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.077809	13684	4294
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.160923	28029	6042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.095242	26281	6291
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.110830	42049	1226
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.046371	13416	2310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.324096	18277	3873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.087472	5576	1659
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.091643	28216	7212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.131015	33495	3082
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.071643	23355	3700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.051054	14595	3818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.529359	12538	2473
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.131169	41249	5188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.405872	35272	5079
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.188814	34727	5132
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.477356	15696	3511
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.062074	16323	3413
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	40	40.092819	31380	3734
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.066138	19415	5024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.052298	13677	3688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.100656	16536	6367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.427616	18994	5542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.390082	28209	3873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.084777	24838	5163
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.089278	20197	1782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.154701	43767	7073
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.131286	28630	4722
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.088636	22819	10210
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.145545	47511	8142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.062005	16968	4237
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.082021	22560	5075
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	41.220395	27323	3017
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.356956	34464	4623
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.096424	24903	3385
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.168019	47	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.120470	41825	2390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.240282	26524	4008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.110071	21702	4698
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.155828	53814	6172
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.973212	8299	2341
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.056633	16606	4318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.094649	27059	6675
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.122700	31484	2155
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.079936	19468	5395
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.123520	38826	4349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.103282	31651	4800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.347747	28003	4493
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.712161	275	111	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.076504	21449	6203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.094011	15890	4527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.111889	8305	3506
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.124006	44306	4630
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.157150	57163	3778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.066801	5708	442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.067575	7725	2393
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.121075	41376	4843
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.153517	25650	4799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.555045	21479	3412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	40.199913	16727	2209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.297791	20176	3799
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.527594	17352	2071
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.099329	31658	5186
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.292034	20564	3786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.064834	18763	4731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.142169	26700	4021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.434030	20481	7109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.141825	12594	2934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.261457	22214	3763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.058575	16604	3571
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.119544	37932	5377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.092107	27962	4819
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.141270	41942	4732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.099156	27345	9163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.039878	7079	856
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.067534	18940	4608
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.300841	23587	4046
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.197680	23513	2927
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.053866	14250	4508
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	41.736389	6415	890
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.133311	48352	1813
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.045777	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	40.353724	19187	5541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.085678	25643	4927
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	40	3.836707	452	63	14.0	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.093434	14339	3404
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.194426	70232	4841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.106906	14987	3582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.105633	33804	4601
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.077965	21339	5993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.231908	48066	5935
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.074568	15720	878
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.138054	40666	3827
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.056414	15015	4592
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.253271	100128	2519
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.962494	453	73	0.3.0.1.9	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.054965	16605	1484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.052717	11643	4887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.424317	11958	3150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.161711	10398	3165
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.176080	14984	2550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.060392	14978	2349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.489875	398	81	16	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.026328	2	2	0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.276984	10329	3103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.026587	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.082561	17819	5257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.379044	10557	3052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.135615	16142	4775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.077438	23000	5428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.062683	15523	1238
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.060269	15142	3787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.853962	8894	1843
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.148095	50862	4821
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.202666	75354	6498
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	42.750335	4864	1214
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	35.513195	30879	3133	2.4.0.0.1.4.0.0.0.6.0.0.14.8	synth with cache (only 1: intros m; only 1: induction m; only 1: simpl; only 1: intuition; only 1: LO.MapS.Raw.MX.elim_comp; only 1: auto; only 1: simpl; only 1: intuition; only 1: LO.MapS.Raw.MX.elim_comp; only 1: auto; only 1: simpl; only 1: intuition; only 1: LO.MapS.Raw.MX.elim_comp; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	40.352834	13829	4852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.125423	8378	2413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.033505	9290	1453
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.033179	8541	1626
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	40	40.048588	12136	1318
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.170757	29	12	0.0.2.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.128962	22132	3109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.372649	15624	3437
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	40	40.837662	8888	7181
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.119779	36117	6579
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.196351	12754	2424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.156126	14085	3542
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.076421	20964	5946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.127913	15113	3701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.244317	22385	3948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.281909	21135	2688
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.105790	32234	5924
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.147117	46141	5833
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.372599	18648	2965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.172391	66520	1369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.064851	13178	941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.030471	2	2	0.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.023651	3	2	1.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.271492	22068	4622
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.451504	15926	2638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.111802	33960	4944
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.123055	25005	3480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.041486	13217	943
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.708424	65779	3334
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.234737	23725	2037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.479118	15346	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.030850	6595	1686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.086339	6914	1104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.117398	37827	6484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.185370	27921	2382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.170184	31903	4708
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.096009	24440	4599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.376316	30853	2490
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.086317	10486	1005
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.189166	17289	2811
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.036490	7	5	0.0.0.1.1	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.052425	12300	2251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.487893	13081	1943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.069260	3923	792
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	15.551752	4956	856	0.5.5.10.2	synth with cache (only 1: intros x n; only 1: pattern x at 1; only 1: unfold Rdiv; only 1: intros Hm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	40	40.038201	7289	2842
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	40	40.081702	21203	9133
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	40	0.088730	6	4	0.0.1.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.070824	21156	3379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.093717	26932	5704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.083088	27704	3649
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.094351	27907	4873
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.967702	17913	8046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.155139	15126	2508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.214717	24162	5783
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	12.098837	6613	833	2.7.21	synth with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.113178	36508	3940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.115488	24374	3410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.103400	28389	6023
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.233035	29219	5603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.967977	9662	1975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	42.894996	13299	3167
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.224848	88423	3468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.051789	12947	2347
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.081579	23161	4154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.083741	25731	4172
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.070289	10014	5129
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.104682	23143	3369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.645131	33436	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.107377	27743	6751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.064444	12537	8124
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.161840	59064	7542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.184543	10726	1858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.118602	14578	7744
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.053153	13199	6436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.235898	30	11	3.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.943501	18294	3964
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.286913	34319	3937
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.232280	72030	6367
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.105586	31257	4753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.094475	29243	5113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	41.257892	13537	4291
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.654797	36807	3132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.027800	6770	2155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	40.185830	18583	4129
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.188973	62470	5643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.061880	18398	3726
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.335706	27377	1915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	41.387098	3478	321
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	40	40.398189	56182	2735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.280170	13937	3494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.208754	28866	5031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.048358	14576	2542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.205980	27605	3377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.541042	8808	801
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.100300	27650	5312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.617337	18734	3905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.075763	45	13	2.1.0.2	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.563653	42027	4004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	0.119739	23	6	4.1	synth with cache (only 1: destruct x; only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.075330	21184	3494
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.053967	12409	6939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.130784	27536	5274
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	7.530385	5038	1370	0.0.0.0.0.2.0.2.2.2.1.1	synth with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.036287	6769	3970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.154624	35391	4927
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.208904	32671	3895
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.081346	24697	6004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.242148	5483	3220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.111980	29918	8432
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	24.758001	8988	2586	1.1.0.0.2.0.13	synth with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.110218	32768	5325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.789401	8260	2210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.430525	18461	3424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.073254	20160	3964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	41.566430	13037	1084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	40.099466	30963	4213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.070198	19129	6450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.110331	31118	5325
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.301677	17170	1027
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.210498	16476	7255
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.060311	18520	3263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.416542	24010	8586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.046939	10380	2182
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.059590	13252	2619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.100679	21810	4882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	41.110799	15396	2753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.109453	32003	5487
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	44.430954	3031	417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	41.205896	7128	994
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.222055	85486	5929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.122624	18116	4645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.062641	14905	4908
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.053004	3630	904
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	2.605498	752	250	0.0.0.0.0.0.0.0.1.0.0.0.0.1.2	synth with cache (only 1: intros r1 r2 [H| H]; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: unfold PI; only 1: generalize cos_pi2; only 1: replace (2 * PI2 / 2) with PI2 by field; only 1: tauto; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI2; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.134958	11931	2531
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	41.136579	16811	4526
