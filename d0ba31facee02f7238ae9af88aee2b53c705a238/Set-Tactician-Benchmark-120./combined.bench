coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_0_lt_compat; only 1: apply Rplus_le_lt_0_compat; only 1: apply pos_INR; only 1: apply Rlt_0_1).	0.048390	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).	0.029730	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold RiemannInt; only 1: destruct RiemannInt_exists; only 1: destruct RiemannInt_exists; only 1: eapply UL_sequence; only 1: apply u; only 1: apply RiemannInt_P4 with pr2 RinvN; only 1: apply RinvN_cv; only 1: apply RinvN_cv; only 1: assumption).	0.051102	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	120	0	synth with cache (only 1: lra).	0.030028	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	120	0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: reflexivity).	0.035876	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Boule; only 1: unfold pos_half; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rabs_def2 in H; only 1: destruct H; only 1: split; only 1: lra; only 1: lra).	0.045442	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: destruct NewtonInt_P1; only 1: clear o; only 1: apply Rminus_diag_eq; only 1: easy).	0.035125	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Newton_integrable; only 1: intros; only 1: elim X; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: tauto).	0.061444	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr; only 1: unfold NewtonInt; only 1: unfold NewtonInt_P3; only 1: simpl; only 1: ring).	0.124068	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	120	0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P3).	0.035061	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P4; only 1: assumption).	0.039342	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply StepFun_P38; only 1: apply SubEqui_P7; only 1: apply SubEqui_P1; only 1: apply SubEqui_P2).	0.041605	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold derivable_pt; only 1: unfold tan; only 1: apply derivable_pt_div; only 1: reg; only 1: reg; only 1: apply Rgt_not_eq; only 1: apply cos_gt_0; only 1: rewrite <- Ropp_div; only 1: tauto; only 1: tauto).	0.044955	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	120	0.0	synth with cache (only 1: pose proof PI2_3_2; only 1: lra).	0.032056	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: cring).	0.081094	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	120	0	synth with cache (only 1: trivial).	0.030764	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_div; only 1: apply Ropp_lt_contravar; only 1: assumption).	0.031024	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.030639	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	120	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.074861	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite tan_neg; only 1: assumption).	0.031975	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H0; only 1: exact H).	0.047071	6
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H; only 1: exact H0).	0.038623	6
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	120	0.0.0.0.0	synth with cache (only 1: apply mkpow_th; only 1: unfold pow; only 1: intros; only 1: rewrite Nnat.N2Nat.id; only 1: reflexivity).	0.034989	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply continuity_implies_RiemannInt; only 1: assumption; only 1: intros; only 1: apply H0; only 1: elim H3; only 1: intros; only 1: split; only 1: assumption; only 1: apply Rle_trans with x; only 1: assumption; only 1: assumption).	0.056001	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply tan_is_inj; only 1: apply atan_bound; only 1: pose proof PI_RGT_0; only 1: rewrite Ropp_div; only 1: split; only 1: lra; only 1: lra; only 1: rewrite atan_right_inv; only 1: rewrite tan_0; only 1: easy).	0.074709	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: lra).	0.040021	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.045454	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.128560	49
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.043372	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.031462	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.038209	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.042540	10
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.153892	49
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.029936	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.030992	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.036942	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.065194	17
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	120	0	synth with cache (only 1: discriminate).	0.029202	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	120	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.040823	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.043553	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.028028	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.033266	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_of_nat_complete_inf; only 1: Lia.lia).	0.036238	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold subdivision_val; only 1: destruct projT2; only 1: apply a0).	0.046899	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H2; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	0.171810	49
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct a0; only 1: destruct H0; only 1: destruct H1; only 1: destruct H2; only 1: exists x; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	0.168570	51
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold IsStepFun; only 1: intros; only 1: elim X; only 1: intros; only 1: apply existT with x; only 1: apply StepFun_P5; only 1: assumption).	0.036386	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold adapted_couple in H; only 1: decompose [ and ] H; only 1: clear H; only 1: induction l; only 1: simpl in H4; only 1: discriminate; only 1: induction l; only 1: simpl in H3; only 1: simpl in H2; only 1: generalize H3; only 1: generalize H2; only 1: unfold Rmin; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: simpl; only 1: apply le_n_S; only 1: apply le_n_S; only 1: apply Nat.le_0_l).	0.161218	29
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple_opt; only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H3; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	0.296653	54
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	120	0	synth with cache (only 1: exact R0).	0.026029	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.031969	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold derivable_pt; only 1: unfold derive_pt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr1; only 1: intros ?; only 1: destruct pr2; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply uniqueness_limite with g x; only 1: assumption; only 1: assumption).	0.051284	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_lt_inv; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: apply H0; only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: assumption).	0.035188	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply exp_inv; only 1: apply exp_ln; only 1: apply exp_pos).	0.029122	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	120	0.0.0	synth with cache (only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy).	0.029183	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_inv; only 1: apply H; only 1: apply H0).	0.181094	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_plus; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: assumption; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: assumption).	0.075190	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_ln; only 1: rewrite exp_Ropp; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.058398	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_plus_distr_r; only 1: rewrite exp_plus; only 1: auto).	0.041509	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold exp; only 1: case exist_exp; only 1: intros ?; only 1: unfold exp_in; only 1: unfold Un_cv; only 1: unfold infinite_sum; only 1: unfold E1; only 1: trivial).	0.035989	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction N; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHN; only 1: rewrite IHN; only 1: reflexivity).	0.064428	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	120	0.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	0.024293	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	120	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.034801	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	120	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.028895	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_sin).	0.028698	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_cos).	0.027366	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	120	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.040693	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.031090	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: right; only 1: reflexivity; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.053661	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.113782	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite H; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.189636	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold xt; only 1: eauto with real; only 1: unfold yt; only 1: ring).	0.040463	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold xt; only 1: unfold yt; only 1: ring).	0.073601	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring).	0.047185	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	0.074434	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	120	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: apply isometric_rotation_0; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.058575	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_rotation_0; only 1: apply isometric_translation).	0.042950	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_translation; only 1: apply isometric_rotation_0).	0.037150	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	120	0.0.0.0	synth with cache (only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: tauto).	0.052821	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.057312	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: rewrite Rplus_comm; only 1: rewrite <- cos_minus; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply cos_0).	0.044103	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	120	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.051360	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	120	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.045659	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply pre_sin_bound; only 1: assumption; only 1: apply Rle_trans with (1 := H0) (2 := PI_4)).	0.038971	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.062117	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.047853	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: tauto; only 1: simpl; only 1: split; only 1: apply Rmult_le_pos; only 1: intuition; only 1: intuition; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_le_0_lt_compat; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.061706	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Datan_seq; only 1: rewrite pow_mult; only 1: rewrite pow_mult; only 1: rewrite pow2_abs; only 1: reflexivity).	0.039444	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold PI_tg; only 1: unfold Ratan_seq; only 1: unfold Rdiv; only 1: rewrite pow1; only 1: rewrite Rmult_1_l; only 1: reflexivity).	0.036913	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	120	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- Alt_PI_eq; only 1: apply Alt_PI_ineq).	0.053434	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.068398	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l1; only 1: simpl; only 1: ring; only 1: induction l1; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in IHl1; only 1: rewrite IHl1; only 1: ring).	0.143074	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply StepFun_P26; only 1: apply StepFun_P23 with g; only 1: assumption; only 1: assumption; only 1: apply StepFun_P25 with f; only 1: assumption; only 1: assumption).	0.059217	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: unfold Boule; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_pos_eq; only 1: assumption; only 1: apply Rle_refl).	0.031886	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold Rpower; only 1: rewrite Rmult_0_l; only 1: apply exp_0).	0.029067	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: apply exp_ln; only 1: assumption).	0.035360	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rpower_O; only 1: auto; only 1: simpl; only 1: intros ?; only 1: case n0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rpower_1; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rpower_plus; only 1: rewrite H; only 1: rewrite Rpower_1; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption).	0.076016	27
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_finite_sum).	0.026152	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_r; only 1: rewrite <- ln_1; only 1: apply ln_increasing; only 1: apply Rlt_0_1; only 1: apply H; only 1: apply H0).	0.045922	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply CVU_continuity; only 1: apply CVN_CVU; only 1: apply X; only 1: intros; only 1: unfold SP; only 1: apply continuity_pt_finite_SF; only 1: intros; only 1: apply H; only 1: apply H1; only 1: apply H0).	0.078883	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	120	0.0.0.0.0	synth with cache (only 1: unfold Rpower; only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_mult_distr_l_reverse; only 1: apply exp_Ropp).	0.032314	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	120	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_exp).	0.031325	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: case H0; only 1: intros ?; only 1: left; only 1: apply Rpower_lt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: rewrite H1; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: rewrite <- H; only 1: unfold Rpower; only 1: rewrite ln_1; only 1: rewrite Rmult_0_r; only 1: rewrite Rmult_0_r; only 1: apply Rle_refl).	0.072500	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	120	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_cosh).	0.027470	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	120	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_sinh).	0.027272	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.038399	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.032703	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.031721	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_involutive; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption; only 1: apply Rinv_neq_0_compat; only 1: assumption).	0.045880	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold D_in; only 1: rewrite H; only 1: auto).	0.047270	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite <- exp_plus; only 1: rewrite ln_mult; only 1: rewrite Rmult_plus_distr_l; only 1: auto; only 1: auto; only 1: auto).	0.038724	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra).	0.040028	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct H1; only 1: apply Rlt_le; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra; only 1: rewrite H1; only 1: apply Rle_refl; only 1: intros; only 1: rewrite <- H; only 1: rewrite Rpower_O; only 1: rewrite Rpower_O; only 1: apply Rle_refl; only 1: apply Rlt_le_trans with a; only 1: tauto; only 1: tauto; only 1: tauto).	0.077710	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rlt_le; only 1: apply arcsinh_lt; only 1: assumption; only 1: rewrite H; only 1: apply Rle_refl).	0.040697	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold arcsinh; only 1: rewrite pow_ne_zero; only 1: rewrite Rplus_0_l; only 1: rewrite Rplus_0_l; only 1: rewrite sqrt_1; only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy; only 1: discriminate).	0.043464	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.035581	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.035832	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	120	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.038625	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	120	0.0.0.0.0	synth with cache (only 1: apply Rsqr_eq_0; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: right; only 1: easy).	0.095722	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	120	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: apply Rinv_lt_contravar; only 1: prove_sup; only 1: prove_sup).	0.038724	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: left; only 1: exact Rlt_0_1; only 1: left; only 1: exact Rlt_0_1; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: ring; only 1: left; only 1: exact Rlt_0_1).	0.126264	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	120	0.1.0	synth with cache (only 1: intros; only 1: apply sqrt_sqrt; only 1: assumption).	0.042080	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	120	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.038900	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply sqrt_square; only 1: assumption).	0.039679	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	0.036135	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rsqr_abs; only 1: apply sqrt_Rsqr; only 1: apply Rabs_pos).	0.038110	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	120	1.0	synth with cache (only 1: rewrite sin_cos_PI4; only 1: apply cos_PI4).	0.035455	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	120	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: assumption).	0.041194	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	120	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_mult_alt; only 1: easy).	0.055755	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: red; only 1: auto with real; only 1: right; only 1: reflexivity; only 1: apply sqrt_positivity; only 1: red; only 1: auto with real).	0.060660	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	120	1.0	synth with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: apply cos_PI6).	0.038945	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.054829	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	120	0.0	synth with cache (only 1: rewrite sin_PI6_cos_PI3; only 1: apply sin_PI6).	0.030322	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI3; only 1: rewrite cos_PI3; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: rewrite Rinv_involutive; only 1: rewrite Rmult_assoc; only 1: rewrite <- Rinv_l_sym; only 1: apply Rmult_1_r; only 1: discrR; only 1: discrR).	0.044756	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_div_alt; only 1: assumption).	0.038720	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	120	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI3; only 1: rewrite cos_2PI3; only 1: field).	0.054915	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_lt_0_alt).	0.042946	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: easy; only 1: apply Rlt_le; only 1: apply Rle_lt_trans with x; only 1: exact H; only 1: easy; only 1: exact H; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.049454	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_lt_1_alt; only 1: split; only 1: exact H; only 1: easy).	0.042345	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	120	0.0.0	synth with cache (only 1: rewrite cos_5PI4; only 1: rewrite sin_5PI4; only 1: reflexivity).	0.051296	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	120	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI2_RGT_0).	0.051292	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	120	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.047935	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	120	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_le_1_alt; only 1: assumption).	0.039927	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_less_alt).	0.037370	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.021312	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply pow_ne_zero; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.026890	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold cosh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rdiv; only 1: rewrite <- Rinv_r_sym; only 1: easy; only 1: discrR).	0.028499	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold sinh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rplus_opp_r; only 1: apply Rmult_0_l).	0.025410	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold cos_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.041201	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.058208	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	120	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply dicho_lb_growing; only 1: assumption; only 1: apply dicho_lb_maj; only 1: assumption).	0.028144	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply dicho_up_decreasing; only 1: assumption; only 1: apply dicho_up_min; only 1: assumption).	0.025133	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold pow_2_n; only 1: apply pow_nonzero; only 1: discrR).	0.024944	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.076461	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite double; only 1: apply cos_plus).	0.040977	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite double in H0; only 1: apply tan_plus; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.067515	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	120	1	synth with cache (only 1: apply sin_antisym).	0.072297	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	120	1.0.0	synth with cache (only 1: intros ?; only 1: symmetry in  |- *; only 1: apply cos_sym).	0.070110	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	120	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_0; only 1: rewrite cos_0; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.041365	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: unfold Rdiv; only 1: apply Ropp_mult_distr_l_reverse).	0.043994	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite tan_plus; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: reflexivity; only 1: assumption; only 1: rewrite cos_neg; only 1: assumption; only 1: assumption; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: assumption).	0.078549	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: apply H0; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).	0.034434	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: unfold point_adherent; only 1: intros; only 1: exists x; only 1: unfold intersection_domain; only 1: split; only 1: unfold neighbourhood in H0; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: apply H1; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos; only 1: apply H).	0.101307	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	120	0.0.0	synth with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	0.050843	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	120	0.0.0.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.090393	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	120	0.0.0.0	synth with cache (only 1: rewrite cos_2a; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.057226	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.049165	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros; only 1: unfold intersection_domain in H0; only 1: unfold complementary in H0; only 1: elim H0; only 1: intros; only 1: elim H2; only 1: assumption).	0.035161	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.069294	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: unfold union_domain in H1; only 1: elim H1; only 1: intros ?; only 1: apply neighbourhood_P1 with D1; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: apply neighbourhood_P1 with D2; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H0; only 1: assumption).	0.079459	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.049147	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	120	0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).	0.022786	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.063005	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.063872	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	120	0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: lra).	0.047965	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).	0.044421	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold intersection_domain; only 1: elim H0; only 1: intros; only 1: split; only 1: apply cond_fam; only 1: exists x0; only 1: assumption; only 1: assumption).	0.089477	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.066861	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.054155	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.048687	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	120
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	120	0	synth with cache (only 1: reflexivity).	0.021448	1
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: trivial; only 1: simpl; only 1: apply Rmult_le_pos; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r; only 1: apply H; only 1: apply le_n).	0.052609	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHn; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite plus_INR; only 1: rewrite mult_INR; only 1: ring).	0.060937	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	0.025495	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: assumption).	0.033317	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	120	0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: assumption).	0.030415	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: assumption; only 1: assumption).	0.034914	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: assumption).	0.040055	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.023643	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_eq_inv; only 1: apply continuity_pt_mult; only 1: assumption; only 1: apply continuity_pt_inv; only 1: assumption; only 1: assumption).	0.050036	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: apply derivable_pt_const).	0.038215	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_id).	0.062877	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_Rsqr).	0.070716	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.040279	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.042857	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	120	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.048271	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_pow).	0.047943	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.057199	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CV_ALT; only 1: assumption; only 1: unfold positivity_seq; only 1: apply decreasing_ineq; only 1: assumption; only 1: assumption; only 1: assumption).	0.032593	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	120	0.0.0	synth with cache (only 1: apply alternated_series; only 1: apply PI_tg_decreasing; only 1: apply PI_tg_cv).	0.027709	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.105826	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	120	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: eapply StepFun_P36; only 1: assumption; only 1: eapply StepFun_P25; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: eapply StepFun_P23; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: assumption).	0.081286	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct l1; only 1: simpl in H; only 1: simpl; only 1: destruct l2; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in H; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: rewrite Rplus_assoc; only 1: apply Rplus_eq_compat_l; only 1: apply IHl1; only 1: rewrite <- H; only 1: reflexivity).	0.141360	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: apply Rplus_lt_0_compat; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	0.040296	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.024276	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Pser; only 1: unfold infinite_sum; only 1: unfold Un_cv in H; only 1: assumption).	0.027448	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- IHN; only 1: ring).	0.052426	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.052883	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.055103	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: ring).	0.052394	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: rewrite tech5; only 1: apply Rplus_le_le_0_compat; only 1: apply IHN; only 1: apply H).	0.030295	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply R_complete; only 1: unfold Cauchy_crit_series in H; only 1: exact H).	0.028221	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite Rplus_0_l; only 1: apply H; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r).	0.042890	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply eq_sym; only 1: apply double_var).	0.026079	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	120	0.0	synth with cache (only 1: intros ?; only 1: field).	0.045415	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.027879	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.035158	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: split with eps; only 1: split; only 1: auto; only 1: intros; only 1: elim H0; only 1: intros; only 1: auto).	0.043428	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	0.033509	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.037006	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold D_x; only 1: unfold no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq; only 1: unfold Rminus; only 1: rewrite Ropp_plus_distr; only 1: rewrite <- Rplus_assoc; only 1: rewrite Rplus_opp_r; only 1: rewrite Rplus_0_l; only 1: apply Ropp_neq_0_compat; only 1: assumption).	0.037227	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	120	0.0.1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: intros; only 1: rewrite Rplus_assoc; only 1: auto; only 1: exact Rmult_1_l; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_comm; only 1: intros; only 1: rewrite Rmult_assoc; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.140436	87
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.034442	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- quadruple; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: rewrite Rinv_r_simpl_m; only 1: trivial; only 1: discrR).	0.035374	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_1; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.031266	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: auto).	0.028852	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy).	0.031918	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.036201	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	120	0	synth with cache (only 1: apply Rmult_0_l).	0.031679	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	120	0.0	synth with cache (only 1: compute; only 1: apply Rinv_1).	0.034624	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: apply Q2R_0; only 1: apply Q2R_1; only 1: intros; only 1: apply Q2R_plus; only 1: intros; only 1: apply Q2R_minus; only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: intros; only 1: apply Q2R_opp; only 1: intros; only 1: apply Qeq_true; only 1: auto; only 1: apply R_power_theory; only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy; only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.120288	36
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	120	1	synth with cache (only 1: exact Qeq_eqR).	0.046821	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Un_growing; only 1: unfold opp_seq; only 1: unfold Un_decreasing; only 1: intros; only 1: apply Ropp_le_contravar; only 1: apply H).	0.028111	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.056551	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct z; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: apply Qpower_positive_zero; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_zero; only 1: reflexivity).	0.042983	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).	0.027519	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reval_formula; only 1: destruct f; only 1: unfold Reval_formula'; only 1: unfold Reval_expr; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rge_le; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rle_ge; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.080298	32
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply Wn_decreasing; only 1: apply maj_min; only 1: apply cauchy_min; only 1: assumption).	0.026081	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply Vn_growing; only 1: apply min_maj; only 1: apply cauchy_maj; only 1: assumption).	0.065008	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	120	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.033053	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: injection H; only 1: intros; only 1: split; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).	0.029386	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	120	0.0.0.0.0	synth with cache (only 1: simpl; only 1: destruct tearing_sequences; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.201688	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: simpl; only 1: simpl in H; only 1: elim H; only 1: intros ?; only 1: left; only 1: rewrite H0; only 1: reflexivity; only 1: intros ?; only 1: right; only 1: apply IHl; only 1: assumption).	0.040825	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: left; only 1: reflexivity).	0.037820	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity; only 1: intros ?; only 1: reflexivity).	0.043711	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: reflexivity; only 1: exists r; only 1: exists l; only 1: reflexivity).	0.053265	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.032574	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold EUn; only 1: split with n; only 1: trivial).	0.030366	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H).	0.030007	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	120	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).	0.019208	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_involutive; only 1: unfold fact at 1; only 1: fold fact; only 1: rewrite mult_INR; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rinv_l; only 1: apply Rmult_ne; only 1: apply INR_fact_neq_0; only 1: apply not_0_INR; only 1: discriminate; only 1: apply INR_fact_neq_0; only 1: apply INR_fact_neq_0).	0.033929	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	120	0	synth with cache (only 1: reflexivity).	0.019657	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.021922	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with real).	0.042447	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: field; only 1: simpl; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite IHn; only 1: field).	0.072036	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_assoc; only 1: rewrite <- H; only 1: auto; only 1: auto).	0.065032	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: apply Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite H0; only 1: reflexivity; only 1: assumption; only 1: apply pow_nonzero; only 1: assumption).	0.037346	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	0.033930	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Rmult_1_r; only 1: reflexivity).	0.026691	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field).	0.035864	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	120	0	synth with cache (only 1: reflexivity).	0.021181	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.023996	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rmult_comm; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite pow_add; only 1: apply Rinv_mult_distr; only 1: apply pow_nonzero; only 1: auto; only 1: apply pow_nonzero; only 1: auto).	0.081891	46
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- INR_IZR_INZ; only 1: rewrite H; only 1: case n0; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.052422	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_pos_nat; only 1: simpl; only 1: induction BinPosDef.Pos.to_nat; only 1: easy; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- IHn0; only 1: easy).	0.042840	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.034609	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_le; only 1: auto with real).	0.028243	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: exact Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_1; only 1: rewrite H; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.070732	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.043048	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct alpha; only 1: intros ?; only 1: simpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: easy; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: rewrite Rinv_involutive; only 1: easy; only 1: easy; only 1: apply Rinv_neq_0_compat; only 1: easy).	0.044988	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.097130	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	120	0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.043134	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rabs_mult; only 1: reflexivity).	0.036675	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	0.036365	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.028020	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.067770	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.029411	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.027938	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reqb; only 1: destruct Req_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.032850	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	120	0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.147204	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.057455	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.039281	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.043843	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.034601	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	120	0	synth with cache (only 1: ring_Rsqr).	0.027522	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.237791	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.035763	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.038646	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.031252	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_0_lt_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.029451	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rsqr_neg; only 1: intros ?; only 1: reflexivity).	0.029456	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incr_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.029952	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.028115	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.029715	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: apply a).	0.098182	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.030349	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: destruct Rle_dec; only 1: auto with real; only 1: auto with real).	0.034794	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption).	0.035001	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	0.026690	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.027910	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.075855	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.032938	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.033930	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.046929	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros; only 1: reflexivity; only 1: case Rle_dec; only 1: intros; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition; only 1: intros; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.055401	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: apply cond_pos; only 1: apply cond_pos).	0.023959	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.031484	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.025056	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.028740	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.029783	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto with real; only 1: auto with real).	0.034614	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: auto; only 1: case Rle_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.044081	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.030666	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	0.033194	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	0.029472	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.029417	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply toRad_inj; only 1: rewrite rad_deg; only 1: reflexivity).	0.039874	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.036774	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sind; only 1: unfold cosd; only 1: apply sin2_cos2).	0.036304	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: apply cond_neg; only 1: intros ?; only 1: apply cond_neg).	0.027153	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.029706	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.026201	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	120	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rle_lt_trans with y; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: split; only 1: assumption; only 1: apply Rlt_trans with x; only 1: apply Rnot_le_gt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.048898	30
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.029996	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_neq_0_compat; only 1: auto; only 1: intros ?; only 1: auto).	0.031789	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros ?; only 1: apply Rabs_left; only 1: auto; only 1: intros ?; only 1: rewrite H0; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.033741	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros; only 1: apply Rminus_le; only 1: rewrite <- Rplus_0_r; only 1: unfold Rminus; only 1: rewrite Ropp_involutive; only 1: auto with real; only 1: intros; only 1: auto with real).	0.038855	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H0; only 1: clear r; only 1: apply Ropp_le_cancel; only 1: rewrite Ropp_involutive; only 1: exact H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: clear r; only 1: assumption).	0.040089	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply Rabs_pos).	0.028725	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.097769	27
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case z; only 1: unfold BinIntDef.Z.abs; only 1: apply Rabs_R0; only 1: unfold BinIntDef.Z.abs; only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy; only 1: unfold BinIntDef.Z.abs; only 1: unfold IZR at 1; only 1: intros ?; only 1: rewrite Rabs_Ropp; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy).	0.060198	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite Rabs_Zabs; only 1: easy).	0.040138	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	0.048425	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.041580	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	120	0.0.0	synth with cache (only 1: intros; only 1: apply not_0_IZR; only 1: easy).	0.035042	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.104110	16
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.086467	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	120	0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	0.054983	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	120	0.0.0.0.1	synth with cache (only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto).	0.036891	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: unfold Rdiv; only 1: intros; only 1: rewrite Q2R_mult; only 1: rewrite Q2R_inv; only 1: auto; only 1: auto).	0.045407	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	120	0.0.0.0	synth with cache (only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring).	0.038602	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply tech_up with (1 := H0); only 1: rewrite plus_IZR; only 1: apply Rplus_le_compat_r; only 1: easy).	0.027318	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite <- H0 in H; only 1: generalize fp_R0; only 1: intros ?; only 1: auto with zarith real).	0.025781	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.026653	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	120	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.019758	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	120	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.019337	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.018387	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	120	0	synth with cache (only 1: exact Rlt_irrefl).	0.018306	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.027986	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: easy).	0.020699	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	120	0.0.0.0.0	synth with cache (only 1: intuition; only 1: apply Rlt_not_eq in H1; only 1: eauto; only 1: apply Rgt_not_eq in H1; only 1: eauto).	0.116635	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	120	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.043497	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	120	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.042732	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.047859	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.028648	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	120	0	synth with cache (only 1: trivial).	0.022382	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	120	0	synth with cache (only 1: trivial).	0.018690	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.020804	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: easy).	0.022484	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.019187	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	120	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.026154	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	120	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.038622	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	120	0	synth with cache (only 1: exact Rlt_not_le).	0.024428	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	120	0	synth with cache (only 1: exact Rlt_not_ge).	0.023652	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.022426	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_not_lt).	0.022515	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rge_not_lt).	0.027593	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	120	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).	0.024305	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	120	0.0	synth with cache (only 1: unfold Rge; only 1: tauto).	0.025278	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	120	0.0	synth with cache (only 1: unfold Rle; only 1: auto).	0.021525	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	120	0.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.026717	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_asym).	0.049108	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	120	0	synth with cache (only 1: auto with real).	0.031067	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	120	0	synth with cache (only 1: intuition).	0.036870	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	120	0	synth with cache (only 1: intuition).	0.040615	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: replace r1 with r2; only 1: replace r3 with r4; only 1: assumption).	0.036333	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rlt_eq_compat with (r2 := r4) (r4 := r2); only 1: auto; only 1: auto; only 1: auto).	0.030409	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	120	0	synth with cache (only 1: eauto using Rle_trans with rorders).	0.042158	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	120	0	synth with cache (only 1: eauto using Rlt_trans with rorders).	0.024037	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	120	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.040445	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	120	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.037406	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	120	0	synth with cache (only 1: eauto using Rlt_le_trans with rorders).	0.025330	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	120	0	synth with cache (only 1: eauto using Rle_lt_trans with rorders).	0.026204	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_dec).	0.038230	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	120	1.0	synth with cache (only 1: intros ?; only 1: ring).	0.040292	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto with real; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.037677	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.033923	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal).	0.046212	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	120	0.0.0.0	synth with cache (only 1: unfold IZR; only 1: rewrite R0_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.027307	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	120	0.0.0.0.0	synth with cache (only 1: unfold IZR; only 1: unfold IPR; only 1: rewrite R1_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.036635	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.025201	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Ropp_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.021036	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: unfold CReal_minus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: reflexivity).	0.039647	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.023067	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_comm).	0.027469	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).	0.057515	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_opp_r).	0.037319	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.031512	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_comm).	0.024735	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_assoc).	0.037659	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct Req_appart_dec; only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: apply CReal_inv_l).	0.035735	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	0.038228	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_plus_distr_l).	0.053138	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	0.041932	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CRealLtDisjunctEpsilon; only 1: destruct H; only 1: left; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H; only 1: right; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H).	0.039572	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply and_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply impl_hprop; only 1: intros ?; only 1: intros ?; only 1: apply eq_proofs_unicity_on; only 1: intros ?; only 1: destruct f; only 1: destruct y; only 1: left; only 1: reflexivity; only 1: right; only 1: discriminate; only 1: destruct y; only 1: right; only 1: discriminate; only 1: left; only 1: reflexivity; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply not_hprop).	0.062444	31
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: unfold DRealAbstr in H; only 1: unfold proj1_sig in H; only 1: destruct sig_forall_dec; only 1: discriminate; only 1: apply q1).	0.796419	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction).	0.029110	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: contradiction).	0.028523	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct app; only 1: left; only 1: apply CRmorph_increasing; only 1: exact c; only 1: right; only 1: apply CRmorph_increasing; only 1: exact c).	0.033659	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.022904	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.028290	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.058267	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	120	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.020485	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	120	0	synth with cache (only 1: discriminate).	0.019341	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.065930	3
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- SF2Prim_Prim2SF; only 1: symmetry; only 1: rewrite <- SF2Prim_Prim2SF; only 1: rewrite H; only 1: easy).	0.025593	6
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Prim2SF_SF2Prim; only 1: symmetry; only 1: rewrite <- Prim2SF_SF2Prim; only 1: rewrite H; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.030539	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.029077	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.310196	39
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	120	0	synth with cache (only 1: apply eqb_spec).	0.027581	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044775	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: apply H2; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: apply H2).	0.049891	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_zero_spec; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.029523	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	120	0	synth with cache (only 1: tauto).	0.024480	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	120	0	synth with cache (only 1: apply to_Z_rec_bounded).	0.025346	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	120	0.0	synth with cache (only 1: apply Z.div_lt_upper_bound; only 1: reflexivity).	0.038524	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.093623	39
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqb31; only 1: intros ?; only 1: intros ?; only 1: rewrite spec_compare; only 1: split; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: rewrite Z.compare_refl; only 1: easy).	0.058044	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	120	0	synth with cache (only 1: apply eqb31_eq).	0.022588	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.lt_gt; only 1: apply Z.pow_pos_nonneg; only 1: lia; only 1: lia).	0.039899	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.099777	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	120	0.0.0.0	synth with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.069871	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	120	0	synth with cache (only 1: reflexivity).	0.029540	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	120	0	synth with cache (only 1: reflexivity).	0.026364	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	120	0	synth with cache (only 1: reflexivity).	0.028026	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	120	0.0	synth with cache (only 1: apply Ring_theory.mkpow_th; only 1: reflexivity).	0.024153	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.020198	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.038234	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.039285	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: split; only 1: trivial; only 1: trivial).	0.043547	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.080283	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.063881	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	120	0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: rewrite eqb_spec; only 1: split; only 1: apply to_Z_inj; only 1: apply f_equal).	0.046669	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_spec).	0.043283	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_spec).	0.041438	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_def_spec; only 1: unfold compare_def; only 1: case ltbP; only 1: auto using Z.compare_lt_iff; only 1: intros ?; only 1: case eqbP; only 1: symmetry; only 1: apply Z.compare_eq_iff; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Z.compare_gt_iff; only 1: lia).	0.058088	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	120	0	synth with cache (only 1: apply eqb_spec).	0.040772	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite diveucl_def_spec; only 1: unfold diveucl_def; only 1: rewrite div_spec; only 1: rewrite mod_spec; only 1: unfold BinIntDef.Z.div; only 1: unfold BinIntDef.Z.modulo; only 1: destruct BinIntDef.Z.div_eucl; only 1: trivial).	0.057461	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	120	0	synth with cache (only 1: apply add_spec).	0.047056	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	120	0	synth with cache (only 1: apply addc_spec).	0.057600	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	120	0.0.0.0.0	synth with cache (only 1: unfold addcarry; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: trivial).	0.065451	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	120	0	synth with cache (only 1: apply sub_spec).	0.053552	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	120	0	synth with cache (only 1: apply subc_spec).	0.043625	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	120	0.0.0.0	synth with cache (only 1: unfold oppc; only 1: rewrite subc_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.054254	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	120	0.0.0.0	synth with cache (only 1: unfold opp; only 1: rewrite sub_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.047277	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	120	0.0.0.0.0	synth with cache (only 1: unfold subcarry; only 1: rewrite sub_spec; only 1: rewrite sub_spec; only 1: rewrite Zminus_mod_idemp_l; only 1: trivial).	0.069877	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold eqm; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite Z.sub_diag; only 1: reflexivity).	0.062914	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	120	0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intropattern subst -> H; only 1: reflexivity).	0.057742	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	120	0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_bounded; only 1: apply to_Z_bounded).	0.073109	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Z.add_assoc; only 1: auto).	0.095344	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	120	0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: auto).	0.064068	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: simpl in *; only 1: discriminate).	0.035329	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	120	0	synth with cache (only 1: reflexivity).	0.024162	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.033276	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	120	0	synth with cache (only 1: reflexivity).	0.032250	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros; only 1: f_equal; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.043343	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply nshiftr_predsize_0_firstl; only 1: apply nshiftr_0_propagates with n; only 1: lia; only 1: auto).	0.046082	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	120	0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: auto).	0.036157	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	120	0.0	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv).	0.029300	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incr; only 1: unfold recr; only 1: unfold incrbis_aux; only 1: fold Incr; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.033190	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn1; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.043134	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.048357	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold phi; only 1: unfold recr; only 1: unfold phibis_aux; only 1: fold Phi; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.030007	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn1; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.047134	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.055937	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	120	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- phibis_aux_equiv; only 1: apply phibis_aux_pos).	0.028740	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold EqShiftL; only 1: intros; only 1: unfold nshiftl; only 1: simpl; only 1: split; only 1: auto; only 1: auto).	0.030350	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite nshiftl_above_size; only 1: rewrite nshiftl_above_size; only 1: auto; only 1: auto; only 1: auto).	0.030465	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite firstr_firstl; only 1: rewrite firstr_firstl; only 1: f_equal; only 1: apply EqShiftL_le with k; only 1: unfold size; only 1: auto with arith; only 1: auto).	0.034985	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold EqShiftL; only 1: rewrite nshiftl_S_tail; only 1: rewrite nshiftl_S_tail; only 1: split; only 1: auto; only 1: auto).	0.037001	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.027548	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- incrbis_aux_equiv; only 1: rewrite <- incrbis_aux_equiv; only 1: apply EqShiftL_incrbis; only 1: auto; only 1: auto; only 1: auto).	0.033651	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: apply EqShiftL_incr; only 1: red; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.073779	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_eq_0_l with r2; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply Rplus_eq_0_l with r1; only 1: auto with real; only 1: auto with real; only 1: rewrite Rplus_comm; only 1: auto with real).	0.050165	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.056689	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	120	0.0.1.0.0	synth with cache (only 1: constructor; only 1: exact RTheory; only 1: exact R1_neq_R0; only 1: reflexivity; only 1: exact Rinv_l).	0.022361	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.081006	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.044688	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.041231	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.031582	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.035137	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.045126	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	120	0	synth with cache (only 1: auto with real).	0.035270	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul31; only 1: rewrite <- Z.double_spec; only 1: rewrite <- phi_twice_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto).	0.038663	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_twice_firstl; only 1: unfold add31; only 1: rewrite phi_twice_firstl; only 1: rewrite <- Z.succ_double_spec; only 1: rewrite <- phi_twice_plus_one_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.040267	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	120	0.0.0.0.0.0	synth with cache (only 1: unfold positive_to_int31; only 1: intros; only 1: rewrite p2i_p2ibis; only 1: apply p2ibis_spec; only 1: auto; only 1: auto).	0.035521	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	120	0	synth with cache (only 1: auto with zarith).	0.028768	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	120	0	synth with cache (only 1: reflexivity).	0.036047	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	120	0	synth with cache (only 1: reflexivity).	0.030608	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	120	0	synth with cache (only 1: reflexivity).	0.033006	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	120	0	synth with cache (only 1: reflexivity).	0.030710	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	120	0	synth with cache (only 1: reflexivity).	0.032871	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	120	0	synth with cache (only 1: reflexivity).	0.028647	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_add_c).	0.030955	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.030382	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	120	0.0.0.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.040785	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply spec_add).	0.035968	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.032190	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.030688	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.030118	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.034143	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	120	0.0.0.0.0	synth with cache (only 1: unfold sub31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zminus_mod_idemp_l).	0.048119	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	120	0.0.0	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.035073	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.034915	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.028209	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.031483	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub).	0.033178	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.033502	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_mul_c).	0.030840	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold tan; only 1: rewrite sin_minus; only 1: field; only 1: split; only 1: easy; only 1: easy).	0.115807	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt31_step; only 1: case div31; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.070283	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	120	0.0	synth with cache (only 1: unfold map2; only 1: auto using map2_opt_avl, map_option_avl).	0.030549	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt312_step; only 1: case div3121; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.078385	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert rec ih il j; only 1: elim n; only 1: unfold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: apply H2; only 1: lia; only 1: rewrite Z.pow_0_r; only 1: lia; only 1: lia; only 1: unfold iter312_sqrt; only 1: fold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: lia; only 1: lia; only 1: lia; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H3; only 1: auto; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: lia; only 1: lia).	0.570343	63
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lor; only 1: unfold int31_ops; only 1: unfold lor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lor_nonneg; only 1: split; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: rewrite Z.log2_lor; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: easy).	0.060550	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.land; only 1: unfold int31_ops; only 1: unfold land31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.land_nonneg; only 1: left; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_land; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.min_lt_iff; only 1: left; only 1: apply log2_phi_bounded; only 1: easy).	0.085483	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lxor; only 1: unfold int31_ops; only 1: unfold lxor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lxor_nonneg; only 1: split; only 1: intros; only 1: apply phi_bounded; only 1: intros; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_lxor; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: easy).	0.064896	22
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).	0.032303	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	120	0	synth with cache (only 1: apply CReal_isRingExt).	0.020505	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	120	0	synth with cache (only 1: apply CReal_isRingExt).	0.023212	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.033892	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.037245	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.023588	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022893	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022691	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.025290	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.024737	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.040241	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	120	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.037230	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.071603	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.035345	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.033964	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.050630	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.049221	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.043183	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.046469	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.113592	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.096652	18
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction f; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: simpl; only 1: destruct @list_nth; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_mul_compat; only 1: rewrite IHf1; only 1: rewrite IHf2; only 1: ring; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: congruence; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity).	0.148282	67
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite H; only 1: reflexivity).	0.032527	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_base; only 1: reflexivity).	0.028307	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: reflexivity).	0.036193	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: easy; only 1: rewrite list_nth_succ; only 1: reflexivity).	0.028831	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite make_last_nth_1; only 1: rewrite list_nth_nil; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction j using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: induction i using Pos.peano_rect; only 1: elim H; only 1: auto; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: induction i using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: apply IHvar; only 1: zify; only 1: omega).	0.213351	34
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: apply make_last_nth_2; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction i using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: auto).	0.047614	16
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold seq; only 1: unfold selements; only 1: unfold LO.eq; only 1: intuition).	0.040867	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	120	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold slt; only 1: unfold selements; only 1: unfold LO.lt; only 1: intuition).	0.042952	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: unfold seq; only 1: rewrite Equivb_Equivb; only 1: rewrite Equivb_elements; only 1: auto using LO.eq_1).	0.072068	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_seq; only 1: unfold seq; only 1: apply LO.eq_refl).	0.034029	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: rewrite eq_seq; only 1: unfold seq; only 1: intros; only 1: apply LO.eq_sym; only 1: auto).	0.042319	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_slt; only 1: rewrite eq_seq; only 1: unfold slt; only 1: unfold seq; only 1: intros; only 1: apply LO.lt_not_eq; only 1: auto).	0.049205	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	120	0.0.0.0.0.0.0.0.1	synth with cache (only 1: generalize digits_ne_1; only 1: destruct digits; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: destruct 1; only 1: auto).	0.024582	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	120	0.0.0.0	synth with cache (only 1: apply Z.lt_gt; only 1: unfold wB; only 1: unfold base; only 1: auto with zarith).	0.025750	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	120	0	synth with cache (only 1: auto).	0.021870	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zdigits; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: apply Zpower2_lt_lin; only 1: auto with zarith).	0.024280	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	120	0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.029567	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	120	0	synth with cache (only 1: reflexivity).	0.024417	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq0; only 1: intros; only 1: destruct to_Z; only 1: easy; only 1: easy; only 1: easy).	0.035965	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: rewrite CReal_inv_l; only 1: reflexivity).	0.028349	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- CReal_mult_1_l; only 1: rewrite CReal_inv_r; only 1: reflexivity).	0.029838	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	0.032942	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.033307	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	120	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_min_distr; only 1: apply plus_max_distr_l).	0.029897	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	120	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_max_distr_r).	0.024195	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	120	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_max_distr; only 1: apply plus_min_distr_l).	0.033253	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	120	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_min_distr_r).	0.027860	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_trans).	0.027293	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity).	0.044023	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity).	0.033617	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.024378	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	120	0.0	synth with cache (only 1: pose proof gt_wB_1; only 1: lia).	0.025499	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Zmod_small; only 1: auto; only 1: split; only 1: auto with zarith; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.027128	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: assumption).	0.029750	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite <- Zplus_mod; only 1: easy).	0.061033	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: simpl; only 1: discriminate; only 1: intros ?; only 1: simpl; only 1: apply Qpower_pos_positive; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: apply Qinv_le_0_compat; only 1: apply Qpower_pos_positive; only 1: assumption).	0.029558	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).	0.058729	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: rewrite Qinv_mult_distr; only 1: reflexivity).	0.042568	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	120	0.0.0.0	synth with cache (only 1: zify; only 1: simpl BinIntDef.Z.add; only 1: rewrite one_mod_wB; only 1: auto).	0.032156	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	120	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.041489	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity).	0.032095	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	120	0	synth with cache (only 1: reflexivity).	0.025440	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.027604	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_power; only 1: rewrite Qinv_power; only 1: reflexivity).	0.030166	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Qmake_Qdiv; only 1: rewrite Qdiv_power; only 1: rewrite Qpower_1; only 1: unfold Qdiv; only 1: ring).	0.042366	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qpower_positive; only 1: apply pow_pos_add; only 1: apply Q_Setoid; only 1: apply Qmult_comp; only 1: apply Qmult_assoc).	0.025519	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: apply Qinv_involutive).	0.027465	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply NZ_to_Z_mod).	0.038782	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.sub_0_r; only 1: apply NZ_to_Z_mod).	0.037849	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_mult_lt_reg_l in H1; only 1: contradiction; only 1: apply H).	0.028171	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_ind; only 1: reflexivity; only 1: rewrite Pos.mul_succ_l; only 1: rewrite <- Pos.add_1_l; only 1: rewrite Qpower_plus_positive; only 1: rewrite Qpower_plus_positive; only 1: rewrite IHn; only 1: rewrite Qmult_power_positive; only 1: reflexivity).	0.046411	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: rewrite Qinv_involutive; only 1: reflexivity).	0.071821	36
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite Z.pow_1_r; only 1: rewrite Pos.pow_1_r; only 1: easy).	0.121917	38
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0).	0.138641	17
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply -> @Decidable_spec; only 1: assumption).	0.025085	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply <- @Decidable_spec; only 1: assumption).	0.024595	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct Decidable_witness; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.031622	9
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: simpl in *; only 1: intuition congruence).	0.030093	7
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	120	0	synth with cache (only 1: apply Pos.eqb_eq).	0.019156	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	120	0	synth with cache (only 1: apply Pos.ltb_lt).	0.020802	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.leb; only 1: unfold Pos.le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.042936	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	120	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: discriminate; only 1: constructor; only 1: discriminate; only 1: inversion 1; only 1: trivial).	0.034428	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert n; only 1: induction p; only 1: unfold valid_dec in *; only 1: intuition; only 1: unfold valid_dec in *; only 1: intuition; only 1: bool; only 1: try_decide; only 1: auto; only 1: intros ?; only 1: induction H; only 1: unfold valid_dec in *; only 1: auto; only 1: unfold valid_dec in *; only 1: bool; only 1: try_decide; only 1: auto; only 1: try_decide; only 1: auto; only 1: auto; only 1: auto).	0.176311	22
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: eapply valid_le_compat; only 1: eauto; only 1: lia).	0.037535	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	0.024267	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	120	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy).	0.059211	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy).	0.049719	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	120	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy).	0.039361	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy).	0.047964	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy).	0.059735	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.082511	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: exact add_0_l; only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy; only 1: exact mul_1_l; only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy; only 1: symmetry; only 1: apply add_opp_r; only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.234268	54
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	120	0	synth with cache (only 1: apply eqb_eq).	0.027085	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	120	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.027032	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.032640	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.042799	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor).	0.108923	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.085868	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.081886	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.109823	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.064904	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.075861	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_PI; only 1: easy; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	0.086723	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: rewrite cos_PI2; only 1: easy; only 1: intropattern subst -> H1; only 1: rewrite cos_3PI2; only 1: easy).	0.086124	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.024387	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.032701	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.177365	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.037381	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.021226	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.034260	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	120	0	synth with cache (only 1: auto with set).	0.021099	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	120	0	synth with cache (only 1: auto with set).	0.028134	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	120	1	synth with cache (only 1: auto with set relations).	0.076888	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	120	1	synth with cache (only 1: apply add_neq_b).	0.021703	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	120	1.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.024808	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	120	1	synth with cache (only 1: apply remove_neq_b).	0.053830	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	120	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.056913	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	120	0	synth with cache (only 1: apply union_b).	0.021922	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	120	0	synth with cache (only 1: apply inter_b).	0.021339	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	120	0	synth with cache (only 1: apply diff_b).	0.022145	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.022198	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.024962	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	120	0	synth with cache (only 1: auto with set).	0.025544	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.034413	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	120	0	synth with cache (only 1: auto with set).	0.022188	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	120	0	synth with cache (only 1: auto with set).	0.021709	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	120	0	synth with cache (only 1: auto with set).	0.027310	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.049501	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	120	0	synth with cache (only 1: auto with set).	0.038356	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	120	0	synth with cache (only 1: auto with set).	0.024099	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	120	0	synth with cache (only 1: auto with set).	0.023057	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.028805	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.028405	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.028398	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	120	1	synth with cache (only 1: auto with set relations).	0.031968	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.032488	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.023551	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	120	0	synth with cache (only 1: auto with set).	0.025859	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: auto with set).	0.034284	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	120	0	synth with cache (only 1: auto with set).	0.032559	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	120	0	synth with cache (only 1: auto with set).	0.055014	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	120	0	synth with cache (only 1: auto with set).	0.046193	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: auto with set).	0.025167	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	120	0	synth with cache (only 1: auto with set).	0.027444	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	120	0	synth with cache (only 1: auto with set).	0.033675	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	120	0	synth with cache (only 1: auto with set).	0.027348	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.041080	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	120	0	synth with cache (only 1: auto with set).	0.025798	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: auto with set).	0.029915	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: auto with set).	0.025042	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: auto with set).	0.025319	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	120	0	synth with cache (only 1: auto with set).	0.023999	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	120	0	synth with cache (only 1: auto with set).	0.027466	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	120	0	synth with cache (only 1: auto with set).	0.024562	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	120	0	synth with cache (only 1: auto with set).	0.027331	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.038059	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: auto with set).	0.039650	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: auto with set).	0.038730	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.051152	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	120	0	synth with cache (only 1: auto with set).	0.029204	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: auto with set).	0.033105	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	120	0	synth with cache (only 1: auto with set).	0.028637	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	120	0	synth with cache (only 1: auto with set).	0.026012	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: auto with set).	0.028827	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.067253	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	120	0	synth with cache (only 1: apply fold_empty).	0.024523	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	120	0	synth with cache (only 1: auto with set).	0.024106	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.026713	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.024924	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.024343	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.029540	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	120	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.029445	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.028481	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	120	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.025892	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	120	0	synth with cache (only 1: auto with set).	0.025963	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	120	0	synth with cache (only 1: auto with set).	0.025703	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.111160	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.106560	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.095727	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.041257	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.056581	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.029868	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	120	0.0	synth with cache (only 1: intros; only 1: apply Zgcdn_pos).	0.026063	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.033567	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.065318	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	120	0.0.0.0	synth with cache (only 1: unfold Zgcd_alt; only 1: intros; only 1: apply Zgcdn_is_gcd; only 1: auto).	0.027382	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.026291	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.025273	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.022026	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.022157	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_mul; only 1: auto).	0.199210	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_l; only 1: auto).	0.026589	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_r; only 1: auto).	0.025915	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	120	0	synth with cache (only 1: apply Z.rem_opp_l').	0.021180	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	120	0	synth with cache (only 1: apply Z.rem_opp_r').	0.022317	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_opp; only 1: auto).	0.029215	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_opp_opp; only 1: auto).	0.031059	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	120	0.0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.square_nonneg; only 1: apply Z.rem_sign_mul; only 1: auto).	0.031276	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_pos; only 1: lia; only 1: lia).	0.031964	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_lt; only 1: lia; only 1: lia).	0.028668	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.quot_le_mono; only 1: lia; only 1: lia).	0.032616	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_le; only 1: auto with zarith; only 1: auto with zarith).	0.030655	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_ge; only 1: auto with zarith; only 1: auto with zarith).	0.029035	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_exact; only 1: auto).	0.029330	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.rem_le; only 1: lia; only 1: lia).	0.058816	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_upper_bound).	0.030903	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_lt_upper_bound).	0.027288	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_lower_bound).	0.027410	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.rem_add; only 1: auto with zarith; only 1: auto with zarith).	0.032730	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add; only 1: auto with zarith; only 1: auto with zarith).	0.031647	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add_l; only 1: auto with zarith; only 1: auto with zarith).	0.028864	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	0.032060	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.rem_rem; only 1: auto).	0.031601	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem; only 1: auto).	0.034175	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem; only 1: auto; only 1: auto).	0.040732	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_l; only 1: auto; only 1: auto).	0.033984	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_r; only 1: auto; only 1: rewrite Z.mul_comm; only 1: auto).	0.040362	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_l; only 1: auto).	0.066063	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_r; only 1: auto).	0.033214	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_quot; only 1: auto; only 1: auto).	0.040749	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.038445	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: firstorder; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: auto).	0.061430	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: simpl; only 1: left; only 1: simpl; only 1: auto with zarith; only 1: left; only 1: destruct p; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: right; only 1: destruct p; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	0.156125	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.031611	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_even; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.041086	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.035747	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.036128	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	120	1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zdiv_mod_unique with b; only 1: apply Zrem_lt_pos; only 1: auto with zarith; only 1: lia; only 1: rewrite Z.abs_eq; only 1: apply Z_mod_lt; only 1: lia; only 1: lia; only 1: rewrite <- Z_div_mod_eq; only 1: symmetry; only 1: apply Z.quot_rem; only 1: lia; only 1: lia).	0.057870	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.035221	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zrem_divides; only 1: rewrite Zmod_divides; only 1: intuition; only 1: auto).	0.033655	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.033732	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.036829	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold succ; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.032736	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: unfold to_Z; only 1: apply Zplus_mod).	0.032340	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pred; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- Zplus_mod_idemp_l; only 1: auto).	0.034175	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold sub; only 1: unfold to_Z; only 1: apply Zminus_mod).	0.032451	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul; only 1: unfold to_Z; only 1: apply Zmult_mod).	0.029920	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	120	0.0.0	synth with cache (only 1: intros; only 1: apply spec_div; only 1: auto).	0.045965	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	120	0.0.0	synth with cache (only 1: intros; only 1: apply spec_modulo; only 1: auto).	0.046023	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	120	0.0	synth with cache (only 1: intros; only 1: apply spec_gcd).	0.034472	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	120	0.0.0	synth with cache (only 1: intros; only 1: unfold add_mul_div; only 1: auto).	0.037445	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold two_p; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply two_power_pos_correct; only 1: simpl; only 1: auto).	0.048318	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	120	0.0.0.0.0	synth with cache (only 1: unfold head0; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply spec_zdigits).	0.037466	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	120	0.0.0.0	synth with cache (only 1: unfold tail0; only 1: intros; only 1: rewrite H; only 1: apply spec_zdigits).	0.039939	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_r; only 1: easy; only 1: easy).	0.026166	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	120	0	synth with cache (only 1: apply Z.pow_gt_1).	0.020147	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	120	0.0	synth with cache (only 1: intros; only 1: apply Z.pow_mul_l).	0.021650	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_l; only 1: easy).	0.024000	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: lia).	0.022966	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: lia).	0.028090	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Zpow_mod_pos_correct; only 1: auto with zarith; only 1: simpl; only 1: trivial).	0.027856	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: pattern i; only 1: apply natlike_ind; only 1: simpl; only 1: apply rel_prime_sym; only 1: apply rel_prime_1; only 1: clear i H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.pow_succ_r; only 1: apply rel_prime_mult; only 1: auto; only 1: auto; only 1: auto; only 1: auto with zarith).	0.029911	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: easy).	0.028327	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.033923	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.030954	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.031640	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x0; only 1: apply q).	0.030244	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	120	1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	0.025131	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.031703	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.027066	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.029115	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.039649	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	120	0.0.0.0	synth with cache (only 1: split; only 1: exact CRealEq_refl; only 1: exact CRealEq_sym; only 1: exact CRealEq_trans).	0.029199	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.111413	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CRealLt_morph; only 1: assumption; only 1: assumption).	0.028768	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.017602	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.023466	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	120	0	synth with cache (only 1: auto with set).	0.017064	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	120	0	synth with cache (only 1: auto with set).	0.019866	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	120	0	synth with cache (only 1: auto with set).	0.021154	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	120	1	synth with cache (only 1: apply add_neq_b).	0.019484	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.022562	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	120	1	synth with cache (only 1: apply remove_neq_b).	0.019233	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	120	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.022841	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	120	0	synth with cache (only 1: apply union_b).	0.018927	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	120	0	synth with cache (only 1: apply inter_b).	0.017089	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	120	0	synth with cache (only 1: apply diff_b).	0.019127	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.019060	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.022991	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	120	0	synth with cache (only 1: auto with set).	0.020328	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.027521	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: exact c; only 1: right; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact c; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite H0; only 1: rewrite H; only 1: exact c; only 1: right; only 1: rewrite H0; only 1: rewrite H; only 1: exact c).	0.584541	22
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	120	0	synth with cache (only 1: auto with set fset).	0.025040	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	120	0	synth with cache (only 1: auto with set).	0.026759	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	120	0	synth with cache (only 1: auto with set).	0.033330	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.071356	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	120	0	synth with cache (only 1: auto with set).	0.020500	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	120	0	synth with cache (only 1: auto with set).	0.023290	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	120	0	synth with cache (only 1: auto with set).	0.026047	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.025652	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.023343	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.028014	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	120	0	synth with cache (only 1: auto with set).	0.028055	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.045363	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.042139	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	120	0	synth with cache (only 1: auto with set).	0.018621	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact H1; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite H0; only 1: rewrite H; only 1: exact H1).	0.365739	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: auto with set).	0.028276	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	120	0	synth with cache (only 1: auto with set).	0.025687	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	120	0	synth with cache (only 1: auto with set).	0.024219	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	120	0	synth with cache (only 1: auto with set).	0.023316	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: auto with set).	0.024488	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	120	0	synth with cache (only 1: auto with set).	0.024692	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	120	0	synth with cache (only 1: auto with set).	0.022692	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	120	0	synth with cache (only 1: auto with set).	0.023623	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.042125	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	120	0	synth with cache (only 1: auto with set).	0.029355	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: auto with set).	0.034677	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: auto with set).	0.032411	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: auto with set).	0.033588	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	120	0	synth with cache (only 1: auto with set).	0.032313	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	120	0	synth with cache (only 1: auto with set).	0.034559	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	120	0	synth with cache (only 1: auto with set).	0.034938	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	120	0	synth with cache (only 1: auto with set).	0.033938	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.037181	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: auto with set).	0.030983	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: auto with set).	0.023481	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.035199	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CRealGe; only 1: apply CRealLe_morph; only 1: assumption; only 1: assumption).	0.024535	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	120	0	synth with cache (only 1: auto with set).	0.023685	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: auto with set).	0.031607	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	120	0	synth with cache (only 1: auto with set).	0.027036	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	120	0	synth with cache (only 1: auto with set).	0.026091	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: auto with set).	0.025530	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: unfold Qlt; only 1: simpl; only 1: unfold Z.lt; only 1: auto).	0.037114	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.124574	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	120	0	synth with cache (only 1: apply fold_empty).	0.020275	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	120	0	synth with cache (only 1: auto with set fset).	0.023229	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.034360	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.036055	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.021413	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.024761	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	120	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.023555	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.079933	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.023710	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	120	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.021915	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.077666	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: easy).	0.034335	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zify; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_1_l; only 1: easy).	0.059470	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	120	0	synth with cache (only 1: auto with set).	0.023754	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	120	0	synth with cache (only 1: auto with set).	0.028127	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.051513	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.108249	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.087521	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.100587	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.044037	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.047280	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	120	0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool in *; only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.051007	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.035896	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sum; only 1: apply fold_compat; only 1: auto with fset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: auto with fset).	0.110754	37
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.025283	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto).	0.033264	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: eauto; only 1: unfold In0; only 1: apply In_MapsTo).	0.023853	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type).	0.115841	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	120	0	synth with cache (only 1: intuition_in).	0.096625	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	120	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in).	0.035780	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	120	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intros; only 1: intuition_in).	0.031538	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	120	0.0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: order).	0.068505	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	120	0	synth with cache (only 1: intuition_in).	0.040182	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	120	0	synth with cache (only 1: intuition_in).	0.023144	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	120	0	synth with cache (only 1: intuition_in).	0.027951	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	120	0	synth with cache (only 1: intuition_in).	0.026706	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.041119	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.038410	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.025560	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	120	0.0.0	synth with cache (only 1: unfold empty; only 1: unfold Empty; only 1: intuition_in).	0.068641	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using find_1, find_2; only 1: auto using find_1, find_2).	0.026416	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using find_in, in_find; only 1: auto using find_in, in_find).	0.028559	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct find; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: split).	0.083340	36
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_find; only 1: split; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite <- find_iff; only 1: rewrite <- find_iff; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite find_iff; only 1: rewrite find_iff; only 1: auto; only 1: auto; only 1: auto).	0.069374	23
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply find_in; only 1: rewrite <- H1; only 1: apply in_find; only 1: auto; only 1: auto; only 1: intros; only 1: apply find_in; only 1: rewrite H1; only 1: apply in_find; only 1: auto; only 1: auto).	0.041683	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.030171	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.076436	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite find_mapsto_equiv; only 1: intros; only 1: apply bal_mapsto; only 1: auto; only 1: auto).	0.049450	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	120	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.023278	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.030396	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.041547	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.215522	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor).	0.124636	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.066657	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.067796	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.073487	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.309260	34
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.061702	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.066775	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_in; only 1: intuition; only 1: intuition).	0.044850	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: inv bst; only 1: rewrite merge_mapsto; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.276997	33
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: simpl; only 1: auto; only 1: auto; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.lt_eq with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.eq_lt with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.356826	33
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_1 in H0; only 1: intuition; only 1: intuition).	0.039735	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_2 in H0; only 1: intuition; only 1: intuition).	0.043494	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold L.PX.In; only 1: rewrite <- In_alt; only 1: unfold In0; only 1: firstorder; only 1: exists x0; only 1: rewrite <- elements_mapsto; only 1: auto; only 1: exists x0; only 1: unfold L.PX.MapsTo; only 1: rewrite elements_mapsto; only 1: auto).	0.063502	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	120	0	synth with cache (only 1: exact Z.eq_equiv).	0.017005	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Zsth; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: apply Zsth; only 1: exact Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: exact Z.mul_1_r; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: intros; only 1: apply Z.mul_add_distr_l; only 1: solve_proper; only 1: exact Z.sub_diag).	0.317901	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.043545	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.047811	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: rewrite app_assoc_reverse; only 1: auto).	0.074311	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	120	0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: reflexivity).	0.058151	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_equiv; only 1: unfold fold'; only 1: rewrite L.fold_1; only 1: unfold L.elements; only 1: auto).	0.052285	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	120	0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite Zdiv_1_r; only 1: auto).	0.067076	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	120	0.0	synth with cache (only 1: intros; only 1: apply elements_node).	0.046453	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: destruct X.compare; only 1: auto; only 1: rewrite <- andb_lazy_alt; only 1: f_equal; only 1: auto; only 1: auto).	0.085307	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	120	0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite to_Z_0; only 1: rewrite Z.mul_1_r; only 1: apply Zmod_small; only 1: apply to_Z_bounded).	0.070508	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	120	0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_add; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.067002	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case b; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: auto; only 1: auto; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr0; only 1: rewrite lsl0; only 1: rewrite andb_false_r; only 1: auto).	0.079055	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.063177	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	120	0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_M_r; only 1: auto; only 1: auto).	0.058175	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: split; only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: clear H; only 1: fsetdec; only 1: intros; only 1: fsetdec).	0.182766	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	120	0	synth with cache (only 1: fsetdec).	0.031841	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	120	0	synth with cache (only 1: fsetdec).	0.041328	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	120	0	synth with cache (only 1: fsetdec).	0.046147	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	120	0	synth with cache (only 1: fsetdec).	0.022286	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	120	0	synth with cache (only 1: fsetdec).	0.041264	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	120	0	synth with cache (only 1: fsetdec).	0.038376	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	120	0	synth with cache (only 1: fsetdec).	0.032344	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	120	0	synth with cache (only 1: fsetdec).	0.031361	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	120	0	synth with cache (only 1: fsetdec).	0.041493	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	120	0	synth with cache (only 1: fsetdec).	0.045293	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	120	0	synth with cache (only 1: fsetdec).	0.067391	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	120	0	synth with cache (only 1: fsetdec).	0.039385	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	120	0	synth with cache (only 1: fsetdec).	0.042812	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	120	0	synth with cache (only 1: fsetdec).	0.049745	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	120	0	synth with cache (only 1: fsetdec).	0.045835	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite lor_spec; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.072528	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	120	0	synth with cache (only 1: fsetdec).	0.074124	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	120	0	synth with cache (only 1: fsetdec).	0.088018	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	120	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.068305	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	120	0	synth with cache (only 1: fsetdec).	0.107381	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	120	0	synth with cache (only 1: fsetdec).	0.120491	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	120	0	synth with cache (only 1: fsetdec).	0.122237	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	120	0	synth with cache (only 1: fsetdec).	0.073968	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	120	0	synth with cache (only 1: fsetdec).	0.077481	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.067668	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	120	0	synth with cache (only 1: fsetdec).	0.095656	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	120	0	synth with cache (only 1: fsetdec).	0.097522	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: fsetdec).	0.094555	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	120	0	synth with cache (only 1: fsetdec).	0.031327	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	120	0	synth with cache (only 1: fsetdec).	0.036052	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	120	0	synth with cache (only 1: apply @eq_refl).	0.071184	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	120	0	synth with cache (only 1: fsetdec).	0.051986	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	120	0	synth with cache (only 1: fsetdec).	0.048465	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	120	0.0.0	synth with cache (only 1: rewrite is_even_bit; only 1: rewrite bit_lsl; only 1: auto).	0.085963	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	120	0	synth with cache (only 1: fsetdec).	0.055216	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	120	0	synth with cache (only 1: fsetdec).	0.056815	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	120	0	synth with cache (only 1: fsetdec).	0.062443	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	120	0	synth with cache (only 1: fsetdec).	0.058472	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	120	0	synth with cache (only 1: fsetdec).	0.075077	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.063259	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: fsetdec).	0.083727	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: fsetdec).	0.097121	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	120	0	synth with cache (only 1: fsetdec).	0.117171	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.021190	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	120	0	synth with cache (only 1: fsetdec).	0.111471	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	120	0	synth with cache (only 1: fsetdec).	0.045032	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	120	0	synth with cache (only 1: fsetdec).	0.050541	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: fsetdec).	0.031348	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: fsetdec).	0.035176	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	120	0	synth with cache (only 1: fsetdec).	0.057926	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	120	0	synth with cache (only 1: fsetdec).	0.054017	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	120	0	synth with cache (only 1: fsetdec).	0.064889	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt2_step; only 1: case diveucl_21; only 1: intros; only 1: simpl; only 1: case addc; only 1: trivial; only 1: trivial).	0.090726	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	120	0	synth with cache (only 1: fsetdec).	0.038394	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.098687	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	120	0	synth with cache (only 1: fsetdec).	0.114437	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: fsetdec).	0.120490	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	120	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.127694	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.020252	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.058240	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.022493	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.023583	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.025015	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.022515	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.021779	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	120	0	synth with cache (only 1: exact Equal_cardinal).	0.021675	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	120	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.025667	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	0.044640	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	120	0	synth with cache (only 1: auto with set).	0.022302	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	0.045488	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	120	0	synth with cache (only 1: auto with real).	0.039253	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	120	0	synth with cache (only 1: auto with real).	0.036663	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	120	0	synth with cache (only 1: auto with set).	0.021823	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.053181	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	120	0	synth with cache (only 1: auto using Rmult_integral_contrapositive).	0.048652	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	120	1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.149214	70
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.030726	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	120	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.038158	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	120	1	synth with cache (only 1: auto with real).	0.037942	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	120	0	synth with cache (only 1: ring).	0.039863	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.040663	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.041181	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044857	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- compare_gt_iff; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: intuition).	0.110053	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.059129	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold gtb; only 1: rewrite H; only 1: auto).	0.039344	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.041614	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: rewrite H; only 1: auto).	0.031780	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044504	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: symmetry; only 1: apply Z.mod_small; only 1: split; only 1: lia; only 1: exact H0; only 1: lia; only 1: lia).	0.128641	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.083208	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: easy; only 1: auto; only 1: simpl; only 1: unfold of_pos; only 1: rewrite opp_spec; only 1: rewrite of_pos_rec_spec; only 1: fold wB; only 1: rewrite <- Z.sub_0_l; only 1: rewrite Zminus_mod_idemp_r; only 1: easy; only 1: auto).	0.084488	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.048579	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.038804	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: apply negb_involutive).	0.067893	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.044546	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.045019	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	120	0.0.0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: case BinIntDef.Z.odd; only 1: reflexivity; only 1: reflexivity).	0.070848	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.045958	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	120	0.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: case BinIntDef.Z.even; only 1: reflexivity; only 1: reflexivity).	0.089816	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.043209	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044939	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.048244	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.072954	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: ring).	0.071961	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.075053	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.027808	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	120	0	synth with cache (only 1: field).	0.055892	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.024328	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.069480	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.060171	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.084264	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_comm; only 1: auto).	0.085180	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_assoc; only 1: auto).	0.083893	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	120	0	synth with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.054466	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	120	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.074436	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	120	0.0.0.0.0.0	synth with cache (only 1: rewrite landC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.077244	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_comm; only 1: auto).	0.082558	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_assoc; only 1: auto).	0.088119	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	120	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.086008	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	120	0.0.0.0.0.0	synth with cache (only 1: rewrite lorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.087251	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_comm; only 1: auto).	0.088354	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_assoc_reverse; only 1: auto).	0.086912	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.081849	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite lxorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.088360	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.031766	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	120	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.148420	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.046864	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.026097	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.027501	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.082473	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.082679	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.047250	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.074272	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.090254	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.094739	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: split; only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: clear H; only 1: fsetdec; only 1: intros; only 1: fsetdec).	0.153832	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	120	0	synth with cache (only 1: fsetdec).	0.023014	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	120	0	synth with cache (only 1: fsetdec).	0.035421	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	120	0	synth with cache (only 1: fsetdec).	0.053926	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	120	0	synth with cache (only 1: fsetdec).	0.023105	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	120	0	synth with cache (only 1: fsetdec).	0.038990	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	120	0	synth with cache (only 1: fsetdec).	0.047057	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	120	0	synth with cache (only 1: fsetdec).	0.031798	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	120	0	synth with cache (only 1: fsetdec).	0.024399	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	120	0	synth with cache (only 1: fsetdec).	0.049181	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	120	0	synth with cache (only 1: fsetdec).	0.050953	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	120	0	synth with cache (only 1: fsetdec).	0.060346	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	120	0	synth with cache (only 1: fsetdec).	0.050820	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	120	0	synth with cache (only 1: fsetdec).	0.036399	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	120	0	synth with cache (only 1: fsetdec).	0.051055	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	120	0	synth with cache (only 1: fsetdec).	0.053524	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	120	0	synth with cache (only 1: fsetdec).	0.065331	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	120	0	synth with cache (only 1: fsetdec).	0.091356	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	120	0	synth with cache (only 1: fsetdec).	0.103958	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	120	0	synth with cache (only 1: fsetdec).	0.075777	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	120	0	synth with cache (only 1: fsetdec).	0.083751	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.059366	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	120	0	synth with cache (only 1: fsetdec).	0.089011	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	120	0	synth with cache (only 1: fsetdec).	0.082973	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: fsetdec).	0.100697	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: subst; only 1: compute; only 1: intuition congruence; only 1: intros; only 1: destruct H; only 1: apply Z.le_antisymm; only 1: auto; only 1: auto).	0.027998	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Zle_minus_le_0; only 1: auto; only 1: intros; only 1: apply Zle_0_minus_le; only 1: auto).	0.023745	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: trivial; only 1: auto; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: trivial; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Zeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy; only 1: apply Zle_bool_imp_le).	0.056142	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	120	0	synth with cache (only 1: fsetdec).	0.033453	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	120	0	synth with cache (only 1: fsetdec).	0.029807	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	120	0	synth with cache (only 1: fsetdec).	0.048983	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	120	0	synth with cache (only 1: fsetdec).	0.046152	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	120	0	synth with cache (only 1: fsetdec).	0.046907	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	120	0	synth with cache (only 1: fsetdec).	0.067500	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	120	0	synth with cache (only 1: reflexivity).	0.024279	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	120	0	synth with cache (only 1: fsetdec).	0.072199	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	120	0	synth with cache (only 1: fsetdec).	0.050872	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	120	0	synth with cache (only 1: fsetdec).	0.070009	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.066084	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: fsetdec).	0.085004	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: fsetdec).	0.075937	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	120	0	synth with cache (only 1: fsetdec).	0.113773	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	120	0	synth with cache (only 1: fsetdec).	0.116514	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	120	0	synth with cache (only 1: fsetdec).	0.046104	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	120	0	synth with cache (only 1: fsetdec).	0.060226	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: fsetdec).	0.031225	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: fsetdec).	0.029627	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	120	0	synth with cache (only 1: fsetdec).	0.043848	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	120	0	synth with cache (only 1: fsetdec).	0.055278	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	120	0	synth with cache (only 1: fsetdec).	0.061517	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	120	0	synth with cache (only 1: fsetdec).	0.034701	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.089575	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	120	0	synth with cache (only 1: fsetdec).	0.107937	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: fsetdec).	0.111472	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	120	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.120675	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: constructor; only 1: apply Z.divide_trans with (1 := H0); only 1: assumption; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	0.050200	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.019132	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.032805	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply max_var_nformulae_correct_aux).	0.042054	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.022494	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.021687	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.024440	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.060052	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.061457	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.052216	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold agree_env; only 1: intros ?; only 1: intros; only 1: unfold Env.jump; only 1: apply H; only 1: apply Pos.add_le_mono_r; only 1: auto).	0.046069	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.021976	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Env.tail; only 1: apply agree_env_jump; only 1: rewrite <- Pos.add_1_r in H; only 1: apply H).	0.061063	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	120	1	synth with cache (only 1: exact Equal_cardinal).	0.021551	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	120	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.023803	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	120	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.042082	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	120	0	synth with cache (only 1: auto with set fset).	0.026512	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	120	0	synth with cache (only 1: auto with set fset).	0.024079	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.030412	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: ME.order; only 1: intuition; only 1: discriminate; only 1: ME.order; only 1: intuition).	0.145630	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: ME.order; only 1: intuition; only 1: ME.order; only 1: intuition).	0.076520	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.027443	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.035595	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.026807	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: destruct Qnum; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto).	0.052049	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Qred_abs; only 1: rewrite H; only 1: easy).	0.020333	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	120	0	synth with cache (only 1: apply Qabs_nonneg).	0.016031	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	120	0.0.0.0	synth with cache (only 1: Qc_unfolds; only 1: case Qred_abs; only 1: rewrite Qred_le; only 1: apply Qabs_triangle).	0.026936	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	120	0	synth with cache (only 1: apply Qle_Qabs).	0.018727	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Qabs_case; only 1: auto; only 1: apply Qopp_le_compat).	0.022250	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.026410	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: simpl; only 1: rewrite Z.abs_mul; only 1: reflexivity).	0.031920	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: unfold Qinv; only 1: case_eq Qnum; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl).	0.040749	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qminus; only 1: unfold Qopp; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite <- Z.abs_opp; only 1: f_equal; only 1: f_equal; only 1: ring).	0.051697	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: ring; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Qeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy; only 1: apply Qle_bool_imp_le).	0.063973	24
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeval_formula; only 1: destruct f; only 1: rewrite Qeval_expr_compat; only 1: rewrite Qeval_expr_compat; only 1: unfold Qeval_formula'; only 1: unfold Qeval_expr'; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.100126	34
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	120	0.0.0	synth with cache (only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl).	0.017196	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.023914	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CReq_refl; only 1: intros ?; only 1: intros ?; only 1: apply CReq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReq_trans).	0.024157	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_l in H0; only 1: apply H; only 1: exact H0).	0.026613	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_r in H0; only 1: apply H; only 1: exact H0).	0.028889	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_l; only 1: exact H0).	0.025270	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_r; only 1: exact H0).	0.024775	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_l in H1; only 1: contradiction; only 1: exact H).	0.027357	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_r in H1; only 1: contradiction; only 1: exact H).	0.055697	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Qred_identity2; only 1: auto; only 1: intros; only 1: apply Qred_identity; only 1: auto).	0.022478	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: rewrite H; only 1: easy).	0.022206	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.019253	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: rewrite <- Qeq_alt; only 1: split; only 1: intros ?; only 1: intropattern subst <- H; only 1: auto with qarith; only 1: auto).	0.029252	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	120	0.0.0	synth with cache (only 1: unfold Q2Qc; only 1: intros ?; only 1: discriminate H).	0.021778	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_l).	0.024451	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_r).	0.028963	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_comm).	0.026665	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qopp_involutive).	0.026601	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.036969	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_assoc).	0.034648	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: split).	0.036525	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.064402	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_l).	0.033232	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_r).	0.034257	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: apply Z.opp_lt_mono).	0.053092	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_comm).	0.031742	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: zero_or_not z; only 1: apply Z.div_1_r).	0.022321	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_r).	0.044956	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Qceiling; only 1: simpl; only 1: rewrite Z.div_1_r; only 1: apply Z.opp_involutive).	0.020331	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l).	0.046697	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	120	0	synth with cache (only 1: eauto with qarith).	0.026198	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.038397	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.040938	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qinv_mult_distr).	0.043239	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with qarith).	0.020281	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_r; only 1: apply Qcmult_1_r; only 1: auto).	0.032036	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.037153	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	0.029013	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	120	0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_refl).	0.029758	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.046156	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qc_is_canon; only 1: apply Qle_antisym; only 1: auto; only 1: auto).	0.032684	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_le_weak; only 1: auto).	0.032317	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_lt_le; only 1: auto).	0.024610	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_le_lt; only 1: auto).	0.025065	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_not_le; only 1: auto).	0.058169	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qle_not_lt; only 1: auto).	0.052521	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	120	0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: apply Qlt_le_dec).	0.027474	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qopp_le_compat; only 1: auto).	0.042688	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qle_minus_iff).	0.047428	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcplus; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qlt_minus_iff).	0.058267	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcplus; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qplus_le_compat; only 1: auto; only 1: auto).	0.050012	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto).	0.068138	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct in *; only 1: rewrite Qred_correct in *; only 1: eapply Qmult_lt_compat_r; only 1: eauto; only 1: eauto).	0.058747	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Qc_eq_bool; only 1: case Qc_eq_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear n; only 1: inversion H).	0.049818	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: exact Qcmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.132351	24
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Qcrt; only 1: exact Q_apart_0_1; only 1: reflexivity; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.059663	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	120	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.022237	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	120	0	synth with cache (only 1: fsetdec).	0.076240	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	120	0	synth with cache (only 1: fsetdec).	0.108003	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	120	0	synth with cache (only 1: fsetdec).	0.023830	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	120	0	synth with cache (only 1: fsetdec).	0.056739	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	120	0	synth with cache (only 1: fsetdec).	0.055342	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	120	0	synth with cache (only 1: fsetdec).	0.088708	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	120	0	synth with cache (only 1: fsetdec).	0.114115	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	120	0	synth with cache (only 1: fsetdec).	0.111635	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	120	0	synth with cache (only 1: fsetdec).	0.064311	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	120	0	synth with cache (only 1: fsetdec).	0.079803	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	120	0.0.0.0	synth with cache (only 1: intros until 3; only 1: intros ?; only 1: rewrite <- H2; only 1: fsetdec).	0.078131	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	120	0	synth with cache (only 1: fsetdec).	0.052117	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	120	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.017715	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	120	0	synth with cache (only 1: fsetdec).	0.076683	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	120	0	synth with cache (only 1: fsetdec).	0.083082	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	120	0	synth with cache (only 1: fsetdec).	0.027837	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	120	0	synth with cache (only 1: fsetdec).	0.053676	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	120	0	synth with cache (only 1: fsetdec).	0.063833	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	120	0	synth with cache (only 1: fsetdec).	0.085187	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	120	0	synth with cache (only 1: fsetdec).	0.108569	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.042122	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	120	0	synth with cache (only 1: fsetdec).	0.109402	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: split; only 1: auto; only 1: auto; only 1: intros; only 1: destruct o; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: auto).	0.053089	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	120	0	synth with cache (only 1: fsetdec).	0.071363	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply MapsTo_1; only 1: auto; only 1: apply MapsTo_1; only 1: auto).	0.028264	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.022828	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.034199	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply find_1; only 1: apply find_2).	0.021162	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros ?; only 1: elim H; only 1: exists e; only 1: auto; only 1: discriminate; only 1: intros; only 1: intros ?; only 1: destruct H0; only 1: rewrite find_mapsto_iff in H0; only 1: rewrite H in H0; only 1: discriminate).	0.039233	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_find_in_iff; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.114491	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.020370	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: intuition).	0.028381	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.027533	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	120	0	synth with cache (only 1: fsetdec).	0.071405	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	0.024825	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	120	0.0.0.0	synth with cache (only 1: intros until 3; only 1: intros ?; only 1: rewrite <- H2; only 1: fsetdec).	0.086292	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	120	0	synth with cache (only 1: fsetdec).	0.055005	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.033774	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.026604	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_1; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_2; only 1: auto).	0.034173	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).	0.033270	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite empty_mapsto_iff; only 1: intuition; only 1: easy).	0.085821	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	120	0	synth with cache (only 1: auto with map).	0.025011	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	120	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	0.041791	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.030103	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite add_eq_o; only 1: auto; only 1: auto).	0.026152	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).	0.036328	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.043036	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	120	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition; only 1: easy; only 1: easy).	0.069435	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	120	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_neq_mapsto_iff; only 1: intuition; only 1: intuition).	0.043727	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.030367	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto).	0.028800	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	0.035024	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: auto; only 1: auto).	0.043291	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite map_o; only 1: destruct find; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.040405	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: auto).	0.132050	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold Equiv; only 1: unfold Cmp; only 1: intuition; only 1: red in H; only 1: rewrite H; only 1: eauto; only 1: red in H; only 1: rewrite <- H; only 1: eauto).	0.106963	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Equal_Equiv; only 1: apply Equiv_Equivb; only 1: auto).	0.030097	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_Equivb; only 1: unfold cmp; only 1: clear cmp; only 1: intros; only 1: destruct eq_elt_dec; only 1: intuition; only 1: intuition; only 1: easy).	0.057363	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	120	0.0	synth with cache (only 1: red; only 1: reflexivity).	0.040120	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	120	0.0	synth with cache (only 1: unfold Equal; only 1: auto).	0.024961	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	120	0.0	synth with cache (only 1: unfold Equal; only 1: congruence).	0.024182	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply Equal_refl; only 1: red; only 1: apply Equal_sym; only 1: red; only 1: apply Equal_trans).	0.026913	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros; only 1: intros ?; only 1: rewrite <- H in H1; only 1: eapply H0; only 1: eapply H1; only 1: intros; only 1: intros ?; only 1: rewrite H in H1; only 1: eapply H0; only 1: eapply H1).	0.065463	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- is_empty_iff; only 1: rewrite <- is_empty_iff; only 1: rewrite H; only 1: intuition).	0.038816	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- mem_in_iff; only 1: rewrite <- mem_in_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.046269	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto; only 1: auto).	0.051850	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_o; only 1: rewrite add_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.057008	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_o; only 1: rewrite remove_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.076134	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite map_o; only 1: rewrite map_o; only 1: rewrite H; only 1: auto).	0.055643	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	120	0.0.0.0.0	synth with cache (only 1: unfold eq_key; only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.028425	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq_key_elt; only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: eauto with *; only 1: congruence).	0.049691	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: apply empty_1).	0.023316	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite of_list_1; only 1: intuition; only 1: intuition).	0.043098	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite of_list_1b; only 1: rewrite elements_o; only 1: auto; only 1: apply elements_3w).	0.029747	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	120	0.0.0	synth with cache (only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_rev_right).	0.028753	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.040743	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_Add; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.030684	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_length).	0.028807	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.080619	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.024557	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.024729	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m1; only 1: apply filter_iff; only 1: auto).	0.032180	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m2; only 1: rewrite filter_iff; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: destruct f; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: rewrite H0; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: apply Hf; only 1: auto; only 1: auto).	0.061063	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply Disjoint_sym; only 1: auto; only 1: intros; only 1: rewrite H0; only 1: intuition).	0.055137	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: rewrite filter_iff; only 1: intuition; only 1: rewrite mem_1 in *; only 1: discriminate; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.103353	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite diff_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite diff_mapsto_iff; only 1: auto).	0.045914	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold restrict; only 1: rewrite filter_iff; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.066536	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite restrict_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite restrict_mapsto_iff; only 1: auto).	0.065830	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	120	0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: auto).	0.023438	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Disjoint; only 1: split; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.124056	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Partition; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: split; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: auto).	0.219666	31
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.020466	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	120	0	synth with cache (only 1: exact gempty).	0.019327	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.033224	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition).	0.099592	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold leb; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	0.088762	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.032282	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct 1; only 1: rewrite H; only 1: auto).	0.027376	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct find; only 1: exists a; only 1: auto; only 1: intros; only 1: discriminate).	0.028595	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.eqb_compare; only 1: rewrite Z.eqb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.022254	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.leb_compare; only 1: rewrite Z.leb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.024507	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.034371	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.ltb_compare; only 1: rewrite Z.ltb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.022582	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	120	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.020388	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	120	0.0	synth with cache (only 1: red; only 1: auto).	0.017422	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	120	0.0	synth with cache (only 1: rewrite Empty_alt; only 1: apply gempty).	0.018517	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Empty_Node; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: subst; only 1: rewrite IHt0_1; only 1: simpl; only 1: auto; only 1: auto).	0.058898	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite H; only 1: clear H; only 1: apply gss).	0.047508	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sort_equivlistA_eqlistA; only 1: auto with *; only 1: auto with *; only 1: red; only 1: intros; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto).	0.065100	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros; only 1: rewrite gso; only 1: auto; only 1: auto).	0.023841	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gso; only 1: auto; only 1: auto).	0.025014	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gro; only 1: auto; only 1: auto).	0.025481	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	120	0.0	synth with cache (only 1: unfold elements; only 1: apply xelements_sort).	0.018802	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	120	0.0	synth with cache (only 1: apply ME.Sort_NoDupA; only 1: apply elements_3).	0.019026	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold map in *; only 1: eapply mapi_2; only 1: eauto).	0.026545	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold max_elt in *; only 1: rewrite elements_mapsto_iff; only 1: induction elements; only 1: discriminate; only 1: destruct a; only 1: destruct l; only 1: simpl in *; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type; only 1: simpl in *; only 1: constructor 2; only 1: auto).	0.071816	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: unfold elements; only 1: rewrite xfoldi_1; only 1: reflexivity).	0.033299	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: destruct elements; only 1: discriminate; only 1: destruct p; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	0.073220	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: auto; only 1: destruct p; only 1: discriminate).	0.056306	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct PositiveOrderedTypeBits.eq_dec; only 1: intropattern subst -> e; only 1: apply gss; only 1: apply gso; only 1: auto).	0.030367	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction p; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: intuition; only 1: inversion 1; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: inversion 1).	0.047162	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_decide; only 1: try_rewrite; only 1: rewrite <- reduce_aux_eval_compat; only 1: inversion H3; only 1: simpl; only 1: ring; only 1: auto; only 1: simpl; only 1: rewrite reduce_aux_eval_compat; only 1: try_rewrite; only 1: auto; only 1: auto).	0.121477	20
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: constructor; only 1: simpl; only 1: case_decide; only 1: eapply linear_le_compat; only 1: eauto; only 1: zify; only 1: omega; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: apply linear_reduce_aux; only 1: auto).	0.061380	18
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: apply MF.In_eq_iff; only 1: auto).	0.025958	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.mem_iff).	0.022140	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.equal_iff).	0.020769	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.subset_iff).	0.021266	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.is_empty_iff).	0.021380	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	120	0.0	synth with cache (only 1: rewrite MF.add_iff; only 1: intuition).	0.033311	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	120	0.0	synth with cache (only 1: rewrite MF.remove_iff; only 1: intuition).	0.101823	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	120	0.0	synth with cache (only 1: rewrite MF.singleton_iff; only 1: intuition).	0.025387	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.elements_iff).	0.026038	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.for_all_iff; only 1: auto).	0.026185	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.exists_iff; only 1: auto).	0.025968	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct M.compare; only 1: auto; only 1: auto; only 1: auto).	0.027731	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	120	0	synth with cache (only 1: exact ring0).	0.020345	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	120	0	synth with cache (only 1: exact ring0).	0.020005	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact H0).	0.030509	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_r; only 1: exact H0).	0.030772	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: contradiction).	0.030867	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	0.035075	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	0.033220	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction).	0.041381	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReal_plus_morph; only 1: assumption; only 1: assumption).	0.036222	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.023795	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_int_norm; only 1: rewrite H; only 1: apply of_int_norm).	0.028203	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	120	0	synth with cache (only 1: apply eqb_true_iff).	0.016573	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	120	0	synth with cache (only 1: apply Nat.eqb_eq).	0.017649	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	120	0	synth with cache (only 1: apply Nat.leb_le).	0.015073	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	120	0	synth with cache (only 1: apply Z.eqb_eq).	0.017058	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	0.113580	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	120	0	synth with cache (only 1: reflexivity).	0.042541	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	0.107556	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.029820	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto).	0.023701	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> mem_spec; only 1: auto).	0.061382	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- equal_spec; only 1: auto).	0.043325	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.024477	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- subset_spec; only 1: auto).	0.021708	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.022482	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto).	0.019513	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> is_empty_spec; only 1: auto).	0.019358	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.025611	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.021965	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite add_spec; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: elim H; only 1: auto with relations; only 1: auto).	0.032421	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.026505	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- remove_spec; only 1: auto with relations).	0.027165	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.026435	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.025307	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.028155	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_lt_compat_r).	0.074533	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	120	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.140826	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	120	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.031293	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.033540	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.032462	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.032047	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	120	0	synth with cache (only 1: auto using Rplus_le_compat_r with rorders).	0.075280	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.028986	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.028261	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: auto).	0.039706	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	120	0.0.0.0.1	synth with cache (only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	0.041989	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.041982	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	120	0.1.1	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.021261	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	120	0.0.0.0	synth with cache (only 1: rewrite mem_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.043668	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.057410	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	120	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.077103	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.027330	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.046422	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply subset_1; only 1: apply subset_2).	0.020804	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	120	0	synth with cache (only 1: auto using Rplus_le_compat with rorders).	0.076729	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: auto; only 1: auto).	0.039942	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> for_all_spec; only 1: auto; only 1: auto).	0.032084	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	120	0.1.1	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.024191	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply singleton_1; only 1: apply singleton_2).	0.024061	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- exists_spec; only 1: auto; only 1: auto).	0.034690	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> exists_spec; only 1: auto; only 1: auto).	0.039000	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2).	0.021920	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- elements_spec1; only 1: auto).	0.032468	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.026948	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.027769	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply union_1; only 1: destruct 1; only 1: apply union_2; only 1: auto; only 1: apply union_3; only 1: auto).	0.028189	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	120	0	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).	0.076938	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply inter_1 with s'; only 1: auto; only 1: apply inter_2 with s; only 1: auto; only 1: destruct 1; only 1: apply inter_3; only 1: auto; only 1: auto).	0.035280	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: intuition).	0.029379	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply diff_1 with s'; only 1: auto; only 1: apply diff_2 with s; only 1: auto; only 1: destruct 1; only 1: apply diff_3; only 1: auto; only 1: auto).	0.032164	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	120	0	synth with cache (only 1: auto using Rplus_le_lt_compat with rorders).	0.077380	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply mem_spec).	0.023434	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply filter_1 with f; only 1: auto; only 1: auto; only 1: apply filter_2 with s; only 1: auto; only 1: auto; only 1: destruct 1; only 1: apply filter_3; only 1: auto; only 1: auto; only 1: auto).	0.036408	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- mem_spec; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.046011	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rlt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.083699	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply for_all_1; only 1: auto; only 1: apply for_all_2; only 1: auto).	0.025878	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply equal_spec).	0.022505	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply subset_spec).	0.020736	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply exists_1; only 1: auto; only 1: apply exists_2; only 1: auto).	0.030973	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.027887	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_lt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.083007	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply is_empty_spec).	0.022642	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: rewrite <- Rplus_comm; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	0.064988	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.028031	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	120	0.0	synth with cache (only 1: rewrite add_spec; only 1: intuition).	0.038253	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_le_compat_l; only 1: assumption).	0.065308	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	120	0.0.0.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.071340	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.032037	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.033171	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply for_all_spec; only 1: auto).	0.024999	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply exists_spec; only 1: auto).	0.024581	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply elements_spec1).	0.021434	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: destruct multiplicity; only 1: auto; only 1: destruct 1; only 1: auto with arith).	0.053187	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: auto).	0.028515	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply permut_In_In; only 1: eauto; only 1: red; only 1: auto).	0.028302	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with r; only 1: auto with real).	0.067389	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.096560	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply E.eq_refl; only 1: red; only 1: apply E.eq_sym; only 1: red; only 1: apply E.eq_trans).	0.022619	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply eq_refl; only 1: red; only 1: apply eq_sym; only 1: red; only 1: apply eq_trans).	0.022874	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.072913	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite is_empty_iff; only 1: rewrite is_empty_iff; only 1: rewrite H; only 1: intuition).	0.048996	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	120	0	synth with cache (only 1: auto with real).	0.055949	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	120	0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: reflexivity).	0.016329	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	120	0	synth with cache (only 1: auto with real).	0.049548	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros; only 1: symmetry; only 1: trivial).	0.022052	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.028392	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.027478	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	120	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.019993	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.088956	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	120	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.017960	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.019985	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.095260	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: trivial; only 1: trivial).	0.034000	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.113396	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto).	0.050176	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.059418	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.022874	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.022652	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.061394	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.086246	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	120	0	synth with cache (only 1: auto using Ropp_le_contravar with real).	0.057402	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.038056	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.071821	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> subset_spec).	0.022152	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- subset_spec).	0.019849	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.055703	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.072410	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	120	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.033409	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.078397	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.062001	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> equal_spec).	0.020782	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.073768	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.069440	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- equal_spec).	0.022756	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	120	0.0	synth with cache (only 1: red; only 1: auto).	0.026915	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.030783	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.066955	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	120	0.0	synth with cache (only 1: unfold Subset; only 1: eauto).	0.028868	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.024216	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.054724	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.032671	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	120	0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: unfold impl; only 1: firstorder).	0.031506	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.031529	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	120	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.030671	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	120	0	synth with cache (only 1: auto using Ropp_lt_cancel with rorders).	0.063607	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.062737	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare_fun; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.028943	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.083811	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: apply <- equal_spec).	0.028605	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	120	0	synth with cache (only 1: auto using Ropp_le_cancel with rorders).	0.065526	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	120	0	synth with cache (only 1: firstorder).	0.032171	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: intuition).	0.063586	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	120	0	synth with cache (only 1: firstorder).	0.025014	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: intuition).	0.053586	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.059207	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: intuition).	0.058586	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: tauto; only 1: auto; only 1: auto).	0.042653	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.076630	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.079433	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.054321	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: intuition).	0.060695	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.036076	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	120	0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros; only 1: rewrite filter_iff in *; only 1: intuition; only 1: intuition; only 1: intuition).	0.039501	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: intuition).	0.049801	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.112639	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite equal_spec in H0; only 1: rewrite <- compare_equal in H0; only 1: congruence).	0.029034	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.055496	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.068853	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.026189	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: right; only 1: assumption).	0.028450	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.080222	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intros ?; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: elim H; only 1: trivial; only 1: assumption).	0.036303	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.028463	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: split; only 1: assumption; only 1: assumption).	0.024162	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_spec; only 1: tauto).	0.029177	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.031879	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	120	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: apply add_1; only 1: assumption).	0.020580	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> union_spec; only 1: assumption).	0.042798	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: left; only 1: assumption).	0.045524	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.025093	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.028494	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.026669	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite inter_spec; only 1: split; only 1: assumption; only 1: assumption).	0.022241	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.029057	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.034322	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	120	0.0.0.0	synth with cache (only 1: constructor; only 1: exact rplus_morph; only 1: exact rtimes_morph; only 1: exact ropp_morph).	0.021366	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite diff_spec; only 1: split; only 1: assumption; only 1: assumption).	0.027358	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.029995	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.033501	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.037515	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.046406	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.040465	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.051807	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.037052	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.025905	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.022674	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros; only 1: rewrite xelements_spec; only 1: right; only 1: exists x; only 1: auto).	0.028016	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite xelements_spec in H; only 1: destruct H; only 1: inversion_clear H; only 1: destruct H; only 1: destruct H; only 1: rewrite H; only 1: assumption).	0.053582	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_1; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.087396	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_3' in H1; only 1: congruence).	0.031596	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	120	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.018060	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	120	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.020279	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto with datatypes).	0.031666	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	120	0.0.0.0.0	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: red; only 1: apply meq_trans).	0.020755	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply meq_congr; only 1: easy; only 1: easy).	0.030634	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	120	0.0.0.0.0	synth with cache (only 1: unfold Psub; only 1: intros; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.105895	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Unsigned.of_to).	0.017487	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Psquare; only 1: apply Pmul_ok).	0.023798	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.025373	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.021910	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.030156	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto).	0.020166	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold eq; only 1: simpl; only 1: intuition).	0.026449	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.to_int; only 1: unfold BinNatDef.N.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: destruct n; only 1: reflexivity; only 1: apply DecimalPos.Unsigned.of_to).	0.024723	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	120	0.0.0	synth with cache (only 1: unfold BinNatDef.N.of_int; only 1: rewrite norm_invol; only 1: easy).	0.020222	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: easy).	0.027763	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: apply Qred_correct).	0.025079	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: apply Qred_correct).	0.018785	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: apply Qred_correct).	0.017460	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.026630	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.027521	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.029026	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qred; only 1: simpl; only 1: rewrite Z.ggcd_opp; only 1: case BinIntDef.Z.ggcd; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: simpl; only 1: unfold Qopp; only 1: auto).	0.041033	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Qcompare_comp; only 1: apply Qeq_sym; only 1: apply Qred_correct; only 1: apply Qeq_sym; only 1: apply Qred_correct).	0.021482	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	120	0.0.0.0	synth with cache (only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.022726	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	120	0.0.0.0	synth with cache (only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.029405	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	120	0.0	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.021802	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	120	0.0.0.0.0	synth with cache (only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: symmetry; only 1: trivial).	0.025704	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	120	0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.026339	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	120	0.0.0	synth with cache (only 1: intros; only 1: apply permut_add_cons_inside; only 1: auto using permut_sym, permut_refl).	0.032744	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: auto with arith).	0.058029	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: clear e; only 1: auto; only 1: contradict n; only 1: auto).	0.034476	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity x; only 1: auto with *; only 1: transitivity x0; only 1: auto with *; only 1: auto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity y; only 1: auto with *; only 1: transitivity y0; only 1: auto with *; only 1: auto with *; only 1: auto).	0.056963	23
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a1; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a1'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.048872	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a2; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a2'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.076889	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: destruct multiplicity; only 1: auto with arith; only 1: destruct 1; only 1: auto with arith).	0.067600	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: auto with arith).	0.032550	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite H; only 1: auto).	0.051999	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.023800	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: induction H0 in n, H, H0 |- *; only 1: apply le_n_0_eq in H; only 1: intropattern subst <- H; only 1: apply here; only 1: assumption; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_left; only 1: auto using le_S_n; only 1: auto using le_S_n; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_right; only 1: auto using le_S_n; only 1: auto using le_S_n).	0.040369	20
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	120	0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec).	0.032329	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite norm_subst_ok; only 1: rewrite norm_subst_ok; only 1: apply Peq_ok; only 1: trivial).	0.047560	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply inductively_barred_at_is_path_from_decidable in H; only 1: apply PreWeakKonigsLemma; only 1: assumption; only 1: assumption).	0.021792	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto; only 1: exact Qmult_comm; only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.326101	53
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Qsrt; only 1: discriminate; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: exact H).	0.028011	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	120	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.025075	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.107041	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	120	0.1	synth with cache (only 1: intros; only 1: ring).	0.023105	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.027260	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	120	0	synth with cache (only 1: ring).	0.019208	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	120	0	synth with cache (only 1: ring).	0.045901	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	120	0	synth with cache (only 1: ring).	0.023956	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.020655	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.025353	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022710	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.047514	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.026306	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.021920	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.101833	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction d; only 1: intros; only 1: simpl usize; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: auto; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy).	0.499064	147
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite IHd; only 1: ring; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev).	0.099534	64
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	120	0.0.0	synth with cache (only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: easy).	0.019223	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite N.double_spec; only 1: rewrite N.succ_double_spec; only 1: induction d; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring).	0.449268	119
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	120	0	synth with cache (only 1: apply of_lu_double_gen).	0.018584	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	120	0	synth with cache (only 1: apply of_lu_double_gen).	0.018361	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_uint; only 1: rewrite of_lu_rev; only 1: induction p; only 1: simpl; only 1: rewrite of_lu_succ_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite of_lu_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: auto).	0.040037	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.029958	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt).	0.047402	25
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ).	0.030583	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	120	0	synth with cache (only 1: reflexivity).	0.022073	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	120	0	synth with cache (only 1: reflexivity).	0.017185	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl_of_lu; only 1: split; only 1: rewrite N.add_0_l; only 1: intros ?; only 1: apply N.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H0; only 1: clear H; only 1: easy; only 1: clear H; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate).	0.223606	86
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.047856	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.040205	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.028171	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	120	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_int; only 1: unfold BinPosDef.Pos.of_int; only 1: rewrite Unsigned.of_to; only 1: easy).	0.022156	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.of_int; only 1: destruct d; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: destruct BinPosDef.Pos.of_uint; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: easy; only 1: intros ?; only 1: discriminate H).	0.033920	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	120	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.023232	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	120	0.0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.030084	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	120	0.0.0	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: rewrite <- Pos.compare_eq_iff; only 1: easy).	0.029555	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	120	0.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: apply N.eqb_eq).	0.026873	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	120	0.0.0	synth with cache (only 1: rewrite N.eqb_eq; only 1: rewrite <- N.compare_eq_iff; only 1: easy).	0.031068	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	120	0	synth with cache (only 1: apply N.eqb_eq).	0.063995	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply N.lxor_eq in H; only 1: subst; only 1: apply N.eqb_refl).	0.063184	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Nodd in *; only 1: rewrite Ndouble_bit0 in *; only 1: easy).	0.030235	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: apply N.div2_double).	0.031975	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Neven in *; only 1: rewrite Ndouble_plus_one_bit0 in *; only 1: easy).	0.029787	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: destruct a0; only 1: easy; only 1: easy).	0.036718	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	120	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros; only 1: apply Nat.lt_trans with y; only 1: auto; only 1: auto).	0.023725	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Nat.lt_irrefl).	0.024652	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H1; only 1: easy).	0.030622	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.020148	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	120	0	synth with cache (only 1: apply Z.divide_opp_r).	0.019990	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: trivial).	0.027341	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	120	0	synth with cache (only 1: apply Z.divide_opp_r).	0.022240	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	120	0	synth with cache (only 1: exact Z.lt_trans).	0.020465	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	120	0	synth with cache (only 1: apply Z.divide_opp_l).	0.017319	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Z.lt_irrefl).	0.020116	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	120	0	synth with cache (only 1: apply Z.divide_opp_l).	0.017970	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: apply Ndiv2_bit_eq; only 1: easy; only 1: easy).	0.035440	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	120	0	synth with cache (only 1: apply Z.divide_abs_l).	0.018635	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	120	0	synth with cache (only 1: apply Z.divide_abs_l).	0.018010	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.eq_mul_1_nonneg).	0.026458	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: rewrite H; only 1: apply Pos.lt_irrefl).	0.032928	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	120	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: rewrite eq_iff_eq_true; only 1: rewrite N.leb_le; only 1: rewrite leb_compare; only 1: rewrite <- N2Nat.inj_compare; only 1: easy).	0.025311	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.divide_abs_l in H; only 1: rewrite <- Z.divide_abs_r in H; only 1: apply Z.abs_pos in H0; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.057607	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	120	0.0.0	synth with cache (only 1: rewrite Nleb_alt; only 1: rewrite N.leb_le; only 1: easy).	0.023483	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_refl).	0.018686	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	120	0	synth with cache (only 1: apply Z.mod_divide).	0.047247	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_antisymm).	0.027619	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: apply Z_mod_mult).	0.021456	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	120	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_trans).	0.043394	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	120	0	synth with cache (only 1: auto using Z.lt_neq, Z.neq_sym).	0.017391	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_div_mul_exact; only 1: apply @Z_lt_neq; only 1: easy; only 1: auto with zarith).	0.019366	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto with ordered_type).	0.024820	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.019296	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	120	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct; only 1: apply Nat.lt_le_incl; only 1: apply leb_complete_conv; only 1: assumption).	0.023431	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold eq; only 1: simpl; only 1: intuition).	0.086407	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.025456	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.031668	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.027547	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	120	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.023437	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	120	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exists a; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).	0.023946	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	120	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.019625	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	120	0.0.0.0	synth with cache (only 1: rewrite N.compare_nle_iff; only 1: rewrite <- Nleb_Nle; only 1: rewrite not_true_iff_false; only 1: easy).	0.030779	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.040487	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	120	0	synth with cache (only 1: apply <- Nltb_Ncompare).	0.021558	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Nltb_Ncompare; only 1: rewrite N.compare_antisym; only 1: rewrite H; only 1: auto).	0.024945	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_l).	0.019443	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.072674	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_r).	0.019771	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_l).	0.032938	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: apply Zabs_ind; only 1: intros; only 1: apply Zis_gcd_sym; only 1: apply Zis_gcd_0; only 1: intros; only 1: apply Zis_gcd_opp; only 1: apply Zis_gcd_0).	0.020805	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_r).	0.043295	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	120	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb).	0.038402	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	120	0	synth with cache (only 1: exact bits_lt_trans).	0.018368	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.059334	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.067546	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	120	0.0.0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: rewrite <- H0; only 1: auto with zarith).	0.055213	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: apply Zis_gcd_sym; only 1: auto with zarith).	0.025481	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: apply Zis_gcd_intro; only 1: auto with zarith; only 1: exists n; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto).	0.026866	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	120	0.0.0.0	synth with cache (only 1: constructor; only 1: apply Z.gcd_divide_l; only 1: apply Z.gcd_divide_r; only 1: apply Z.gcd_greatest).	0.035506	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.gcd_greatest; only 1: easy; only 1: easy).	0.027233	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	0.022533	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	120	0	synth with cache (only 1: N.order).	0.020867	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: apply ni_min_O_l).	0.020572	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	120	0	synth with cache (only 1: trivial).	0.018458	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	120	0	synth with cache (only 1: exact ni_min_idemp).	0.020319	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros ?; only 1: intros ?; only 1: rewrite ni_min_comm; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.024141	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	120	0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite <- H; only 1: rewrite ni_min_assoc; only 1: rewrite H0; only 1: reflexivity).	0.022914	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	120	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.077786	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	120	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: unfold ni_le; only 1: unfold ni_min; only 1: rewrite Peano.min_l; only 1: reflexivity; only 1: trivial).	0.030820	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	120	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: unfold ni_min; only 1: intros; only 1: inversion H; only 1: apply le_min_r).	0.031895	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Npdist; only 1: rewrite N.lxor_nilpotent; only 1: reflexivity).	0.021926	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.lxor_eq; only 1: apply Nplength_infty; only 1: exact H).	0.024361	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	120	0.0.0.0	synth with cache (only 1: unfold Npdist; only 1: intros; only 1: rewrite N.lxor_comm; only 1: reflexivity).	0.024895	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	120	0.0.0.0.0.0	synth with cache (only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic).	0.058235	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	120	0.0	synth with cache (only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: exact setoid_choice).	0.049622	2
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.020085	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.019775	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.021813	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.018958	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: assumption).	0.017252	4
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: rewrite Z.opp_pos_neg; only 1: assumption).	0.018275	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	120	0	synth with cache (only 1: exact SRinv_ext).	0.016571	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	120	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.018601	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	120	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.019442	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: destruct o; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto).	0.056046	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite N2Nat.id; only 1: trivial).	0.019684	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	120	0	synth with cache (only 1: reflexivity).	0.019453	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	120	0	synth with cache (only 1: reflexivity).	0.017986	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	0.023553	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftr_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.021471	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: rewrite <- Pos2Nat.inj_iter; only 1: symmetry; only 1: apply Pos.iter_swap_gen; only 1: easy).	0.037604	24
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftl_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.021156	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	120	0	synth with cache (only 1: reflexivity).	0.020629	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	120	0	synth with cache (only 1: reflexivity).	0.019459	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	0.051981	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lxor_spec).	0.053849	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.022165	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lor_spec).	0.025931	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.025311	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.land_spec).	0.023347	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.024920	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.ldiff_spec).	0.022645	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply Nbit_faithful; only 1: intros; only 1: subst; only 1: easy).	0.026788	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nbit0_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Nbit0_correct; only 1: rewrite Nbit0_correct; only 1: reflexivity).	0.042916	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: intros ?; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Ndiv2_correct; only 1: reflexivity).	0.038736	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- xorb_true_l; only 1: rewrite <- H; only 1: rewrite Nxor_bit0; only 1: rewrite xorb_assoc_reverse; only 1: rewrite xorb_nilpotent; only 1: rewrite xorb_false_r; only 1: reflexivity).	0.034104	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.029993	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.030195	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Nless; only 1: rewrite N.lxor_nilpotent; only 1: trivial).	0.022803	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_less; only 1: apply Ndouble_bit0; only 1: apply Ndouble_plus_one_bit0).	0.021820	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_gt; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	0.022686	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	120	1	synth with cache (only 1: auto with *).	0.018970	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: compute; only 1: split; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: compute; only 1: split; only 1: intros ?; only 1: inversion H; only 1: intros ?; only 1: inversion H; only 1: intros; only 1: simpl; only 1: destruct a; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: intuition).	0.163670	31
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	120	0.0.0	synth with cache (only 1: unfold ByteV2N; only 1: unfold compose; only 1: apply Bv2N_upper_bound).	0.033565	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.caseS; only 1: intros; only 1: unfold Blow; only 1: simpl; only 1: destruct @Bv2N; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto).	0.055502	13
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	120	0.0	synth with cache (only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement).	0.019855	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	120	0.0	synth with cache (only 1: apply epsilon_imp_small_drinker; only 1: exact epsilon_statement).	0.022349	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder).	0.027956	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	120	0.1	synth with cache (only 1: apply iota_imp_constructive_definite_description; only 1: exact iota_statement).	0.018553	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.020233	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	120	0.1	synth with cache (only 1: apply constructive_indefinite_descr_fun_choice; only 1: exact constructive_indefinite_description).	0.022998	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.023505	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold epsilon; only 1: unfold classical_indefinite_description; only 1: destruct excluded_middle_informative; only 1: trivial; only 1: destruct n; only 1: trivial).	0.062410	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	120	0	synth with cache (only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice).	0.012502	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.058458	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.015176	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply H; only 1: assumption).	0.010880	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	120	0	synth with cache (only 1: intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker).	0.010442	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	120	0	synth with cache (only 1: intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification).	0.013260	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct c; only 1: destruct b; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H).	3.410634	788
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto).	0.067750	43
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: apply NilEmpty.sus in H; only 1: destruct d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.033655	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu).	0.040890	33
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	120	0	synth with cache (only 1: easy).	0.018257	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: right; only 1: easy; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu).	0.046359	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	120	0	synth with cache (only 1: reflexivity).	0.017576	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	120	0	synth with cache (only 1: reflexivity).	0.018327	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.div_mod; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.021836	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_eq; only 1: auto).	0.019813	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zmod_eq_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.021172	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	120	0.0.0.0	synth with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: eauto; only 1: eauto).	0.025421	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.023614	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.020940	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: auto).	0.022514	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.020604	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z_div_pos; only 1: auto using Z.ge_le; only 1: auto using Z.ge_le).	0.021411	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.025545	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.024382	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	0.020097	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge; only 1: auto with zarith).	0.021308	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.032239	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.022239	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_le; only 1: assumption; only 1: assumption).	0.021223	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_lt_upper_bound).	0.024890	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_upper_bound).	0.025901	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_lower_bound).	0.029861	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.032568	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_opp; only 1: auto).	0.034332	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_opp; only 1: auto).	0.026224	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.029226	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_nz; only 1: auto; only 1: auto).	0.031936	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_z; only 1: auto; only 1: auto).	0.043782	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_nz; only 1: auto; only 1: auto).	0.046289	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_l_z; only 1: auto; only 1: auto).	0.029729	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_l_nz; only 1: auto; only 1: auto; only 1: auto).	0.044894	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_r_z; only 1: auto; only 1: auto).	0.034682	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_r_nz; only 1: auto; only 1: auto; only 1: auto).	0.044219	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_mul_cancel_r; only 1: auto; only 1: auto).	0.030710	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mod_mod; only 1: auto).	0.045608	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_mod; only 1: auto).	0.027731	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_mod; only 1: auto).	0.040271	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.029677	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply representative_boolean_partition_imp_excluded_middle; only 1: apply H).	0.020131	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.027754	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.039049	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.033101	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.026957	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.026972	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	120	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.025405	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	120	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.028445	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.042195	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	120	0.0.0.0	synth with cache (only 1: constructor; only 1: exact eqm_refl; only 1: exact eqm_sym; only 1: exact eqm_trans).	0.025118	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zplus_mod; only 1: auto).	0.044225	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zminus_mod; only 1: auto).	0.068312	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zmult_mod; only 1: auto).	0.065926	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.091334	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	120	0	synth with cache (only 1: reflexivity).	0.015160	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: auto; only 1: apply Z.le_neq; only 1: auto).	0.046083	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	120	0	synth with cache (only 1: reflexivity).	0.014600	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: auto using Z.mod_div).	0.037861	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	120	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.016069	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: f_equal; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.030038	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_0_r; only 1: easy; only 1: apply Z.div_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.052453	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_nat_Z; only 1: rewrite Zabs2Nat.id_abs; only 1: rewrite Z.abs_eq; only 1: easy; only 1: trivial).	0.019023	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.095545	29
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: auto).	0.047947	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.pow_add_r).	0.028219	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.bit0_odd; only 1: rewrite <- Z.bit0_mod; only 1: easy).	0.045206	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	120	0	synth with cache (only 1: reflexivity).	0.020445	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	120	0	synth with cache (only 1: reflexivity).	0.019177	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.039714	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply Pos.iter_swap_gen; only 1: easy; only 1: destruct 1; only 1: easy).	0.023960	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: destruct BinIntDef.Z.odd; only 1: easy; only 1: easy).	0.027448	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: rewrite <- IHn; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.027221	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	120	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.017397	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_even; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.032362	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.035611	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	120	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_same_full).	0.028149	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	120	0	synth with cache (only 1: reflexivity).	0.035359	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_same_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.029438	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy).	0.040363	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_plus_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.034061	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite <- Z.mul_assoc; only 1: rewrite <- IHn; only 1: easy).	0.025646	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_mult_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.062128	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	120	0.0.0	synth with cache (only 1: rewrite two_power_nat_equiv; only 1: rewrite Zpower_nat_Z; only 1: easy).	0.022107	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	120	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.021565	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	120	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_plus_full).	0.051778	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	120	0.0.0	synth with cache (only 1: unfold two_power_pos; only 1: rewrite shift_pos_nat; only 1: easy).	0.023859	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	120	1.1.0	synth with cache (only 1: split; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice).	0.039459	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	120	0.0.0.0	synth with cache (only 1: rewrite shift_pos_nat; only 1: rewrite Zpower_pos_nat; only 1: rewrite shift_nat_correct; only 1: easy).	0.021189	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_1; only 1: auto with zarith).	0.053717	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	120	0	synth with cache (only 1: apply two_power_pos_equiv).	0.017621	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy).	0.029650	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_2; only 1: intros ?; only 1: intropattern subst -> H1; only 1: easy; only 1: auto).	0.046307	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	120	0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_add_r).	0.028584	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	120	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite two_p_equiv; only 1: apply Z.pow_pos_nonneg; only 1: easy).	0.024439	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_mod_zero_opp_full; only 1: auto).	0.045736	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.116461	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	120	0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_succ_r).	0.021875	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: intros; only 1: apply Z.pow_lt_mono_r; only 1: easy; only 1: assumption; only 1: auto using Z.lt_pred_l).	0.025404	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction a; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: case Z.leb_spec; only 1: trivial; only 1: trivial).	0.115755	19
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_iter; only 1: rewrite two_power_pos_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct nat_rect; only 1: destruct p0; only 1: unfold Zdiv_rest_aux; only 1: rewrite two_power_nat_S; only 1: f_equal; only 1: easy).	0.108394	12
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_functional_rel_reification; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.137492	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	120	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply H; only 1: apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_function_repr; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.319625	42
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	120	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_pred_repr; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy; only 1: red; only 1: apply proof_irrelevance_cci; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.326777	43
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.332973	84
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.021721	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.059025	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.019447	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.054529	18
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.022167	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.073261	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.479310	172
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.017437	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.020299	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.057520	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.022910	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	120	0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: reflexivity).	0.023554	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_eq_iff).	0.020220	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	120	0	synth with cache (only 1: reflexivity).	0.018035	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.020266	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	120	0	synth with cache (only 1: reflexivity).	0.019608	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.022071	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_antisym).	0.018109	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qlt; only 1: unfold Qcompare; only 1: case Z.compare_spec; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy).	0.033538	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	120	0	synth with cache (only 1: reflexivity).	0.020031	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	120	0	synth with cache (only 1: auto with qarith).	0.021346	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	120	0	synth with cache (only 1: apply Z.eq_dec).	0.021160	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	120	0.0	synth with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	0.017611	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	120	0	synth with cache (only 1: apply Qeq_bool_iff).	0.020601	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	120	0	synth with cache (only 1: apply Qeq_bool_iff).	0.020484	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	120	0.0.0.0	synth with cache (only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.032166	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	120	0.0	synth with cache (only 1: symmetry; only 1: apply Zle_is_le_bool).	0.021362	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	120	0	synth with cache (only 1: apply Qle_bool_iff).	0.017551	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	120	0	synth with cache (only 1: auto with qarith).	0.018066	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: symmetry; only 1: easy).	0.080949	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	120	0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.017311	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	120	0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.028658	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	120	0.0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: apply Qeq_trans).	0.040036	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.031338	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	120	0	synth with cache (only 1: reflexivity).	0.014302	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	120	0.0.0.0.0.0	synth with cache (only 1: revert d; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.022688	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: rewrite <- to_little_uint_succ; only 1: easy).	0.019822	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	120	0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_uint; only 1: f_equal; only 1: symmetry; only 1: apply to_lu_equiv).	0.022423	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.122436	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.027251	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: induction d; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: simpl usize; only 1: simpl; only 1: rewrite Nat.mul_1_r; only 1: easy; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring).	0.524080	118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	120	0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: rewrite of_uint_acc_spec; only 1: easy).	0.020192	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.032435	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: split; only 1: intros ?; only 1: apply Nat.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: auto; only 1: intros ?; only 1: simpl in H; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H1; only 1: clear H0; only 1: easy; only 1: clear H0; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy).	0.209059	49
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: reflexivity; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption).	0.515792	272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	120	0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite to_of_lu; only 1: apply rev_lnorm_rev).	0.021463	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.033274	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.023196	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.027487	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_int; only 1: unfold Init.Nat.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: rewrite Unsigned.to_uint_alt; only 1: rewrite Unsigned.of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Unsigned.of_lu_succ; only 1: f_equal; only 1: easy).	0.039277	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	120	0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: rewrite norm_invol; only 1: easy).	0.021068	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: simpl; only 1: intros ?; only 1: injection H as; only 1: apply Unsigned.of_inj; only 1: rewrite <- Unsigned.of_uint_norm; only 1: rewrite H; only 1: rewrite Unsigned.of_uint_norm; only 1: easy).	0.029973	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	120	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.030584	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	120	0.0	synth with cache (only 1: decide equality; only 1: apply ascii_dec).	0.027077	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	120	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.040215	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	120	0	synth with cache (only 1: t_eqb).	0.018892	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.034414	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	120	0	synth with cache (only 1: t_eqb).	0.023165	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.045949	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	120	0	synth with cache (only 1: t_eqb).	0.019072	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	120	0	synth with cache (only 1: t_eqb).	0.017412	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	120	0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: assumption).	0.018462	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto).	0.086188	20
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- plus_Snm_nSm; only 1: simpl; only 1: auto).	0.105348	44
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply le_S_n; only 1: auto; only 1: auto).	0.075281	35
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	120	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.027961	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	120	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.027732	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	120	0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[string_of_list_byte list_byte_of_string]; only 1: erewrite list_ascii_of_string_of_list_ascii; only 1: erewrite List.map_map; only 1: erewrite List.map_ext; only 1: erewrite List.map_id; only 1: reflexivity; only 1: intros ?; only 1: apply byte_of_ascii_of_byte).	0.031795	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	120	0	synth with cache (only 1: eauto using Rmult_lt_compat_r with rorders).	0.062613	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	120	0	synth with cache (only 1: eauto using Rmult_lt_compat_l with rorders).	0.066619	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: destruct H0; only 1: unfold Rle; only 1: right; only 1: rewrite <- H; only 1: rewrite Rmult_0_l; only 1: rewrite Rmult_0_l; only 1: reflexivity; only 1: unfold Rle; only 1: auto with real).	0.145835	20
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	120	0	synth with cache (only 1: reflexivity).	0.017890	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: apply H; only 1: easy; only 1: apply H0; only 1: easy; only 1: apply H1; only 1: easy).	0.032388	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	0.024628	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	120	0	synth with cache (only 1: reflexivity).	0.020322	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	120	0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: rewrite Zlength_correct; only 1: rewrite <- Nat2Z.inj_succ; only 1: easy).	0.025759	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: destruct l; only 1: auto; only 1: rewrite <- Nat2Z.inj_0; only 1: rewrite Nat2Z.inj_iff; only 1: easy).	0.036901	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	120	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.016878	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z.eq_le_incl; only 1: assumption; only 1: apply Z.eq_le_incl; only 1: auto).	0.020343	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	120	0	synth with cache (only 1: exact Zlt_le_succ).	0.018203	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: auto; only 1: auto).	0.021748	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	120	0.1.0.0	synth with cache (only 1: intros ?; only 1: apply acc_implies_P_eventually; only 1: apply P_eventually_implies_acc_ex; only 1: assumption).	0.020065	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_ground_description; only 1: firstorder).	0.019610	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	120	0	synth with cache (only 1: reflexivity).	0.017970	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Z.eq; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.043658	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.succ; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.040567	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.pred; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_r; only 1: rewrite add_succ_r; only 1: rewrite H; only 1: easy).	0.039191	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: unfold Z.add; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_shuffle1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite add_shuffle1; only 1: easy).	0.109723	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: apply H; only 1: easy).	0.025814	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.026200	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022971	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.027413	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.029843	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.024957	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: apply Rlt_trans with (m := m); only 1: easy; only 1: easy; only 1: rewrite <- H0; only 1: easy).	0.032041	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: intros ?; only 1: destruct H; only 1: easy).	0.028414	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.019108	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with qarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.029666	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact PeanoNat.Nat.add_0_l; only 1: exact PeanoNat.Nat.add_comm; only 1: exact PeanoNat.Nat.add_assoc; only 1: exact PeanoNat.Nat.mul_1_l; only 1: exact PeanoNat.Nat.mul_0_l; only 1: exact PeanoNat.Nat.mul_comm; only 1: exact PeanoNat.Nat.mul_assoc; only 1: exact PeanoNat.Nat.mul_add_distr_r).	0.021409	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: trivial; only 1: trivial; only 1: exact N2Nat.inj_add; only 1: exact N2Nat.inj_mul; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	0.026425	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	120	0.0.0	synth with cache (only 1: rewrite rsub_def; only 1: rewrite ropp_0; only 1: ring).	0.045700	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.051721	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rmul_comm; only 1: apply rinv_l; only 1: trivial).	0.041682	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	120	0.0.0.0	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite ropp_mul_l; only 1: easy).	0.034660	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rsub_def; only 1: rewrite rsub_def; only 1: rewrite rdiv5; only 1: rewrite ropp_mul_l; only 1: apply rdiv2b; only 1: easy; only 1: easy).	0.060832	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rdiv6; only 1: apply rdiv4; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.048398	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite H0; only 1: rewrite rmul_0_l; only 1: easy).	0.043560	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: easy; only 1: simpl; only 1: rewrite IHx0; only 1: easy; only 1: simpl; only 1: trivial).	0.083625	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: destruct x0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_ext; only 1: easy; only 1: easy).	0.059083	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: reflexivity).	0.040068	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	120	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	0.075878	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p1; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_add_r; only 1: simpl; only 1: ring [ IHp1 ]; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: ring [ IHp1 ]; only 1: simpl; only 1: trivial).	0.101007	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction p; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.064380	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.098697	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Z.add_0_l; only 1: exact Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: exact Z.mul_comm; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: trivial; only 1: exact Z.sub_diag).	0.027945	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.102126	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.085220	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: easy).	0.053103	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: apply pow_N_ext; only 1: trivial; only 1: trivial).	0.072832	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_l).	0.050126	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_r).	0.042987	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.053233	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.045206	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite phi_1; only 1: easy; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy).	0.056833	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite rmul_1_l; only 1: trivial; only 1: simpl; only 1: destruct n'; only 1: simpl; only 1: rewrite rmul_1_r; only 1: trivial; only 1: simpl; only 1: apply pow_pos_add_r).	0.095864	16
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply rmul_1_l; only 1: simpl; only 1: apply pow_pos_mul_l).	0.091200	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pow_pos_1; only 1: trivial; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_pos_mul_r).	0.082425	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: apply rI_neq_rO; only 1: simpl; only 1: apply pow_pos_nz; only 1: easy).	0.051349	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial).	0.048999	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rrefl).	0.018183	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact N.add_0_l; only 1: exact N.add_comm; only 1: exact N.add_assoc; only 1: exact N.mul_1_l; only 1: exact N.mul_0_l; only 1: exact N.mul_comm; only 1: exact N.mul_assoc; only 1: exact N.mul_add_distr_r).	0.020634	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	120	0	synth with cache (only 1: exact gen_phiN_add).	0.017247	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	120	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: apply gen_phiN_add; only 1: apply gen_phiN_sub; only 1: apply gen_phiN_mult; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	0.067794	31
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	120	0.0.0.0	synth with cache (only 1: unfold Nwopp; only 1: intros; only 1: rewrite gen_phiNword_Nwcons; only 1: norm).	0.034968	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold NPEpow; only 1: destruct n; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: case Pos.eqb_spec; only 1: intros ?; only 1: subst; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: intros ?; only 1: clear n; only 1: destruct e; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_0; only 1: rewrite pow_pos_0; only 1: easy; only 1: intros; only 1: rewrite rpow_pow; only 1: simpl; only 1: rewrite pow_pos_cst; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.227382	53
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: exact Nwadd_ok; only 1: intros; only 1: unfold Nwsub; only 1: rewrite Nwadd_ok; only 1: rewrite Nwopp_ok; only 1: norm; only 1: exact Nwmul_ok; only 1: exact Nwopp_ok; only 1: exact gen_phiNword_ok).	0.049393	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: rewrite NPEadd_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEsub_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEmul_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEopp_ok; only 1: f_equiv; only 1: easy; only 1: simpl; only 1: rewrite NPEpow_ok; only 1: f_equiv; only 1: easy).	0.341129	34
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: reflexivity).	0.057639	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	120	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.051391	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	120	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.047928	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: simpl app; only 1: rewrite PCond_cons; only 1: rewrite PCond_cons; only 1: rewrite IHl1; only 1: symmetry; only 1: apply and_assoc).	0.081848	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	120	0.0.0.0.0.0	synth with cache (only 1: unfold absurd_PCond; only 1: simpl; only 1: red; only 1: intros; only 1: apply H; only 1: apply phi_0).	0.066886	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pos_sub_gt; only 1: apply Pos.gt_lt; only 1: easy).	0.042569	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold default_isIn; only 1: case PExpr_eq_spec; only 1: intros ?; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H0; only 1: rewrite H; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: rewrite NPEpow_ok; only 1: rewrite H; only 1: rewrite <- PEpow_add_r; only 1: f_equiv; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H; only 1: f_equiv; only 1: rewrite Z.pos_sub_gt; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.sub_sub_distr; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_sub; only 1: trivial; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: simpl; only 1: apply Z.lt_gt; only 1: apply Pos.sub_decr; only 1: trivial; only 1: trivial).	0.321963	49
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_r; only 1: apply IHe1; only 1: apply H; only 1: apply split_nz_r; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: apply IHe; only 1: easy; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: destruct H0; only 1: clear H1; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H0; only 1: apply split_nz_r; only 1: apply H; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: rewrite NPEpow_ok; only 1: apply PEpow_nz; only 1: apply IHe; only 1: apply H).	0.488037	103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite PCond_app; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: rewrite Fnorm_FEeval_PEeval; only 1: rewrite Fnorm_FEeval_PEeval; only 1: apply cross_product_eq; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.129249	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.034113	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.029419	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	120	0.0	synth with cache (only 1: unfold In; only 1: intuition).	0.015774	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.015442	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.029326	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply empty_spec in H; only 1: elim H).	0.016329	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.026032	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.020751	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.032688	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.039394	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.021278	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: rewrite equal_spec; only 1: trivial).	0.031877	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.eqb_eq; only 1: apply gen_phiN_inj; only 1: easy).	0.040030	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: replace y with x; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: apply gen_phiZ_inj; only 1: trivial).	0.026310	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.033306	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.020831	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite compare_inv; only 1: rewrite H0; only 1: rewrite <- compare_inv; only 1: reflexivity).	0.037228	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.029205	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intuition; only 1: unfold In in *; only 1: rewrite mem_Leaf in *; only 1: discriminate).	0.030248	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xfilter_spec).	0.017885	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xforall_spec).	0.022056	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xexists_spec).	0.030676	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.020858	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.025335	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: rewrite xelements_spec; only 1: split; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: destruct H; only 1: destruct H; only 1: simpl in *; only 1: congruence; only 1: intros ?; only 1: right; only 1: exists x; only 1: auto).	0.038133	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_spec; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.063453	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_spec3' in H1; only 1: congruence).	0.026278	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	120	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.036238	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.011966	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.104014	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.069904	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.023427	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.022086	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.023298	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.081175	30
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.071078	30
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply lbal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply rbal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order).	0.223920	31
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	120	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).	0.034790	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	120	0	synth with cache (only 1: apply add_spec').	0.013483	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	120	0.0	synth with cache (only 1: unfold add; only 1: auto_tc).	0.014789	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	0.106288	9
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	120	0	synth with cache (only 1: t_eqb).	0.019328	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	120	0	synth with cache (only 1: t_eqb).	0.081300	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	120	0	synth with cache (only 1: t_eqb).	0.021700	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	120	0	synth with cache (only 1: t_eqb).	0.012797	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbalS_match; only 1: intros; only 1: autorew; only 1: intuition_in; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: destruct l; only 1: autorew; only 1: intuition_in; only 1: destruct t1; only 1: destruct l2; only 1: autorew; only 1: intuition_in; only 1: destruct t1; only 1: autorew; only 1: intuition_in; only 1: autorew; only 1: intuition_in; only 1: autorew; only 1: intuition_in).	0.637714	21
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.239488	257
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.427564	257
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qinv; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: simpl in *; only 1: destruct Qnum1; only 1: simpl in *; only 1: apply Z.mul_eq_0 in H; only 1: destruct H; only 1: subst; only 1: easy; only 1: easy; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy).	0.118975	37
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qdiv; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.039613	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	120	0.0.0.0	synth with cache (only 1: unfold remove; only 1: autorew; only 1: easy; only 1: easy).	0.052576	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.036463	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	120	0.0	synth with cache (only 1: unfold remove; only 1: auto_tc).	0.014421	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.040838	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto with qarith; only 1: auto with qarith).	0.036773	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.043967	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	120	0	synth with cache (only 1: discriminate).	0.030654	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	120	0.0.0.0.0	synth with cache (only 1: unfold remove_min; only 1: destruct s; only 1: easy; only 1: destruct delmin; only 1: easy).	0.034985	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.097797	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	120	0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: auto).	0.014939	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.038139	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.029827	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.035501	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.086555	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	120	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.032549	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert p; only 1: induction l; only 1: trivial; only 1: simpl plength_aux; only 1: intros; only 1: rewrite IHl; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Nat.add_succ_r; only 1: easy).	0.031619	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	120	0.0.0	synth with cache (only 1: unfold plength; only 1: rewrite plength_aux_spec; only 1: apply Nat.add_1_r).	0.018785	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	120	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	0.037808	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	120	0.0.0	synth with cache (only 1: rewrite <- elements_spec1; only 1: rewrite treeify_elements; only 1: easy).	0.021065	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply elements_sort_ok; only 1: rewrite treeify_elements; only 1: auto).	0.017118	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction s; only 1: trivial; only 1: intros ?; only 1: rewrite elements_node; only 1: rewrite List.filter_app; only 1: simpl; only 1: destruct f; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy).	0.061629	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	120	0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: rewrite treeify_elements; only 1: rewrite filter_aux_elements; only 1: rewrite app_nil_r; only 1: easy).	0.025257	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- elements_spec1; only 1: rewrite filter_elements; only 1: rewrite filter_InA; only 1: rewrite elements_spec1; only 1: easy; only 1: auto_tc).	0.032556	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: apply elements_sort_ok; only 1: rewrite filter_elements; only 1: apply filter_sort with X.eq; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.023526	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc1 acc2; only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: destruct f; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy).	0.130661	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: unfold filter; only 1: rewrite partition_aux_spec; only 1: easy).	0.023004	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	120	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.018464	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	120	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.017846	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	120	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.018895	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	120	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.021427	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: split; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028446	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: apply SortA_app with X.eq; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *; only 1: intros ?; only 1: intros ?; only 1: inA; only 1: eapply l1_lt_acc; only 1: eauto).	0.045123	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	120	0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.024486	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.036417	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc; only 1: auto_tc).	0.046504	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: rewrite treeify_spec; only 1: rewrite union_list_spec; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto).	0.079246	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	120	0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: tauto).	0.032099	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	120	0.0	synth with cache (only 1: intros; only 1: apply union_spec').	0.019447	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	120	0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.026546	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.031678	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.084635	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_iff_eq_true; only 1: rewrite mem_spec; only 1: rewrite mem_spec; only 1: rewrite H0; only 1: easy; only 1: auto; only 1: auto).	0.031719	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: intuition; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: easy; only 1: auto_tc).	0.113357	27
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	120	0.0.0.0.0	synth with cache (only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.020767	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.034668	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.032360	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHp; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: f_equal; only 1: apply IHp1; only 1: easy; only 1: f_equal; only 1: apply H; only 1: apply IHp2; only 1: intros; only 1: apply H).	0.088661	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	120	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.026229	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	120	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.034598	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_diff; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite diff_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.080576	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply linear_diff_spec; only 1: easy; only 1: intuition; only 1: rewrite filter_spec; only 1: rewrite negb_true_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite mem_spec; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply mem_proper; only 1: easy; only 1: easy; only 1: apply fold_remove_spec; only 1: easy).	0.062765	20
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	0.154983	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.071925	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.138040	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.016756	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct t; only 1: invrb; only 1: auto; only 1: descolor; only 1: invrb; only 1: invrb; only 1: auto; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb).	0.064243	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	120	0	synth with cache (only 1: apply maxdepth_log_cardinal).	0.012811	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.048474	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.160082	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P l; only 1: induction P'; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: Esimpl; only 1: rewrite Pjump_add; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP; only 1: rewrite Pjump_add; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP2; only 1: rsimpl; only 1: rewrite Pjump_xO_tail; only 1: Esimpl; only 1: simpl; only 1: rewrite IHP2; only 1: rewrite Pjump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP'; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: destruct P; only 1: simpl; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite Pjump_xO_tail; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite Pjump_pred_double; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: rsimpl; only 1: unfold tail; only 1: add_permut; only 1: simpl; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: simpl; only 1: Esimpl; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite PaddX_ok; only 1: rsimpl; only 1: rewrite IHP'2; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: trivial).	1.078515	104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.160243	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H1; only 1: revert H; only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.113131	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct r1; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using rbal'_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.174370	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H0; only 1: revert H1; only 1: case rbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.140263	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbalS_match; only 1: destruct 2; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear r; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct l2; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using lbal_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.177743	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.028405	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.024181	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite ifred_notred in *; only 1: elim_compare x k; only 1: auto; only 1: auto; only 1: auto; only 1: trivial; only 1: trivial; only 1: rewrite ifred_notred; only 1: unfold ins; only 1: fold ins; only 1: elim_compare x k; only 1: auto; only 1: apply lbal_rb; only 1: apply ifred_or in IHrbt1; only 1: intuition; only 1: trivial; only 1: apply rbal_rb; only 1: trivial; only 1: apply ifred_or in IHrbt2; only 1: intuition; only 1: trivial).	0.073336	25
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: auto).	0.020794	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.026846	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	120	0.0	synth with cache (only 1: unfold filter; only 1: auto_tc).	0.019071	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.021941	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.022698	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.030757	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.030796	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: unfold linear_union; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.025730	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: unfold linear_inter; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.024713	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: unfold linear_diff; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.021942	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	120	0	synth with cache (only 1: eauto using Rmult_le_compat_l with rorders).	0.064902	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	120	0	synth with cache (only 1: eauto using Rmult_le_compat_r with rorders).	0.072289	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	0.090310	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction M; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: f_equal; only 1: apply H).	0.067714	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	120	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: jump_simpl; only 1: easy).	0.028727	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	120	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.040303	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	120	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: rewrite Pos.add_comm; only 1: easy).	0.043077	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.041644	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_xO_tail; only 1: easy; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.055535	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.089918	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.089275	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: Esimpl; only 1: rewrite nth_spec; only 1: unfold hd; only 1: rewrite <- nth_pred_double; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl).	0.112529	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.211136	26
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044280	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: easy; only 1: Z.swap_greater; only 1: trivial; only 1: Z.swap_greater; only 1: trivial).	0.044219	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	0.023910	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	0.028619	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_le; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: trivial; only 1: trivial).	0.019764	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_lt; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: trivial; only 1: trivial).	0.062226	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_add_opp; only 1: rewrite sub_add_opp; only 1: f_equiv; only 1: easy; only 1: f_equiv; only 1: easy).	0.059296	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	120	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.074061	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	120	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.083280	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	120	0.0.0.0	synth with cache (only 1: case Z.leb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	0.023619	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	120	0.0.0.0	synth with cache (only 1: case Z.ltb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	0.021819	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	120	0.0.0.0.0	synth with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	0.026492	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	120	0.0.0.0.0	synth with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	0.021986	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	120	0.0.0.0.0	synth with cache (only 1: unfold Z.opp; only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl; only 1: easy).	0.066638	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	120	0	synth with cache (only 1: apply Z.leb_le).	0.014311	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	120	0	synth with cache (only 1: apply Z.leb_le).	0.014438	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	120	0	synth with cache (only 1: reflexivity).	0.018045	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	120	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_antisymm).	0.025966	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	120	0.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_trans).	0.050855	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	120	0.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.add_le_mono).	0.041391	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	120	0	synth with cache (only 1: reflexivity).	0.014832	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	120	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_gt; only 1: apply Z.le_succ_l).	0.031675	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.015266	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.024303	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	120	0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: unfold BinIntDef.Z.ltb; only 1: unfold Z.lt; only 1: destruct BinIntDef.Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.032130	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	120	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	0.023116	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	120	0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.020458	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.026560	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct BinIntDef.Z.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.047887	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	120	0	synth with cache (only 1: apply Zeq_is_eq_bool).	0.015623	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	120	0.0.0.0	synth with cache (only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy).	0.035717	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.sub; only 1: unfold Z.eq; only 1: simpl; only 1: symmetry; only 1: rewrite add_succ_r; only 1: easy).	0.038846	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	120	0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases).	0.021787	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	120	0.0	synth with cache (only 1: intros; only 1: apply lt_irrefl).	0.018400	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply well_founded_lt_compat with BinIntDef.Z.to_nat; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Z2Nat.inj_lt; only 1: Z.order; only 1: Z.order; only 1: Z.order).	0.028012	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: easy; only 1: easy).	0.019937	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.min; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl in *; only 1: rewrite min_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.066393	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zlt_0_rec; only 1: auto).	0.019921	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_lt_rec; only 1: easy; only 1: easy).	0.019290	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_lower_bound_rec with z; only 1: easy; only 1: easy).	0.020024	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.max; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite max_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.047578	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	120	0.0	synth with cache (only 1: intros; only 1: apply lt_nge).	0.018390	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).	0.059574	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: easy).	0.023813	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: easy).	0.031098	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.095624	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	120	0.0	synth with cache (only 1: rewrite Pos.add_comm; only 1: apply jump_add).	0.022405	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPinj_ok; only 1: rewrite mkPinj_ok; only 1: rewrite H; only 1: easy).	0.068841	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct BinIntDef.Z.compare; only 1: auto; only 1: auto; only 1: auto).	0.022234	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	120	0	synth with cache (only 1: apply Zcompare_rect).	0.014790	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: left; only 1: auto; only 1: right; only 1: discriminate).	0.019721	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: left; only 1: discriminate; only 1: right; only 1: tauto).	0.019866	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate; only 1: left; only 1: easy).	0.017861	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: right; only 1: tauto; only 1: left; only 1: discriminate).	0.021488	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPX_ok; only 1: rewrite mkPX_ok; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.089817	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	120	0	synth with cache (only 1: exact Z_lt_dec).	0.014717	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	120	0.0.0.0.0.0	synth with cache (only 1: elim Z_lt_ge_dec; only 1: left; only 1: easy; only 1: right; only 1: apply Z.ge_le; only 1: easy).	0.015929	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	120	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).	0.019755	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	120	0	synth with cache (only 1: exact Z_gt_dec).	0.015255	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	120	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_ge_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.lt_nge; only 1: easy).	0.019713	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	0.147697	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.084563	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.134052	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	120	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.043931	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.022789	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.069570	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.018063	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: functional induction bal l x r; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.356909	114
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P l; only 1: induction P'; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: Esimpl; only 1: rewrite jump_add'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP; only 1: rewrite jump_add'; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP2; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP2; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP'; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: destruct P; only 1: simpl; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: simpl; only 1: Esimpl; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite PaddX_ok; only 1: rsimpl; only 1: rewrite IHP'2; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: trivial).	1.137359	101
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	120	0.0	synth with cache (only 1: intros; only 1: apply add_spec').	0.020415	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order).	0.106257	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: auto with *; only 1: auto with *; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto; only 1: auto with *).	0.267740	32
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P; only 1: induction P'; only 1: simpl; only 1: intros; only 1: intros ?; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p; only 1: induction P; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct P; only 1: reflexivity; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: revert p1; only 1: induction P2; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: auto; only 1: auto).	0.384732	110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	120	0.0.0.0	synth with cache (only 1: rewrite Psub_opp; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.062437	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply merge_ok; only 1: eauto; only 1: eauto; only 1: eauto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto).	0.086461	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.043875	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.043045	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.087845	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.058470	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	120	0.0.0	synth with cache (only 1: unfold Zne; only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	0.023111	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	120	0	synth with cache (only 1: apply Z.sub_move_0_r).	0.015908	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.014393	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.014312	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.084631	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.014594	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.015492	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	120	0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: easy).	0.031394	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.021167	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	120	0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: easy).	0.029855	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Zlt_left).	0.022497	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	120	0.0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: apply filter_ok; only 1: easy).	0.024948	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.027588	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	120	0.0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: apply filter_ok; only 1: easy).	0.020688	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.025820	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.061985	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.117034	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite <- jump_tl; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl; only 1: rewrite <- nth_jump; only 1: rewrite nth_pred_double; only 1: easy; only 1: simpl; only 1: Esimpl).	0.143925	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.224621	26
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.045840	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec; only 1: apply interp_PElist_ok; only 1: trivial).	0.046491	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	120	0.0.0.0.0	synth with cache (only 1: unfold Pphi_avoid; only 1: intros; only 1: rewrite mult_dev_ok; only 1: simpl; only 1: Esimpl).	0.069887	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_pow; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy).	0.067049	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_pow_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.052972	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert r; only 1: induction p; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	0.202889	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.max_l).	0.018900	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.081802	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_dev; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: apply mkpow_ok; only 1: intros; only 1: apply mkopp_pow_ok; only 1: intros; only 1: apply mkmult_pow_ok).	0.054625	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_dev_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.079218	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	120	0.0.0	synth with cache (only 1: apply Z.min_case; only 1: auto; only 1: auto).	0.058028	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.050751	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.iter; only 1: unfold BinIntDef.Z.abs_nat; only 1: apply Pos2Nat.inj_iter; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: trivial).	0.061645	16
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst y; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.246333	259
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.249957	257
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	120	0.0	synth with cache (only 1: rewrite Z.mul_1_r; only 1: auto).	0.015665	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	120	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.016705	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_l; only 1: Z.nzsimpl; only 1: easy).	0.084958	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.mul_add_distr_l).	0.015691	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	120	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.052566	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	120	0.0	synth with cache (only 1: Z.nzsimpl; only 1: auto).	0.051823	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	120	0.0.0	synth with cache (only 1: intros ?; only 1: exists x; only 1: auto).	0.016313	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.018847	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	120	0	synth with cache (only 1: Z.order_pos).	0.017617	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: intros ?; only 1: apply Z.mul_eq_0 in H0; only 1: destruct H0; only 1: subst; only 1: easy; only 1: subst; only 1: easy).	0.028459	10
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.019979	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: Z.nzsimpl; only 1: auto).	0.051861	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	120	0.0.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order_pos).	0.048230	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.opp_nonpos_nonneg in H0; only 1: Z.order).	0.022912	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	120	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.add_opp_diag_l; only 1: easy).	0.020924	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.042005	9
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	120	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.add_assoc; only 1: easy).	0.022670	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.020318	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.088701	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.103443	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	120	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle1).	0.023906	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: easy).	0.020776	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	120	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.074496	12
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	120	0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros; only 1: subst; only 1: auto).	0.020856	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	120	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.067307	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_trichotomy).	0.028671	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	120	0	synth with cache (only 1: apply Z.lt_gt_cases).	0.016809	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	120	0	synth with cache (only 1: apply Z.le_ngt).	0.015714	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	120	0	synth with cache (only 1: apply Z.lt_nge).	0.018083	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	120	0	synth with cache (only 1: trivial).	0.014959	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.023002	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.023212	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	120	0	synth with cache (only 1: trivial).	0.016005	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	120	0	synth with cache (only 1: trivial).	0.015219	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.026394	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_asymm).	0.023886	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_irrefl).	0.017309	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	120	0	synth with cache (only 1: apply Z.lt_eq_cases).	0.015349	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	0.035856	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.031746	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.031626	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.053619	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	120	0	synth with cache (only 1: apply Z.succ_le_mono).	0.019071	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	120	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.018489	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.029006	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.032017	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	120	0	synth with cache (only 1: apply Z.succ_le_mono).	0.020536	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	120	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.021111	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.016161	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	120	0.0	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).	0.020208	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.026797	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.028441	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	120	0	synth with cache (only 1: apply Z.lt_succ_r).	0.017890	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	120	0	synth with cache (only 1: apply Z.le_succ_l).	0.019708	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.040821	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_nat; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_nat).	0.017687	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	120	0	synth with cache (only 1: apply Z.lt_succ_r).	0.021602	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.030094	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.le_succ_l; only 1: easy).	0.026281	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	0.031763	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	120	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.023815	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	120	0	synth with cache (only 1: apply Z.lt_le_pred).	0.023751	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.023343	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	120	0	synth with cache (only 1: exact Pos2Z.neg_le_pos).	0.016150	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	120	0	synth with cache (only 1: easy).	0.015938	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	120	0	synth with cache (only 1: exact Pos2Z.pos_is_nonneg).	0.015528	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	120	0	synth with cache (only 1: exact Pos2Z.neg_is_neg).	0.016383	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: easy).	0.039479	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.031121	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.035977	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	120	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.017656	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	120	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.018536	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	120	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.020567	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	120	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.020425	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	120	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.018412	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	120	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.021244	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	120	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.018963	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	120	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.019528	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.037980	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.037509	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.022032	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.020457	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.022216	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.064110	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.027636	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.026816	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	120	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.020272	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.029011	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.020726	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.039159	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.071088	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.042894	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.081717	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.025381	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.026336	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.030258	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.026758	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	120	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.021863	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.040580	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.042817	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: apply Z.mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.034348	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	0.038656	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	120	0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: easy).	0.040326	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.037711	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	120	0	synth with cache (only 1: apply Z.mul_pos_cancel_r).	0.023550	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.031204	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_l).	0.061246	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	120	0	synth with cache (only 1: apply Z.square_lt_simpl_nonneg).	0.027499	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: compute; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: rewrite H2; only 1: intuition).	0.301453	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.052743	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	120	0	synth with cache (only 1: apply Z.add_move_r).	0.035148	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.035117	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.027930	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.028111	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.083603	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact bits_lt_antirefl; only 1: exact bits_lt_trans).	0.015292	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: reflexivity).	6.283463	513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	120	0	synth with cache (only 1: congruence).	0.017772	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	120	0	synth with cache (only 1: congruence).	0.016771	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold div; only 1: unfold modulo; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.sgn_abs; only 1: apply Z.div_mod; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.030989	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: destruct b; only 1: compute; only 1: destruct H; only 1: easy; only 1: compute; only 1: trivial; only 1: compute; only 1: trivial).	0.024619	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: trivial; only 1: unfold Zpower_alt; only 1: unfold BinIntDef.Z.pow; only 1: unfold BinIntDef.Z.pow_pos; only 1: revert a; only 1: induction p; only 1: simpl; only 1: intros; only 1: f_equal; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: trivial).	0.055194	31
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	120	0	synth with cache (only 1: reflexivity).	0.011129	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: intros ?; only 1: simpl; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.iter_op_succ; only 1: easy; only 1: apply Z.mul_assoc; only 1: intros ?; only 1: simpl; only 1: elim H; only 1: easy).	0.059448	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	120	0.0.0.0	synth with cache (only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.031303	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	120	0.0.0	synth with cache (only 1: rewrite Zpower_equiv; only 1: rewrite Pos2Z.inj_pow; only 1: easy).	0.017364	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.230045	257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.016305	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.018105	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	120	0	synth with cache (only 1: reflexivity).	0.014384	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.017394	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: trivial).	0.018494	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.016545	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.020904	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019659	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.024572	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).	0.021530	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.021615	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	120	0	synth with cache (only 1: reflexivity).	0.014842	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.060045	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.064275	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	120	0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: easy).	0.017693	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	120	0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: easy).	0.017505	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	120	0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: easy).	0.017038	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	120	0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: easy).	0.018310	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	120	0.0.0.0	synth with cache (only 1: destruct z; only 1: easy; only 1: easy; only 1: easy).	0.019669	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.022054	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.024174	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy).	0.040572	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite inj_sub_max; only 1: unfold N.le in H; only 1: rewrite N.compare_antisym in H; only 1: rewrite <- inj_compare in H; only 1: rewrite Z.compare_sub in H; only 1: destruct BinIntDef.Z.sub; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.026713	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.019381	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	120	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub_max; only 1: easy).	0.018336	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub; only 1: trivial; only 1: apply N.le_succ_l in H; only 1: easy).	0.024199	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: case BinNatDef.N.compare; only 1: easy; only 1: easy; only 1: easy).	0.023335	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: case N.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).	0.030078	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: trivial; only 1: apply is_nonneg; only 1: easy).	0.023368	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: trivial; only 1: easy; only 1: apply is_nonneg; only 1: easy).	0.030119	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022735	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.023001	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: rewrite Z.pow_0_l; only 1: easy; only 1: easy; only 1: destruct m; only 1: trivial; only 1: apply Pos2Z.inj_pow).	0.027874	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	120	0	synth with cache (only 1: apply Z.testbit_of_N).	0.018996	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.021787	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: subst; only 1: easy).	0.022690	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	120	0	synth with cache (only 1: reflexivity).	0.015386	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_N; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_N).	0.016866	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	120	0	synth with cache (only 1: trivial).	0.014392	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.015113	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct m; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.034826	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.065789	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	120	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: intros; only 1: rewrite inj_add; only 1: apply N.add_1_r; only 1: assumption; only 1: easy).	0.022641	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.051169	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: auto; only 1: auto).	0.024158	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.026005	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.025522	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.051308	34
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.071459	38
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: clear; only 1: simpl; only 1: rewrite <- N2Z.id; only 1: f_equal; only 1: rewrite N2Z.inj_mod; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy).	0.063873	33
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.033968	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.033552	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: trivial).	0.022889	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.049186	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: trivial; only 1: intros; only 1: rewrite <- N2Z.id; only 1: rewrite N2Z.inj_pow; only 1: rewrite id; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.033652	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.028303	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.019721	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.023909	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.021095	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.021152	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	120	0	synth with cache (only 1: reflexivity).	0.018818	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_N]; only 1: destruct x; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.572475	769
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.016944	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.017196	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.021238	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_succ; only 1: assumption; only 1: assumption; only 1: apply Z.le_le_succ_r; only 1: assumption).	0.025166	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_add; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply Z.add_nonneg_nonneg; only 1: auto; only 1: auto).	0.030518	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.030161	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_sub; only 1: trivial; only 1: trivial; only 1: Z.order; only 1: apply Z.le_0_sub; only 1: easy).	0.028745	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_pred; only 1: Z.order; only 1: apply Z.lt_succ_r; only 1: rewrite Z.succ_pred; only 1: auto).	0.024439	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.023351	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.024798	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.023467	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_min; only 1: auto; only 1: auto; only 1: apply Z.min_glb; only 1: auto; only 1: auto).	0.041974	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_max; only 1: auto; only 1: auto; only 1: transitivity n; only 1: auto; only 1: apply Z.le_max_l).	0.026005	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite abs_N_spec; only 1: rewrite Z.abs_pow; only 1: rewrite Z2N.inj_pow; only 1: rewrite <- abs_N_spec; only 1: f_equal; only 1: symmetry; only 1: apply abs_N_nonneg; only 1: trivial; only 1: apply Z.abs_nonneg; only 1: trivial).	0.031252	11
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.022352	9
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.033015	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.036403	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	120	0	synth with cache (only 1: assumption).	0.008578	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	120	0	synth with cache (only 1: reflexivity).	0.024064	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos2Z.inj_succ).	0.028006	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	120	0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.021055	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- Z_N_nat; only 1: rewrite N2Z.id; only 1: rewrite Nat2N.id; only 1: easy).	0.019709	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: trivial).	0.020631	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Z.inj_compare; only 1: rewrite <- Nat2N.inj_compare; only 1: easy).	0.022650	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	120	0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: rewrite nat_compare_le; only 1: easy).	0.021975	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.468618	257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	120	0.0	synth with cache (only 1: intros; only 1: auto using BinInt.Z.le_antisymm).	0.016678	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	120	0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_lt; only 1: easy).	0.021334	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	120	0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: rewrite nat_compare_ge; only 1: easy).	0.020279	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	120	0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_gt; only 1: easy).	0.021397	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	120	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.019087	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_add; only 1: rewrite N2Z.inj_add; only 1: easy).	0.022031	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_mul; only 1: rewrite N2Z.inj_mul; only 1: easy).	0.027636	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub_max; only 1: easy).	0.026537	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_le; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub; only 1: easy; only 1: easy).	0.033221	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred_max; only 1: easy).	0.020890	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_lt; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred; only 1: easy; only 1: easy).	0.054433	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_min; only 1: rewrite N2Z.inj_min; only 1: easy).	0.023786	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.011477	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_max; only 1: rewrite N2Z.inj_max; only 1: easy).	0.023736	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: auto).	0.026678	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.394602	257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: rewrite Z2N.id; only 1: easy; only 1: assumption).	0.025391	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: subst; only 1: easy).	0.023412	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	120	0	synth with cache (only 1: reflexivity).	0.018224	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.017404	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.018533	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: auto; only 1: auto).	0.028701	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_mul; only 1: rewrite N2Nat.inj_mul; only 1: easy; only 1: auto; only 1: auto).	0.032709	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.021732	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: trivial).	0.023987	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy).	0.023041	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Nat2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: auto; only 1: auto).	0.026394	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.027847	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.027043	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy).	0.023984	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy).	0.034342	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.023415	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.023872	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	120	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.019074	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite Zabs2N.id; only 1: rewrite Nat2N.id; only 1: easy).	0.021297	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	120	0	synth with cache (only 1: reflexivity).	0.020144	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.019696	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.022445	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.026406	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: auto; only 1: auto).	0.029626	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.037758	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: easy).	0.026292	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy; only 1: auto).	0.023143	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- N2Nat.inj_compare; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.030072	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.027011	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: apply Inf_lt with x; only 1: auto; only 1: auto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	0.174145	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.025841	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy; only 1: auto; only 1: auto).	0.030128	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy; only 1: auto; only 1: auto).	0.032641	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ_abs; only 1: rewrite N2Nat.inj_succ; only 1: easy).	0.059172	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: constructors; only 1: auto; only 1: apply Inf_eq with x'; only 1: auto; only 1: apply inter_inf; only 1: auto; only 1: auto; only 1: apply Inf_eq with x; only 1: auto; only 1: auto; only 1: auto).	0.136767	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add_abs; only 1: rewrite N2Nat.inj_add; only 1: easy).	0.063581	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_mul_abs; only 1: rewrite N2Nat.inj_mul; only 1: easy).	0.027811	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply Nat2Z.inj; only 1: easy).	0.021584	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite not_le_minus_0; only 1: auto with arith; only 1: auto with arith).	0.019889	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: intuition; only 1: inv; only 1: intuition; only 1: inv; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec'; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition).	0.475648	34
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: apply Hrec; only 1: trivial; only 1: trivial; only 1: apply Inf_lt with x; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	0.228734	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	120	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.091929	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: intuition; only 1: inv; only 1: intuition; only 1: inv; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: sort_inf_in; only 1: order; only 1: sort_inf_in; only 1: right; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec'; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition).	0.639912	41
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	120	0	synth with cache (only 1: constructors).	0.009165	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	120	0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intuition; only 1: inv).	0.042556	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	120	0	synth with cache (only 1: intuition).	0.013512	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.017146	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.016088	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	120	0	synth with cache (only 1: reflexivity).	0.012374	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	120	0	synth with cache (only 1: auto).	0.012804	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.even_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.036176	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.odd_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.035893	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	120	0.0.0	synth with cache (only 1: rewrite Z.even_spec; only 1: rewrite Zeven_equiv; only 1: easy).	0.019328	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	120	0.0.0	synth with cache (only 1: rewrite Z.odd_spec; only 1: rewrite Zodd_equiv; only 1: easy).	0.019680	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_even).	0.015813	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_odd).	0.016051	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	0.027232	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	0.031824	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto).	0.030877	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct BinIntDef.Z.odd; only 1: intuition; only 1: intuition).	0.030511	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_succ; only 1: easy).	0.028528	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_succ; only 1: easy).	0.028907	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_pred; only 1: easy).	0.045699	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_pred; only 1: easy).	0.029348	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: rewrite Zdiv2_odd_eqn  at 1; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.038812	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).	0.040639	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.030211	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeven_bool_iff in H; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite Zodd_even_bool; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.026157	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy).	0.035054	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: unfold BinIntDef.Z.sub; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: destruct H; only 1: easy; only 1: easy).	0.034450	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.026113	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.021616	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.052863	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.048821	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.031815	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	120	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.045628	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: apply Zeven_plus_Zodd; only 1: easy; only 1: easy).	0.022225	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_even; only 1: rewrite <- Z.negb_even; only 1: rewrite Bool.negb_true_iff; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.101568	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: rewrite Z.even_mul; only 1: rewrite H; only 1: easy).	0.031641	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.094303	51
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Zeven_mult_Zeven_l; only 1: easy).	0.021811	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	120	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_mul; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.055221	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	120	0.0.0	synth with cache (only 1: rewrite i2z_eqb; only 1: rewrite Z.eqb_eq; only 1: easy).	0.019619	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	120	0.0.0.0	synth with cache (only 1: rewrite <- eqb_eq; only 1: destruct eqb; only 1: intuition; only 1: intuition).	0.024933	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	120	0.0.0	synth with cache (only 1: rewrite i2z_ltb; only 1: rewrite Z.ltb_lt; only 1: easy).	0.017457	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	120	0.0.0.0	synth with cache (only 1: rewrite <- ltb_lt; only 1: destruct ltb; only 1: intuition; only 1: intuition).	0.023783	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	120	0.0.0	synth with cache (only 1: rewrite i2z_leb; only 1: rewrite Z.leb_le; only 1: easy).	0.018562	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	120	0.0.0.0	synth with cache (only 1: rewrite <- leb_le; only 1: destruct leb; only 1: intuition; only 1: intuition).	0.025349	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction e; only 1: simpl; only 1: i2z; only 1: trivial; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.196258	44
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.160842	33
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_opp).	0.015231	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.compare_sub; only 1: unfold BinIntDef.Z.sub; only 1: destruct BinIntDef.Z.add; only 1: discriminate; only 1: exists p; only 1: easy; only 1: discriminate).	0.025228	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	120	0	synth with cache (only 1: apply Z.add_compare_mono_l).	0.015458	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	120	0.0	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.016541	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	120	0.0.0	synth with cache (only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	0.017391	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.mul_compare_mono_l; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_compare_mono_l; only 1: easy).	0.042625	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	120	0	synth with cache (only 1: trivial).	0.015624	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: symmetry; only 1: apply Zcompare_mult_compat; only 1: discriminate).	0.020026	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	120	0	synth with cache (only 1: reflexivity).	0.028189	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	120	0	synth with cache (only 1: reflexivity).	0.026944	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	120	0	synth with cache (only 1: reflexivity).	0.028755	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	120	0	synth with cache (only 1: reflexivity).	0.026748	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	120	0	synth with cache (only 1: reflexivity).	0.026294	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	120	0	synth with cache (only 1: reflexivity).	0.013978	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	120	0	synth with cache (only 1: reflexivity).	0.013650	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	120	0	synth with cache (only 1: reflexivity).	0.013155	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	120	0	synth with cache (only 1: reflexivity).	0.013939	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	120	0	synth with cache (only 1: reflexivity).	0.014905	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	120	0	synth with cache (only 1: reflexivity).	0.013323	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	120	0	synth with cache (only 1: reflexivity).	0.013595	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: rewrite H; only 1: auto).	0.031263	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.012005	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: destruct X.eq_dec; only 1: auto; only 1: constructors; only 1: intros ?; only 1: rewrite add_spec in *; only 1: intuition; only 1: intuition; only 1: auto).	0.050762	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.eq_dec; only 1: inv; only 1: auto; only 1: inv; only 1: constructors; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition; only 1: auto).	0.062724	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	120	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: constructors; only 1: intros ?; only 1: inv).	0.015018	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: left; only 1: auto).	0.027478	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	120	0.0	synth with cache (only 1: unfold empty; only 1: constructors).	0.010635	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: red; only 1: intros; only 1: inv).	0.015829	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	120	0.0	synth with cache (only 1: unfold elements; only 1: intuition).	0.014599	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	120	0.0	synth with cache (only 1: unfold elements; only 1: auto).	0.011269	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	120	0	synth with cache (only 1: reflexivity).	0.012224	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: auto with *).	0.031324	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: rewrite IHs'; only 1: rewrite remove_spec; only 1: rewrite InA_cons; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.121953	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	120	0	synth with cache (only 1: auto).	0.009856	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: inv; only 1: case f; only 1: constructors; only 1: contradict H0; only 1: eapply filter_spec'; only 1: eauto; only 1: auto; only 1: auto).	0.040614	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	120	0.0.0	synth with cache (only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_assoc).	0.019087	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: unfold tail; only 1: f_equal).	0.033468	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	120	0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.022986	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	120	0.0.0.0	synth with cache (only 1: rewrite <- jump_add; only 1: f_equal; only 1: symmetry; only 1: apply Pos.add_1_l).	0.020085	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.082412	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: destruct p; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal).	0.025658	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	120	0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.017019	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.019998	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.049405	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: reflexivity).	0.026367	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: ring).	0.030860	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto).	0.030350	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.041878	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.111482	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.136951	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.049931	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_eq_0; only 1: intuition).	0.049447	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	120	0.0.0.0.0	synth with cache (only 1: unfold Qplus; only 1: unfold inject_Z; only 1: simpl; only 1: f_equal; only 1: ring).	0.047410	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	120	0	synth with cache (only 1: reflexivity).	0.032220	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	120	0	synth with cache (only 1: reflexivity).	0.033053	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: destruct Qnum0; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	0.044688	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qmult; only 1: case Qnum0; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: elim H; only 1: auto; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.080483	18
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qinv; only 1: unfold Qmult; only 1: simpl; only 1: destruct Qnum0; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.102988	27
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qdiv; only 1: rewrite <- Qmult_assoc; only 1: rewrite Qmult_inv_r; only 1: apply Qmult_1_r; only 1: auto).	0.035430	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.067069	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.044322	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.019821	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.011957	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.018214	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	120	0	synth with cache (only 1: auto).	0.012167	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	120	0	synth with cache (only 1: auto).	0.011747	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.011933	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	120	0	synth with cache (only 1: auto).	0.012071	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Sort_NoDupA; only 1: apply elements_3; only 1: auto).	0.014629	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: apply In_1 with x; only 1: auto; only 1: auto).	0.019433	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	120	0	synth with cache (only 1: intuition_in).	0.064538	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	120	0	synth with cache (only 1: intuition_in).	0.024329	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	120	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.014720	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	120	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.014589	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	120	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.053865	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	120	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.044634	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	120	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.013149	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	120	0	synth with cache (only 1: eauto).	0.015132	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	120	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.013983	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	120	0	synth with cache (only 1: eauto).	0.012452	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.029916	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.037178	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.012906	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	120	0	synth with cache (only 1: auto).	0.009925	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	120	0	synth with cache (only 1: exact min_elt_spec1).	0.012750	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	120	0	synth with cache (only 1: exact min_elt_spec3).	0.012556	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_spec2'; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.019913	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.041045	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold rev_elements; only 1: simpl; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.024815	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: trivial; only 1: rewrite elements_node; only 1: rewrite rev_elements_node; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite rev_app_distr; only 1: simpl; only 1: rewrite app_assoc_reverse; only 1: easy).	0.029737	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold For_all; only 1: induction s; only 1: simpl; only 1: split; only 1: intros; only 1: inv; only 1: intros; only 1: auto; only 1: simpl; only 1: rewrite <- andb_lazy_alt; only 1: rewrite <- andb_lazy_alt; only 1: rewrite andb_true_iff; only 1: rewrite andb_true_iff; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: clear IHs1 IHs2; only 1: intuition_in; only 1: eauto).	0.171592	19
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite H; only 1: easy).	0.028097	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.021443	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.012136	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.012529	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial).	0.027193	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Exists; only 1: induction s; only 1: simpl; only 1: split; only 1: discriminate; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: clear H1; only 1: inv; only 1: simpl; only 1: rewrite <- orb_lazy_alt; only 1: rewrite <- orb_lazy_alt; only 1: rewrite orb_true_iff; only 1: rewrite orb_true_iff; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: clear IHs1 IHs2; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: exists t0; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: inv; only 1: left; only 1: left; only 1: eauto; only 1: left; only 1: right; only 1: exists x; only 1: eauto; only 1: right; only 1: exists x; only 1: eauto).	0.205683	47
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy).	0.039359	35
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i acc; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHs1; only 1: simpl; only 1: unfold flip at 2; only 1: apply IHs2).	0.037541	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i; only 1: unfold elements; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite @fold_spec'; only 1: rewrite IHs2; only 1: simpl; only 1: auto).	0.037108	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply add_assoc_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: simpl; only 1: apply add_assoc_pos).	0.022051	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial).	0.016511	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.022808	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: apply mul_add_distr_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: apply mul_add_distr_pos).	0.032282	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	120	0	synth with cache (only 1: reflexivity).	0.011603	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	120	0	synth with cache (only 1: reflexivity).	0.011521	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: unfold MapsTo in *; only 1: auto).	0.059687	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.017270	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	120	0	synth with cache (only 1: reflexivity).	0.011415	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.098777	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	120	0	synth with cache (only 1: apply add_0_r).	0.011097	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	120	0	synth with cache (only 1: easy).	0.011369	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto with ordered_type; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.088293	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.097750	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.011871	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	120	0	synth with cache (only 1: reflexivity).	0.012665	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.020596	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: unfold L.eq; only 1: intros; only 1: setoid_rewrite elements_spec1; only 1: firstorder).	0.025336	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.083400	51
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.019087	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.016634	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: rewrite app_assoc_reverse; only 1: easy).	0.023898	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	0.013238	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.018880	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.019702	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.012817	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: elim_compare x1 x2; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.036883	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	120	0.0.0.0	synth with cache (only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.024458	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	120	0	synth with cache (only 1: reflexivity).	0.014429	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.021202	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Peano.lt; only 1: induction s; only 1: auto; only 1: simpl; only 1: rewrite <- Nat.add_succ_r; only 1: rewrite <- Nat.add_succ_l; only 1: rewrite Nat.add_0_r; only 1: apply Nat.add_le_mono; only 1: etransitivity; only 1: apply IHs1; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_l; only 1: etransitivity; only 1: apply IHs2; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_r).	0.043966	20
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.018289	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.042659	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	120	0.0.0	synth with cache (only 1: apply Nat.log2_le_pow2; only 1: auto with arith; only 1: apply mindepth_cardinal).	0.021324	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	120	0	synth with cache (only 1: reflexivity).	0.015068	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.016020	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.016617	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply quot_rem').	0.016640	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_l').	0.014820	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_r').	0.015244	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.074973	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	0.030401	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.023356	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: easy; only 1: trivial).	0.017860	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.015628	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.016336	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.025788	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022058	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.017120	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.012912	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	120	1	synth with cache (only 1: eauto using Rmult_lt_reg_l with rorders).	0.080841	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.018512	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.017862	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.018383	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.018944	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.017820	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.009310	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	120	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_lt).	0.018335	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	120	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_le).	0.016694	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.017132	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	120	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_spec).	0.017541	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	120	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_spec).	0.016827	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	120	0.0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.021244	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply find_1; only 1: apply add_NoDup; only 1: auto; only 1: apply add_1; only 1: auto).	0.015770	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	120	0	synth with cache (only 1: reflexivity).	0.015927	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.016495	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	0.020154	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	120	0	synth with cache (only 1: easy).	0.038324	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	120	0	synth with cache (only 1: auto).	0.013118	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	120	0.0	synth with cache (only 1: compute; only 1: congruence).	0.038698	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	120	0	synth with cache (only 1: auto).	0.013146	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	120	0	synth with cache (only 1: auto).	0.016578	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	120	0	synth with cache (only 1: auto).	0.010709	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	120	0	synth with cache (only 1: reflexivity).	0.016850	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	120	0	synth with cache (only 1: reflexivity).	0.016500	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	120	0.0.0	synth with cache (only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.017728	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	120	0	synth with cache (only 1: reflexivity).	0.016451	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: trivial).	0.020007	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: rewrite Pos.sub_diag; only 1: easy; only 1: intros; only 1: rewrite Pos.sub_lt; only 1: easy; only 1: trivial; only 1: intros; only 1: destruct BinPosDef.Pos.sub; only 1: easy; only 1: easy; only 1: easy).	0.032140	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.026341	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	120	0	synth with cache (only 1: reflexivity).	0.018053	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	120	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.019973	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	120	0	synth with cache (only 1: apply inj_pow_pos).	0.018464	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	120	0	synth with cache (only 1: reflexivity).	0.016248	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	120	0	synth with cache (only 1: reflexivity).	0.017823	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	120	0	synth with cache (only 1: reflexivity).	0.017341	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	120	0	synth with cache (only 1: reflexivity).	0.017387	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	120	0	synth with cache (only 1: reflexivity).	0.016060	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold equal; only 1: intuition; only 1: apply andb_true_intro; only 1: split; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder).	0.169469	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.025177	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.021881	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	120	0	synth with cache (only 1: reflexivity).	0.015057	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	120	0	synth with cache (only 1: reflexivity).	0.016774	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	120	0	synth with cache (only 1: apply Z.divide_Zpos).	0.017148	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	120	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.016686	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.017811	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj_neg; only 1: intros; only 1: f_equal; only 1: easy).	0.020729	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.016585	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	0.020472	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	120	0	synth with cache (only 1: easy).	0.016262	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	120	0	synth with cache (only 1: easy).	0.019020	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	120	0	synth with cache (only 1: easy).	0.016868	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	120	0.0	synth with cache (only 1: compute; only 1: congruence).	0.021741	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	120	0	synth with cache (only 1: easy).	0.023332	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	120	0	synth with cache (only 1: easy).	0.019739	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.025461	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.078387	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	120	0	synth with cache (only 1: easy).	0.067570	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	120	0	synth with cache (only 1: easy).	0.070325	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	120	0	synth with cache (only 1: reflexivity).	0.076936	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	120	0	synth with cache (only 1: reflexivity).	0.018366	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	120	0	synth with cache (only 1: reflexivity).	0.017089	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	120	0	synth with cache (only 1: reflexivity).	0.020720	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	120	0	synth with cache (only 1: reflexivity).	0.021135	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	120	0	synth with cache (only 1: reflexivity).	0.020279	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	120	0	synth with cache (only 1: reflexivity).	0.017352	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	120	0	synth with cache (only 1: reflexivity).	0.018242	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	120	0	synth with cache (only 1: reflexivity).	0.017009	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	120	0	synth with cache (only 1: reflexivity).	0.016778	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	120	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_r).	0.018323	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	120	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_l).	0.015321	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N'; only 1: destruct n; only 1: unfold BinIntDef.Z.testbit; only 1: destruct a; only 1: easy; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct BinPosDef.Pos.pred_N; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy; only 1: trivial).	0.040203	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: constructor 2; only 1: unfold MapsTo in *; only 1: auto).	0.106369	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	120	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.025289	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.025411	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.095540	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H1; only 1: clear H; only 1: apply id; only 1: auto; only 1: simpl; only 1: easy).	0.035311	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: f_equal; only 1: easy).	0.021647	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	120	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.019569	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	120	0	synth with cache (only 1: reflexivity).	0.018580	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.026009	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.086661	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.043863	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	120	0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: easy).	0.028063	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.118159	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044404	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.067840	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028399	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043352	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: auto; only 1: auto; only 1: apply Z.pow_pos_nonneg; only 1: auto; only 1: apply Z.lt_le_incl; only 1: auto).	0.026816	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.048929	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.040072	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043397	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.055012	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite <- Pos2Z.inj_max; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply to_pos_nonpos; only 1: apply Z.max_lub; only 1: easy; only 1: easy).	0.048605	30
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos2Z.inj_min; only 1: easy; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply to_pos_nonpos; only 1: apply Z.min_le_iff; only 1: left; only 1: easy).	0.060388	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.021687	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044860	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_move_l; only 1: easy).	0.022425	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	120	0	synth with cache (only 1: congruence).	0.019439	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	120	0	synth with cache (only 1: reflexivity).	0.018240	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	120	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.016592	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	0.019495	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.013281	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct choose; only 1: left; only 1: exists e; only 1: auto; only 1: right; only 1: auto).	0.016492	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	120	0.0.0	synth with cache (only 1: unfold empty; only 1: case M.empty; only 1: auto).	0.012477	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: auto).	0.015845	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: intros; only 1: discriminate H).	0.015418	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: auto).	0.014887	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: intros; only 1: discriminate H).	0.015978	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition).	0.015329	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: inversion H).	0.017954	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition).	0.016181	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.017060	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.041429	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.019576	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.015515	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	120	0	synth with cache (only 1: auto with ordered_type).	0.012043	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.019266	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.018629	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.021741	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.052298	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.020781	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.020402	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.015980	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.017534	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.027909	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.020066	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.019390	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.019749	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.019853	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.021002	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.020190	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.023872	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.018841	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cardinal; only 1: case M.cardinal; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.027741	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: case M.fold; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.037114	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	120	0.0.0.0	synth with cache (only 1: intros; only 1: case f; only 1: auto with bool; only 1: auto with bool).	0.018280	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool; only 1: unfold compat_P; only 1: unfold Proper; only 1: unfold respectful; only 1: unfold impl; only 1: intros; only 1: rewrite <- H1; only 1: firstorder).	0.025514	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	120	0.0	synth with cache (only 1: unfold if_zero; only 1: f_equiv').	0.035932	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	120	0.0.0.0	synth with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite @recursion_0; only 1: easy).	0.014399	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite @recursion_succ; only 1: easy; only 1: easy; only 1: easy).	0.021862	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	120	0.0	synth with cache (only 1: unfold def_add; only 1: f_equiv').	0.037918	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_0; only 1: easy).	0.012526	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.071624	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: rewrite def_add_0_l; only 1: rewrite add_0_l; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.038005	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	120	0.0	synth with cache (only 1: unfold def_mul; only 1: f_equiv').	0.043710	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_mul; only 1: rewrite @recursion_0; only 1: easy).	0.012164	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition).	0.029596	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.027625	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition).	0.025871	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct m; only 1: rewrite def_mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_mul_succ_r; only 1: rewrite mul_succ_r; only 1: rewrite def_add_add; only 1: rewrite H; only 1: easy).	0.048973	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.032257	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	120	0.0	synth with cache (only 1: unfold ltb; only 1: f_equiv').	0.071442	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold ltb; only 1: rewrite @recursion_0; only 1: easy).	0.013301	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite ltb_base; only 1: rewrite if_zero_succ; only 1: f_equiv').	0.012531	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite ltb_step; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.041819	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: apply nlt_ge).	0.016808	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	120	0.0	synth with cache (only 1: unfold even; only 1: f_equiv').	0.035821	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	120	0.0.0	synth with cache (only 1: unfold even; only 1: rewrite @recursion_0; only 1: auto).	0.014391	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	120	0.0.0.0.0.0	synth with cache (only 1: unfold even; only 1: intros ?; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.051392	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold half_aux; only 1: f_equiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x1; only 1: intros ?; only 1: destruct y1; only 1: intros ?; only 1: destruct H1; only 1: compute in *; only 1: rewrite H1; only 1: rewrite H2; only 1: auto with *; only 1: f_equiv').	0.087774	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	120	0.0	synth with cache (only 1: unfold half; only 1: f_equiv').	0.059151	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	120	0.0.0	synth with cache (only 1: unfold half_aux; only 1: rewrite @recursion_0; only 1: auto).	0.014507	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: rewrite add_0_l; only 1: easy; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: f_equiv; only 1: easy).	0.064110	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: destruct H; only 1: right; only 1: f_equiv; only 1: easy; only 1: auto with *).	0.062345	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	120	0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.015039	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite one_succ; only 1: rewrite half_aux_succ; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.019323	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: apply M.In_compat; only 1: congruence; only 1: congruence).	0.019066	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.019773	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	120	0	synth with cache (only 1: exact M.empty_spec).	0.009865	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	120	0.0	synth with cache (only 1: unfold pow; only 1: f_equiv').	0.049076	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_0; only 1: auto with *).	0.014890	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.058807	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: destruct ltb; only 1: auto with *; only 1: f_equiv; only 1: apply H; only 1: f_equiv; only 1: easy).	0.072934	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold log; only 1: apply strong_rec_wd; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.023970	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.023144	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: apply H0).	0.016863	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EquivBefore; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.055042	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Below; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.033284	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Above; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.034357	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EmptyBetween; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.060284	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.110318	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite <- H0; only 1: auto; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite H0; only 1: auto).	0.064866	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.013771	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with *).	0.014002	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	120	0	synth with cache (only 1: apply @pair_compat).	0.011044	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.022463	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	120	0.0	synth with cache (only 1: apply InfA_ltA; only 1: auto with *).	0.013600	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	120	0.0.0.0	synth with cache (only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.017549	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	120	0.0.0.0	synth with cache (only 1: apply SortA_NoDupA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.014685	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	120	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: auto with relations; only 1: left; only 1: apply Sort_In_cons_1 with l; only 1: auto with relations; only 1: auto with relations).	0.040154	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct O.compare; only 1: auto; only 1: auto; only 1: auto).	0.066924	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	120	0	synth with cache (only 1: apply O.lt_strorder).	0.009336	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.019206	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite CompOpp_iff; only 1: apply compare_Lt).	0.017328	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: transitivity y; only 1: auto; only 1: auto).	0.094249	26
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	120	0	synth with cache (only 1: firstorder).	0.012290	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	120	0	synth with cache (only 1: reflexivity).	0.010082	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	120	0	synth with cache (only 1: reflexivity).	0.010517	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	120	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.012447	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	120	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.014284	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	120	0	synth with cache (only 1: reflexivity).	0.011182	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	120	0	synth with cache (only 1: reflexivity).	0.010440	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	120	0	synth with cache (only 1: trivial).	0.009725	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_mono; only 1: easy; only 1: easy).	0.038292	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	120	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.060694	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_le_mono; only 1: easy; only 1: easy).	0.032532	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	120	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.026180	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_lt_mono; only 1: easy; only 1: easy).	0.053774	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.024821	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_mono; only 1: easy; only 1: easy).	0.030078	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: apply @InA_eqk_eqke in H; only 1: destruct H; only 1: destruct x0; only 1: destruct H; only 1: compute in H; only 1: exists e; only 1: rewrite H; only 1: easy).	0.063443	17
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	120	0.0	synth with cache (only 1: rewrite @In_alt2; only 1: apply Exists_nil).	0.015183	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	120	0.0.0.0	synth with cache (only 1: rewrite @In_alt2; only 1: rewrite @In_alt2; only 1: rewrite Exists_cons; only 1: intuition).	0.041143	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold MapsTo; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition).	0.044993	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.022026	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.020125	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: red in H; only 1: rewrite InA_cons in H; only 1: rewrite @eqke_def in H; only 1: intuition; only 1: right; only 1: exists x; only 1: easy).	0.030191	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite H; only 1: simpl; only 1: auto).	0.015478	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite @eqk_def; only 1: intuition).	0.024667	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold lt; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.013080	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_trans with m; only 1: assumption; only 1: apply Rlt_succ_r).	0.023761	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.017103	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: destruct 1; only 1: destruct 1; only 1: eauto with *; only 1: trivial).	0.053661	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold compare; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: simpl; only 1: auto; only 1: elim_comp; only 1: auto).	0.045832	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: discriminate; only 1: elim_comp; only 1: auto).	0.150170	41
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	120	0.0	synth with cache (only 1: red; only 1: auto with arith).	0.010544	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	120	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.013844	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto).	0.011449	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	120	1.0.0.0.0.0	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.018967	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	120	0	synth with cache (only 1: exact Integers_defn).	0.010528	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	120	0.0.0.0.0.0.0	synth with cache (only 1: generalize Integers_has_no_ub; only 1: intros ?; only 1: red; only 1: intros ?; only 1: apply H; only 1: apply Finite_subset_has_lub; only 1: auto with sets arith).	0.015365	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	120	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.013883	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans).	0.010521	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans).	0.009824	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: exact eq_sym; only 1: exact eq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_lt with x; only 1: auto with ordered_type; only 1: apply lt_eq with x0; only 1: auto; only 1: auto).	0.020109	15
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	120	0	synth with cache (only 1: reflexivity).	0.009111	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	120	0	synth with cache (only 1: order).	0.011491	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	120	0	synth with cache (only 1: order).	0.012715	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	120	0	synth with cache (only 1: order).	0.013038	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	120	0	synth with cache (only 1: order).	0.012230	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	120	0	synth with cache (only 1: order).	0.012483	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	120	0	synth with cache (only 1: order).	0.012427	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	120	0.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold not in *; only 1: eauto; only 1: unfold not in *; only 1: eauto).	0.033744	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	120	0	synth with cache (only 1: order).	0.012768	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	120	0	synth with cache (only 1: order).	0.013774	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	120	0	synth with cache (only 1: order).	0.013049	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	120	0	synth with cache (only 1: order).	0.012302	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	120	0	synth with cache (only 1: order).	0.011645	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	120	0	synth with cache (only 1: order).	0.010933	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	120	0	synth with cache (only 1: order).	0.012029	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	120	0	synth with cache (only 1: order).	0.046002	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_equivalence; only 1: auto).	0.014194	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists e; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order).	0.026803	11
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_implication; only 1: auto).	0.013898	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	120	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exists l; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order).	0.032662	12
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	120	0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.013096	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	120	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists l; only 1: auto).	0.035541	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.021319	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	120	0	synth with cache (only 1: auto).	0.013521	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	120	0	synth with cache (only 1: auto).	0.015499	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	120	0	synth with cache (only 1: auto with ordered_type).	0.013152	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	120	0	synth with cache (only 1: auto with ordered_type).	0.013044	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	120	0	synth with cache (only 1: auto with ordered_type).	0.012049	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	120	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.022598	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: congruence).	0.039696	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.017436	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.017211	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	120	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.018298	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.026846	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: compute; only 1: compute in H; only 1: compute in H0; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.116670	16
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: clear H2; only 1: clear H0; only 1: compute; only 1: compute in H; only 1: compute in H1; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.069698	20
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.017307	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	120	0	synth with cache (only 1: eauto with ordered_type).	0.015673	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct e; only 1: intros ?; only 1: destruct e'; only 1: intros ?; only 1: destruct e''; only 1: unfold ltk; only 1: unfold eqk; only 1: simpl; only 1: eauto with ordered_type).	0.029484	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.028027	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	120	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto with ordered_type).	0.035938	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.035456	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite <- H3; only 1: auto with sets).	0.019764	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.039090	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	120	0	synth with cache (only 1: firstorder).	0.010855	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	120	0	synth with cache (only 1: typeclasses eauto).	0.010636	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	120	0	synth with cache (only 1: firstorder).	0.010470	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	120	0	synth with cache (only 1: typeclasses eauto).	0.009872	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	120	0	synth with cache (only 1: firstorder).	0.031092	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.009530	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	120	0	synth with cache (only 1: firstorder).	0.011307	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	120	0	synth with cache (only 1: firstorder).	0.016746	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	120	0	synth with cache (only 1: firstorder).	0.013924	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	120	0	synth with cache (only 1: firstorder).	0.015035	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	120	0	synth with cache (only 1: firstorder).	0.011217	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	120	0	synth with cache (only 1: firstorder).	0.011760	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	120	0	synth with cache (only 1: firstorder).	0.073091	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: compute in *; only 1: auto).	0.023254	8
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	120	0.0	synth with cache (only 1: unfold RelCompFun; only 1: firstorder).	0.018094	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.018534	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	120	0	synth with cache (only 1: auto).	0.009358	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	120	0	synth with cache (only 1: auto).	0.008925	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	120	0	synth with cache (only 1: auto).	0.009805	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	120	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.018589	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	120	0	synth with cache (only 1: eauto).	0.011781	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: congruence).	0.034605	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.018100	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.026656	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.024141	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply InA_eqA with p; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv).	0.015769	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: firstorder; only 1: exists x; only 1: auto; only 1: induction H; only 1: destruct y; only 1: exists e; only 1: auto; only 1: destruct IHInA; only 1: exists x0; only 1: auto).	0.033744	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	120	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto).	0.037965	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.030230	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.034950	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: induction x; only 1: constructor; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: constructor; only 1: apply permA_skip; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto; only 1: exact permA_trans).	0.028329	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply permA_skip; only 1: easy; only 1: easy).	0.015623	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: trivial; only 1: intros; only 1: apply permA_skip; only 1: intuition; only 1: intuition).	0.021214	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.016321	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	120	0.0.0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: rewrite <- IHl; only 1: intuition).	0.023249	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l₁; only 1: rewrite app_nil_r; only 1: easy; only 1: rewrite <- app_comm_cons; only 1: rewrite IHl₁; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.035762	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.030841	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	120	0.0	synth with cache (only 1: apply PermutationA_cons_app; only 1: easy).	0.012772	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: easy; only 1: easy).	0.015601	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PermutationA_decompose; only 1: apply NoDupA_equivlistA_PermutationA; only 1: easy; only 1: easy; only 1: easy).	0.016522	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: inversion_clear 1; only 1: constructor; only 1: apply PermutationA_equivlistA in H0; only 1: contradict H2; only 1: rewrite H; only 1: rewrite H0; only 1: easy; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear H1; only 1: constructor; only 1: contradict H; only 1: inversion_clear H; only 1: elim H0; only 1: constructor; only 1: easy; only 1: trivial; only 1: constructor; only 1: contradict H0; only 1: apply InA_cons_tl; only 1: easy; only 1: trivial; only 1: eauto).	0.129167	25
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	120	0	synth with cache (only 1: reflexivity).	0.009758	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	120	0	synth with cache (only 1: reflexivity).	0.008266	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	120	0.0.0.0.0.0	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite is_cnf_tt_cnf_ff; only 1: rewrite orb_comm; only 1: simpl; only 1: apply if_cnf_tt).	0.015440	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Im_intro with (x := x); only 1: auto with sets; only 1: auto with sets).	0.015281	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.021311	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: rewrite image_empty; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H X; only 1: rewrite Im_add; only 1: apply Add_preserves_Finite; only 1: auto with sets).	0.023186	15
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H1; only 1: exists x; only 1: auto with sets).	0.025763	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply finite_cardinal; only 1: apply finite_image; only 1: apply cardinal_finite with n; only 1: trivial with sets).	0.013526	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply not_injective_elim; only 1: apply Pigeonhole with A n n'; only 1: trivial with sets; only 1: trivial with sets; only 1: trivial with sets).	0.018435	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	120	0.0.0.0.0	synth with cache (only 1: unfold ratom; only 1: intros; only 1: destruct orb; only 1: auto; only 1: auto).	0.017367	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	120	0.0.0.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_rapp; only 1: rewrite make_conj_app; only 1: tauto).	0.038168	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	120	0.0.0.0.0	synth with cache (only 1: unfold cnf_ff; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.038449	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	120	0.0.0.0.0	synth with cache (only 1: unfold cnf_tt; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.020485	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	120	0.0	synth with cache (only 1: unfold eval_tt; only 1: auto).	0.015387	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.017695	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	120	0.0	synth with cache (only 1: intuition; only 1: invlist InA).	0.026113	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_altdef; only 1: rewrite Exists_exists; only 1: firstorder).	0.021601	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: inversion H).	0.012947	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.016938	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	120	0	synth with cache (only 1: firstorder).	0.021438	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.048079	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: auto).	0.022501	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.042981	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply InA_app; only 1: destruct 1; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto).	0.048633	23
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite in_rev; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite <- in_rev; only 1: auto).	0.091318	16
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_nil; only 1: tauto).	0.021029	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.038092	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	120	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.074464	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	120	0.0	synth with cache (only 1: rewrite InA_app_iff; only 1: tauto).	0.018718	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	120	0.0.0	synth with cache (only 1: constructor; only 1: inversion 1; only 1: constructor).	0.021584	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Sorted_iter_merge; only 1: constructor).	0.011952	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply Sorted_LocallySorted_iff; only 1: apply Sorted_iter_merge; only 1: constructor).	0.013396	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.039876	12
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	120	0	synth with cache (only 1: auto using Sorted_StronglySorted, LocallySorted_sort).	0.010696	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_app_iff; only 1: rewrite InA_app_iff; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.041716	12
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply InA_nil; only 1: eapply H; only 1: eapply InA_cons_hd; only 1: easy).	0.016849	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	120	0.0.0.0.0	synth with cache (only 1: destruct l; only 1: trivial; only 1: intros ?; only 1: apply equivlistA_cons_nil in H; only 1: easy).	0.016212	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_double_head).	0.012345	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_permute_heads).	0.012840	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_app_idem).	0.011916	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	120	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	0.021569	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction s; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: assumption; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: apply Comp; only 1: assumption; only 1: apply IHs; only 1: assumption; only 1: assumption).	0.054296	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity).	0.070422	19
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite IHj; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite mul_assoc; only 1: rewrite pow_pos_swap; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.050018	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i using Pos.peano_ind; only 1: rewrite Pos.add_1_l; only 1: rewrite pow_pos_succ; only 1: easy; only 1: rewrite Pos.add_succ_l; only 1: rewrite pow_pos_succ; only 1: rewrite pow_pos_succ; only 1: rewrite IHi; only 1: rewrite mul_assoc; only 1: easy).	0.040990	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	120	0	synth with cache (only 1: reflexivity).	0.011520	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: discriminate).	0.013040	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.022615	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	120	0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.052049	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	120	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.057865	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exact H).	0.037715	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	120	0	synth with cache (only 1: reflexivity).	0.013486	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	120	0	synth with cache (only 1: reflexivity).	0.014646	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	120	0	synth with cache (only 1: reflexivity).	0.013134	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.024735	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: case Smorph; only 1: constructor; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.038952	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	120	0	synth with cache (only 1: exact phi_ext).	0.011878	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.073656	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: elim ARth; only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.086241	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: rewrite Empty_set_zero; only 1: trivial; only 1: intros; only 1: rewrite Union_commutative; only 1: rewrite <- Union_add; only 1: rewrite Union_commutative; only 1: apply Add_preserves_Finite; only 1: apply IHFinite; only 1: assumption).	0.023190	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	120	0	synth with cache (only 1: mrewrite).	0.022440	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Finite_downward_closed with A; only 1: auto with sets; only 1: auto with sets).	0.012458	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	120	0	synth with cache (only 1: mrewrite).	0.025331	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cardinal_is_functional with X X; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.013996	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.059036	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	120	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: apply Pos2Nat.inj_xO).	0.014030	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: rewrite Pos.xI_succ_xO; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pos2Nat.inj_xO; only 1: easy).	0.017913	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	120	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_succ).	0.014269	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add).	0.024631	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct a'; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.021975	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	120	0.0.0	synth with cache (only 1: rewrite <- Nat.sub_1_r; only 1: rewrite N.pred_sub; only 1: apply inj_sub).	0.015727	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xI; only 1: rewrite Nat.div2_succ_double; only 1: trivial; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xO; only 1: rewrite Nat.div2_double; only 1: trivial; only 1: trivial).	0.023468	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.024760	16
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.024368	16
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	120	0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: apply Pos2Nat.inj_iter).	0.015757	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.060740	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.018930	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	120	0	synth with cache (only 1: nat2N).	0.029491	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	120	0	synth with cache (only 1: nat2N).	0.023178	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	120	0	synth with cache (only 1: nat2N).	0.023081	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	120	0	synth with cache (only 1: nat2N).	0.046930	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	120	0	synth with cache (only 1: nat2N).	0.026342	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	120	0	synth with cache (only 1: nat2N).	0.024206	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	120	0	synth with cache (only 1: nat2N).	0.021826	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	120	0.0.0.0	synth with cache (only 1: rewrite N2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy).	0.014042	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	120	0	synth with cache (only 1: nat2N).	0.023292	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	120	0	synth with cache (only 1: nat2N).	0.035853	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	120	0.0.0	synth with cache (only 1: rewrite N2Nat.inj_iter; only 1: rewrite id; only 1: easy).	0.017017	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: discriminate).	0.014699	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: auto; only 1: auto; only 1: auto; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.017767	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	120	0	synth with cache (only 1: exact perm_trans).	0.010123	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: auto using perm_skip).	0.016538	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	0.037687	12
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: rewrite <- app_comm_cons; only 1: constructor; only 1: assumption).	0.020107	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_app; only 1: easy; only 1: easy).	0.015879	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Permutation_app; only 1: auto; only 1: auto).	0.014567	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite Permutation_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.089631	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: rewrite perm_swap; only 1: apply perm_skip; only 1: easy).	0.017351	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	120	0	synth with cache (only 1: auto).	0.011491	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Permutation_rev; only 1: rewrite <- Permutation_rev; only 1: easy).	0.018016	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	120	0	synth with cache (only 1: exact Permutation_length).	0.009991	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: auto; only 1: auto; only 1: apply H1; only 1: auto; only 1: induction l; only 1: auto; only 1: auto; only 1: eauto).	0.077867	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: destruct l; only 1: discriminate; only 1: discriminate).	0.015956	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.015539	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	120	0.0	synth with cache (only 1: apply N.pos_div_eucl_remainder; only 1: easy).	0.015403	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: auto with sets).	0.021433	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: auto with sets).	0.022107	14
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite H1; only 1: auto with sets).	0.019488	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	120	0	synth with cache (only 1: auto using incl_soustr_add_l with sets).	0.067656	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply covers_Add with (A := A); only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: rewrite H3; only 1: clear H2; only 1: apply Add_covers; only 1: intuition; only 1: intuition; only 1: intuition).	0.064514	24
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Empty_set_zero'; only 1: apply Add_covers; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.017355	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply project_In; only 1: apply get_In with p; only 1: assumption).	0.021817	8
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: exists p; only 1: auto).	0.015962	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	120	0	synth with cache (only 1: reflexivity).	0.009842	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	120	0	synth with cache (only 1: apply peano_rect_base).	0.009503	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	120	0	synth with cache (only 1: apply peano_rect_succ).	0.010240	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply peano_rect; only 1: assumption; only 1: intros; only 1: apply -> H1; only 1: easy).	0.024738	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1 using peano_ind; only 1: trivial; only 1: unfold recursion in *; only 1: rewrite peano_rect_succ; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy).	0.071344	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_included_empty_Inhabited; only 1: red; only 1: auto with sets).	0.013492	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	120	0	synth with cache (only 1: reflexivity).	0.008674	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold recursion; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using peano_ind; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy; only 1: rewrite peano_rect_succ in *; only 1: rewrite peano_rect_succ in *; only 1: apply H0; only 1: easy; only 1: easy).	0.034046	14
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	120	0.0	synth with cache (only 1: unfold Subtract at 1; only 1: auto with sets).	0.013139	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.015058	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	120	0	synth with cache (only 1: reflexivity).	0.008138	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	120	0	synth with cache (only 1: reflexivity).	0.008094	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	120	0	synth with cache (only 1: reflexivity).	0.008585	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H; only 1: split; only 1: tauto; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: auto with sets).	0.021570	13
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.011234	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.010458	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Complement; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros; only 1: apply NNPP; only 1: auto with sets; only 1: auto with sets).	0.018109	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.019663	15
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.023003	18
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.014311	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.016511	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	120	0	synth with cache (only 1: reflexivity).	0.008612	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.012206	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	120	0	synth with cache (only 1: reflexivity).	0.008684	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.031728	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	120	0	synth with cache (only 1: easy).	0.011745	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	120	0	synth with cache (only 1: reflexivity).	0.011048	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.012318	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.018121	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.018624	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.034731	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.014870	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.014492	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: unfold lt in *; only 1: simpl in *; only 1: Pos.simpl_compare; only 1: rewrite H; only 1: easy).	0.029032	15
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.019494	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.018701	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.017392	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.017738	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019084	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.010964	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	120	0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy).	0.018129	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: auto; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.018098	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: easy).	0.015828	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply div_mod').	0.013309	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: split; only 1: apply le_0_l; only 1: apply mod_lt; only 1: destruct b; only 1: easy; only 1: easy).	0.026178	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.016483	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	120	0	synth with cache (only 1: apply le_0_l).	0.012097	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	120	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.013890	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	120	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.015461	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.023367	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.055269	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.021138	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: revert a m; only 1: induction n using peano_ind; only 1: intros ?; only 1: intros ?; only 1: rewrite add_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: rewrite <- add_succ_l; only 1: rewrite <- IHn; only 1: rewrite testbit_succ_r_div2; only 1: rewrite shiftr_succ_r; only 1: easy; only 1: apply le_0_l).	0.047353	19
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.012334	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply dependent_unique_choice).	0.015794	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	120	0	synth with cache (only 1: apply classic_set_in_prop_context).	0.008585	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.014108	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.013943	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.015849	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.015852	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial).	0.039691	25
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H2; only 1: destruct H2; only 1: apply H in H2; only 1: subst; only 1: easy; only 1: trivial).	0.028566	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: left; only 1: exact H; only 1: right; only 1: exists a; only 1: easy).	0.016970	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	120	0.0.0	synth with cache (only 1: apply @caseS with (v := v); only 1: intros; only 1: reflexivity).	0.015107	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	120	0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.016644	5
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	120	0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy).	0.013526	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: f_equal; only 1: easy).	0.025627	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	120	0	synth with cache (only 1: reflexivity).	0.010182	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	120	0	synth with cache (only 1: reflexivity).	0.010087	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	120	0	synth with cache (only 1: reflexivity).	0.013413	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with datatypes; only 1: auto with datatypes).	0.013982	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply set_add_elim; only 1: apply set_add_intro).	0.011737	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: tauto; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: constructor; only 1: trivial; only 1: trivial; only 1: constructor; only 1: rewrite set_add_iff; only 1: intuition; only 1: trivial).	0.034572	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: destruct Aeq_dec; only 1: tauto; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: apply in_eq; only 1: apply in_cons; only 1: apply IHl; only 1: assumption).	0.034688	13
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros ?; only 1: simpl; only 1: tauto; only 1: intros ?; only 1: simpl; only 1: inversion_clear H; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: congruence; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	0.045298	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: intuition; only 1: congruence; only 1: simpl; only 1: intuition).	0.063828	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: trivial; only 1: constructor; only 1: rewrite set_remove_iff; only 1: intuition; only 1: trivial; only 1: trivial).	0.030607	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	120	0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: auto with datatypes; only 1: auto with datatypes).	0.014730	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply set_union_elim; only 1: apply set_union_intro).	0.014274	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	120	0	synth with cache (only 1: eauto with datatypes).	0.063427	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply set_inter_elim; only 1: destruct 1; only 1: apply set_inter_intro; only 1: easy; only 1: easy).	0.016637	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: constructor; only 1: rewrite set_inter_iff; only 1: tauto; only 1: auto; only 1: auto).	0.030142	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: eapply set_diff_elim1; only 1: eauto; only 1: eapply set_diff_elim2; only 1: eauto; only 1: destruct 1; only 1: apply set_diff_intro; only 1: easy; only 1: easy).	0.020978	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: auto using set_add_nodup; only 1: auto using set_add_nodup).	0.021474	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.lt_gt; only 1: apply Pos.lt_lt_succ; only 1: apply Pos.gt_lt; only 1: easy).	0.015818	6
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	120	0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Pos.lt_gt; only 1: rewrite Pos.lt_iff_add; only 1: exists 1; only 1: apply Pos.add_1_r).	0.018079	6
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case i; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity).	0.019499	14
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case S; only 1: unfold push; only 1: unfold map; only 1: unfold contents; only 1: unfold index; only 1: intros; only 1: rewrite Tmap_Tadd; only 1: reflexivity).	0.031596	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.swap_greater; only 1: easy).	0.032463	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.compare_refl; only 1: easy).	0.018995	4
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.019446	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.072150	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.018813	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.025421	5
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case x; only 1: intros; only 1: apply Lt_nil; only 1: simpl; only 1: intros; only 1: inversion_clear H0; only 1: apply Lt_hd; only 1: auto with sets; only 1: inversion_clear H1).	0.061059	10
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.031872	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	120	0.0	synth with cache (only 1: inversion 1; only 1: auto).	0.016631	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: auto).	0.018899	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.016740	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	120	0	synth with cache (only 1: firstorder using StronglySorted_rect).	0.013874	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.049140	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial; only 1: destruct H0; only 1: constructor; only 1: constructor; only 1: trivial).	0.015975	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	120	0	synth with cache (only 1: auto with *).	0.038814	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	120	0	synth with cache (only 1: apply Z.le_antisymm).	0.026969	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	120	0	synth with cache (only 1: apply Z.lt_irrefl).	0.027471	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	120	0	synth with cache (only 1: apply Z.lt_neq).	0.026404	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	120	0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.031859	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	120	0.0.0.0.0	synth with cache (only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.040971	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Qeq_alt; only 1: rewrite Qle_alt; only 1: rewrite Qlt_alt; only 1: destruct Qcompare; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.166532	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	120	0	synth with cache (only 1: apply Z.lt_le_incl).	0.028627	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.035077	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	120	0	synth with cache (only 1: apply Z.nlt_ge).	0.030740	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	120	0	synth with cache (only 1: apply Z.nle_gt).	0.037858	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	120	0	synth with cache (only 1: apply Z.lt_nge).	0.033690	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	120	0	synth with cache (only 1: apply Z.le_ngt).	0.034102	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: unfold Qlt; only 1: unfold Qeq; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: easy).	0.057911	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.opp_le_mono; only 1: easy).	0.062848	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.le_sub_le_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.059500	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.lt_sub_lt_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.059578	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: exists n; only 1: exact H1).	0.020349	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.016484	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.016759	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	120	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.015307	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply H with x; only 1: auto).	0.016684	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	120	0.0	synth with cache (only 1: intros; only 1: discriminate).	0.012725	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.017384	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.010113	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	120	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.011274	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.010465	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.010578	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	120	0.0	synth with cache (only 1: simpl; only 1: intuition).	0.021671	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	120	0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H).	0.011044	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.016586	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	120	0	synth with cache (only 1: reflexivity).	0.009288	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	120	0.0	synth with cache (only 1: symmetry; only 1: apply app_nil_r).	0.043559	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.023419	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	120	0	synth with cache (only 1: auto using app_assoc).	0.011356	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	120	0	synth with cache (only 1: auto).	0.010641	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using in_app_or, in_or_app; only 1: auto using in_app_or, in_or_app).	0.013878	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.015694	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: induction l; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: eauto).	0.031525	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: solve [ inversion H ]; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	0.039875	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply nth_error_split in H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: subst; only 1: rewrite app_nth2; only 1: rewrite Nat.sub_diag; only 1: reflexivity; only 1: auto).	0.036922	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: destruct 1; only 1: apply gt_irrefl; only 1: simpl; only 1: destruct eq_dec; only 1: intropattern subst -> e; only 1: rewrite IHl; only 1: intuition; only 1: rewrite IHl; only 1: intuition).	0.054997	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	120	0.0.0.0.0	synth with cache (only 1: rewrite count_occ_In; only 1: unfold gt; only 1: rewrite Nat.nlt_ge; only 1: rewrite Nat.le_0_r; only 1: easy).	0.018677	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	120	0	synth with cache (only 1: reflexivity).	0.010974	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.018940	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.017619	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	120	0.0	synth with cache (only 1: intros; only 1: apply rev_app_distr).	0.013875	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: rewrite app_nil_r; only 1: trivial).	0.013789	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: absurd P; only 1: trivial; only 1: trivial).	0.014139	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	120	0	synth with cache (only 1: tauto).	0.011541	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply not_imply_elim with Q; only 1: trivial; only 1: apply not_imply_elim2 with P; only 1: trivial).	0.012110	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	120	0	synth with cache (only 1: reflexivity).	0.010158	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	120	0	synth with cache (only 1: tauto).	0.011637	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	120	0	synth with cache (only 1: reflexivity).	0.011991	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite IHl1; only 1: apply app_assoc).	0.027108	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	120	0	synth with cache (only 1: tauto).	0.014344	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	120	0	synth with cache (only 1: tauto).	0.013618	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	120	0	synth with cache (only 1: decide equality).	0.025112	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	120	0	synth with cache (only 1: tauto).	0.011927	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	120	0	synth with cache (only 1: tauto).	0.014234	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	120	0	synth with cache (only 1: reflexivity).	0.012435	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.027068	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	0.031233	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction l; only 1: intros ?; only 1: intro_equality_clear H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: injection H as; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite IHl; only 1: auto; only 1: auto; only 1: intuition).	0.074888	25
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply map_ext_in; only 1: auto).	0.018814	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: clear IHl; only 1: revert a; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros ?; only 1: rewrite <- H; only 1: rewrite IHl; only 1: rewrite IHl; only 1: auto).	0.067460	21
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: rewrite IHl; only 1: easy; only 1: rewrite IHl; only 1: easy).	0.029306	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.026976	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.025358	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: intuition; only 1: simpl; only 1: destruct f; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.037861	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.021739	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption).	0.021018	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.031082	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext; only 1: assumption).	0.028112	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	120	0.0	synth with cache (only 1: apply ext_prop_dep_proof_irrel_cic; only 1: exact propositional_extensionality).	0.011270	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	120	0.0	synth with cache (only 1: unfold lel; only 1: auto with arith).	0.013716	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.023785	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.016398	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.015337	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	120	0	synth with cache (only 1: auto).	0.013735	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	120	0	synth with cache (only 1: auto).	0.014849	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	120	0	synth with cache (only 1: auto with datatypes).	0.014491	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	120	0	synth with cache (only 1: auto with datatypes).	0.014338	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: elim H1; only 1: intros ?; only 1: elim H2; only 1: auto; only 1: auto; only 1: auto).	0.035222	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.017234	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	120	0.0	synth with cache (only 1: simpl; only 1: easy).	0.013033	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: easy).	0.016310	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	120	0.0	synth with cache (only 1: simpl; only 1: easy).	0.012513	2
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: f_equal; only 1: subst p; only 1: apply @of_nat_ext).	0.029434	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHp; only 1: destruct @to_nat; only 1: easy).	0.037601	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	120	0	synth with cache (only 1: reflexivity).	0.012903	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHn; only 1: destruct @to_nat; only 1: easy).	0.030256	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: easy).	0.014885	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	120	0	synth with cache (only 1: reflexivity).	0.013144	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply rect2; only 1: simpl; only 1: intros; only 1: split; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply PeanoNat.Nat.eqb_eq; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: eapply iff_trans; only 1: eassumption; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: apply @FS_inj).	0.056909	28
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	120	0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: easy).	0.015762	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: intros ?; only 1: destruct l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.049094	8
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite firstn_skipn_rev; only 1: rewrite rev_involutive; only 1: rewrite rev_length; only 1: easy).	0.022798	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply length_zero_iff_nil; only 1: rewrite combine_length; only 1: simpl; only 1: rewrite Nat.min_0_r; only 1: reflexivity).	0.019861	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	120	0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.018391	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: simpl in *; only 1: tauto; only 1: intros; only 1: simpl in *; only 1: rewrite IHAdd; only 1: tauto).	0.057877	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.022004	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	120	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.015796	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove with a; only 1: easy).	0.015475	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove; only 1: easy).	0.014314	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: easy; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	0.029979	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rgt_minus).	0.089697	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	0.101138	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct in_dec; only 1: rewrite IHl; only 1: intuition; only 1: subst; only 1: easy; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.044798	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct in_dec; only 1: assumption; only 1: constructor; only 1: rewrite nodup_In; only 1: easy; only 1: assumption).	0.024581	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto using Rgt_minus, Rgt_ge; only 1: right; only 1: auto using Rminus_diag_eq with rorders).	0.088073	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rminus_gt).	0.067942	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	120	0	synth with cache (only 1: exact PropExt_imp_ProvPropExt).	0.006041	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rle_lt_trans with r; only 1: assumption; only 1: pattern r at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.094382	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_sqr_eq_0_l with r2; only 1: auto with real; only 1: apply Rplus_sqr_eq_0_l with r1; only 1: rewrite Rplus_comm; only 1: auto with real).	0.073849	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.038095	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	120	0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.016011	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	120	0.0	synth with cache (only 1: left; only 1: exact Rlt_0_1).	0.068004	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.028229	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	120	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_nat; only 1: rewrite iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	0.014492	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite inj_succ; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite inj_succ; only 1: rewrite inj_succ; only 1: rewrite IHp; only 1: easy).	0.021773	12
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite mul_succ_l; only 1: rewrite inj_add; only 1: rewrite IHp; only 1: rewrite inj_succ; only 1: easy).	0.022306	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.032916	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	120	0	synth with cache (only 1: trivial).	0.008942	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	120	0.0.0.0	synth with cache (only 1: rewrite xI_succ_xO; only 1: rewrite inj_succ; only 1: rewrite inj_xO; only 1: easy).	0.012465	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.018854	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: trivial).	0.011895	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	120	0.0.0	synth with cache (only 1: rewrite Forall_forall; only 1: rewrite Exists_exists; only 1: firstorder).	0.023202	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	120	0.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	0.012497	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	120	0.0.0.0	synth with cache (only 1: unfold le; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_le_iff; only 1: easy).	0.012467	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	120	0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_gt_iff; only 1: easy).	0.013990	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	120	0.0.0.0	synth with cache (only 1: unfold ge; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_ge_iff; only 1: easy).	0.014741	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_1_r; only 1: rewrite inj_sub; only 1: rewrite Nat.sub_1_r; only 1: easy; only 1: easy).	0.013911	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Forall_forall; only 1: rewrite Forall_forall; only 1: firstorder).	0.032925	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	120	0.0.0	synth with cache (only 1: rewrite <- sub_1_r; only 1: rewrite <- Nat.sub_1_r; only 1: apply inj_sub_max).	0.012614	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.023205	18
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.027840	18
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	120	0	synth with cache (only 1: apply Forall2_nil).	0.012965	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: destruct 1; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl BinPosDef.Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: apply IHn; only 1: easy).	0.026669	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: rewrite id; only 1: easy; only 1: discriminate).	0.015728	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	120	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: subst; only 1: easy).	0.017340	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: easy; only 1: easy).	0.021737	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_succ; only 1: easy).	0.015962	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: simpl in H1; only 1: easy).	0.026867	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: apply Nat.mul_eq_0 in H1; only 1: destruct H1; only 1: elim H; only 1: easy; only 1: elim H0; only 1: easy).	0.028485	17
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial).	0.017237	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_l; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_r; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.min; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.048282	30
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: intros ?; only 1: constructor; only 1: apply <- Forall_forall; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: apply IHl; only 1: red; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.089283	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: auto with real; only 1: auto with real).	0.095847	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_r; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_l; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.max; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.046543	30
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	120	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: rewrite <- Pos2Nat.inj_succ; only 1: apply Pos2Nat.id).	0.012310	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: case n; only 1: auto with real; only 1: intros; only 1: auto with real).	0.080758	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	120	0.0.0	synth with cache (only 1: rewrite id_succ; only 1: rewrite Pos.pred_succ; only 1: easy).	0.013076	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity).	0.018141	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	120	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: apply Nat2Pos.id; only 1: discriminate).	0.014551	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.019732	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	120	0.0	synth with cache (only 1: rewrite id_succ; only 1: easy).	0.011146	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.014559	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite id_succ; only 1: easy).	0.013540	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	120	0.0.0.0.0	synth with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: easy).	0.014960	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	120	0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: trivial).	0.012774	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: easy).	0.016526	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_add; only 1: apply Nat.mul_add_distr_r).	0.018979	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_carry_spec; only 1: rewrite Pmult_nat_succ_morphism; only 1: easy).	0.015777	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: rewrite S_INR; only 1: simpl; only 1: rewrite plus_INR; only 1: rewrite IHn; only 1: ring).	0.096236	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: apply Nat.mul_add_distr_l).	0.040768	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Nat.mul_comm; only 1: simpl; only 1: rewrite Nat.add_0_r; only 1: easy).	0.040026	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite mult_INR; only 1: rewrite IHn; only 1: easy).	0.084061	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	120	0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	0.087937	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	120	0	synth with cache (only 1: apply lt_INR).	0.081058	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply Pos2Nat.is_pos).	0.079916	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: rewrite H0; only 1: trivial).	0.113658	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	120	0.0	synth with cache (only 1: intros ?; only 1: apply not_INR).	0.084426	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	120	0.0	synth with cache (only 1: intros ?; only 1: apply Z_of_nat_complete).	0.082315	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: simpl BinIntDef.Z.of_nat; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.079135	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial).	0.138990	33
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr).	0.154246	32
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case n; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring).	0.188055	56
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Zpower_pos_nat; only 1: rewrite SuccNat2Pos.id_succ; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite mult_IZR; only 1: ring [ IHn ]).	0.127622	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	120	0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.succ; only 1: apply plus_IZR).	0.085378	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real).	0.094294	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	0.089052	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold BinIntDef.Z.sub; only 1: rewrite <- Ropp_Ropp_IZR; only 1: symmetry; only 1: apply plus_IZR).	0.090340	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.109286	7
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: trivial).	0.013920	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	120	0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.010205	3
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	120	0.0	synth with cache (only 1: apply le_lt_SS; only 1: apply Nat.le_add_r).	0.008420	2
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_IZR).	0.089162	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: elim H; only 1: apply eq_IZR; only 1: assumption).	0.093969	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply one_IZR_r_R1 with r; only 1: auto; only 1: auto).	0.089443	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: apply H1; only 1: apply single_z_r_R1 with r; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.106016	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.096791	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.106572	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).	0.091886	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.094084	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	0.126524	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr; only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR; only 1: intros ?; only 1: intros ?; only 1: case x; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: exact opp_IZR; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal; only 1: apply Zeq_bool_eq; only 1: auto).	0.286018	103
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.112705	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	0.098930	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmult_plus_distr_r).	0.094153	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rmult_plus_distr_r; only 1: ring).	0.115166	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	120	0	synth with cache (only 1: exact well_founded_ltof).	0.007295	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	120	0	synth with cache (only 1: exact induction_ltof1).	0.009978	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	120	0	synth with cache (only 1: exact induction_ltof1).	0.010855	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	120	0	synth with cache (only 1: decide equality).	0.029133	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	120	0	synth with cache (only 1: reflexivity).	0.008745	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.023475	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	120	0	synth with cache (only 1: reflexivity).	0.007795	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.013498	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.013952	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.011002	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	120	0	synth with cache (only 1: exact lt_wf_rec).	0.009250	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_rec; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_rec; only 1: auto with arith).	0.034996	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.099018	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_ind; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_ind; only 1: auto with arith).	0.039701	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.023066	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.013366	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.028071	15
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply succ_pred_double; only 1: intros ?; only 1: simpl; only 1: destruct H; only 1: auto).	0.017076	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.015410	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.012135	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.012069	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	120	0.0.0	synth with cache (only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.014658	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	120	0	synth with cache (only 1: apply lt_eq_lt_dec).	0.010119	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	120	0	synth with cache (only 1: apply le_dec).	0.009770	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	120	0	synth with cache (only 1: apply lt_dec).	0.008169	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	120	0	synth with cache (only 1: apply le_dec).	0.008743	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	120	0	synth with cache (only 1: apply Nat.le_decidable).	0.007973	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	120	0	synth with cache (only 1: apply Nat.lt_decidable).	0.008325	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	120	0	synth with cache (only 1: apply Nat.lt_decidable).	0.009194	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	120	0	synth with cache (only 1: apply Nat.le_decidable).	0.009014	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	120	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.010780	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	120	0	synth with cache (only 1: apply Nat.nle_gt).	0.010310	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	120	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.014470	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	120	0	synth with cache (only 1: apply Nat.nlt_ge).	0.009153	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	120	0.0	synth with cache (only 1: apply Nat.neq_0_lt_0; only 1: apply lt_O_fact).	0.008771	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	120	0	synth with cache (only 1: apply Nat.nle_gt).	0.010544	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	120	0	synth with cache (only 1: apply Nat.nlt_ge).	0.009868	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_lt_iff).	0.010004	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_gt_iff).	0.009451	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_le_iff).	0.010377	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_ge_iff).	0.010562	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	120	0	synth with cache (only 1: apply Nat.compare_eq_iff).	0.010326	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	120	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.010928	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	120	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.011124	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nat_compare_alt; only 1: destruct lt_eq_lt_dec; only 1: destruct s; only 1: apply Nat.compare_lt_iff; only 1: auto with arith; only 1: apply Nat.compare_eq_iff; only 1: trivial; only 1: apply Nat.compare_gt_iff; only 1: assumption).	0.021593	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	120	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.013383	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	120	0	synth with cache (only 1: apply Nat.leb_le).	0.009967	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	120	0	synth with cache (only 1: apply Nat.leb_le).	0.011583	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	120	0	synth with cache (only 1: apply leb_iff_conv).	0.011301	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	120	0	synth with cache (only 1: apply leb_iff_conv).	0.010558	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	120	0.0	synth with cache (only 1: rewrite Nat.compare_le_iff; only 1: apply Nat.leb_le).	0.012204	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.mul_assoc).	0.010143	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	120	0	synth with cache (only 1: apply Nat.eq_mul_0).	0.010252	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	120	0	synth with cache (only 1: apply Nat.eq_mul_1).	0.010275	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	120	0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: left; only 1: trivial using Nat.le_add_r; only 1: right; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.012299	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_l; only 1: apply Nat.le_0_l).	0.008988	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_r; only 1: apply Nat.le_0_l).	0.009291	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: trivial; only 1: apply Nat.le_0_l; only 1: trivial).	0.011688	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	120	0.0	synth with cache (only 1: apply Nat.mul_lt_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.010447	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_l; only 1: easy; only 1: easy).	0.012850	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_r; only 1: easy; only 1: easy).	0.013174	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.011758	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold tail_mult; only 1: rewrite <- mult_acc_aux; only 1: auto).	0.012347	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.012697	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.010362	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.succ_le_mono; only 1: easy).	0.012614	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	120	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.010919	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	120	0	synth with cache (only 1: apply Nat.le_ngt).	0.010939	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	120	0	synth with cache (only 1: apply Nat.lt_nge).	0.010425	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.010244	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	120	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.010808	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.010823	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	120	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.010538	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: easy).	0.012143	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.le_lt_trans with m; only 1: easy; only 1: easy).	0.011448	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_trans with m; only 1: easy; only 1: easy).	0.010906	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.succ_le_mono; only 1: easy).	0.011886	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: right; only 1: trivial; only 1: left; only 1: apply Nat.lt_0_succ).	0.011877	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.009622	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.010573	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: assumption; only 1: apply H0; only 1: easy).	0.102250	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	120	0	synth with cache (only 1: firstorder).	0.011040	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: auto).	0.019906	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply bi_induction; only 1: auto; only 1: auto; only 1: clear n; only 1: intros ?; only 1: split; only 1: auto; only 1: intros ?; only 1: apply H2 in H3; only 1: rewrite pred_succ in H3; only 1: auto).	0.028876	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	120	0	synth with cache (only 1: reflexivity).	0.009365	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	120	0.0	synth with cache (only 1: unfold ofnat; only 1: easy).	0.009788	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	120	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.012650	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	120	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.012162	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	120	0.0.0	synth with cache (only 1: intros; only 1: apply lt_neq; only 1: apply ofnat_S_gt_0).	0.010354	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply ofnat_injective; only 1: intros; only 1: subst; only 1: easy).	0.014158	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right; only 1: exact meq_trans; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right).	0.017640	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: exact meq_trans; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.082063	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_eq_cases; only 1: rewrite ofnat_lt; only 1: rewrite ofnat_eq; only 1: split; only 1: destruct 1; only 1: auto with arith; only 1: subst; only 1: auto with arith; only 1: apply Lt.le_lt_or_eq).	0.023229	10
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ofnat_add_l; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equiv; only 1: easy).	0.025163	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ofnat_sub_r; only 1: revert n H; only 1: induction m; only 1: intros; only 1: rewrite <- minus_n_O; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: inversion H; only 1: rewrite @nat_rect_succ_r; only 1: simpl; only 1: etransitivity; only 1: apply IHm; only 1: auto with arith; only 1: eapply nat_rect_wd; only 1: symmetry; only 1: apply pred_succ; only 1: apply pred_wd).	0.043478	22
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	120	0	synth with cache (only 1: apply Nat.lt_div2).	0.008589	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite even_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.div2_succ_double; only 1: induction x; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHx; only 1: rewrite IHx; only 1: reflexivity).	0.022879	13
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite odd_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.add_1_r; only 1: rewrite Nat.div2_succ_double; only 1: simpl; only 1: f_equal; only 1: symmetry; only 1: apply Nat.div2_double).	0.021241	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	120	0	synth with cache (only 1: apply Nat.add_succ_r).	0.008103	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	120	0	synth with cache (only 1: apply Nat.add_shuffle1).	0.008332	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	120	0.0	synth with cache (only 1: symmetry; only 1: apply even_equiv).	0.009092	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHn; only 1: rewrite IHn; only 1: reflexivity).	0.016861	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	120	0	synth with cache (only 1: apply Nat.div2_succ_double).	0.009409	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_assoc).	0.010624	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	120	0	synth with cache (only 1: apply Nat.add_cancel_l).	0.008863	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	120	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.007506	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.008413	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	120	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.008970	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	120	0	synth with cache (only 1: apply Nat.add_le_mono_r).	0.009287	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.009065	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	120	0	synth with cache (only 1: apply Nat.add_lt_mono_r).	0.009226	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	120	0	synth with cache (only 1: apply Nat.add_le_mono).	0.008288	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	120	0	synth with cache (only 1: apply Nat.add_le_lt_mono).	0.007896	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	120	0	synth with cache (only 1: apply Nat.add_lt_le_mono).	0.008593	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	120	0	synth with cache (only 1: apply Nat.add_lt_mono).	0.008546	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	120	0	synth with cache (only 1: apply Nat.le_add_r).	0.009023	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.009358	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nat.le_add_r; only 1: easy).	0.011031	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.le_add_r).	0.010261	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.016506	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	120	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: auto; only 1: destruct m; only 1: auto; only 1: discriminate).	0.016883	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	120	0	synth with cache (only 1: apply Nat.succ_add_discr).	0.009237	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: right; only 1: trivial; only 1: left; only 1: exists n; only 1: auto).	0.014281	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.010276	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: destruct H; only 1: auto with arith; only 1: auto with arith).	0.019778	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.014880	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.014203	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	120	0.0.0	synth with cache (only 1: intros; only 1: apply le_S_n; only 1: auto with arith).	0.011778	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	120	0.0.0	synth with cache (only 1: split; only 1: assumption; only 1: assumption).	0.010576	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	120	0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: eapply PeanoNat.Nat.le_lt_trans; only 1: eassumption; only 1: assumption).	0.013769	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	120	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.013453	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	120	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.013960	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.014840	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: destruct IHexists_between; only 1: exists x; only 1: auto with arith; only 1: auto with arith; only 1: exists l; only 1: auto with arith; only 1: auto with arith).	0.021497	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	120	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: induction H0; only 1: auto with arith; only 1: auto with arith).	0.016479	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	120	0.0.0.0	synth with cache (only 1: symmetry; only 1: destruct n; only 1: easy; only 1: easy).	0.011957	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.sub_succ_l; only 1: assumption).	0.010169	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_1_r).	0.008489	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_diag).	0.008052	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: replace 0 with x; only 1: auto with arith; only 1: auto with arith).	0.014220	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	120	0.0.0.0	synth with cache (only 1: rewrite Nat.sub_add_distr; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_sub; only 1: easy).	0.011402	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	120	0.0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.010779	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub).	0.010957	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add).	0.010098	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add; only 1: trivial).	0.010449	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	120	0	synth with cache (only 1: apply Nat.lt_add_lt_sub_r).	0.007873	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.sub_0_le; only 1: apply Nat.lt_le_incl; only 1: apply Nat.lt_nge; only 1: easy).	0.011812	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.009472	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	120	0	synth with cache (only 1: apply le_S_n).	0.008569	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.013033	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.010703	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	120	0	synth with cache (only 1: apply Nat.le_ngt).	0.009397	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: inversion H0; only 1: auto with arith).	0.022027	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	120	0	synth with cache (only 1: apply Nat.lt_nge).	0.009285	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_0_lt_0; only 1: apply Nat.neq_sym; only 1: easy).	0.011005	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_sym; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.012540	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.009481	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.008946	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.lt_succ_pred with m; only 1: assumption).	0.010189	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	120	0	synth with cache (only 1: apply S_pred).	0.008548	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	120	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.009328	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_pred_l; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.012328	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	120	0	synth with cache (only 1: apply Nat.lt_eq_cases).	0.009792	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	120	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.010519	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	120	0	synth with cache (only 1: parity_binop).	0.106886	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	120	0	synth with cache (only 1: parity_binop).	0.059470	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	120	0	synth with cache (only 1: parity_binop).	0.057452	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	120	0	synth with cache (only 1: parity_binop).	0.098316	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	120	0	synth with cache (only 1: parity_binop).	0.052829	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	120	0	synth with cache (only 1: parity_binop).	0.058854	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	120	0	synth with cache (only 1: parity_binop).	0.054628	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equivlistA; only 1: intros; only 1: rewrite removeA_InA; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: split; only 1: auto; only 1: contradict H; only 1: apply InA_eqA with x0; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite <- H0 in H1; only 1: destruct H1; only 1: inv; only 1: elim H2; only 1: auto; only 1: auto).	0.069066	19
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	120	0	synth with cache (only 1: parity_binop).	0.071526	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: split; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite <- H; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.077614	21
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	120	0	synth with cache (only 1: parity_binop).	0.056149	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.020944	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	120	0	synth with cache (only 1: parity_binop).	0.054517	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	120	0	synth with cache (only 1: parity_binop).	0.057419	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	120	0	synth with cache (only 1: parity_binop).	0.055855	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	120	0	synth with cache (only 1: parity_binop).	0.057283	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: congruence).	0.017064	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.026250	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.031153	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite app_assoc_reverse; only 1: rewrite app_assoc_reverse; only 1: simpl; only 1: auto).	0.032961	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	120	0	synth with cache (only 1: apply rev_eqlistA_compat).	0.013241	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	120	0	synth with cache (only 1: parity_binop).	0.036584	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	120	0	synth with cache (only 1: parity_binop).	0.045335	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	120	0	synth with cache (only 1: parity_binop).	0.055846	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	120	0	synth with cache (only 1: parity_binop).	0.061928	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	120	0	synth with cache (only 1: parity_binop).	0.052066	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	120	0	synth with cache (only 1: parity_binop).	0.036942	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	120	0	synth with cache (only 1: parity_binop).	0.047942	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.014711	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ).	0.023252	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: order').	0.035004	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: order').	0.034026	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy; only 1: order').	0.021521	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.020720	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order').	0.039538	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply b2z_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mul_comm; only 1: rewrite mod_add; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order'; only 1: order).	0.096703	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bits_opp; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy; only 1: trivial).	0.213925	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_eqb; only 1: nzsimpl; only 1: easy; only 1: order').	0.067485	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order').	0.050509	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.019523	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_involutive  at 1; only 1: rewrite bits_opp; only 1: apply negb_false_iff; only 1: apply bit_log2; only 1: apply opp_lt_mono in H; only 1: rewrite opp_involutive in H; only 1: apply lt_succ_lt_pred; only 1: rewrite <- one_succ; only 1: easy; only 1: apply log2_nonneg).	0.033500	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	120	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).	0.011818	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	120	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_neg; only 1: apply lt_succ_diag_r).	0.011274	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order'; only 1: order_pos; only 1: order'; only 1: order_pos; only 1: order').	0.052322	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert a m; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: easy; only 1: clear n H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- div_div; only 1: rewrite H0; only 1: rewrite div2_bits; only 1: easy; only 1: order_pos; only 1: order_pos; only 1: order_pos; only 1: order_pos; only 1: trivial).	0.269649	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.012954	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: apply eq_nat_refl).	0.008954	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	120	0	synth with cache (only 1: apply eq_nat_is_eq).	0.008766	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.eqb_refl).	0.008310	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	120	0	synth with cache (only 1: apply Nat.eqb_eq).	0.008562	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	120	0	synth with cache (only 1: apply Nat.eqb_neq).	0.009203	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.le_0_r; only 1: easy).	0.011675	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.015363	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.017035	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.018901	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	120	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.024538	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftl_spec; only 1: rewrite sub_opp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.025714	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite div_pow2_bits; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.021171	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial).	0.027684	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite mul_pow2_bits; only 1: easy; only 1: easy; only 1: easy).	0.021389	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).	0.028162	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- shiftr_opp_r; only 1: rewrite <- shiftr_opp_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.035043	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_pow2_bits; only 1: rewrite add_simpl_r; only 1: easy; only 1: easy; only 1: easy).	0.038787	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite add_opp_r; only 1: easy; only 1: easy).	0.028005	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite opp_sub_distr; only 1: rewrite add_comm; only 1: easy; only 1: easy).	0.037629	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.036661	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite opp_0; only 1: rewrite shiftl_0_r; only 1: easy).	0.026536	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_0_l; only 1: easy).	0.022525	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: trivial; only 1: contradict H0; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial; only 1: order').	0.039916	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply shiftr_eq_0_iff; only 1: le_elim H; only 1: right; only 1: split; only 1: trivial; only 1: trivial; only 1: left; only 1: easy).	0.025763	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.044447	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.028171	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order').	0.030921	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply H0; only 1: auto; only 1: auto).	0.028381	17
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	120	0	synth with cache (only 1: reflexivity).	0.007831	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	120	0	synth with cache (only 1: easy).	0.006410	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.070801	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	120	0	synth with cache (only 1: reflexivity).	0.005932	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	120	0	synth with cache (only 1: reflexivity).	0.006685	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	120	0	synth with cache (only 1: reflexivity).	0.007111	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	120	0	synth with cache (only 1: reflexivity).	0.006811	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	120	0	synth with cache (only 1: reflexivity).	0.006904	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.008866	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.059710	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	120	0	synth with cache (only 1: reflexivity).	0.006256	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.054693	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	120	0	synth with cache (only 1: apply leb_le).	0.007684	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.073126	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.029034	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	120	0	synth with cache (only 1: reflexivity).	0.007299	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.022764	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.032067	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.020187	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.021585	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.021528	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.023191	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.024091	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.023014	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.023628	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.023813	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.017521	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.051673	16
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	120	0	synth with cache (only 1: solve_proper).	0.042716	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	120	0	synth with cache (only 1: inversion 1).	0.011005	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.007769	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.038245	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	120	0	synth with cache (only 1: reflexivity).	0.009745	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	120	0	synth with cache (only 1: reflexivity).	0.007448	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.014333	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_1_inv in H; only 1: injection H as; only 1: intropattern subst -> H; only 1: auto).	0.017069	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.020002	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: apply le_0_l; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.015724	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.019708	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: easy; only 1: easy).	0.014721	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.026487	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_2_inv in H; only 1: destruct H; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto).	0.069223	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.020805	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.023934	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.023161	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_Permutation; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: apply NoDup_length_incl; only 1: trivial; only 1: trivial; only 1: trivial).	0.019031	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.021255	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order').	0.068445	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.029597	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).	0.026281	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: eauto using Permutation_NoDup).	0.017492	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy).	0.018321	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.029868	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.021404	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	120	0	synth with cache (only 1: inversion 1).	0.009269	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.033922	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order'; only 1: order').	0.030924	11
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.079035	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.029129	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	120	0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).	0.010932	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	120	0	synth with cache (only 1: exact Permutation_map).	0.011480	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mul_comm; only 1: rewrite mod_add; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order'; only 1: order').	0.088653	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.030203	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NoDup_Permutation_bis; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: rewrite map_length; only 1: easy; only 1: intros ?; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: intropattern subst <- H1; only 1: rewrite in_seq in *; only 1: simpl in *; only 1: destruct H2; only 1: clear H1; only 1: auto with arith).	0.037158	18
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	120	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.012115	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.034712	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	120	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.010894	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	120	0	synth with cache (only 1: apply le_0_l).	0.008592	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.024490	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: easy).	0.015600	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.023173	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply lt_succ_r; only 1: apply le_div2).	0.015241	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	120	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.027864	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: intros ?; only 1: simpl; only 1: apply le_0_l; only 1: intros ?; only 1: apply succ_le_mono in H; only 1: apply le_trans with a; only 1: apply le_div2; only 1: trivial).	0.013911	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite add_0_r; only 1: easy).	0.010824	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	120	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.029837	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_1_l; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_diag; only 1: rewrite bit0_odd; only 1: rewrite odd_1; only 1: easy; only 1: trivial).	0.037808	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy; only 1: easy).	0.036190	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy; only 1: easy).	0.032199	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: order'; only 1: left; only 1: easy).	0.025828	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H0; only 1: apply not_true_is_false in H0; only 1: rewrite H0; only 1: easy; only 1: trivial).	0.029063	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.009173	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	120	0	synth with cache (only 1: inversion H).	0.048584	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.042216	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.038779	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.037433	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.036928	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.038451	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.036424	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.034923	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.054980	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.034392	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.035212	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	120	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.026296	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite negb_involutive; only 1: easy; only 1: order'; only 1: order').	0.030013	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite add_succ_r; only 1: easy).	0.020955	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	120	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite <- sub_1_r; only 1: rewrite sub_0_l; only 1: easy).	0.029840	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m r; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite tail_add_spec; only 1: rewrite add_assoc; only 1: f_equal; only 1: apply add_comm).	0.025810	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	120	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: easy).	0.044359	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite orb_true_r; only 1: easy; only 1: order').	0.028024	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lor_comm; only 1: rewrite lor_m1_r; only 1: easy).	0.021696	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: order').	0.031454	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_comm; only 1: rewrite land_m1_r; only 1: easy).	0.024619	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_false_r; only 1: easy; only 1: order').	0.031519	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: order'; only 1: order').	0.029743	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: destruct testbit; only 1: easy; only 1: easy; only 1: order'; only 1: order').	0.033996	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite add_pred_r; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: easy).	0.033418	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: easy; only 1: trivial).	0.029117	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- ldiff_land; only 1: bitwise; only 1: apply andb_negb_r).	0.026167	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lor_spec; only 1: rewrite negb_orb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.038917	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite land_spec; only 1: rewrite negb_andb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.036350	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite ldiff_spec; only 1: rewrite negb_andb; only 1: rewrite negb_involutive; only 1: easy; only 1: trivial; only 1: trivial).	0.039235	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite xorb_negb_negb; only 1: easy; only 1: trivial; only 1: trivial).	0.037720	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_l; only 1: easy; only 1: trivial; only 1: trivial).	0.049876	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_r; only 1: easy; only 1: trivial; only 1: trivial).	0.037378	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	120	1	synth with cache (only 1: Nat.order).	0.020060	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lxor_comm; only 1: rewrite lxor_m1_r; only 1: easy).	0.027208	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lnot_spec; only 1: easy; only 1: order_pos; only 1: easy; only 1: easy; only 1: easy).	0.048887	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	120	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.030485	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite mul_sub_distr_l; only 1: rewrite mul_1_r; only 1: rewrite <- pow_add_r; only 1: rewrite add_sub_assoc; only 1: rewrite sub_add; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.122943	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: le_elim H; only 1: apply bits_above_log2; only 1: rewrite ones_equiv; only 1: rewrite <- lt_succ_r; only 1: rewrite succ_pred; only 1: order_pos; only 1: rewrite ones_equiv; only 1: rewrite log2_pred_pow2; only 1: rewrite <- le_succ_l; only 1: rewrite succ_pred; only 1: easy; only 1: trivial; only 1: rewrite ones_equiv; only 1: rewrite <- H; only 1: rewrite pow_0_r; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy).	0.104953	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_divide; only 1: rewrite rem_divide; only 1: easy; only 1: assumption; only 1: assumption).	0.019312	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftl_nonneg; only 1: easy).	0.033804	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_cancel_l with b; only 1: trivial; only 1: pose proof H0; only 1: apply rem_divide in H0; only 1: apply quot_exact in H0; only 1: apply mod_divide in H1; only 1: apply div_exact in H1; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.034966	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).	0.044870	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply divide_mul_r; only 1: trivial).	0.027316	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftr_nonneg; only 1: easy).	0.031265	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: apply shiftr_nonneg).	0.029381	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_factor; only 1: easy; only 1: trivial; only 1: trivial; only 1: order; only 1: apply gcd_greatest; only 1: trivial; only 1: trivial; only 1: order; only 1: trivial; only 1: order; only 1: trivial).	0.042159	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite div2_nonneg; only 1: easy).	0.028748	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite lor_nonneg; only 1: split; only 1: apply not_and; only 1: apply le_decidable; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: easy; only 1: intros ?; only 1: destruct H0; only 1: easy).	0.049443	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_gcd; only 1: trivial; only 1: easy; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l).	0.037174	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: easy).	0.037710	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.050629	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite le_ngt; only 1: rewrite lt_nge; only 1: rewrite lnot_nonneg; only 1: easy).	0.031807	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rem_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.048938	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	120	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.030793	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lnot_involutive; only 1: rewrite lnot_land; only 1: rewrite lnot_neg; only 1: rewrite lor_nonneg; only 1: rewrite lnot_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.051829	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.016072	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.053412	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_neg; only 1: rewrite lnot_neg; only 1: easy).	0.042499	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply quot_rem; only 1: assumption).	0.013291	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_opp_r; only 1: rewrite rem_opp_l; only 1: easy; only 1: assumption; only 1: assumption).	0.014637	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite add_comm; only 1: apply log2_mul_pow2; only 1: easy; only 1: trivial; only 1: trivial).	0.037433	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite quot_opp_r; only 1: rewrite quot_opp_l; only 1: rewrite opp_involutive; only 1: easy; only 1: assumption; only 1: assumption).	0.021835	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	120	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: apply divide_factor_l).	0.012644	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	120	0.0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.023271	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.026891	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_unique with r; only 1: easy; only 1: easy; only 1: easy).	0.012411	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.mod_unique with q; only 1: easy; only 1: easy; only 1: easy).	0.012980	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold lcm; only 1: apply abs_nonneg).	0.010081	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.055342	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.031293	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.024024	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.028573	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	120	0	synth with cache (only 1: exact NZQuot.div_small).	0.007900	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	120	0	synth with cache (only 1: exact NZQuot.mod_small).	0.008564	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_0_l; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite opp_0; only 1: apply NZQuot.div_0_l; only 1: easy; only 1: trivial).	0.018616	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.033048	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_1_r; only 1: trivial; only 1: apply opp_inj; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_1_r; only 1: order; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.019650	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.050180	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	120	0	synth with cache (only 1: exact NZQuot.div_1_l).	0.008227	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	120	0	synth with cache (only 1: exact NZQuot.mod_1_l).	0.008100	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: pos_or_neg b; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- mul_opp_r; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: pos_or_neg b; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_l; only 1: rewrite <- mul_opp_l; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_r; only 1: rewrite <- mul_opp_opp; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order).	0.061843	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.025039	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply quot_mul; only 1: easy).	0.017222	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.243116	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_nonneg_nonpos; only 1: apply opp_nonneg_nonpos in H0; only 1: rewrite <- rem_opp_l; only 1: apply rem_nonneg; only 1: trivial; only 1: easy; only 1: trivial).	0.022703	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.012796	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_0_l; only 1: easy).	0.014604	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_1_l_nonneg; only 1: easy; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.016847	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.015306	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.031502	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_abs_r; only 1: rewrite rem_abs_l; only 1: easy; only 1: assumption; only 1: assumption).	0.016811	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.021119	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply divide_lcm_l).	0.031022	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.019327	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_opp_l; only 1: rewrite lcm_comm; only 1: easy).	0.042140	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_abs_l; only 1: rewrite lcm_comm; only 1: easy).	0.022401	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.013310	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.018540	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_l; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_diag_nonneg; only 1: apply abs_nonneg).	0.016100	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- rem_abs; only 1: apply rem_bound_pos; only 1: apply abs_nonneg; only 1: rewrite abs_pos; only 1: assumption; only 1: assumption).	0.024565	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	120	0	synth with cache (only 1: exact NZQuot.mod_le).	0.009342	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	120	0	synth with cache (only 1: exact NZQuot.div_pos).	0.008485	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	120	0	synth with cache (only 1: exact NZQuot.div_str_pos).	0.009232	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite <- quot_small_iff; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.049487	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	120	0	synth with cache (only 1: exact NZQuot.div_lt).	0.009473	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_le_mono; only 1: auto; only 1: auto; only 1: pos_or_neg b; only 1: apply le_trans with 0; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- quot_opp_l; only 1: apply quot_pos; only 1: order; only 1: order; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: rewrite opp_le_mono in *; only 1: rewrite <- quot_opp_l; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_le_mono; only 1: intuition; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.072670	25
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: rewrite <- mul_opp_opp; only 1: rewrite <- quot_opp_r; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: order).	0.071720	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H1 in *; only 1: rewrite div_0_l in H; only 1: symmetry in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: order'; only 1: intros ?; only 1: rewrite H1 in H; only 1: rewrite lor_0_l in H; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: rewrite bits_0; only 1: apply le_ind with (4 := H2); only 1: solve_proper; only 1: trivial; only 1: clear n H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- div2_bits; only 1: rewrite H; only 1: autorewrite with bitwise; only 1: rewrite H3; only 1: easy; only 1: trivial).	0.146836	33
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	120	0	synth with cache (only 1: exact NZQuot.mul_succ_div_gt).	0.009612	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_r; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_l; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.048618	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_opp_opp; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_r; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.046624	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.043717	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite sub_move_r; only 1: nzsimpl; only 1: tauto; only 1: assumption).	0.056088	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	120	0	synth with cache (only 1: exact NZQuot.div_lt_upper_bound).	0.010223	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	120	0	synth with cache (only 1: exact NZQuot.div_le_compat_l).	0.010907	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: assumption).	0.013866	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.012959	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.011713	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.014753	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.012415	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.036987	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	120	0	synth with cache (only 1: exact div_small).	0.009522	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	120	0	synth with cache (only 1: exact mod_small).	0.008175	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.021624	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.038131	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.029194	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.053148	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.008147	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.007787	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.027562	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.018400	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	120	0	synth with cache (only 1: exact mod_le).	0.010242	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	120	0	synth with cache (only 1: exact div_pos).	0.009775	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.010056	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.041671	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.009287	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_le_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_div_le; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.034973	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_succ_div_gt; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.035196	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	120	0	synth with cache (only 1: exact div_le_compat_l).	0.011070	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	120	1.1.0	synth with cache (only 1: split; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle).	0.064777	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: order).	0.017354	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_z; only 1: rewrite opp_involutive; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.022108	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_nz; only 1: rewrite opp_sub_distr; only 1: rewrite opp_involutive; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.030817	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	120	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_z; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.019052	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_nz; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.022654	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.026181	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.040397	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	120	0	synth with cache (only 1: exact div_small).	0.008825	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	120	0	synth with cache (only 1: exact mod_small).	0.008636	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: apply opp_inj; only 1: rewrite <- div_opp_r; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.025077	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.041020	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: pose proof lt_0_1; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).	0.044689	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.057089	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.009200	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.008808	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	0.029031	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: order; only 1: order).	0.031753	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.201902	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: apply mod_le; only 1: order; only 1: order; only 1: rewrite <- mod_opp_r; only 1: apply mod_le; only 1: order; only 1: order; only 1: trivial).	0.030525	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	120	0	synth with cache (only 1: exact div_pos).	0.009554	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.009182	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: order; only 1: order).	0.042530	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.009485	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	120	0	synth with cache (only 1: exact div_le_compat_l).	0.012043	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_carry_spec; only 1: rewrite <- add_carry_spec; only 1: easy).	0.016211	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply testbit_false; only 1: nzsimpl; only 1: order_nz; only 1: order_nz; only 1: order_nz).	0.036606	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_eqb; only 1: nzsimpl; only 1: easy).	0.077272	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy).	0.063714	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.020110	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz; only 1: apply le_0_l).	0.038169	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: revert a; only 1: induct n; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- div_div; only 1: rewrite H; only 1: rewrite div2_bits; only 1: easy; only 1: order_nz; only 1: order_nz; only 1: apply le_0_l).	0.204949	20
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.013318	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.018580	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.012109	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.017794	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.016494	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	120	0.0.0	synth with cache (only 1: intros; only 1: apply shiftr_spec; only 1: apply le_0_l).	0.011500	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply shiftl_spec_high; only 1: apply le_0_l; only 1: trivial).	0.012486	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.024827	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.045093	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.035525	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite pow_add_r; only 1: rewrite mul_assoc; only 1: easy).	0.031616	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite pow_add_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz).	0.037976	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_1_l; only 1: easy).	0.018865	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.031775	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.035154	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).	0.034792	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.029584	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: contradict H; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial).	0.027832	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.041211	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.021778	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order_nz).	0.030513	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.066171	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.057566	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.055138	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.082974	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.023208	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.017873	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply lxor_eq; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.017913	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.021936	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.020616	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.020311	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.024067	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.020886	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.019218	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.021402	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.023151	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.020346	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.038213	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.018618	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.036018	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.021475	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.026806	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.020842	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.024783	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.022331	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.020600	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.027706	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.032081	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.028051	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.026428	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.031909	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.030264	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.023231	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.022349	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	120	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.030152	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	120	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.030644	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy).	0.023597	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy).	0.025980	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: left; only 1: easy).	0.015912	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: easy).	0.023182	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_spec'; only 1: rewrite ldiff_spec; only 1: rewrite pow2_bits_eqb; only 1: easy).	0.020440	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.055471	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.031159	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lxor_spec; only 1: easy).	0.032843	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).	0.047129	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lor_spec; only 1: easy).	0.028110	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite ldiff_spec; only 1: easy).	0.031623	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	120	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.021801	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	120	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.028944	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold ones; only 1: rewrite shiftl_1_l; only 1: easy).	0.021666	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply lt_nge; only 1: intros ?; only 1: apply ones_spec_high in H0; only 1: rewrite H in H0; only 1: discriminate; only 1: apply ones_spec_low).	0.026369	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_low; only 1: easy; only 1: trivial).	0.024696	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_high; only 1: rewrite xorb_false_r; only 1: easy; only 1: trivial).	0.026357	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_0_l).	0.015666	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	120	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.014641	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_ones; only 1: apply mod_small; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial using le_0_l).	0.033337	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lor_lnot_diag; only 1: rewrite lor_ones_low; only 1: easy; only 1: easy).	0.025536	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_lnot_diag; only 1: rewrite ldiff_ones_r_low; only 1: order'; only 1: easy).	0.047137	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.026898	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.025588	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_nocarry_lxor; only 1: apply div_small_iff; only 1: order_nz; only 1: rewrite <- shiftr_div_pow2; only 1: rewrite shiftr_lxor; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: rewrite div_small; only 1: apply lxor_0_l; only 1: trivial; only 1: trivial; only 1: trivial).	0.083901	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply divide_1_r_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: easy).	0.011193	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_comm in H; only 1: apply eq_mul_1 with x; only 1: easy).	0.013513	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.016703	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq_cases; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.021893	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply divide_add_r; only 1: trivial; only 1: apply divide_opp_r; only 1: easy).	0.023931	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.015047	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_opp_l; only 1: rewrite gcd_comm; only 1: easy).	0.016779	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_abs_l; only 1: rewrite gcd_comm; only 1: easy).	0.017457	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_0_l_nonneg; only 1: apply abs_nonneg).	0.011769	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l; only 1: easy).	0.014345	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_l; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_diag_nonneg; only 1: apply abs_nonneg).	0.015437	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.069950	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_add_r; only 1: apply divide_mul_r; only 1: easy; only 1: apply divide_mul_r; only 1: easy).	0.034183	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: easy).	0.012346	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite pow_even_abs; only 1: apply pow_nonneg; only 1: apply abs_nonneg; only 1: trivial).	0.017398	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite gcd_div_factor; only 1: rewrite <- H0; only 1: rewrite div_same; only 1: easy; only 1: trivial; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r).	0.042088	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	120	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.029289	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.031008	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	120	0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_factor_l).	0.011511	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	120	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.019397	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.025782	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.023802	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.028512	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.024801	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.010760	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.013801	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.013648	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl, le_0_l).	0.012744	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.031651	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.023753	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_lcm_l).	0.032269	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_l; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto).	0.012708	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_r; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.011428	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: rewrite max_l; only 1: auto with relations; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto; only 1: rewrite max_r; only 1: auto with relations; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.022837	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_neq; only 1: rewrite <- opp_nonneg_nonpos; only 1: easy).	0.009813	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.076995	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_eq).	0.018150	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_neq).	0.021271	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.022976	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	120	0.0	synth with cache (only 1: apply abs_eq; only 1: apply le_refl).	0.007954	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct_max n; only 1: auto; only 1: rewrite eq_opp_l; only 1: rewrite opp_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.040713	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.027836	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).	0.035075	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.024085	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.023888	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_case_strong; only 1: easy; only 1: easy; only 1: easy).	0.013898	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- abs_mul; only 1: apply abs_eq; only 1: apply square_nonneg).	0.013207	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_sgn n; only 1: left; only 1: auto with relations; only 1: right; only 1: left; only 1: auto with relations; only 1: right; only 1: right; only 1: auto with relations).	0.093455	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	120	0.0	synth with cache (only 1: apply sgn_null; only 1: easy).	0.009425	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto; only 1: setoid_replace n with 0; only 1: rewrite opp_0; only 1: apply sgn_0; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: apply sgn_pos; only 1: rewrite opp_pos_neg; only 1: auto).	0.040318	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- sgn_opp; only 1: apply sgn_nonneg).	0.023524	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: destruct_sgn m; only 1: apply sgn_pos; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: apply sgn_neg; only 1: apply mul_pos_neg; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: destruct_sgn m; only 1: nzsimpl; only 1: apply sgn_neg; only 1: apply mul_neg_pos; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: rewrite mul_opp_opp; only 1: nzsimpl; only 1: apply sgn_pos; only 1: apply mul_neg_neg; only 1: easy; only 1: easy).	0.139243	35
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: rewrite abs_0_iff; only 1: auto with relations; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.056246	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: auto; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: rewrite eq_opp_l; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.064298	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	120	0	synth with cache (only 1: wrap pow_0_l).	0.010386	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	120	0	synth with cache (only 1: wrap pow_1_l).	0.008303	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	120	0	synth with cache (only 1: wrap pow_add_r).	0.009356	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	120	0	synth with cache (only 1: wrap pow_mul_l).	0.008511	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	120	0	synth with cache (only 1: wrap pow_mul_r).	0.009043	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	120	0	synth with cache (only 1: wrap pow_nonzero).	0.009286	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	120	0	synth with cache (only 1: wrap pow_lt_mono_l).	0.069747	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	120	0	synth with cache (only 1: wrap pow_le_mono_l).	0.010341	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	120	0	synth with cache (only 1: wrap pow_gt_1).	0.010859	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	120	0	synth with cache (only 1: wrap pow_lt_mono_r).	0.009929	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	120	0	synth with cache (only 1: wrap pow_le_mono_r).	0.013025	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	120	0	synth with cache (only 1: wrap pow_le_mono).	0.016782	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	120	0	synth with cache (only 1: wrap pow_lt_mono_l_iff).	0.011830	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	120	0	synth with cache (only 1: wrap pow_le_mono_l_iff).	0.011671	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	120	0	synth with cache (only 1: wrap pow_lt_mono_r_iff).	0.011905	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	120	0	synth with cache (only 1: wrap pow_le_mono_r_iff).	0.010358	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	120	0	synth with cache (only 1: wrap pow_gt_lin_r).	0.009644	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	120	0	synth with cache (only 1: wrap pow_add_lower).	0.012888	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	120	0	synth with cache (only 1: wrap pow_add_upper).	0.012743	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: assumption).	0.014126	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.061770	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_opp; only 1: easy).	0.012145	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite even_add; only 1: rewrite even_opp; only 1: easy).	0.014470	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite odd_add; only 1: rewrite odd_opp; only 1: easy).	0.016023	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_sub; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy; only 1: assumption).	0.023423	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	120	0	synth with cache (only 1: reflexivity).	0.008968	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec_alt; only 1: f_equiv').	0.097400	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: rewrite @recursion_0; only 1: auto).	0.011449	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.069829	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: f_equiv'; only 1: rewrite strong_rec0_0; only 1: reflexivity).	0.049361	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: symmetry; only 1: apply div_mod; only 1: easy).	0.013187	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mod_unique with b; only 1: auto'; only 1: auto'; only 1: auto').	0.016791	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto'; only 1: auto'; only 1: auto').	0.013282	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto'; only 1: auto'; only 1: auto').	0.013291	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique_exact; only 1: auto'; only 1: auto'; only 1: auto').	0.014176	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_same; only 1: auto').	0.011638	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_same; only 1: auto').	0.010277	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: auto').	0.010279	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.009563	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_0_l; only 1: auto').	0.009733	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_0_l; only 1: auto').	0.008533	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_1_r; only 1: auto').	0.008055	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_1_r; only 1: auto').	0.008028	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.006992	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.006863	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul; only 1: auto'; only 1: auto').	0.011030	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.010483	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.010155	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.008835	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small_iff; only 1: auto'; only 1: auto').	0.012079	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small_iff; only 1: auto'; only 1: auto').	0.013489	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_str_pos_iff; only 1: auto'; only 1: auto').	0.011793	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.007602	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_mono; only 1: auto'; only 1: auto').	0.011499	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.011314	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_succ_div_gt; only 1: auto'; only 1: auto').	0.012642	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_exact; only 1: auto'; only 1: auto').	0.011691	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_lt_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.012766	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.012486	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.013130	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_compat_l; only 1: auto'; only 1: auto).	0.046382	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_add; only 1: auto'; only 1: auto'; only 1: auto').	0.013673	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.014018	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add_l; only 1: auto'; only 1: auto'; only 1: auto').	0.016978	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.015020	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_l; only 1: auto'; only 1: auto'; only 1: auto').	0.015372	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_r; only 1: auto'; only 1: auto'; only 1: auto').	0.015932	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_l; only 1: auto'; only 1: auto'; only 1: auto').	0.016051	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mod; only 1: auto'; only 1: auto').	0.013688	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.014889	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.015598	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.017443	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.015172	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.015254	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.015466	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_div; only 1: auto'; only 1: auto'; only 1: auto').	0.014122	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul_r; only 1: auto'; only 1: auto'; only 1: auto').	0.015784	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_le; only 1: auto'; only 1: auto'; only 1: auto').	0.014930	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_divides; only 1: auto'; only 1: auto').	0.014950	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_r; only 1: apply le_0_l).	0.009554	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_l; only 1: apply le_0_l).	0.008286	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_l; only 1: apply le_0_l).	0.009164	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_r; only 1: apply le_0_l).	0.007871	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	120	0	synth with cache (only 1: wrap sqrt_square).	0.008222	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	120	0	synth with cache (only 1: wrap sqrt_le_square).	0.008431	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	120	0	synth with cache (only 1: wrap sqrt_lt_square).	0.008051	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	120	0	synth with cache (only 1: wrap sqrt_le_lin).	0.008220	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	120	0	synth with cache (only 1: wrap sqrt_mul_above).	0.009116	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	120	0	synth with cache (only 1: wrap sqrt_succ_le).	0.008370	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	120	0	synth with cache (only 1: wrap sqrt_succ_or).	0.009571	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	120	0	synth with cache (only 1: wrap add_sqrt_le).	0.008948	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert p q; only 1: induction r; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto using add_carry_add; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto using add_carry_add; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_1_r; only 1: rewrite <- add_1_r; only 1: easy; only 1: congruence).	0.175275	83
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	120	0.0.0	synth with cache (only 1: split; only 1: apply add_reg_l; only 1: congruence).	0.011371	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply add_reg_r with (r := r); only 1: apply add_carry_add; only 1: easy).	0.011909	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q r; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite add_1_l; only 1: rewrite add_succ_l; only 1: auto).	0.272212	104
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	120	0	synth with cache (only 1: easy).	0.011116	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite add_carry_spec; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: auto).	0.035322	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: induction p; only 1: intros; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial; only 1: trivial).	0.038876	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	120	0	synth with cache (only 1: trivial).	0.012407	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply peano_ind; only 1: auto; only 1: auto).	0.014384	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	120	0	synth with cache (only 1: easy).	0.010183	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.017458	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	0.066358	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_nonneg_nonpos; only 1: easy; only 1: easy).	0.014549	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply lt_nge in H; only 1: apply H; only 1: apply square_nonneg).	0.011341	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.013300	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.013319	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induct p; only 1: intros ?; only 1: rewrite sub_0_r; only 1: rewrite sub_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_r; only 1: rewrite <- H; only 1: rewrite add_pred_r; only 1: reflexivity; only 1: apply sub_gt; only 1: apply le_succ_l; only 1: easy; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: easy).	0.062458	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_1_l; only 1: rewrite <- add_1_l; only 1: symmetry; only 1: apply add_sub_assoc; only 1: assumption).	0.018357	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply le_refl).	0.019512	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_sub_assoc; only 1: rewrite add_comm; only 1: apply add_sub; only 1: assumption).	0.016903	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm in H; only 1: apply add_sub_eq_l; only 1: easy).	0.018131	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite add_comm; only 1: easy; only 1: assumption).	0.022741	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite lt_0_sub; only 1: easy).	0.023043	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy).	0.023021	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	120	0.0	synth with cache (only 1: apply opp_neg_pos; only 1: apply lt_0_1).	0.008087	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_lt_mono_l; only 1: rewrite opp_lt_mono; only 1: easy).	0.019991	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_lt_mono_r; only 1: easy).	0.021374	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_le_mono_l; only 1: rewrite opp_le_mono; only 1: easy).	0.022013	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_le_mono_r; only 1: easy).	0.018336	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.013146	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.013257	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.016008	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.015150	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lt_sub_lt_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- lt_add_lt_sub_r; only 1: easy).	0.027792	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite le_sub_le_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- le_add_le_sub_r; only 1: easy).	0.022167	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add; only 1: easy).	0.012705	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_sub_le_add; only 1: easy).	0.012678	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_neg_pos; only 1: apply add_neg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.021669	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_pos_neg; only 1: apply add_pos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.024923	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonpos_nonneg; only 1: apply add_nonpos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.023499	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: apply add_nonneg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.022878	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_lt_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.076107	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_le_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.012983	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.008803	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.008740	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.012536	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.010056	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lt_0_mul in H; only 1: destruct H; only 1: destruct H; only 1: split; only 1: easy; only 1: easy; only 1: destruct H; only 1: false_hyp H nlt_0_r; only 1: intros ?; only 1: destruct H; only 1: apply mul_pos_pos; only 1: easy; only 1: easy).	0.019120	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.016330	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.025262	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.008392	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_nonneg_pos; only 1: apply le_0_l; only 1: assumption).	0.008008	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply lt_gt_cases).	0.009845	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_gt_cases).	0.007288	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply lt_ge_cases).	0.006864	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_ge_cases).	0.006549	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_pred_l).	0.007161	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- lt_le_pred; only 1: apply lt_irrefl).	0.011308	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: easy).	0.009842	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: trivial).	0.008597	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_le_pred; only 1: easy).	0.008774	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: apply lt_pred_le).	0.010010	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: easy).	0.011984	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy).	0.014581	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_le_mono; only 1: rewrite pred_succ; only 1: easy).	0.013405	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_pred_le; only 1: symmetry; only 1: apply lt_succ_r).	0.010969	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_neq; only 1: apply lt_pred_l).	0.008732	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply le_ngt; only 1: apply le_0_l).	0.008286	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.009510	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intros ?; only 1: apply eq_le_incl; only 1: assumption).	0.011855	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_succ_l; only 1: easy).	0.016051	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_1_l with m; only 1: apply le_lt_trans with n; only 1: apply le_0_l; only 1: auto; only 1: auto).	0.010451	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply succ_pred; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H lt_irrefl).	0.016445	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.010308	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_lt_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.009475	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: intros ?; only 1: apply lt_le_incl; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite pred_succ in H; only 1: apply le_succ_l; only 1: easy).	0.030521	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H using le_ind_rel; only 1: solve_proper; only 1: intros ?; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H1; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.047271	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy; only 1: apply neq_succ_0).	0.013486	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_le_pred; only 1: apply le_succ_l; only 1: easy).	0.011007	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r; only 1: apply lt_pred_le; only 1: easy).	0.011150	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: split; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: rewrite pred_succ; only 1: apply succ_le_mono).	0.025377	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply add_move_0_r; only 1: rewrite <- mul_add_distr_r; only 1: rewrite add_opp_diag_l; only 1: rewrite mul_0_l; only 1: easy).	0.017308	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.014227	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite <- mul_opp_r; only 1: easy).	0.012436	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_opp_r; only 1: easy).	0.025925	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	120	0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: rewrite @N1.recursion_0; only 1: easy).	0.008394	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.023875	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold homomorphism; only 1: unfold natural_isomorphism; only 1: split; only 1: exact natural_isomorphism_0; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.025745	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold isomorphism; only 1: split; only 1: apply Hom12.hom_nat_iso; only 1: split; only 1: apply Hom21.hom_nat_iso; only 1: split; only 1: apply Inverse12.inverse_nat_iso; only 1: apply Inverse21.inverse_nat_iso).	0.012130	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_0_l; only 1: easy).	0.013242	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_succ_l; only 1: easy).	0.016345	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.013628	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.058289	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.065866	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: easy).	0.020543	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite opp_succ; only 1: rewrite opp_succ; only 1: rewrite add_pred_l; only 1: rewrite pred_inj_wd; only 1: easy).	0.051994	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite opp_involutive; only 1: easy).	0.019154	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy).	0.016998	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.023684	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_inj_wd; only 1: rewrite opp_involutive; only 1: easy).	0.014729	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	120	0.0	synth with cache (only 1: symmetry; only 1: apply eq_opp_l).	0.009270	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: rewrite add_opp_r; only 1: easy).	0.026962	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_sub_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: easy).	0.024153	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.028070	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.017923	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_move_l).	0.013631	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).	0.014190	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite sub_opp_r; only 1: easy).	0.018271	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.013838	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: easy).	0.013566	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.014068	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_r; only 1: rewrite add_0_l; only 1: easy).	0.013753	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_sub_swap; only 1: rewrite sub_diag; only 1: rewrite add_0_l; only 1: easy).	0.015369	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy).	0.032239	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_opp_diag_l; only 1: rewrite sub_0_l; only 1: easy).	0.016191	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	0.018782	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_simpl_r; only 1: easy).	0.012914	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite add_opp_r; only 1: easy).	0.034451	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.014280	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite sub_opp_r; only 1: easy).	0.033003	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: intros ?; only 1: elim H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.034194	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.020731	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: rewrite <- add_xO; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply add_diag).	0.021217	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	120	0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: rewrite mul_succ_l; only 1: f_equal; only 1: apply mul_comm).	0.012914	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.015919	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.013960	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply Qmult_lt_0_le_reg_r with z; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.042749	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_0).	0.008752	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.017761	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply induction; only 1: auto; only 1: auto; only 1: auto).	0.013480	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy).	0.018178	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.022562	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	120	0.0.0.0.0	synth with cache (only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).	0.015932	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	120	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply log2_unique' with 0; only 1: trivial; only 1: split; only 1: order_pos; only 1: order_pos; only 1: nzsimpl; only 1: easy).	0.033154	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_nonpos; only 1: order; only 1: order).	0.021272	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_le_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_le_mono_nonneg; only 1: order_pos; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: order_pos).	0.068927	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_succ_r; only 1: rewrite add_1_r; only 1: rewrite <- add_succ_r; only 1: rewrite <- add_succ_l; only 1: apply log2_lt_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_lt_mono_nonneg; only 1: order; only 1: apply log2_spec; only 1: trivial; only 1: order; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H0; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos).	0.178077	32
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_le_mono_nonneg_r; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_succ_r; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_lt_mono_pos_l; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos).	0.080932	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_lt_cancel; only 1: rewrite log2_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.025326	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.012790	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.014173	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	120	0.0.0	synth with cache (only 1: intros; only 1: apply log2_up_eqn0; only 1: order').	0.011180	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply le_le_succ_r; only 1: order_pos; only 1: order).	0.012689	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite log2_up_eqn; only 1: rewrite pred_succ; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial; only 1: rewrite one_succ; only 1: rewrite <- succ_lt_mono; only 1: apply pow_pos_nonneg; only 1: order'; only 1: trivial).	0.027734	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	120	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: easy).	0.009327	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply log2_spec; only 1: trivial; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: le_elim H; only 1: apply log2_up_spec; only 1: auto; only 1: rewrite <- H; only 1: rewrite log2_up_1; only 1: rewrite pow_0_r; only 1: easy).	0.044468	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: order_pos; only 1: auto).	0.017121	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_up_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_up_nonpos; only 1: order; only 1: order).	0.022233	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_up_lt_cancel; only 1: rewrite log2_up_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.034243	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_always_pos; only 1: order).	0.014545	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: easy).	0.036343	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply le_ind; only 1: solve_proper; only 1: nzsimpl; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy).	0.040665	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite two_succ; only 1: nzsimpl; only 1: order'; only 1: order').	0.038703	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: order'; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite pow_succ_r; only 1: intros ?; only 1: apply eq_mul_0 in H1; only 1: destruct H1; only 1: trivial; only 1: apply H0; only 1: easy; only 1: trivial).	0.047368	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: apply pow_eq_0 with b; only 1: easy; only 1: easy).	0.012121	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite pow_add_r; only 1: rewrite H0; only 1: rewrite pow_mul_l; only 1: apply mul_comm; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.180318	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H0); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: trivial).	0.063026	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_ind with (4 := H); only 1: solve_proper; only 1: intros ?; only 1: destruct H0; only 1: nzsimpl; only 1: auto; only 1: order; only 1: order; only 1: clear c H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: nzsimpl; only 1: apply mul_lt_mono_nonneg; only 1: trivial; only 1: trivial; only 1: apply pow_nonneg; only 1: trivial; only 1: apply H0; only 1: split; only 1: trivial; only 1: trivial; only 1: order; only 1: order).	0.145312	30
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	120	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.012027	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	120	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_l; only 1: congruence).	0.011612	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.040107	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.036686	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	120	0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: easy).	0.013227	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: simpl; only 1: f_equal; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: simpl; only 1: rewrite add_comm; only 1: easy).	0.044594	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply iter_swap_gen; only 1: easy).	0.014359	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: rewrite square_xI; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: rewrite square_xO; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial).	0.022446	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst <- H; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.059936	16
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.016677	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	120	0.0.0.0	synth with cache (only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence).	0.018904	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	120	1.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence; only 1: intros ?; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l).	0.025852	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: exists r; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_r).	0.034854	19
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	120	0	synth with cache (only 1: reflexivity).	0.011021	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	120	0	synth with cache (only 1: reflexivity).	0.010394	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	120	0.0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	0.014229	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q c; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial).	0.062044	35
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.011064	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	120	0	synth with cache (only 1: reflexivity).	0.010982	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.011314	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.011544	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.011330	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.011140	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.037159	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.025206	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	120	0.0	synth with cache (only 1: apply lt_succ_r; only 1: apply le_1_l).	0.012446	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	120	0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: easy).	0.013551	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.014071	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_succ_r; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.015101	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	120	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.015845	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	120	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_succ_succ; only 1: easy).	0.016771	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.012321	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.019453	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	120	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_refl; only 1: easy).	0.017115	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.019619	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H0; only 1: destruct H0; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.018736	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: left; only 1: apply lt_le_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.021559	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	120	0.0.0.0.0	synth with cache (only 1: rewrite <- lt_succ_r; only 1: symmetry; only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.016682	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	120	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.011964	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: apply sqrt_unique; only 1: rewrite H1; only 1: split; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: easy; only 1: nzsimpl; only 1: apply lt_succ_r; only 1: rewrite <- add_assoc; only 1: apply add_le_mono_l; only 1: generalize H0; only 1: nzsimpl'; only 1: easy).	0.148871	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.026095	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	120	0.0.0.0.0.0.0	synth with cache (only 1: apply sqrt_unique' with 1; only 1: nzsimpl; only 1: split; only 1: order'; only 1: order'; only 1: nzsimpl'; only 1: easy).	0.042497	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_lt_cancel; only 1: rewrite sqrt_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_1; only 1: apply sqrt_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.031210	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- sqrt_lt_square; only 1: rewrite <- mul_1_r  at 1; only 1: rewrite <- mul_lt_mono_pos_l; only 1: auto; only 1: order'; only 1: order'; only 1: order').	0.021853	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_lt_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_lt_mono_nonneg; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial).	0.035441	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.018522	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.016616	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.015190	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: assumption; only 1: apply sub_add_le).	0.013548	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases m; only 1: rewrite pred_0; only 1: rewrite mul_0_r; only 1: rewrite sub_0_l; only 1: easy; only 1: intros ?; only 1: rewrite pred_succ; only 1: rewrite mul_succ_r; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply eq_le_incl; only 1: easy).	0.059366	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.013351	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.015018	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: rewrite sqrt_square; only 1: easy; only 1: trivial; only 1: apply lt_succ_r; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.022921	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	120	0.0.0.0.0.0	synth with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite two_succ; only 1: rewrite pred_succ; only 1: rewrite sqrt_1; only 1: easy; only 1: order').	0.028312	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply sqrt_spec; only 1: trivial; only 1: le_elim H; only 1: apply sqrt_up_spec; only 1: trivial; only 1: rewrite <- H; only 1: rewrite sqrt_up_0; only 1: rewrite mul_0_l; only 1: order).	0.036416	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold le_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.029698	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.029805	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_up_lt_cancel; only 1: rewrite sqrt_up_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_up_1; only 1: apply sqrt_up_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.037213	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	120	0	synth with cache (only 1: exact le_alt_dichotomy).	0.011666	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_up_le_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply sqrt_up_nonneg; only 1: apply sqrt_up_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_le_mono_nonneg; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial).	0.046016	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	120	0.0	synth with cache (only 1: unfold Even; only 1: solve_proper).	0.014379	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	120	0.0	synth with cache (only 1: unfold Odd; only 1: solve_proper).	0.013555	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: f_equiv; only 1: easy).	0.019502	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite odd_spec; only 1: rewrite odd_spec; only 1: f_equiv; only 1: easy).	0.018565	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: apply lt_succ_r; only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.118348	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.009559	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	120	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.019418	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	120	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_0; only 1: easy).	0.008946	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	120	0.0.0.0	synth with cache (only 1: rewrite odd_spec; only 1: exists 0; only 1: nzsimpl'; only 1: easy).	0.021889	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	120	0.0.0	synth with cache (only 1: rewrite <- negb_odd; only 1: rewrite odd_1; only 1: easy).	0.009112	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	120	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 1; only 1: nzsimpl'; only 1: easy).	0.031074	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	120	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_2; only 1: easy).	0.008918	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite <- succ_inj_wd; only 1: rewrite add_1_r in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite H; only 1: nzsimpl; only 1: easy).	0.047043	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply div_unique with 0; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: easy).	0.024738	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.013162	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.010974	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).	0.014837	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: trivial; only 1: nzsimpl; only 1: order).	0.017537	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite Even_succ; only 1: apply Odd_succ).	0.010305	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Odd_succ; only 1: rewrite Even_succ; only 1: easy).	0.011125	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 1; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).	0.023745	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite even_succ; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.014655	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.011030	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with a; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.026027	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.025755	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.010585	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	120	0.0.1.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: order; only 1: trivial).	0.126051	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: trivial; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.018832	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: trivial; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.020415	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_add; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.019203	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.009592	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.009549	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: auto; only 1: apply mul_comm).	0.013427	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: split; only 1: order; only 1: auto; only 1: nzsimpl; only 1: apply mul_comm).	0.027830	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_mul; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.023333	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply even_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.018527	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply odd_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.021160	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.011595	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply odd_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.011886	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold divide; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: easy).	0.031252	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists n; only 1: nzsimpl; only 1: easy).	0.015809	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.016312	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: revert H; only 1: nzsimpl; only 1: easy).	0.024394	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm in H0; only 1: apply and_comm; only 1: apply eq_mul_1_nonneg; only 1: easy; only 1: easy).	0.018277	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 1; only 1: nzsimpl; only 1: easy).	0.032840	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_shuffle3; only 1: rewrite H; only 1: easy).	0.025847	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_assoc; only 1: rewrite H; only 1: easy).	0.018129	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: rewrite mul_shuffle3 in H0; only 1: rewrite mul_cancel_l in H0; only 1: easy; only 1: easy; only 1: apply mul_divide_mono_l).	0.131642	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_rem_idemp_l; only 1: rewrite mul_rem_idemp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.019697	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.021695	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_small_iff; only 1: auto using rem_bound_abs; only 1: assumption).	0.015365	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	120	0	synth with cache (only 1: exact NZQuot.div_mul_le).	0.011683	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_pos_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite <- H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.042400	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_neg_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.049370	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.023244	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	120	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.017169	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.019890	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.009187	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_r; only 1: apply divide_refl).	0.008755	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply gcd_nonneg; only 1: trivial; only 1: apply H2; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: apply gcd_greatest; only 1: easy; only 1: easy).	0.028762	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: rewrite H; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_greatest).	0.061714	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.030531	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.012365	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.024832	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.011973	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l_nonneg; only 1: easy; only 1: trivial).	0.012974	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_1_l; only 1: easy).	0.013341	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.012482	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy).	0.013940	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: apply gcd_eq_0_l with m; only 1: easy; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_0_r_nonneg; only 1: easy).	0.028392	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: trivial; only 1: apply divide_mul_l; only 1: trivial; only 1: destruct 1; only 1: easy).	0.017729	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: apply gcd_mul_diag_l; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply gcd_divide_r).	0.029898	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).	0.132073	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	0.096589	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.041340	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.017234	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	120	0	synth with cache (only 1: exact div_mul_le).	0.012528	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).	0.062439	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_mono; only 1: easy; only 1: easy).	0.017872	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).	0.018706	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).	0.018228	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.019106	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply lt_add_pos_l; only 1: easy).	0.018386	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.028066	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.023662	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.027005	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.031374	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.025456	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: left; only 1: assumption).	0.009459	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.009096	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_succ_r; only 1: apply le_refl).	0.008447	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.007808	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).	0.008338	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n m; only 1: left; only 1: apply le_refl; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: intuition).	0.080291	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.008096	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	120	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.008288	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	120	0	synth with cache (only 1: order).	0.009543	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	120	0	synth with cache (only 1: order).	0.010203	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	120	0	synth with cache (only 1: order).	0.009390	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	120	0	synth with cache (only 1: order).	0.009046	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	120	0	synth with cache (only 1: order).	0.009641	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	120	0	synth with cache (only 1: order).	0.009642	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	120	0	synth with cache (only 1: order).	0.010129	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	120	0	synth with cache (only 1: order).	0.009916	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: easy).	0.015892	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l; only 1: order).	0.013034	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r in H; only 1: order).	0.011970	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: order).	0.011723	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.011536	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite <- succ_lt_mono; only 1: rewrite succ_inj_wd; only 1: easy).	0.020120	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	120	0.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.013880	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	120	0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.016163	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	120	0.0	synth with cache (only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.014069	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	120	0.0.0.0	synth with cache (only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2).	0.017022	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	120	0.0	synth with cache (only 1: apply lt_le_incl; only 1: apply lt_0_2).	0.008374	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: order).	0.020910	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	120	0	synth with cache (only 1: intuition order).	0.014000	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	120	0	synth with cache (only 1: intuition order).	0.014366	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	120	0	synth with cache (only 1: intuition order).	0.012812	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	120	0	synth with cache (only 1: intuition order).	0.014120	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: intuition order).	0.016418	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply lt_exists_pred in H1; only 1: destruct H1; only 1: destruct H1; only 1: rewrite H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: trivial; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: rewrite <- H1; only 1: apply H).	0.038247	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.012701	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_right_induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply lt_exists_pred in H1; only 1: destruct H1; only 1: destruct H1; only 1: rewrite H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: trivial; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: rewrite <- H1; only 1: apply H).	0.077115	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.023552	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H0; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.017189	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_left_induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.025519	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply order_induction; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 in H3; only 1: rewrite pred_succ in H3; only 1: easy; only 1: apply le_succ_l; only 1: easy).	0.031831	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with n; only 1: easy; only 1: easy; only 1: easy).	0.017367	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.047589	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: easy).	0.012665	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.046275	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.022190	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.077718	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.076312	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.023156	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_always_pos; only 1: order).	0.017794	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	120	0	synth with cache (only 1: exact div_mul_le).	0.011559	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: auto; only 1: symmetry; only 1: auto).	0.011584	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: easy).	0.014156	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite succ_inj_wd; only 1: easy).	0.009879	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_unicity; only 1: auto).	0.016598	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	120	0.0	synth with cache (only 1: apply max_l; only 1: order).	0.007447	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	120	0	synth with cache (only 1: solve_max).	0.015574	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	120	0	synth with cache (only 1: solve_max).	0.017414	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	120	0	synth with cache (only 1: solve_max).	0.022877	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply max_le; only 1: solve_max).	0.114076	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	120	0	synth with cache (only 1: solve_max).	0.014802	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	120	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.023319	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	120	0	synth with cache (only 1: solve_max).	0.014789	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	120	0	synth with cache (only 1: solve_max).	0.028162	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	120	0	synth with cache (only 1: solve_max).	0.029446	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.014147	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	120	0.0	synth with cache (only 1: symmetry; only 1: apply sub_1_r).	0.012156	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	120	0	synth with cache (only 1: solve_max).	0.014641	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	120	0	synth with cache (only 1: solve_max).	0.031748	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	120	0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: split; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l; only 1: trivial).	0.031116	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.027043	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.022946	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	120	0.0.0.0.0	synth with cache (only 1: apply add_reg_r with q; only 1: rewrite sub_add; only 1: trivial; only 1: rewrite add_comm; only 1: apply lt_add_r).	0.015911	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_unicity; only 1: auto).	0.014532	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	120	0.0	synth with cache (only 1: apply min_l; only 1: order).	0.008055	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	120	0	synth with cache (only 1: solve_min).	0.013253	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	120	0	synth with cache (only 1: solve_min).	0.022984	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	120	0	synth with cache (only 1: solve_min).	0.018725	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply min_le; only 1: solve_min).	0.025881	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	120	0	synth with cache (only 1: solve_min).	0.020400	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	120	0	synth with cache (only 1: solve_min).	0.027768	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	120	0	synth with cache (only 1: solve_min).	0.016549	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	120	0	synth with cache (only 1: solve_min).	0.030116	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	120	0	synth with cache (only 1: solve_min).	0.015805	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	120	0	synth with cache (only 1: solve_min).	0.031246	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.024282	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.031677	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros; only 1: apply min_le_compat_l; only 1: auto).	0.021193	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	120	0.0	synth with cache (only 1: rewrite min_max_distr; only 1: auto using max_le_compat_l, le_min_r).	0.018187	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.015568	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.014852	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply min_case; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite <- e; only 1: auto with relations; only 1: right; only 1: rewrite <- e; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).	0.026086	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: congruence; only 1: auto).	0.013762	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.013811	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_max_antimono; only 1: congruence; only 1: auto).	0.019320	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_min_antimono; only 1: congruence; only 1: auto).	0.017050	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.015830	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto).	0.011934	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	120	0	synth with cache (only 1: exact max_dec).	0.010035	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.015326	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto).	0.011673	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	120	0	synth with cache (only 1: exact min_dec).	0.009375	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	120	0	synth with cache (only 1: apply compare_eq_iff).	0.007932	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	120	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.012287	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	120	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.011289	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	120	0.0	synth with cache (only 1: compute; only 1: iorder).	0.018798	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	120	0	synth with cache (only 1: iorder).	0.011242	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	120	0	synth with cache (only 1: iorder).	0.011677	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	120	0	synth with cache (only 1: iorder).	0.014328	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	120	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_ngt_iff).	0.009220	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	120	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_nlt_iff).	0.009299	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	120	0.0.0	synth with cache (only 1: unfold eqb; only 1: intros; only 1: apply if_eq_dec).	0.010974	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_alt; only 1: rewrite eqb_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.023579	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	120	0	synth with cache (only 1: order).	0.009898	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	120	0	synth with cache (only 1: order).	0.008485	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	120	0	synth with cache (only 1: order).	0.009327	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	120	0	synth with cache (only 1: order).	0.009394	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	120	0	synth with cache (only 1: order).	0.010380	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	120	0	synth with cache (only 1: order).	0.010374	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	120	0	synth with cache (only 1: order).	0.009764	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	120	0	synth with cache (only 1: order).	0.009972	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	120	0	synth with cache (only 1: order).	0.011349	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	120	0	synth with cache (only 1: order).	0.010568	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	120	0	synth with cache (only 1: order).	0.010557	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	120	0	synth with cache (only 1: order).	0.009842	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	120	0	synth with cache (only 1: order).	0.009015	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	120	0	synth with cache (only 1: order).	0.009557	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	120	0	synth with cache (only 1: order).	0.009718	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	120	0	synth with cache (only 1: order).	0.009199	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	120	0	synth with cache (only 1: order).	0.010922	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	120	0	synth with cache (only 1: order).	0.008918	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	120	0.0.0.0	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.034654	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	120	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.007959	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	120	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.008601	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold le; only 1: unfold lt; only 1: unfold flip; only 1: rewrite O.le_lteq; only 1: intuition).	0.020023	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	120	0	synth with cache (only 1: apply compare_eq_iff).	0.009738	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	120	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.010454	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.015683	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.015819	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	120	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.015067	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	120	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.013461	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.044220	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.017220	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	120	0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_refl; only 1: easy).	0.017506	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy).	0.095545	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_le).	0.009862	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: case leb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.014724	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_lt).	0.012149	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: case ltb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).	0.015175	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: easy).	0.014126	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	120	0.0.0.0	synth with cache (only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.015218	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: intuition).	0.014719	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	120	0.0.0.0	synth with cache (only 1: rewrite ltb_nlt; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: intuition).	0.016170	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	120	0.0.0.0	synth with cache (only 1: apply leb_le; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.012026	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite leb_le; only 1: rewrite ltb_ge; only 1: easy).	0.015739	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	120	0.0.0.0	synth with cache (only 1: apply ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.012460	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_gt; only 1: easy).	0.015641	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.117032	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.035801	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.037388	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	120	0	synth with cache (only 1: reflexivity).	0.007853	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite P.le_lteq; only 1: right; only 1: reflexivity).	0.008759	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	120	0	synth with cache (only 1: auto with *).	0.007668	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	120	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.010844	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	120	0.0.0.0	synth with cache (only 1: unfold le; only 1: split; only 1: auto; only 1: auto).	0.010596	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H0; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite H; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.095235	29
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: unfold eqb; only 1: unfold le; only 1: case leb; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.019572	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold eqb; only 1: destruct F.eq_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.078547	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.027601	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply eqb_eq).	0.008214	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_eq; only 1: easy).	0.013172	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	120	0.0	synth with cache (only 1: apply eqb_eq; only 1: easy).	0.009670	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: easy).	0.014456	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	120	0	synth with cache (only 1: by [  ]).	0.006070	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	120	0	synth with cache (only 1: by [  ]).	0.006277	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	120	0	synth with cache (only 1: by case).	0.007061	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	120	0	synth with cache (only 1: exact : can_inj negbK ).	0.006515	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	120	1	synth with cache (only 1: exact : canLR negbK ).	0.007590	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	120	0	synth with cache (only 1: exact : canRL negbK ).	0.006943	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	120	0	synth with cache (only 1: by move ->).	0.008123	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	120	0	synth with cache (only 1: by move ->).	0.007264	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	120	0	synth with cache (only 1: by case b).	0.008153	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	120	0	synth with cache (only 1: by case b).	0.008370	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	120	0	synth with cache (only 1: by case b).	0.008900	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	120	0	synth with cache (only 1: by [  ]).	0.007177	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	120	0	synth with cache (only 1: by case c; case Hb).	0.012340	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	120	0	synth with cache (only 1: by move <-; case Hb).	0.008960	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	120	0	synth with cache (only 1: by rewrite -if_neg; apply : xorPif ).	0.011297	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	120	0	synth with cache (only 1: by case Pb).	0.008792	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	120	0	synth with cache (only 1: by case).	0.009045	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	120	0	synth with cache (only 1: by case b1; constructor).	0.011435	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	120	0	synth with cache (only 1: by case b1; constructor; auto).	0.009891	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	120	0	synth with cache (only 1: by case b1; constructor).	0.010683	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	120	0	synth with cache (only 1: by case b1; constructor).	0.011419	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	120	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.015510	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	120	0	synth with cache (only 1: by [  ]).	0.010857	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	120	0	synth with cache (only 1: by [  ]).	0.009597	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	120	0	synth with cache (only 1: by case).	0.011436	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	120	0	synth with cache (only 1: by case).	0.011153	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	120	0	synth with cache (only 1: by case).	0.010191	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	120	0	synth with cache (only 1: by do 3!case).	0.019063	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	120	0	synth with cache (only 1: by do 3!case).	0.017009	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	120	0	synth with cache (only 1: by [  ]).	0.011388	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	120	0	synth with cache (only 1: by [  ]).	0.010167	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	120	0	synth with cache (only 1: by case).	0.010393	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	120	0	synth with cache (only 1: by case).	0.011194	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	120	0	synth with cache (only 1: by case).	0.010935	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	120	0	synth with cache (only 1: by do 2!case).	0.012249	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	120	0	synth with cache (only 1: by do 3!case).	0.015894	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	120	0	synth with cache (only 1: by do 3!case).	0.015442	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	120	0	synth with cache (only 1: by do 3!case).	0.015512	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	120	0	synth with cache (only 1: by do 4!case).	0.022411	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	120	0	synth with cache (only 1: by do 3!case).	0.017015	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	120	0	synth with cache (only 1: by do 3!case).	0.015669	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	120	0	synth with cache (only 1: by do 3!case).	0.019079	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	120	0	synth with cache (only 1: by do 3!case).	0.017007	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	120	0	synth with cache (only 1: by [  ]).	0.011972	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	120	0	synth with cache (only 1: by [  ]).	0.013017	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	120	0	synth with cache (only 1: by [  ]).	0.011020	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	120	0	synth with cache (only 1: by case).	0.010906	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	120	0	synth with cache (only 1: by case).	0.013692	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	120	0	synth with cache (only 1: by do 2!case).	0.014507	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	120	0	synth with cache (only 1: by do 3!case).	0.018634	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	120	0	synth with cache (only 1: by do 3!case).	0.018952	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	120	0	synth with cache (only 1: by do 3!case).	0.020807	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	120	0	synth with cache (only 1: by do 4!case).	0.025705	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	120	0	synth with cache (only 1: by do 3!case).	0.020740	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	120	0	synth with cache (only 1: by do 3!case).	0.045426	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	120	0	synth with cache (only 1: by do 2!case).	0.016887	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	120	0	synth with cache (only 1: by do 2!case).	0.016921	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	120	0	synth with cache (only 1: by do 3!case).	0.017539	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	120	0	synth with cache (only 1: by do 3!case).	0.018484	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	120	0	synth with cache (only 1: by [  ]).	0.011466	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	120	0	synth with cache (only 1: by [  ]).	0.015724	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	120	0	synth with cache (only 1: by [  ]).	0.016476	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	120	0	synth with cache (only 1: by [  ]).	0.015454	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	120	0	synth with cache (only 1: by [  ]).	0.013478	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	120	0	synth with cache (only 1: by [  ]).	0.016095	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	120	0	synth with cache (only 1: by [  ]).	0.015151	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	120	0	synth with cache (only 1: by move  =>? ?).	0.015747	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	120	0	synth with cache (only 1: by move  =>? ?).	0.016794	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	120	0	synth with cache (only 1: by move  =>? ?; auto).	0.017768	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	120	0	synth with cache (only 1: by move  =>? ?; auto).	0.017136	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	120	0	synth with cache (only 1: by move  =>? ?).	0.015725	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	120	0	synth with cache (only 1: by move  =>? ?).	0.016857	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	120	0	synth with cache (only 1: by move  =>? ?).	0.015735	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	120	0	synth with cache (only 1: by move  =>? ?; auto).	0.015692	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	120	0	synth with cache (only 1: by move  =>? ?; auto).	0.016236	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	120	0	synth with cache (only 1: by move  =>? ?; auto).	0.017115	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	120
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	120	0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: assumption).	0.011146	4
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	120	0	synth with cache (only 1: firstorder).	0.007090	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	120	0	synth with cache (only 1: firstorder).	0.007128	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	120	0	synth with cache (only 1: firstorder).	0.010454	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: transitivity y; only 1: easy; only 1: easy).	0.022671	11
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	120	0	synth with cache (only 1: firstorder).	0.006759	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	120	0	synth with cache (only 1: firstorder).	0.006877	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	120	0	synth with cache (only 1: firstorder).	0.008499	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	120	0	synth with cache (only 1: apply rev_revapp).	0.005672	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	120	0	synth with cache (only 1: apply nzhead_revapp).	0.006472	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	120	0	synth with cache (only 1: apply revapp_nil_inv).	0.007011	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply mul_id_l).	0.019247	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.067319	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.078563	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.016895	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005972	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005333	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005874	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	120	0	synth with cache (only 1: firstorder).	0.006101	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	120	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.010648	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	120	0.0	synth with cache (only 1: unfold subrelation; only 1: firstorder).	0.006427	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	120	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.008189	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	120	0.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.009954	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	120	0.0.0.0	synth with cache (only 1: reduce; only 1: unfold pointwise_relation in *; only 1: apply sub; only 1: apply H).	0.010636	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	120	0.0.0	synth with cache (only 1: reduce; only 1: apply H; only 1: apply H0).	0.009793	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.005993	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.005929	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	120	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.010686	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	120	0	synth with cache (only 1: firstorder).	0.010125	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	120	0.0.0.0	synth with cache (only 1: unfold compose; only 1: apply H; only 1: apply H0; only 1: apply H1).	0.012302	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	120	0	synth with cache (only 1: simpl_relation).	0.012599	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: unfold respectful in *; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: simpl in *; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: apply H1; only 1: rewrite H; only 1: assumption; only 1: intros; only 1: rewrite H0; only 1: apply H1; only 1: rewrite <- H; only 1: assumption).	0.041614	16
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	120	0	synth with cache (only 1: simpl_relation).	0.014640	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold flip; only 1: unfold respectful; only 1: split; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition).	0.044037	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	120	0	synth with cache (only 1: firstorder).	0.006864	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	120	0	synth with cache (only 1: firstorder).	0.006209	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	120	0	synth with cache (only 1: simpl_relation).	0.009826	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	120	0	synth with cache (only 1: firstorder).	0.007246	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	120	0	synth with cache (only 1: firstorder).	0.008732	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.030255	13
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.043601	19
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.048765	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H2; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H3; only 1: auto; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: rewrite H2; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.056740	27
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005117	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005522	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005279	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	120	0	synth with cache (only 1: firstorder).	0.005893	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	120	0	synth with cache (only 1: simpl_crelation).	0.018451	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	120	0	synth with cache (only 1: simpl_crelation).	0.007081	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	120	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.008687	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	120	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.009939	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.006252	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.006251	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	120	0	synth with cache (only 1: firstorder).	0.006022	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	120	0	synth with cache (only 1: firstorder).	0.006444	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	120	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.010166	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	120	0	synth with cache (only 1: firstorder).	0.009377	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	120	0.0	synth with cache (only 1: unfold compose; only 1: firstorder).	0.055015	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	120	0	synth with cache (only 1: simpl_crelation).	0.013495	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	120	0	synth with cache (only 1: simpl_crelation).	0.012093	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	120	0	synth with cache (only 1: firstorder).	0.007111	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	120	0	synth with cache (only 1: firstorder).	0.007601	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	120	0	synth with cache (only 1: simpl_crelation).	0.009303	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	120	0	synth with cache (only 1: firstorder).	0.007741	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	120	0	synth with cache (only 1: firstorder).	0.007885	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	120	0.0.0.0	synth with cache (only 1: unfold Normalizes in *; only 1: rewrite NA; only 1: rewrite NB; only 1: firstorder).	0.062749	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply X).	0.026858	13
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.048971	19
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: split; only 1: eauto; only 1: eauto).	0.025574	14
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.057907	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.086969	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X; only 1: intros ?; only 1: destruct X; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- e; only 1: auto; only 1: intros ?; only 1: destruct X; only 1: left; only 1: rewrite e; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.083173	27
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	120	0	synth with cache (only 1: auto  6 with sets).	0.011064	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	120	0	synth with cache (only 1: auto  6 with sets).	0.011314	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	120	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto using Empty_set_zero with sets).	0.007501	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	120	0	synth with cache (only 1: auto with sets).	0.008936	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	120	0	synth with cache (only 1: auto with sets).	0.010605	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	120	0	synth with cache (only 1: auto  7 with sets).	0.012885	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.063712	22
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.047778	31
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Triple_as_union; only 1: rewrite <- Couple_as_union; only 1: auto with sets).	0.014991	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.019546	14
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H0; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.045112	28
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H1; only 1: elim H2; only 1: auto with sets; only 1: auto with sets).	0.089482	29
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	120	0.0	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.010267	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: red; only 1: auto with sets).	0.021752	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Empty_set_zero'; only 1: auto with sets).	0.011800	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).	0.090281	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.106310	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.026299	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	120	0	synth with cache (only 1: trivial).	0.006585	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	120	0	synth with cache (only 1: by [  ]).	0.006562	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	120	0	synth with cache (only 1: by case).	0.006985	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	120	0	synth with cache (only 1: by [  ]).	0.006191	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.017679	6
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	120	0	synth with cache (only 1: exact Fix_eq).	0.008743	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	120	0.0	synth with cache (only 1: case r; only 1: auto).	0.012604	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	120	0	synth with cache (only 1: apply UIP).	0.007358	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	120	0	synth with cache (only 1: apply UIP_refl).	0.005941	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	120	0	synth with cache (only 1: apply UIP_refl).	0.005832	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.007604	3
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.007216	3
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	120	0.0	synth with cache (only 1: intros; only 1: assumption).	0.006024	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply inj_pairT2; only 1: assumption).	0.010287	5
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.008420	3
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: clear H; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: apply Acc_intro; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H2; only 1: apply H0; only 1: auto; only 1: apply Acc_intro; only 1: trivial; only 1: auto with sets).	0.094672	14
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	120	0	synth with cache (only 1: reflexivity).	0.006410	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	120	0	synth with cache (only 1: firstorder).	0.007161	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	120	0	synth with cache (only 1: firstorder).	0.018183	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	120	0	synth with cache (only 1: firstorder).	0.019707	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	120	0	synth with cache (only 1: firstorder).	0.030481	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	120	0	synth with cache (only 1: firstorder).	0.032031	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.005761	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	120	0	synth with cache (only 1: firstorder).	0.006669	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.020460	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.026479	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.018485	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	120	0	synth with cache (only 1: firstorder).	0.044999	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: exists y; only 1: auto with sets).	0.012765	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.008071	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	120	0.0	synth with cache (only 1: elim Inclusion_is_an_order; only 1: auto with sets).	0.007863	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	120	0	synth with cache (only 1: auto with sets).	0.007198	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: auto with sets).	0.025359	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: auto with sets; only 1: auto with sets).	0.024031	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Bottom_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	0.010499	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets).	0.016674	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	120	0	synth with cache (only 1: auto with sets).	0.008434	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	120	0	synth with cache (only 1: auto with sets).	0.006995	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	120	0	synth with cache (only 1: auto with sets).	0.006620	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.011072	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.010446	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Lub_definition; only 1: apply Upper_Bound_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: simpl; only 1: auto with sets).	0.033354	21
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.011476	7
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: assumption; only 1: auto with sets).	0.008469	4
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.012277	8
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_t1n; only 1: apply clos_t1n_trans).	0.008616	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).	0.010701	7
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: elim IHclos_trans2; only 1: intros ?; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.018224	12
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_tn1; only 1: apply clos_tn1_trans).	0.009233	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with y; only 1: assumption; only 1: left).	0.009117	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with x; only 1: assumption; only 1: left).	0.009069	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply clos_rt1n_step; only 1: assumption; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto).	0.023720	15
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rt1n; only 1: apply clos_rt1n_rt).	0.007942	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.010500	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: right with x; only 1: assumption; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.017078	11
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rtn1; only 1: apply clos_rtn1_rt).	0.008318	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: intros; only 1: right with y; only 1: eauto; only 1: eauto).	0.014624	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rst1n; only 1: apply clos_rst1n_rst).	0.008522	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	0.017455	10
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H0; only 1: auto; only 1: right with y0; only 1: eauto; only 1: eauto).	0.015521	10
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: constructor 1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply clos_rstn1_trans with y0; only 1: right with z; only 1: tauto; only 1: left; only 1: auto).	0.026093	15
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rstn1; only 1: apply clos_rstn1_rst).	0.009590	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	120	0.0.0.0.0.0	synth with cache (only 1: unfold well_founded; only 1: intros; only 1: apply Acc_union; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.015003	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	120	0	synth with cache (only 1: reflexivity).	0.006562	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	120	0	synth with cache (only 1: firstorder).	0.007784	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	120	0	synth with cache (only 1: firstorder).	0.015719	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	120	0	synth with cache (only 1: firstorder).	0.023144	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	120	0	synth with cache (only 1: firstorder).	0.023501	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	120	0	synth with cache (only 1: firstorder).	0.053932	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.006141	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	120	0	synth with cache (only 1: firstorder).	0.007551	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	120	0	synth with cache (only 1: firstorder).	0.005796	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	120	0	synth with cache (only 1: firstorder).	0.006063	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	120	0	synth with cache (only 1: firstorder).	0.007706	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	120	0	synth with cache (only 1: firstorder).	0.008967	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.009680	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.008269	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.012783	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.012169	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.010545	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.074743	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	120	0.0	synth with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.008705	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.008514	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	120	0.0	synth with cache (only 1: destruct 1; only 1: apply @JMeq_refl).	0.008527	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_assoc; only 1: rewrite <- add_assoc; only 1: rewrite add_cancel_l; only 1: apply add_comm).	0.017325	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_assoc; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: apply add_shuffle0).	0.018524	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.025858	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: exists A; only 1: exists x; only 1: auto).	0.020827	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: trivial with sets; only 1: trivial with sets).	0.013750	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.013355	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.011286	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	120	0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: auto).	0.010303	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite orb_false_r; only 1: auto).	0.056820	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto; only 1: auto).	0.017759	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto).	0.020042	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	120	0	synth with cache (only 1: exact tt).	0.005994	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	120	0.0	synth with cache (only 1: unlock; only 1: discriminate).	0.006891	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	120	0	synth with cache (only 1: auto with sets).	0.007365	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	120	0	synth with cache (only 1: auto with sets).	0.006707	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.012009	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.026601	19
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right; only 1: exists y0; only 1: auto with sets).	0.040849	16
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_R; only 1: intros ?; only 1: red in H; only 1: intros ?; only 1: intros ?; only 1: unfold same_relation; only 1: unfold contains; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar1_n with y0; only 1: auto with sets; only 1: auto with sets).	0.118855	41
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H4; only 1: apply H4 with y0; only 1: auto with sets; only 1: apply Rstar_n with x0; only 1: auto with sets; only 1: auto with sets).	0.075565	23
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets).	0.088101	22
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intros ?; only 1: red in H; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: split; only 1: assumption; only 1: apply H0 with z0; only 1: auto with sets; only 1: auto with sets).	0.149114	42
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: apply Acc_inv with y; only 1: assumption; only 1: assumption; only 1: auto with sets).	0.011545	6
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	120	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.007917	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct P; only 1: cbn; only 1: exact p).	0.009219	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lt; only 1: rewrite sub_compare_mono_r; only 1: trivial; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial; only 1: easy).	0.018653	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_mono_r with m; only 1: rewrite sub_add; only 1: apply lt_add_r; only 1: trivial).	0.016052	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_reg_r with r; only 1: rewrite <- add_assoc; only 1: rewrite sub_add; only 1: rewrite sub_add; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial using lt_add_r; only 1: rewrite add_comm; only 1: trivial using lt_add_r; only 1: trivial using lt_add_r).	0.025594	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	120	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.018545	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	120	0	synth with cache (only 1: apply sub_mask_neg_iff').	0.015358	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sub_le; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.018697	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply le_succ_l in IHp; only 1: apply le_succ_l; only 1: easy; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.028698	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply mul_le_mono_l; only 1: apply le_lteq; only 1: left; only 1: rewrite xI_succ_xO; only 1: apply lt_succ_r; only 1: apply IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.034947	14
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply H).	0.012929	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: replace p0 with p; only 1: replace q0 with q; only 1: reflexivity; only 1: apply H0; only 1: apply H).	0.016014	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: apply H).	0.010171	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: contradiction).	0.005765	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.007739	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: contradiction).	0.007642	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply hset_hOneType; only 1: exact p).	0.019416	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	120	0.0	synth with cache (only 1: rewrite max_comm; only 1: apply max_1_l).	0.016980	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	120	0.0	synth with cache (only 1: rewrite min_comm; only 1: apply min_1_l).	0.014078	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	120	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.017690	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	120	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.018273	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	120	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.020738	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	120	0.0	synth with cache (only 1: red; only 1: destruct 1).	0.006013	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.008970	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	120	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.007759	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Inhabited_not_empty; only 1: apply Inhabited_add).	0.008241	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial with sets).	0.011308	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.014448	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: assumption; only 1: right; only 1: apply Singleton_inv; only 1: assumption).	0.015070	10
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.012268	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.014674	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	120	0.0.0	synth with cache (only 1: unfold Setminus at 1; only 1: red; only 1: auto with sets).	0.011824	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	120	0	synth with cache (only 1: auto with sets).	0.008626	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets).	0.011633	8
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.008935	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.008355	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.011318	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.009875	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.009816	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_dep_eq__inj_pairT2; only 1: apply eq_rect_eq__eq_dep_eq; only 1: unfold Eq_rect_eq; only 1: unfold Eq_rect_eq_on; only 1: intros; only 1: apply eq_rect_eq_dec; only 1: apply X).	0.021926	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.007835	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto with bool; only 1: auto with bool).	0.008834	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- beq_eq_true; only 1: discriminate; only 1: trivial).	0.011900	6
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: symmetry; only 1: apply not_true_is_false; only 1: intros ?; only 1: apply H; only 1: apply beq_eq; only 1: symmetry; only 1: assumption).	0.013048	10
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	120	0	synth with cache (only 1: trivial).	0.006627	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	120	0	synth with cache (only 1: trivial).	0.005834	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	120	0	synth with cache (only 1: trivial).	0.006951	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	120	0.0	synth with cache (only 1: unfold Over_rel; only 1: trivial).	0.007897	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	120	0	synth with cache (only 1: trivial).	0.006396	1
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	120	0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply Acc_inverse_image; only 1: auto).	0.006644	4
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto  10 with sets).	0.015298	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	120	0	synth with cache (only 1: auto  10 with sets).	0.008083	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H2; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets).	0.025106	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	120	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.006818	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Strict_Rel_of at 1; only 1: red; only 1: elim D; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim PO_cond4; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply H0 with (y := y); only 1: tauto; only 1: tauto; only 1: red; only 1: intros ?; only 1: elim H3; only 1: intros ?; only 1: intros ?; only 1: apply H6; only 1: clear H3; only 1: apply H1; only 1: auto; only 1: rewrite <- H4; only 1: auto).	0.081534	32
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	120	0.0.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: apply op_comm).	0.007918	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	120	0.0.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.008539	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	120	0	synth with cache (only 1: discriminate).	0.005652	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	120	0	synth with cache (only 1: discriminate).	0.005852	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.009383	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.012816	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.011860	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.014026	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	120	0	synth with cache (only 1: destr_bool).	0.009575	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	120	0	synth with cache (only 1: destr_bool).	0.006422	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	120	0	synth with cache (only 1: destr_bool).	0.008508	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.014366	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.018765	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	120	0	synth with cache (only 1: destr_bool).	0.009518	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	120	0	synth with cache (only 1: destr_bool).	0.009479	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	120	0	synth with cache (only 1: destr_bool).	0.007301	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	120	0	synth with cache (only 1: destr_bool).	0.006592	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	120	0	synth with cache (only 1: destr_bool).	0.010463	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	120	0	synth with cache (only 1: destr_bool).	0.008468	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	120	0	synth with cache (only 1: destr_bool).	0.006988	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	120	0	synth with cache (only 1: destr_bool).	0.006347	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	120	0	synth with cache (only 1: destr_bool).	0.008677	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.011511	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.037761	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.030602	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.020244	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.010620	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.009601	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.008403	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_false_iff; only 1: trivial).	0.009523	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	120	0	synth with cache (only 1: destr_bool).	0.007377	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	120	0	synth with cache (only 1: destr_bool).	0.007523	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	120	0	synth with cache (only 1: reflexivity).	0.006390	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	120	0	synth with cache (only 1: destr_bool).	0.008350	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	120	0	synth with cache (only 1: destr_bool).	0.008309	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	120	0	synth with cache (only 1: destr_bool).	0.008443	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	120	0	synth with cache (only 1: destr_bool).	0.010122	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	120	0	synth with cache (only 1: destr_bool).	0.014375	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.020750	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.024287	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	120	0.0	synth with cache (only 1: destr_bool; only 1: auto).	0.013444	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	120	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.010207	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	120	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.009630	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	120	0	synth with cache (only 1: destr_bool).	0.007125	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	120	0	synth with cache (only 1: reflexivity).	0.006771	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_plus; only 1: trivial with datatypes).	0.009706	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	120	0	synth with cache (only 1: destr_bool).	0.007930	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	120	0	synth with cache (only 1: destr_bool).	0.007349	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.007443	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	120	0	synth with cache (only 1: destr_bool).	0.008771	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	120	0	synth with cache (only 1: destr_bool).	0.010206	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	120	0	synth with cache (only 1: destr_bool).	0.012387	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	120	0	synth with cache (only 1: destr_bool).	0.013912	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	120	0	synth with cache (only 1: destr_bool).	0.012933	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_map; only 1: reflexivity).	0.009811	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	120	0	synth with cache (only 1: destr_bool).	0.013750	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: firstorder; only 1: right; only 1: firstorder).	0.014110	8
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	120	0	synth with cache (only 1: destr_bool).	0.039731	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	120	0	synth with cache (only 1: destr_bool).	0.009814	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_zipWith; only 1: reflexivity).	0.012216	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	120	0	synth with cache (only 1: destr_bool).	0.010633	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	120	0	synth with cache (only 1: destr_bool).	0.007908	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	120	0	synth with cache (only 1: destr_bool).	0.007876	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	120	0	synth with cache (only 1: reflexivity).	0.007904	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	120	0	synth with cache (only 1: reflexivity).	0.007723	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	120	0	synth with cache (only 1: destr_bool).	0.009959	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	120	0	synth with cache (only 1: destr_bool).	0.011678	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	120	0	synth with cache (only 1: destr_bool).	0.015181	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	120	0	synth with cache (only 1: destr_bool).	0.011922	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	120	0	synth with cache (only 1: destr_bool).	0.017401	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	120	0	synth with cache (only 1: destr_bool).	0.016613	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	120	0	synth with cache (only 1: destr_bool).	0.016369	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	120	0	synth with cache (only 1: destr_bool).	0.016090	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.029592	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	120	0	synth with cache (only 1: apply eq_iff_eq_true).	0.010671	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.012989	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.013795	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	120	0	synth with cache (only 1: contradiction).	0.008807	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	120	0	synth with cache (only 1: contradiction).	0.008552	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	120	0	synth with cache (only 1: apply eq_trans).	0.008671	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.009713	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	120	0	synth with cache (only 1: destr_bool).	0.008814	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.014027	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.016370	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.013902	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	120	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.014496	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	120	0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H2; only 1: apply H; only 1: intros; only 1: congruence; only 1: intros ?; only 1: apply FunctExt_iff_EqDeltaProjs; only 1: apply UniqInverse_EqDeltaProjs; only 1: trivial).	0.043696	16
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.013764	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.017242	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: split; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H1; only 1: reflexivity; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: reflexivity).	0.047161	17
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.044948	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.014508	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.013017	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.014253	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.015491	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	120	0	synth with cache (only 1: destr_bool).	0.017565	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	120	0	synth with cache (only 1: destr_bool).	0.012470	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	120	0	synth with cache (only 1: reflexivity).	0.011305	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	120	0	synth with cache (only 1: reflexivity).	0.012234	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.017382	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.016982	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.013070	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: constructor; only 1: auto; only 1: constructor; only 1: discriminate; only 1: destruct b'; only 1: constructor; only 1: discriminate; only 1: constructor; only 1: auto).	0.018896	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	120	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.005989	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	120	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.006593	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.022388	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.026172	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.011963	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.019178	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.024011	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.009004	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	120	0	synth with cache (only 1: tauto).	0.009863	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.035348	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.018852	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.014259	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.046334	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	120	0	synth with cache (only 1: tauto).	0.007091	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	120	0	synth with cache (only 1: tauto).	0.006195	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.011848	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.015918	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.019442	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.018294	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.017214	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.020017	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.032724	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	120	0	synth with cache (only 1: tauto).	0.016305	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	120	0	synth with cache (only 1: tauto).	0.012556	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.026932	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.025558	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: easy).	0.025523	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: intros ?; only 1: apply H; only 1: easy).	0.028128	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: trivial; only 1: trivial).	0.011013	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: easy; only 1: easy).	0.028504	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.008816	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.009801	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct h using eq_indd; only 1: rewrite H; only 1: apply eq_dep_intro).	0.066774	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	120	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.011073	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	120	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.011649	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	120	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.009920	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	120	0.0.0	synth with cache (only 1: split; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.012791	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	120	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.011927	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	120	0.0.0	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.007901	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: exists true; only 1: assumption; only 1: intros ?; only 1: exists false; only 1: assumption).	0.014781	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: symmetry; only 1: apply H).	0.009256	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: rewrite H; only 1: assumption).	0.009071	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: reflexivity).	0.014141	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.013589	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	120	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.008645	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	120	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.011450	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.009827	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	120	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.008944	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	120	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.009010	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	120	0.0.0.0.0	synth with cache (only 1: unfold forall_eq_rect; only 1: unfold forall_sig_eq_rect; only 1: simpl; only 1: rewrite @functional_extensionality_dep_good_refl; only 1: reflexivity).	0.037953	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	120	0.0.0	synth with cache (only 1: apply @functional_extensionality_dep_good; only 1: intros ?; only 1: apply @f_equal__functional_extensionality_dep_good).	0.013021	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	120	0	synth with cache (only 1: reflexivity).	0.006272	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	120	0	synth with cache (only 1: apply @eta_expansion_dep).	0.006646	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intros ?; only 1: absurd A; only 1: trivial; only 1: trivial; only 1: auto).	0.013784	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.006132	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	0.006533	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	0.005238	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	0.004460	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.011130	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	0.006635	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	0.007546	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.015971	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.010681	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.009463	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.010409	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.015111	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.015112	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	0.008932	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	0.013729	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	0.029481	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.011024	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.006526	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.011171	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120	0	synth with cache (only 1: exact well_founded_induction_type).	0.006010	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.029770	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120	0	synth with cache (only 1: exact well_founded_induction_type).	0.005545	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	0.019908	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.012476	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	0.018885	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	0.012630	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.018615	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	0.016845	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	0.024887	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005943	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.005039	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005276	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.008373	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.013667	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	0.012023	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.018991	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.020158	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	0.060532	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	0.007161	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	0.007284	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.004113	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.006945	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	0.011892	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	0.014979	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	0.008856	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	0.013419	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	0.011313	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	0.010298	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	0.019557	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	0.015995	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.042451	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	0.008812	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	0.012695	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	0.019157	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	0.020910	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.010942	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	0.076078	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	0.012554	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	0.015023	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.005242	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	0.009429	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.006333	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.006565	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005600	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.007816	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.010838	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.010264	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	0.010342	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.010958	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.010604	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.021816	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.009770	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.017422	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.017349	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.021031	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	0.113534	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	0.008041	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.033941	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	0.011400	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.015707	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	0.013517	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.029820	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.018261	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	0.017674	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.023665	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: assumption; only 1: assumption; only 1: rewrite <- H2; only 1: apply mul_le_mono_nonneg_r; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: le_elim H2; only 1: rewrite <- H0; only 1: apply mul_le_mono_nonneg_l; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: rewrite H0; only 1: rewrite H2; only 1: apply eq_le_incl; only 1: easy).	0.104020	31
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_pos_neg; only 1: easy; only 1: easy).	0.016983	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H0; only 1: tauto; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_l in H; only 1: apply H; only 1: easy; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_r in H; only 1: apply H; only 1: easy).	0.080523	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite eq_mul_0; only 1: tauto).	0.012290	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: assumption; only 1: false_hyp H H0).	0.015133	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: false_hyp H H0; only 1: assumption).	0.015791	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.013073	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.016303	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_add_distr_l; only 1: rewrite add_assoc; only 1: apply add_le_mono_r; only 1: rewrite <- add_assoc; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order).	0.078327	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	120	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.016529	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	120	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.017234	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Definition_of_covers; only 1: auto with sets; only 1: auto with sets).	0.041907	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	120	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.010139	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	120	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.009764	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.013833	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.012926	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intuition; only 1: intuition; only 1: contradict H; only 1: apply Inhabited_not_empty; only 1: exists x; only 1: intuition).	0.024667	16
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with *).	0.055104	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.044837	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.049950	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: unfold Qpower_positive; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHx0; only 1: reflexivity; only 1: simpl; only 1: easy).	0.080749	19
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: destruct x0; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: unfold Qpower_positive; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite H; only 1: auto with *).	0.096357	26
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	120	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.014799	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite IHn; only 1: easy).	0.016435	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	120	0.0.0.0.0	synth with cache (only 1: rewrite of_nat_succ; only 1: destruct n; only 1: destruct 1; only 1: trivial; only 1: trivial).	0.013177	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct p; only 1: destruct x; only 1: easy; only 1: simpl in H; only 1: destr_eq H; only 1: exists x; only 1: easy; only 1: easy; only 1: rewrite mul_xO_r in H0; only 1: discriminate; only 1: exists q; only 1: rewrite mul_1_r; only 1: easy).	0.036038	17
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_xO_r in H; only 1: destr_eq H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_xO_r; only 1: f_equal; only 1: auto).	0.020479	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	120	0.0	synth with cache (only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.010859	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcdn_greatest; only 1: auto; only 1: auto; only 1: auto).	0.013194	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	120	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.017108	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	120	0	synth with cache (only 1: reflexivity).	0.010095	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_comm; only 1: apply Pos.sub_add; only 1: apply Pos.gt_lt; only 1: easy).	0.013171	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	120
